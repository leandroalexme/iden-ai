import {
    $ as ou,
    $a as uu,
    $b as DI,
    A as F6,
    Aa as Ct,
    Ab as cr,
    Ac as gk,
    B as rv,
    Ba as Nr,
    Bb as Gs,
    Bc as hk,
    C as N6,
    Ca as Fh,
    Cb as xu,
    Cc as jI,
    D as qd,
    Da as dI,
    Db as Oy,
    Dc as of ,
    E as iv,
    Ea as Nh,
    Eb as dl,
    Ec as fk,
    F as zh,
    Fa as uI,
    Fb as Jh,
    Fc as Wr,
    G as av,
    Ga as Wh,
    Gb as vu,
    Gc as rf,
    H as lv,
    Ha as sl,
    Hb as $y,
    Hc as nf,
    I as V6,
    Ia as Vh,
    Ib as je,
    Ic as wk,
    J as dv,
    Ja as ly,
    Jb as Qh,
    K as uv,
    Ka as gI,
    Kb as Ut,
    L as mv,
    La as au,
    Lb as Hy,
    M as Eh,
    Ma as cy,
    Mb as II,
    N as gv,
    Na as lu,
    Nb as Fy,
    O as hv,
    Oa as py,
    Ob as MI,
    P as fv,
    Pa as jh,
    Pb as Ny,
    Q as Yd,
    Qa as Yc,
    Qb as BI,
    R as Nv,
    Ra as dy,
    Rb as Wy,
    S as Wv,
    Sa as uy,
    Sb as RI,
    T as Vv,
    Ta as hI,
    Tb as Vy,
    U as Uv,
    Ua as hy,
    Ub as zI,
    V as Gv,
    Va as fy,
    Vb as Uy,
    W as _t,
    Wa as by,
    Wb as EI,
    X as Vc,
    Xa as bI,
    Xb as Gy,
    Y as Jt,
    Ya as Nt,
    Yb as AI,
    Z as Fs,
    Za as pi,
    Zb as ef,
    _ as $h,
    _a as Nn,
    _b as jy,
    a as $t,
    aa as jv,
    ab as Ty,
    ac as qy,
    b as Hd,
    ba as Fo,
    bb as kI,
    bc as LI,
    c as nr,
    ca as Hn,
    cb as gu,
    cc as Yy,
    d as Fd,
    da as qv,
    db as Iy,
    dc as OI,
    e as Sh,
    ea as nI,
    eb as My,
    ec as Xy,
    f as An,
    fa as ru,
    fb as _I,
    fc as $I,
    g as Lc,
    ga as Yv,
    gb as hu,
    gc as js,
    h as Fc,
    ha as Xv,
    hb as By,
    hc as Ky,
    i as R6,
    ia as mt,
    ib as Ry,
    ic as Zy,
    j as Ln,
    ja as sI,
    jb as CI,
    jc as yu,
    k as Wd,
    ka as iu,
    kb as pl,
    kc as Jy,
    l as Ox,
    la as aI,
    lb as Xh,
    lc as Qy,
    m as $x,
    ma as Kv,
    mb as fu,
    mc as HI,
    n as Hx,
    na as Zv,
    nb as zy,
    nc as ok,
    o as sr,
    oa as Jv,
    ob as Zh,
    oc as WI,
    p as Zx,
    pa as No,
    pb as Ey,
    pc as rk,
    q as Jx,
    qa as Uc,
    qb as Ay,
    qc as VI,
    r as nn,
    ra as lI,
    rb as TI,
    rc as ck,
    s as Ud,
    sa as Gc,
    sb as Vn,
    sc as ku,
    t as Gd,
    ta as Qv,
    tb as Ly,
    tc as pk,
    u as Qa,
    ua as ey,
    ub as Kc,
    uc as zo,
    v as Qx,
    va as ty,
    vb as Yo,
    vc as _u,
    w as ev,
    wa as ci,
    wb as Us,
    wc as Cu,
    x as tv,
    xa as nu,
    xb as Pr,
    xc as Su,
    y as jd,
    ya as oy,
    yb as wu,
    yc as Pu,
    z as ov,
    za as cI,
    zb as Qt,
    zc as mk
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-L5AKPEOS.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-44YWYOGZ.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-I6IYVTVO.js";
import {
    a as bk
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-7JMTB7CV.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-X6TMIQVQ.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-AEBJSX3E.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-J2GD7AJO.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-NWRXLRXO.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-IHO7BQ4B.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-VPVP3KVS.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-4S74OOYW.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-BGFFIEWK.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-RQLD3MG7.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-ZHSJP3FZ.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-TNPKOGW7.js";
import {
    a as tt,
    b as ay,
    c as Sr,
    d as Oi,
    e as qc,
    f as Cy,
    g as xI,
    i as mu,
    j as Sy,
    k as Yh
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-RQQWYHRA.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-Y7G475Z7.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-OXCFVNGZ.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-XAQYPO3V.js";
import {
    B as Ns,
    C as Hh,
    a as Ds,
    b as Ls,
    c as Bx,
    d as Ja,
    e as Nd,
    f as Th,
    g as Rx,
    h as Ih,
    i as zx,
    j as Ex,
    k as Ax,
    l as on,
    m as Dx,
    n as Qe,
    o as Dn,
    r as Os,
    s as sn,
    t as Ei,
    u as $n,
    v as ry,
    w as pI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-PSAHE2JB.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-JGOWKC3G.js";
import {
    a as Rt,
    b as ar
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-M2KJKF46.js";
import {
    a as gy,
    b as fI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-F6QRHN3G.js";
import {
    a as co,
    b as Is
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-IPP7RN7C.js";
import {
    a as kk
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-PTIPN2BF.js";
import {
    a as $d
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-6S4TPYSS.js";
import {
    A as Ya,
    B as Le,
    C as Ad,
    D as vx,
    E as Ee,
    F as kh,
    G as yx,
    I as Xa,
    J as kx,
    K as Dd,
    L as _h,
    M as _x,
    N as vr,
    O as Zt,
    P as Ka,
    Q as li,
    R as Ch,
    S as Cx,
    T as Sx,
    U as Oe,
    V as Px,
    W as Ld,
    X as Hr,
    Y as Od,
    Z as kt,
    d as hh,
    e as ai,
    f as fh,
    g as W0,
    h as y6,
    i as Ga,
    j as zd,
    k as cx,
    l as M6,
    m as px,
    n as dx,
    o as ux,
    p as yh,
    q as mx,
    r as gx,
    s as hx,
    t as fx,
    u as bx,
    v as wx,
    w as xx,
    x as B6,
    y as me,
    z as qa
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-Q55XPCPQ.js";
import {
    a as Sc,
    b as $0
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-UE75HU6Z.js";
import {
    a as Zc,
    b as Tu,
    e as Tr
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-BNFNMOZP.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-GJV32VR4.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-GNQTUJTH.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-Q5KVLU6N.js";
import {
    c as vd,
    d as L0,
    e as O0,
    f as yd
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-BGHF7VSW.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-7LJYPHQU.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-7QWQSLOT.js";
import {
    a as Tx,
    b as Ix,
    c as Mx,
    d as Za,
    e as Ph
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-PJEQGESF.js";
import {
    b as Bi,
    c as R0,
    e as wd
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-6XMPDTIY.js";
import {
    a as It,
    b as Ua
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-VBQ72NC4.js";
import {
    a as Ot,
    b as en
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-RDXN3NMA.js";
import {
    a as Iu,
    b as Mu,
    c as Un,
    d as vk
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-4F3NW44N.js";
import {
    a as H6,
    d as pv,
    e as Ft,
    f as Fr
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-GRN2NMC3.js";
import {
    a as Bu,
    b as xk,
    c as sf,
    e as yk
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-ANHQ37WT.js";
import {
    A as Xx,
    C as Kx,
    E as $6,
    F as Ws,
    G as lr,
    H as al,
    J as yy,
    O as ky,
    P as _y,
    S as bu,
    T as Dy,
    d as Wx,
    e as E6,
    f as Vx,
    g as A6,
    h as Ux,
    j as D6,
    p as Gx,
    q as jx,
    r as L6,
    s as qx,
    u as Yx,
    v as O6
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-XWERTDGT.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-TVPMZ5RP.js";
import {
    c as ek,
    d as FI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-53SUDWFZ.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-LSRG6T4H.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-5R7RBNIB.js";
import {
    d as ik,
    e as nk,
    f as sk,
    g as ak,
    h as lk
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-KYTWZIYP.js";
import {
    a as tk,
    b as NI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-UICHCARJ.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-Y3ROZ4JQ.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-CKEDNR4Z.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-O6KGWW5U.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-XXM23K5I.js";
import {
    a as cv,
    b as U6
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-5RBXWDXS.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-2ELE44LB.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-K7XG3VRN.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-S443BI2P.js";
import {
    a as Fv,
    d as il,
    g as Bt,
    h as Ro
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-6RC47BAR.js";
import {
    a as nl,
    b as Oh
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-PSONLBXL.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-SCSJBTXE.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-WRMAYY7H.js";
import {
    i as Fx,
    j as z6
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-4ILVPUMP.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-C5J7M4I6.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-JJUSWFO3.js";
import {
    a as rn,
    b as Rh
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-NRKM3O27.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-V7BXEFO7.js";
import {
    a as Ze,
    b as Ho
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-UWOMRJ34.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-3RJH5757.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-BZGTW5PW.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-4J24HRYA.js";
import {
    a as UI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-5HDCZSDH.js";
import {
    a as Oc,
    b as $c,
    c as Mh,
    d as Lx,
    e as yr,
    f as Hc
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-2LHX2XWY.js";
import {
    a as Vs,
    b as PI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-LVYVYHLB.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-HU7KMF5A.js";
import {
    d as SI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-PTAQN7XC.js";
import {
    a as Xc,
    b as yI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-ULPVFJY2.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-UT22G6CJ.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-O454CSQB.js";
import {
    a as Wn,
    b as Kh
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-3UDZKVR2.js";
import {
    l as wy,
    m as xy,
    n as wI,
    s as vy,
    t as pu,
    u as qh
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-LOCADTYW.js";
import {
    a as On,
    b as Bh
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-CNQMWROU.js";
import {
    a as sy,
    d as mI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-LNRZGIXR.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-ZAUIFYIX.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-2BVENUPD.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-YTXIKAGQ.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-IRIOEDIN.js";
import {
    b as ix,
    k as I6
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-GFHV2AWM.js";
import {
    b as nx,
    i as Ed,
    j as sx,
    k as ax,
    l as lx,
    p as ja
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-BH74MBTK.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-KSXA7H77.js";
import {
    A as V0,
    Bb as Dc,
    Cb as wh,
    Db as xh,
    Eb as tx,
    F as C6,
    H as Mc,
    Hb as Rd,
    I as Bc,
    Ib as vh,
    K as Rc,
    L as Ha,
    N as zc,
    O as Ec,
    Ob as ox,
    Pb as rx,
    R as G0,
    Wa as Id,
    _a as X0,
    bb as K0,
    f as bh,
    j as Tc,
    jb as Va,
    lb as Md,
    m as k6,
    mb as Z0,
    nb as J0,
    ob as Bd,
    pa as Pd,
    pb as Q0,
    ra as j0,
    rb as ex,
    sc as As,
    x as _6
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-VFUQL75R.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-N2N7GOUG.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-7TFJVZMD.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-2M3GYHUW.js";
import {
    a as Or,
    b as gh,
    c as zs,
    d as Cd
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-ZJMKULCD.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-3HBNHCFR.js";
import {
    a as Na,
    d as Td,
    e as Wa,
    g as Es
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-HQUF2BFY.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-EKLZRXOD.js";
import {
    a as Vd,
    b as Nx
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-QL5DFQIW.js";
import {
    a as _k
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-QDRBQFWA.js";
import {
    a as Py,
    b as vI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-USQ5XVUZ.js";
import {
    a as Oa,
    b as A0,
    d as D0,
    h as mh
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-FZKUL5ZS.js";
import {
    a as pt,
    b as Rs
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-MWTOBXCT.js";
import {
    a as xd,
    b as E0
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-K4MSOFN3.js";
import {
    e as Hv,
    f as iI,
    g as rl,
    j as Lh,
    m as qs,
    n as dk,
    o as tf,
    p as uk,
    q as GI
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-LDOT7PRX.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-7M3QGMP5.js";
import {
    a as cu,
    b as my
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-HM4MRZSY.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-ONQKTVS7.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-VJD4IKBE.js";
import {
    $a as X6,
    Ac as su,
    Bc as ny,
    Cc as cl,
    Db as Av,
    Dc as Gh,
    Ea as Cv,
    Eb as tI,
    Fa as q6,
    I as bv,
    Jb as Dv,
    Kb as oI,
    L as wv,
    N as xv,
    P as vv,
    Q as $s,
    Qa as Kd,
    R as Ah,
    Ra as Y6,
    Ub as qo,
    Vb as tl,
    Wb as Cr,
    Xb as Wc,
    Y as Lt,
    Z as Ai,
    _a as Sv,
    ab as Pv,
    ea as Xd,
    fa as yv,
    fb as Nc,
    gb as Tv,
    hb as Hs,
    ia as kv,
    ib as Dh,
    ic as Jd,
    ja as G6,
    jb as Iv,
    jc as Qd,
    kb as K6,
    kc as eu,
    lb as Mv,
    lc as Lv,
    ma as _v,
    mb as Z6,
    mc as tu,
    na as j6,
    nb as Zd,
    nc as Ov,
    ob as Bv,
    oc as ol,
    pb as Rv,
    pc as rI,
    qb as J6,
    qc as $v,
    tb as zv,
    ub as Q6,
    wc as Di,
    xb as Ev,
    xc as iy,
    yb as eI,
    yc as ll,
    zc as Uh
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-MRJVT6FR.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-C4E534NV.js";
import {
    a as Fn,
    b as du
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-R63XNKES.js";
import {
    a as Li,
    b as jc
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-6YHY2F3B.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-OXQSN4A5.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-472VRQJV.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-RWZGWSSK.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-XQ5UTBQS.js";
import {
    a as Mt,
    b as So,
    h as nv,
    i as sv,
    k as _r
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-75O7CIXD.js";
import {
    a as kr
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-3VK3EVUM.js";
import {
    a as Ge,
    b as ge,
    c as He
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-4B5HOWSN.js";
import {
    a as St,
    b as W6
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-D2RAFUDH.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-OQUFNHOJ.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-FP2QQPAP.js";
import {
    a as el
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-IY6GQD4D.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-HRRCPT3U.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-OQWTLMV5.js";
import {
    a as f,
    d as W
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-P5VDGSEO.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-BBGOCAHY.js";
import {
    b as kc,
    d as fe,
    e as fd,
    f as P0,
    g as re,
    l as Ye,
    m as Me,
    n as $o,
    q as Je,
    r as Lr
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-YZMXGORB.js";
import {
    a as M0,
    b as B0,
    g as v6
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-VCWMZ4MQ.js";
import {
    a as Mo
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-TCPTYTUX.js";
import {
    a as Sd,
    c as zi,
    d as Ic,
    h as U0,
    i as S6
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-BVZRGHXD.js";
import "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-LFUSN6Y5.js";
import {
    a as T0,
    b as bd,
    h as I0
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-XGXYOKTY.js";
import {
    a as h0,
    b as f0,
    c as b0,
    d as w0,
    e as xr,
    f as x0,
    h as v0,
    i as y0,
    j as k0,
    k as _0,
    l as uh,
    m as C0,
    n as S0,
    p as _c
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-I6JNYDBX.js";
import {
    a as we,
    b as A,
    c as ze,
    d as N0,
    e as be
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-Z4HHCED6.js";
import {
    k as Be,
    l as Tt,
    m as Ie,
    o as tn,
    p as _d,
    r as N,
    s as Ri,
    v as te
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-ZCYSW665.js";
import {
    a as Ac
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-LY4A4ZCW.js";
import {
    a as ir,
    b as q,
    f as En,
    i as Ue,
    l as $r,
    n as Fa
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-QXKVEKVP.js";
import {
    c as q0,
    d as P6,
    h as Y0,
    j as T6
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-OQTCXMQ2.js";
import {
    a as F0,
    c as ne,
    d as kd,
    e as Pc
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-YNQJOZVU.js";
import {
    C as Y,
    D as a,
    E as w,
    F as y,
    x as H0
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-6YK6Y3LS.js";
import {
    a as F
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-X2AVVSDG.js";
import {
    a as po,
    b as $a
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-ESPTCIFT.js";
import {
    n as Ts,
    o as lh,
    q as ct,
    r as Mi
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-GYU6G37N.js";
import {
    f as x6,
    g as gd,
    h as s0
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-7GYVYFTN.js";
import {
    A as ph,
    C as dh,
    D as Co,
    a as l0,
    e as c0,
    g as ch,
    h as nt,
    k as hd,
    l as Ms,
    p as p0,
    s as Bs,
    t as d0,
    x as u0,
    y as m0
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-FX3USXD4.js";
import {
    a as g0,
    b as ae,
    c as ut
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-LURZCKUX.js";
import {
    b as Cc,
    d as z0,
    k as De,
    l as Bo
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-UHXY36KN.js";
import {
    b as Kt,
    c as Ve,
    e as rr
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-ISPIXJKU.js";
import {
    a as Ht
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-JIE3ALW5.js";
import {
    b as lt
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-33VGZGAT.js";
import {
    a as a0
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-ILD4NFNU.js";
import {
    c as La,
    d as n0
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-BXWTANI3.js";
import {
    b as qe,
    d as M,
    f as z
} from "https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-64BUEHBL.js";
var hC = qe((Xae, Im) => {
    "use strict";
    var uC = {\
            u00C0: "A",
            \u00C1: "A",
            \u00C2: "A",
            \u00C3: "A",
            \u00C4: "A",
            \u00C5: "A",
            \u1EA4: "A",
            \u1EAE: "A",
            \u1EB2: "A",
            \u1EB4: "A",
            \u1EB6: "A",
            \u00C6: "AE",
            \u1EA6: "A",
            \u1EB0: "A",
            \u0202: "A",
            \u1EA2: "A",
            \u1EA0: "A",
            \u1EA8: "A",
            \u1EAA: "A",
            \u1EAC: "A",
            \u00C7: "C",
            \u1E08: "C",
            \u00C8: "E",
            \u00C9: "E",
            \u00CA: "E",
            \u00CB: "E",
            \u1EBE: "E",
            \u1E16: "E",
            \u1EC0: "E",
            \u1E14: "E",
            \u1E1C: "E",
            \u0206: "E",
            \u1EBA: "E",
            \u1EBC: "E",
            \u1EB8: "E",
            \u1EC2: "E",
            \u1EC4: "E",
            \u1EC6: "E",
            \u00CC: "I",
            \u00CD: "I",
            \u00CE: "I",
            \u00CF: "I",
            \u1E2E: "I",
            \u020A: "I",
            \u1EC8: "I",
            \u1ECA: "I",
            \u00D0: "D",
            \u00D1: "N",
            \u00D2: "O",
            \u00D3: "O",
            \u00D4: "O",
            \u00D5: "O",
            \u00D6: "O",
            \u00D8: "O",
            \u1ED0: "O",
            \u1E4C: "O",
            \u1E52: "O",
            \u020E: "O",
            \u1ECE: "O",
            \u1ECC: "O",
            \u1ED4: "O",
            \u1ED6: "O",
            \u1ED8: "O",
            \u1EDC: "O",
            \u1EDE: "O",
            \u1EE0: "O",
            \u1EDA: "O",
            \u1EE2: "O",
            \u00D9: "U",
            \u00DA: "U",
            \u00DB: "U",
            \u00DC: "U",
            \u1EE6: "U",
            \u1EE4: "U",
            \u1EEC: "U",
            \u1EEE: "U",
            \u1EF0: "U",
            \u00DD: "Y",
            \u00E0: "a",
            \u00E1: "a",
            \u00E2: "a",
            \u00E3: "a",
            \u00E4: "a",
            \u00E5: "a",
            \u1EA5: "a",
            \u1EAF: "a",
            \u1EB3: "a",
            \u1EB5: "a",
            \u1EB7: "a",
            \u00E6: "ae",
            \u1EA7: "a",
            \u1EB1: "a",
            \u0203: "a",
            \u1EA3: "a",
            \u1EA1: "a",
            \u1EA9: "a",
            \u1EAB: "a",
            \u1EAD: "a",
            \u00E7: "c",
            \u1E09: "c",
            \u00E8: "e",
            \u00E9: "e",
            \u00EA: "e",
            \u00EB: "e",
            \u1EBF: "e",
            \u1E17: "e",
            \u1EC1: "e",
            \u1E15: "e",
            \u1E1D: "e",
            \u0207: "e",
            \u1EBB: "e",
            \u1EBD: "e",
            \u1EB9: "e",
            \u1EC3: "e",
            \u1EC5: "e",
            \u1EC7: "e",
            \u00EC: "i",
            \u00ED: "i",
            \u00EE: "i",
            \u00EF: "i",
            \u1E2F: "i",
            \u020B: "i",
            \u1EC9: "i",
            \u1ECB: "i",
            \u00F0: "d",
            \u00F1: "n",
            \u00F2: "o",
            \u00F3: "o",
            \u00F4: "o",
            \u00F5: "o",
            \u00F6: "o",
            \u00F8: "o",
            \u1ED1: "o",
            \u1E4D: "o",
            \u1E53: "o",
            \u020F: "o",
            \u1ECF: "o",
            \u1ECD: "o",
            \u1ED5: "o",
            \u1ED7: "o",
            \u1ED9: "o",
            \u1EDD: "o",
            \u1EDF: "o",
            \u1EE1: "o",
            \u1EDB: "o",
            \u1EE3: "o",
            \u00F9: "u",
            \u00FA: "u",
            \u00FB: "u",
            \u00FC: "u",
            \u1EE7: "u",
            \u1EE5: "u",
            \u1EED: "u",
            \u1EEF: "u",
            \u1EF1: "u",
            \u00FD: "y",
            \u00FF: "y",
            \u0100: "A",
            \u0101: "a",
            \u0102: "A",
            \u0103: "a",
            \u0104: "A",
            \u0105: "a",
            \u0106: "C",
            \u0107: "c",
            \u0108: "C",
            \u0109: "c",
            \u010A: "C",
            \u010B: "c",
            \u010C: "C",
            \u010D: "c",
            C\ u0306: "C",
            c\ u0306: "c",
            \u010E: "D",
            \u010F: "d",
            \u0110: "D",
            \u0111: "d",
            \u0112: "E",
            \u0113: "e",
            \u0114: "E",
            \u0115: "e",
            \u0116: "E",
            \u0117: "e",
            \u0118: "E",
            \u0119: "e",
            \u011A: "E",
            \u011B: "e",
            \u011C: "G",
            \u01F4: "G",
            \u011D: "g",
            \u01F5: "g",
            \u011E: "G",
            \u011F: "g",
            \u0120: "G",
            \u0121: "g",
            \u0122: "G",
            \u0123: "g",
            \u0124: "H",
            \u0125: "h",
            \u0126: "H",
            \u0127: "h",
            \u1E2A: "H",
            \u1E2B: "h",
            \u0128: "I",
            \u0129: "i",
            \u012A: "I",
            \u012B: "i",
            \u012C: "I",
            \u012D: "i",
            \u012E: "I",
            \u012F: "i",
            \u0130: "I",
            \u0131: "i",
            \u0132: "IJ",
            \u0133: "ij",
            \u0134: "J",
            \u0135: "j",
            \u0136: "K",
            \u0137: "k",
            \u1E30: "K",
            \u1E31: "k",
            K\ u0306: "K",
            k\ u0306: "k",
            \u0139: "L",
            \u013A: "l",
            \u013B: "L",
            \u013C: "l",
            \u013D: "L",
            \u013E: "l",
            \u013F: "L",
            \u0140: "l",
            \u0141: "l",
            \u0142: "l",
            \u1E3E: "M",
            \u1E3F: "m",
            M\ u0306: "M",
            m\ u0306: "m",
            \u0143: "N",
            \u0144: "n",
            \u0145: "N",
            \u0146: "n",
            \u0147: "N",
            \u0148: "n",
            \u0149: "n",
            N\ u0306: "N",
            n\ u0306: "n",
            \u014C: "O",
            \u014D: "o",
            \u014E: "O",
            \u014F: "o",
            \u0150: "O",
            \u0151: "o",
            \u0152: "OE",
            \u0153: "oe",
            P\ u0306: "P",
            p\ u0306: "p",
            \u0154: "R",
            \u0155: "r",
            \u0156: "R",
            \u0157: "r",
            \u0158: "R",
            \u0159: "r",
            R\ u0306: "R",
            r\ u0306: "r",
            \u0212: "R",
            \u0213: "r",
            \u015A: "S",
            \u015B: "s",
            \u015C: "S",
            \u015D: "s",
            \u015E: "S",
            \u0218: "S",
            \u0219: "s",
            \u015F: "s",
            \u0160: "S",
            \u0161: "s",
            \u0162: "T",
            \u0163: "t",
            \u021B: "t",
            \u021A: "T",
            \u0164: "T",
            \u0165: "t",
            \u0166: "T",
            \u0167: "t",
            T\ u0306: "T",
            t\ u0306: "t",
            \u0168: "U",
            \u0169: "u",
            \u016A: "U",
            \u016B: "u",
            \u016C: "U",
            \u016D: "u",
            \u016E: "U",
            \u016F: "u",
            \u0170: "U",
            \u0171: "u",
            \u0172: "U",
            \u0173: "u",
            \u0216: "U",
            \u0217: "u",
            V\ u0306: "V",
            v\ u0306: "v",
            \u0174: "W",
            \u0175: "w",
            \u1E82: "W",
            \u1E83: "w",
            X\ u0306: "X",
            x\ u0306: "x",
            \u0176: "Y",
            \u0177: "y",
            \u0178: "Y",
            Y\ u0306: "Y",
            y\ u0306: "y",
            \u0179: "Z",
            \u017A: "z",
            \u017B: "Z",
            \u017C: "z",
            \u017D: "Z",
            \u017E: "z",
            \u017F: "s",
            \u0192: "f",
            \u01A0: "O",
            \u01A1: "o",
            \u01AF: "U",
            \u01B0: "u",
            \u01CD: "A",
            \u01CE: "a",
            \u01CF: "I",
            \u01D0: "i",
            \u01D1: "O",
            \u01D2: "o",
            \u01D3: "U",
            \u01D4: "u",
            \u01D5: "U",
            \u01D6: "u",
            \u01D7: "U",
            \u01D8: "u",
            \u01D9: "U",
            \u01DA: "u",
            \u01DB: "U",
            \u01DC: "u",
            \u1EE8: "U",
            \u1EE9: "u",
            \u1E78: "U",
            \u1E79: "u",
            \u01FA: "A",
            \u01FB: "a",
            \u01FC: "AE",
            \u01FD: "ae",
            \u01FE: "O",
            \u01FF: "o",
            \u00DE: "TH",
            \u00FE: "th",
            \u1E54: "P",
            \u1E55: "p",
            \u1E64: "S",
            \u1E65: "s",
            X\ u0301: "X",
            x\ u0301: "x",
            \u0403: "\u0413",
            \u0453: "\u0433",
            \u040C: "\u041A",
            \u045C: "\u043A",
            A\ u030B: "A",
            a\ u030B: "a",
            E\ u030B: "E",
            e\ u030B: "e",
            I\ u030B: "I",
            i\ u030B: "i",
            \u01F8: "N",
            \u01F9: "n",
            \u1ED2: "O",
            \u1ED3: "o",
            \u1E50: "O",
            \u1E51: "o",
            \u1EEA: "U",
            \u1EEB: "u",
            \u1E80: "W",
            \u1E81: "w",
            \u1EF2: "Y",
            \u1EF3: "y",
            \u0200: "A",
            \u0201: "a",
            \u0204: "E",
            \u0205: "e",
            \u0208: "I",
            \u0209: "i",
            \u020C: "O",
            \u020D: "o",
            \u0210: "R",
            \u0211: "r",
            \u0214: "U",
            \u0215: "u",
            B\ u030C: "B",
            b\ u030C: "b",
            \u010C\ u0323: "C",
            \u010D\ u0323: "c",
            \u00CA\ u030C: "E",
            \u00EA\ u030C: "e",
            F\ u030C: "F",
            f\ u030C: "f",
            \u01E6: "G",
            \u01E7: "g",
            \u021E: "H",
            \u021F: "h",
            J\ u030C: "J",
            \u01F0: "j",
            \u01E8: "K",
            \u01E9: "k",
            M\ u030C: "M",
            m\ u030C: "m",
            P\ u030C: "P",
            p\ u030C: "p",
            Q\ u030C: "Q",
            q\ u030C: "q",
            \u0158\ u0329: "R",
            \u0159\ u0329: "r",
            \u1E66: "S",
            \u1E67: "s",
            V\ u030C: "V",
            v\ u030C: "v",
            W\ u030C: "W",
            w\ u030C: "w",
            X\ u030C: "X",
            x\ u030C: "x",
            Y\ u030C: "Y",
            y\ u030C: "y",
            A\ u0327: "A",
            a\ u0327: "a",
            B\ u0327: "B",
            b\ u0327: "b",
            \u1E10: "D",
            \u1E11: "d",
            \u0228: "E",
            \u0229: "e",
            \u0190\ u0327: "E",
            \u025B\ u0327: "e",
            \u1E28: "H",
            \u1E29: "h",
            I\ u0327: "I",
            i\ u0327: "i",
            \u0197\ u0327: "I",
            \u0268\ u0327: "i",
            M\ u0327: "M",
            m\ u0327: "m",
            O\ u0327: "O",
            o\ u0327: "o",
            Q\ u0327: "Q",
            q\ u0327: "q",
            U\ u0327: "U",
            u\ u0327: "u",
            X\ u0327: "X",
            x\ u0327: "x",
            Z\ u0327: "Z",
            z\ u0327: "z",
            \u0439: "\u0438",
            \u0419: "\u0418",
            \u0451: "\u0435",
            \u0401: "\u0415"
        },
        mC = Object.keys(uC).join("|"),
        o7 = new RegExp(mC, "g"),
        r7 = new RegExp(mC, "");

    function i7(e) {
        return uC[e]
    }
    var gC = function(e) {
            return e.replace(o7, i7)
        },
        n7 = function(e) {
            return !!e.match(r7)
        };
    Im.exports = gC;
    Im.exports.has = n7;
    Im.exports.remove = gC
});
var Vb = qe((rye, Zm) => {
    "use strict";
    (function(e) {
        "use strict";
        typeof define == "function" && define.amd ? define(e) : typeof Zm < "u" && typeof Zm.exports < "u" ? Zm.exports = e() : typeof Package < "u" ? Sortable = e() : window.Sortable = e()
    })(function() {
        "use strict";
        var e, o, t, r, i, n, s, l, p, d, c, m, u, g, h, b, x = {},
            S, v, P, C = /\s+/g,
            k = "Sortable" + new Date().getTime(),
            T = window,
            R = T.document,
            I = T.parseInt,
            B = "draggable" in R.createElement("div"),
            L = function(O) {
                return O = R.createElement("x"), O.style.cssText = "pointer-events:auto", O.style.pointerEvents === "auto"
            }(),
            D = !1,
            E = Math.abs,
            $ = [].slice,
            G = [],
            de = We(function(O, j, K) {
                if (K && j.scroll) {
                    var X, $e, Se = j.scrollSensitivity,
                        Re = j.scrollSpeed,
                        dt = O.clientX,
                        Fe = O.clientY,
                        bt = window.innerWidth,
                        at = window.innerHeight,
                        wt, rt;
                    if (p !== K && (l = j.scroll, p = K, l === !0)) {
                        l = K;
                        do
                            if (l.offsetWidth < l.scrollWidth || l.offsetHeight < l.scrollHeight) break; while (l = l.parentNode)
                    }
                    l && (X = l, $e = l.getBoundingClientRect(), wt = (E($e.right - dt) <= Se) - (E($e.left - dt) <= Se), rt = (E($e.bottom - Fe) <= Se) - (E($e.top - Fe) <= Se)), wt || rt || (wt = (bt - dt <= Se) - (dt <= Se), rt = (at - Fe <= Se) - (Fe <= Se), (wt || rt) && (X = T)), (x.vx !== wt || x.vy !== rt || x.el !== X) && (x.el = X, x.vx = wt, x.vy = rt, clearInterval(x.pid), X && (x.pid = setInterval(function() {
                        X === T ? T.scrollTo(T.pageXOffset + wt * Re, T.pageYOffset + rt * Re) : (rt && (X.scrollTop += rt * Re), wt && (X.scrollLeft += wt * Re))
                    }, 24)))
                }
            }, 30),
            Q = function(O) {
                var j = O.group;
                (!j || typeof j != "object") && (j = O.group = {
                    name: j
                }), ["pull", "put"].forEach(function(K) {
                    K in j || (j[K] = !0)
                }), O.groups = " " + j.name + (j.put.join ? " " + j.put.join(" ") : "") + " "
            };

        function U(O, j) {
            if (!(O && O.nodeType && O.nodeType === 1)) throw "Sortable: `el` must be HTMLElement, and not " + {}.toString.call(O);
            this.el = O, this.options = j = Ke({}, j), O[k] = this, O.sortable = this;
            var K = {
                group: Math.random(),
                sort: !0,
                disabled: !1,
                store: null,
                handle: null,
                scroll: !0,
                scrollSensitivity: 30,
                startTheresold: 5,
                scrollSpeed: 10,
                draggable: /[uo]l/i.test(O.nodeName) ? "li" : ">*",
                ghostClass: "sortable-ghost",
                chosenClass: "sortable-chosen",
                ignore: "a, img",
                filter: null,
                animation: 0,
                setData: function(Se, Re) {
                    Se.setData("Text", Re.textContent)
                },
                dropBubble: !1,
                dragoverBubble: !1,
                dataIdAttr: "data-id",
                delay: 0,
                forceFallback: !1,
                fallbackClass: "sortable-fallback",
                fallbackOnBody: !1,
                moveByBlock: !1
            };
            for (var X in K) !(X in j) && (j[X] = K[X]);
            Q(j);
            for (var $e in this) $e.charAt(0) === "_" && (this[$e] = this[$e].bind(this));
            this.nativeDraggable = j.forceFallback ? !1 : B, ve(O, "mousedown", this._onTapStart), ve(O, "touchstart", this._onTapStart), this.nativeDraggable && (ve(O, "dragover", this), ve(O, "dragenter", this)), G.push(this._onDragOver), j.store && this.sort(j.store.get(this))
        }
        U.prototype = {
            constructor: U,
            dropIntoGroup: function(O) {
                s = O
            },
            _onTapStart: function(O) {
                var j = this,
                    K = this.el,
                    X = this.options,
                    $e = O.type,
                    Se = O.touches && O.touches[0],
                    Re = (Se || O).target,
                    dt = Re,
                    Fe = X.filter;
                if (!($e === "mousedown" && O.button !== 0 || X.disabled) && (Re = xe(Re, X.draggable, K), !!Re)) {
                    if (O.stopPropagation(), O.preventDefault(), u = Ce(Re), typeof Fe == "function") {
                        if (Fe.call(this, O, Re, this)) {
                            he(j, dt, "filter", Re, K, u), O.preventDefault();
                            return
                        }
                    } else if (Fe && (Fe = Fe.split(",").some(function(bt) {
                            if (bt = xe(dt, bt.trim(), K), bt) return he(j, bt, "filter", Re, K, u), !0
                        }), Fe)) {
                        O.preventDefault();
                        return
                    }
                    X.handle && !xe(dt, X.handle, K) || this._prepareDragStart(O, Se, Re)
                }
            },
            _prepareDragStart: function(O, j, K) {
                var X = this,
                    $e = X.el,
                    Se = X.options,
                    Re = $e.ownerDocument,
                    dt;
                if (K && !e && K.parentNode === $e) {
                    S = O, i = $e, e = K, o = e.parentNode, n = e.nextSibling, b = Se.group;
                    var dt = function() {
                            X._disableDelayedDrag(), oe(e, X.options.chosenClass, !0), X._triggerDragStart(j)
                        },
                        Fe = function(wt) {
                            var rt = Math.sqrt(Math.pow(S.screenX - wt.screenX, 2) + Math.pow(S.screenY - wt.screenY, 2));
                            rt >= Se.startTheresold && (bt(), dt())
                        },
                        bt = function() {
                            ee(Re, "mousemove", Fe), ee(Re, "mouseup", bt), ee(Re, "touchend", bt), ee(Re, "touchcancel", bt)
                        };
                    Se.ignore.split(",").forEach(function(wt) {
                        se(e, wt.trim(), ue)
                    }), ve(Re, "mouseup", X._onDrop), ve(Re, "touchend", X._onDrop), ve(Re, "touchcancel", X._onDrop), Se.delay && (ve(Re, "mouseup", X._disableDelayedDrag), ve(Re, "touchend", X._disableDelayedDrag), ve(Re, "touchcancel", X._disableDelayedDrag), ve(Re, "mousemove", X._disableDelayedDrag), ve(Re, "touchmove", X._disableDelayedDrag), X._dragStartTimer = setTimeout(dt, Se.delay)), Se.startTheresold ? (ve(Re, "mousemove", Fe), ve(Re, "mouseup", bt), ve(Re, "touchend", bt), ve(Re, "touchcancel", bt), ve(Re, "touchmove", bt)) : dt()
                }
            },
            _disableDelayedDrag: function() {
                var O = this.el.ownerDocument;
                clearTimeout(this._dragStartTimer), ee(O, "mouseup", this._disableDelayedDrag), ee(O, "touchend", this._disableDelayedDrag), ee(O, "touchcancel", this._disableDelayedDrag), ee(O, "mousemove", this._disableDelayedDrag), ee(O, "touchmove", this._disableDelayedDrag)
            },
            _triggerDragStart: function(O) {
                O ? (S = {
                    target: e,
                    clientX: O.clientX,
                    clientY: O.clientY
                }, this._onDragStart(S, "touch")) : this.nativeDraggable ? (ve(e, "dragend", this), ve(i, "dragstart", this._onDragStart)) : this._onDragStart(S, !0);
                try {
                    R.selection ? R.selection.empty() : window.getSelection().removeAllRanges()
                } catch {}
                this.dx = 0, this.dy = 0
            },
            _dragStarted: function() {
                if (i && e) {
                    oe(e, this.options.ghostClass, !0), U.active = this;
                    var O = he(this, i, "start", e, i, u);
                    O.groupdrag && (h = O.groupdrag)
                }
            },
            _emulateDragOver: function() {
                if (v) {
                    if (this._lastX === v.clientX && this._lastY === v.clientY) return;
                    this._lastX = v.clientX, this._lastY = v.clientY, L || H(t, "display", "none");
                    var O = R.elementFromPoint(v.clientX, v.clientY),
                        j = O,
                        K = " " + this.options.group.name,
                        X = G.length;
                    if (j)
                        do {
                            if (j[k] && j[k].options.groups.indexOf(K) > -1) {
                                for (; X--;) G[X]({
                                    clientX: v.clientX,
                                    clientY: v.clientY,
                                    target: O,
                                    rootEl: j
                                });
                                break
                            }
                            O = j
                        } while (j = j.parentNode);
                    L || H(t, "display", "")
                }
            },
            _onTouchMove: function(O) {
                if (S) {
                    this._appendGhost(), U.active || this._dragStarted();
                    var j = O.touches ? O.touches[0] : O,
                        K = this.options,
                        X = K.denyX ? 0 : j.clientX - S.clientX,
                        $e = K.denyY ? 0 : j.clientY - S.clientY,
                        Se = this.dx,
                        Re = this.dy,
                        dt = (this.dx || 0) - X,
                        Fe = (this.dy || 0) - $e;
                    if (this.options.onMoveGhost) {
                        var bt = this.options.onMoveGhost(t, dt, Fe, e);
                        X = X + bt.dx, $e = $e + bt.dy
                    }
                    this.dx = X, this.dy = $e;
                    var at = O.touches ? "translate3d(" + X + "px," + $e + "px,0)" : "translate(" + X + "px," + $e + "px)";
                    P = !0, v = j, H(t, "webkitTransform", at), H(t, "mozTransform", at), H(t, "msTransform", at), H(t, "transform", at), e.cooldown = +new Date + 400, O.preventDefault();
                    var wt = he(this, i, "touchMove", t, null, null, null, {
                        ghostOffsetX: X,
                        ghostOffsetY: $e,
                        ghost: t,
                        x: j.clientX,
                        y: j.clientY,
                        dx: dt,
                        dy: Fe,
                        dragEl: e,
                        next: e.nextElementSibling,
                        prev: e.previousElementSibling
                    });
                    if (K.moveByBlock && wt.result) {
                        var rt = wt.result.changeParent || e.parentNode || this.el,
                            oi = K.group,
                            Pi = b === oi,
                            Ti = e.getBoundingClientRect();
                        if (wt.result.toEmptyGroup) {
                            rt = wt.result.toEmptyGroup, le(i, rt, e, Ti, null, null) !== !1 && (e.contains(rt) || (rt.appendChild(e), o = rt), this._animate(Ti, e), At && this._animate(Do, At));
                            return
                        }
                        var At = wt.result.target,
                            Do = At.getBoundingClientRect(),
                            Rn = function(ni) {
                                for (; ni;) {
                                    if (ni.animated) return !0;
                                    ni = ni.parentNode
                                }
                                return !1
                            };
                        if (Rn(At)) return;
                        var ri = le(i, rt, e, Ti, At, Do),
                            Ii = ri === void 0 ? wt.result.direction : ri,
                            zn = At.nextElementSibling,
                            bc = At.offsetWidth > e.offsetWidth,
                            dd = At.offsetHeight > e.offsetHeight,
                            nh = Do.right - Do.left,
                            sh = Do.bottom - Do.top,
                            lo = H(At),
                            Lo = H(At.parentNode),
                            Oo = /left|right|inline/.test(lo.cssFloat + lo.display) || Lo.display == "flex" && Lo["flex-direction"].indexOf("row") === 0,
                            ii = (Oo ? (O.clientX - Do.left) / nh : (O.clientY - Do.top) / sh) > .5,
                            xo;
                        if (Ii !== !1) {
                            if (D = !0, setTimeout(ke, 30), Z(Pi), Ii === 1 || Ii === -1) xo = Ii === 1;
                            else if (Oo) {
                                var or = e.offsetTop,
                                    wr = At.offsetTop;
                                or === wr ? xo = At.previousElementSibling === e && !bc || ii && bc : xo = wr > or
                            } else xo = zn !== e && !dd || ii && dd;
                            e.contains(rt) || (xo && !zn ? rt.appendChild(e) : At.parentNode.insertBefore(e, xo ? zn : At)), o = e.parentNode, this._animate(Ti, e), this._animate(Do, At)
                        }
                    }
                }
            },
            _appendGhost: function() {
                if (!t) {
                    var O = e.getBoundingClientRect(),
                        j = H(e),
                        K = this.options,
                        X = i,
                        $e;
                    if (t = e.cloneNode(!0), oe(t, K.ghostClass, !1), oe(t, K.fallbackClass, !0), K.relParent) {
                        for (X = e; X && X.className.indexOf(K.relParent) == -1;) X = X.parentNode;
                        X = X || i
                    }
                    var Se = X.getBoundingClientRect();
                    if (K.noFixedGhost) {
                        var Re = H(X);
                        H(t, "top", O.top - I(j.marginTop, 10) - Se.top - I(Re.marginTop, 10)), H(t, "left", O.left - I(j.marginLeft, 10) - Se.left - I(Re.marginLeft, 10)), H(t, "position", "absolute")
                    } else H(t, "top", O.top - I(j.marginTop, 10)), H(t, "left", Se.left), H(t, "position", "fixed");
                    H(t, "width", O.width), H(t, "height", O.height), H(t, "opacity", "0.8"), H(t, "zIndex", "100000"), H(t, "pointerEvents", "none"), K.fallbackOnBody && R.body.appendChild(t) || X.appendChild(t), $e = t.getBoundingClientRect(), H(t, "width", O.width * 2 - $e.width), H(t, "height", O.height * 2 - $e.height)
                }
            },
            _onDragStart: function(O, j) {
                var K = O.dataTransfer,
                    X = this.options;
                this._offUpEvents(), b.pull == "clone" && (r = e.cloneNode(!0), H(r, "display", "none"), i.insertBefore(r, e)), j ? (j === "touch" ? (ve(R, "touchmove", this._onTouchMove), ve(R, "touchend", this._onDrop), ve(R, "touchcancel", this._onDrop)) : (ve(R, "mousemove", this._onTouchMove), ve(R, "mouseup", this._onDrop)), this._loopId = setInterval(this._emulateDragOver, 50)) : (K && (K.effectAllowed = "move", X.setData && X.setData.call(this, K, e)), ve(R, "drop", this), setTimeout(this._dragStarted, 0))
            },
            _onDragOver: function(O) {
                var j = this.el,
                    K, X, $e, Se = this.options,
                    Re = Se.group,
                    dt = Re.put,
                    Fe = b === Re,
                    bt = Se.sort;
                if (!Se.moveByBlock && (O.preventDefault !== void 0 && (O.preventDefault(), !Se.dragoverBubble && O.stopPropagation()), P = !0, b && !Se.disabled && (Fe ? bt || ($e = !i.contains(e)) : b.pull && dt && (b.name === Re.name || dt.indexOf && ~dt.indexOf(b.name))) && (O.rootEl === void 0 || O.rootEl === this.el))) {
                    if (de(O, Se, this.el), D) return;
                    if (K = xe(O.target, Se.draggable, j), X = e.getBoundingClientRect(), $e) {
                        Z(!0), r || n ? i.insertBefore(e, r || n) : bt || i.appendChild(e);
                        return
                    }
                    if (j.children.length === 0 || j.children[0] === t || j === O.target && (K = ie(j, O))) {
                        if (K) {
                            if (K.animated) return;
                            at = K.getBoundingClientRect()
                        }
                        Z(Fe), le(i, j, e, X, K, at) !== !1 && (e.contains(j) || (j.appendChild(e), o = j), this._animate(X, e), K && this._animate(at, K))
                    } else if (K && !K.animated && K !== e && K.parentNode[k] !== void 0) {
                        d !== K && (d = K, c = H(K), m = H(K.parentNode));
                        var at = K.getBoundingClientRect(),
                            wt = at.right - at.left,
                            rt = at.bottom - at.top,
                            oi = /left|right|inline/.test(c.cssFloat + c.display) || m.display == "flex" && m["flex-direction"].indexOf("row") === 0,
                            Pi = K.offsetWidth > e.offsetWidth,
                            Ti = K.offsetHeight > e.offsetHeight,
                            At = (oi ? (O.clientX - at.left) / wt : (O.clientY - at.top) / rt) > .5,
                            Do = K.nextElementSibling,
                            Rn = le(i, j, e, X, K, at),
                            ri;
                        if (Rn !== !1) {
                            if (D = !0, setTimeout(ke, 30), Z(Fe), Rn === 1 || Rn === -1) ri = Rn === 1;
                            else if (oi) {
                                var Ii = e.offsetTop,
                                    zn = K.offsetTop;
                                Ii === zn ? ri = K.previousElementSibling === e && !Pi || At && Pi : ri = zn > Ii
                            } else ri = Do !== e && !Ti || At && Ti;
                            e.contains(j) || (ri && !Do ? j.appendChild(e) : K.parentNode.insertBefore(e, ri ? Do : K)), o = e.parentNode, this._animate(X, e), this._animate(at, K)
                        }
                    }
                }
            },
            _animate: function(O, j) {
                var K = this.options.animation;
                if (K) {
                    var X = j.getBoundingClientRect();
                    H(j, "transition", "none"), H(j, "transform", "translate3d(" + (O.left - X.left) + "px," + (O.top - X.top) + "px,0)"), j.offsetWidth, H(j, "transition", "all " + K + "ms"), H(j, "transform", "translate3d(0,0,0)"), clearTimeout(j.animated), j.animated = setTimeout(function() {
                        H(j, "transition", ""), H(j, "transform", ""), j.animated = !1
                    }, K)
                }
            },
            _offUpEvents: function() {
                var O = this.el.ownerDocument;
                ee(R, "touchmove", this._onTouchMove), ee(O, "mouseup", this._onDrop), ee(O, "touchend", this._onDrop), ee(O, "touchcancel", this._onDrop)
            },
            forceDrop: function(O, j) {
                var K = this.el,
                    X = this.options;
                clearInterval(this._loopId), clearInterval(x.pid), clearTimeout(this._dragStartTimer), o = O, g = j, ee(R, "mousemove", this._onTouchMove), this.nativeDraggable && (ee(R, "drop", this), ee(K, "dragstart", this._onDragStart)), this._offUpEvents(), t && t.parentNode && t.parentNode.removeChild(t), e && (this.nativeDraggable && ee(e, "dragend", this), ue(e), oe(e, this.options.ghostClass, !1), oe(e, this.options.chosenClass, !1), i === o ? r && r.parentNode.removeChild(r) : g >= 0 && (he(null, o, "sort", e, i, u, g), he(this, i, "sort", e, i, u, g), he(null, o, "add", e, i, u, g), he(this, i, "remove", e, i, u, g))), i = e = o = t = n = r = l = p = S = v = P = g = s = d = c = b = U.active = null
            },
            _onDrop: function(O) {
                var j = this.el,
                    K = this.options;
                if (clearInterval(this._loopId), clearInterval(x.pid), clearTimeout(this._dragStartTimer), ee(R, "mousemove", this._onTouchMove), this.nativeDraggable && (ee(R, "drop", this), ee(j, "dragstart", this._onDragStart)), this._offUpEvents(), O) {
                    if (P && (O.preventDefault(), !K.dropBubble && O.stopPropagation()), t && t.parentNode && t.parentNode.removeChild(t), e) {
                        if (this.nativeDraggable && ee(e, "dragend", this), ue(e), oe(e, this.options.ghostClass, !1), oe(e, this.options.chosenClass, !1), !h) o = s || o, i !== o ? (Se = Ce(e), Se >= 0 && (he(null, o, "sort", e, i, u, Se, {
                            draggedGroup: h
                        }), he(this, i, "sort", e, i, u, Se, {
                            draggedGroup: h
                        }), he(null, o, "add", e, i, u, Se, {
                            draggedGroup: h
                        }), he(this, i, "remove", e, i, u, Se, {
                            draggedGroup: h
                        }))) : (r && r.parentNode.removeChild(r), e.nextSibling !== n && (Se = Ce(e), Se >= 0 && (he(this, i, "update", e, i, u, Se, {
                            draggedGroup: h
                        }), he(this, i, "sort", e, i, u, Se, {
                            draggedGroup: h
                        }))));
                        else {
                            var X = s || o || i,
                                $e = e.nextElementSibling,
                                Se = Ce(e),
                                Re, dt = !0;
                            _.each(h, function(Fe, bt) {
                                var at = Fe.el,
                                    wt = Fe.oldParent,
                                    rt = null;
                                e !== at ? (rt = {
                                    parent: at.parentNode,
                                    before: at.nextElementSibling
                                }, $e ? $e.parentNode.insertBefore(at, dt ? e : $e) : X.appendChild(at)) : dt = !1, X == wt ? (he(this, X, "update", at, X, Fe.oldIndex, Se, {
                                    context: Fe.context,
                                    prevContext: Re,
                                    camebackTo: rt
                                }), he(this, X, "sort", at, X, Fe.oldIndex, Se, {
                                    context: Fe.context,
                                    prevContext: Re,
                                    camebackTo: rt
                                })) : (he(null, X, "sort", at, X, Fe.oldIndex, Se, {
                                    context: Fe.context,
                                    prevContext: Re,
                                    camebackTo: rt
                                }), he(this, wt, "sort", at, X, Fe.oldIndex, Se, {
                                    context: Fe.context,
                                    prevContext: Re,
                                    camebackTo: rt
                                }), he(null, X, "add", at, X, Fe.oldIndex, Se, {
                                    context: Fe.context,
                                    prevContext: Re,
                                    camebackTo: rt
                                }), he(this, wt, "remove", at, X, Fe.oldIndex, Se, {
                                    context: Fe.context,
                                    prevContext: Re,
                                    camebackTo: rt
                                })), Re = Fe.context
                            })
                        }
                        U.active && ((Se === null || Se === -1) && (Se = u), he(this, i, "end", e, i, u, Se), this.save())
                    }
                    i = e = o = t = n = r = l = p = h = s = S = v = P = Se = d = c = b = U.active = null
                }
            },
            handleEvent: function(O) {
                var j = O.type;
                j === "dragover" || j === "dragenter" ? e && (this._onDragOver(O), ye(O)) : (j === "drop" || j === "dragend") && this._onDrop(O)
            },
            toArray: function() {
                for (var O = [], j, K = this.el.children, X = 0, $e = K.length, Se = this.options; X < $e; X++) j = K[X], xe(j, Se.draggable, this.el) && O.push(j.getAttribute(Se.dataIdAttr) || _e(j));
                return O
            },
            sort: function(O) {
                var j = {},
                    K = this.el;
                this.toArray().forEach(function(X, $e) {
                    var Se = K.children[$e];
                    xe(Se, this.options.draggable, K) && (j[X] = Se)
                }, this), O.forEach(function(X) {
                    j[X] && (K.removeChild(j[X]), K.appendChild(j[X]))
                })
            },
            save: function() {
                var O = this.options.store;
                O && O.set(this)
            },
            closest: function(O, j) {
                return xe(O, j || this.options.draggable, this.el)
            },
            option: function(O, j) {
                var K = this.options;
                if (j === void 0) return K[O];
                K[O] = j, O === "group" && Q(K)
            },
            destroy: function() {
                var O = this.el;
                O[k] = null, ee(O, "mousedown", this._onTapStart), ee(O, "touchstart", this._onTapStart), this.nativeDraggable && (ee(O, "dragover", this), ee(O, "dragenter", this)), Array.prototype.forEach.call(O.querySelectorAll("[draggable]"), function(j) {
                    j.removeAttribute("draggable")
                }), G.splice(G.indexOf(this._onDragOver), 1), this._onDrop(), this.el = O = null
            }
        };

        function Z(O) {
            r && r.state !== O && (H(r, "display", O ? "none" : ""), !O && r.state && i.insertBefore(r, e), r.state = O)
        }

        function xe(O, j, K) {
            if (O) {
                K = K || R, j = j.split(".");
                var X = j.shift().toUpperCase(),
                    $e = new RegExp("\\s(" + j.join("|") + ")(?=\\s)", "g");
                do
                    if (X === ">*" && O.parentNode === K || (X === "" || O.nodeName.toUpperCase() == X) && (!j.length || ((" " + O.className + " ").match($e) || []).length == j.length)) return O; while (O !== K && (O = O.parentNode))
            }
            return null
        }

        function ye(O) {
            O.dataTransfer && (O.dataTransfer.dropEffect = "move"), O.preventDefault()
        }

        function ve(O, j, K) {
            O.addEventListener(j, K, !1)
        }

        function ee(O, j, K) {
            O.removeEventListener(j, K, !1)
        }

        function oe(O, j, K) {
            if (O)
                if (O.classList) O.classList[K ? "add" : "remove"](j);
                else {
                    var X = (" " + O.className + " ").replace(C, " ").replace(" " + j + " ", " ");
                    O.className = (X + (K ? " " + j : "")).replace(C, " ")
                }
        }

        function H(O, j, K) {
            var X = O && O.style;
            if (X) {
                if (K === void 0) return R.defaultView && R.defaultView.getComputedStyle ? K = R.defaultView.getComputedStyle(O, "") : O.currentStyle && (K = O.currentStyle), j === void 0 ? K : K[j];
                j in X || (j = "-webkit-" + j), X[j] = K + (typeof K == "string" ? "" : "px")
            }
        }

        function se(O, j, K) {
            if (O) {
                var X = O.getElementsByTagName(j),
                    $e = 0,
                    Se = X.length;
                if (K)
                    for (; $e < Se; $e++) K(X[$e], $e);
                return X
            }
            return []
        }

        function he(O, j, K, X, $e, Se, Re, dt) {
            var Fe = R.createEvent("Event"),
                bt = (O || j[k]).options,
                at = "on" + K.charAt(0).toUpperCase() + K.substr(1);
            return Fe.initEvent(K, !0, !0), Fe.to = j, Fe.from = $e || j, Fe.item = X || j, Fe.clone = r, Fe.oldIndex = Se, Fe.newIndex = Re, Fe.data = dt, Fe.setDraggedGroup = function(wt) {
                h = wt
            }, Fe.getGhost = function() {
                return t
            }, j.dispatchEvent(Fe), bt[at] && bt[at].call(O, Fe), Fe
        }

        function le(O, j, K, X, $e, Se) {
            var Re, dt = O[k],
                Fe = dt.options.onMove,
                bt;
            return Re = R.createEvent("Event"), Re.initEvent("move", !0, !0), Re.to = j, Re.from = O, Re.dragged = K, Re.draggedRect = X, Re.ghost = t, Re.related = $e || j, Re.relatedRect = Se || j.getBoundingClientRect(), O.dispatchEvent(Re), Fe && (bt = Fe.call(dt, Re)), bt
        }

        function ue(O) {
            O.draggable = !1
        }

        function ke() {
            D = !1
        }

        function ie(O, j) {
            var K = O.lastElementChild,
                X = K.getBoundingClientRect();
            return (j.clientY - (X.top + X.height) > 5 || j.clientX - (X.right + X.width) > 5) && K
        }

        function _e(O) {
            for (var j = O.tagName + O.className + O.src + O.href + O.textContent, K = j.length, X = 0; K--;) X += j.charCodeAt(K);
            return X.toString(36)
        }

        function Ce(O) {
            var j = 0;
            if (!O || !O.parentNode) return -1;
            for (; O && (O = O.previousElementSibling);) O.nodeName.toUpperCase() !== "TEMPLATE" && j++;
            return j
        }

        function We(O, j) {
            var K, X;
            return function() {
                K === void 0 && (K = arguments, X = this, setTimeout(function() {
                    K.length === 1 ? O.call(X, K[0]) : O.apply(X, K), K = void 0
                }, j))
            }
        }

        function Ke(O, j) {
            if (O && j)
                for (var K in j) j.hasOwnProperty(K) && (O[K] = j[K]);
            return O
        }
        return U.utils = {
            on: ve,
            off: ee,
            css: H,
            find: se,
            is: function(O, j) {
                return !!xe(O, j, O)
            },
            extend: Ke,
            throttle: We,
            closest: xe,
            toggleClass: oe,
            index: Ce
        }, U.create = function(O, j) {
            return new U(O, j)
        }, U.version = "1.4.2", U
    })
});
var fr = qe((F2e, Ap) => {
    "use strict";

    function LA(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Ap.exports = LA, Ap.exports.__esModule = !0, Ap.exports.default = Ap.exports
});
var Dp = qe((N2e, xn) => {
    "use strict";

    function mw(e) {
        "@babel/helpers - typeof";
        return xn.exports = mw = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o) {
            return typeof o
        } : function(o) {
            return o && typeof Symbol == "function" && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o
        }, xn.exports.__esModule = !0, xn.exports.default = xn.exports, mw(e)
    }
    xn.exports = mw, xn.exports.__esModule = !0, xn.exports.default = xn.exports
});
var oc = qe((W2e, Lp) => {
    "use strict";
    var OA = Dp().default;

    function CP(e) {
        if (typeof WeakMap != "function") return null;
        var o = new WeakMap,
            t = new WeakMap;
        return (CP = function(i) {
            return i ? t : o
        })(e)
    }

    function $A(e, o) {
        if (!o && e && e.__esModule) return e;
        if (e === null || OA(e) != "object" && typeof e != "function") return {
            default: e
        };
        var t = CP(o);
        if (t && t.has(e)) return t.get(e);
        var r = {
                __proto__: null
            },
            i = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n in e)
            if (n !== "default" && {}.hasOwnProperty.call(e, n)) {
                var s = i ? Object.getOwnPropertyDescriptor(e, n) : null;
                s && (s.get || s.set) ? Object.defineProperty(r, n, s) : r[n] = e[n]
            }
        return r.default = e, t && t.set(e, r), r
    }
    Lp.exports = $A, Lp.exports.__esModule = !0, Lp.exports.default = Lp.exports
});
var hw = qe((V2e, vn) => {
    "use strict";

    function gw() {
        return vn.exports = gw = Object.assign ? Object.assign.bind() : function(e) {
            for (var o = 1; o < arguments.length; o++) {
                var t = arguments[o];
                for (var r in t)({}).hasOwnProperty.call(t, r) && (e[r] = t[r])
            }
            return e
        }, vn.exports.__esModule = !0, vn.exports.default = vn.exports, gw.apply(null, arguments)
    }
    vn.exports = gw, vn.exports.__esModule = !0, vn.exports.default = vn.exports
});
var rc = qe((U2e, Op) => {
    "use strict";

    function HA(e, o) {
        if (!(e instanceof o)) throw new TypeError("Cannot call a class as a function")
    }
    Op.exports = HA, Op.exports.__esModule = !0, Op.exports.default = Op.exports
});
var PP = qe((G2e, $p) => {
    "use strict";
    var SP = Dp().default;

    function FA(e, o) {
        if (SP(e) != "object" || !e) return e;
        var t = e[Symbol.toPrimitive];
        if (t !== void 0) {
            var r = t.call(e, o || "default");
            if (SP(r) != "object") return r;
            throw new TypeError("@@toPrimitive must return a primitive value.")
        }
        return (o === "string" ? String : Number)(e)
    }
    $p.exports = FA, $p.exports.__esModule = !0, $p.exports.default = $p.exports
});
var fw = qe((j2e, Hp) => {
    "use strict";
    var NA = Dp().default,
        WA = PP();

    function VA(e) {
        var o = WA(e, "string");
        return NA(o) == "symbol" ? o : o + ""
    }
    Hp.exports = VA, Hp.exports.__esModule = !0, Hp.exports.default = Hp.exports
});
var ic = qe((q2e, Fp) => {
    "use strict";
    var UA = fw();

    function TP(e, o) {
        for (var t = 0; t < o.length; t++) {
            var r = o[t];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, UA(r.key), r)
        }
    }

    function GA(e, o, t) {
        return o && TP(e.prototype, o), t && TP(e, t), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e
    }
    Fp.exports = GA, Fp.exports.__esModule = !0, Fp.exports.default = Fp.exports
});
var Wp = qe((Y2e, Np) => {
    "use strict";

    function jA(e) {
        if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e
    }
    Np.exports = jA, Np.exports.__esModule = !0, Np.exports.default = Np.exports
});
var Tg = qe((X2e, Vp) => {
    "use strict";
    var qA = Dp().default,
        YA = Wp();

    function XA(e, o) {
        if (o && (qA(o) == "object" || typeof o == "function")) return o;
        if (o !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
        return YA(e)
    }
    Vp.exports = XA, Vp.exports.__esModule = !0, Vp.exports.default = Vp.exports
});
var Ig = qe((K2e, yn) => {
    "use strict";

    function bw(e) {
        return yn.exports = bw = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
            return o.__proto__ || Object.getPrototypeOf(o)
        }, yn.exports.__esModule = !0, yn.exports.default = yn.exports, bw(e)
    }
    yn.exports = bw, yn.exports.__esModule = !0, yn.exports.default = yn.exports
});
var IP = qe((Z2e, kn) => {
    "use strict";

    function ww(e, o) {
        return kn.exports = ww = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, r) {
            return t.__proto__ = r, t
        }, kn.exports.__esModule = !0, kn.exports.default = kn.exports, ww(e, o)
    }
    kn.exports = ww, kn.exports.__esModule = !0, kn.exports.default = kn.exports
});
var Mg = qe((J2e, Up) => {
    "use strict";
    var KA = IP();

    function ZA(e, o) {
        if (typeof o != "function" && o !== null) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(o && o.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), o && KA(e, o)
    }
    Up.exports = ZA, Up.exports.__esModule = !0, Up.exports.default = Up.exports
});
var nc = qe((Q2e, Gp) => {
    "use strict";
    var JA = fw();

    function QA(e, o, t) {
        return (o = JA(o)) in e ? Object.defineProperty(e, o, {
            value: t,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[o] = t, e
    }
    Gp.exports = QA, Gp.exports.__esModule = !0, Gp.exports.default = Gp.exports
});
var vw = qe((e_e, xw) => {
    "use strict";

    function BP(e) {
        var o, t, r = "";
        if (typeof e == "string" || typeof e == "number") r += e;
        else if (typeof e == "object")
            if (Array.isArray(e))
                for (o = 0; o < e.length; o++) e[o] && (t = BP(e[o])) && (r && (r += " "), r += t);
            else
                for (o in e) e[o] && (r && (r += " "), r += o);
        return r
    }

    function MP() {
        for (var e, o, t = 0, r = ""; t < arguments.length;)(e = arguments[t++]) && (o = BP(e)) && (r && (r += " "), r += o);
        return r
    }
    xw.exports = MP, xw.exports.clsx = MP
});
var RP = qe(yw => {
    "use strict";
    Object.defineProperty(yw, "__esModule", {
        value: !0
    });
    yw.default = eD;

    function eD(e) {
        var o = e.cellCount,
            t = e.cellSize,
            r = e.computeMetadataCallback,
            i = e.computeMetadataCallbackProps,
            n = e.nextCellsCount,
            s = e.nextCellSize,
            l = e.nextScrollToIndex,
            p = e.scrollToIndex,
            d = e.updateScrollOffsetForScrollToIndex;
        (o !== n || (typeof t == "number" || typeof s == "number") && t !== s) && (r(i), p >= 0 && p === l && d())
    }
});
var zP = qe((o_e, jp) => {
    "use strict";

    function tD(e, o) {
        if (e == null) return {};
        var t = {};
        for (var r in e)
            if ({}.hasOwnProperty.call(e, r)) {
                if (o.indexOf(r) >= 0) continue;
                t[r] = e[r]
            }
        return t
    }
    jp.exports = tD, jp.exports.__esModule = !0, jp.exports.default = jp.exports
});
var EP = qe((r_e, qp) => {
    "use strict";
    var oD = zP();

    function rD(e, o) {
        if (e == null) return {};
        var t, r, i = oD(e, o);
        if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(e);
            for (r = 0; r < n.length; r++) t = n[r], o.indexOf(t) >= 0 || {}.propertyIsEnumerable.call(e, t) && (i[t] = e[t])
        }
        return i
    }
    qp.exports = rD, qp.exports.__esModule = !0, qp.exports.default = qp.exports
});
var _n = qe(ot => {
    "use strict";
    var AP = fr(),
        iD = oc();
    Object.defineProperty(ot, "__esModule", {
        value: !0
    });
    ot.bpfrpt_proptype_VisibleCellRange = ot.bpfrpt_proptype_Alignment = ot.bpfrpt_proptype_OverscanIndicesGetter = ot.bpfrpt_proptype_OverscanIndices = ot.bpfrpt_proptype_OverscanIndicesGetterParams = ot.bpfrpt_proptype_RenderedSection = ot.bpfrpt_proptype_ScrollbarPresenceChange = ot.bpfrpt_proptype_Scroll = ot.bpfrpt_proptype_NoContentRenderer = ot.bpfrpt_proptype_CellSize = ot.bpfrpt_proptype_CellSizeGetter = ot.bpfrpt_proptype_CellRangeRenderer = ot.bpfrpt_proptype_CellRangeRendererParams = ot.bpfrpt_proptype_StyleCache = ot.bpfrpt_proptype_CellCache = ot.bpfrpt_proptype_CellRenderer = ot.bpfrpt_proptype_CellRendererParams = ot.bpfrpt_proptype_CellPosition = void 0;
    var i_e = iD(F()),
        n_e = AP(Bg()),
        s_e = AP(el()),
        nD = null;
    ot.bpfrpt_proptype_CellPosition = nD;
    var sD = null;
    ot.bpfrpt_proptype_CellRendererParams = sD;
    var aD = null;
    ot.bpfrpt_proptype_CellRenderer = aD;
    var lD = null;
    ot.bpfrpt_proptype_CellCache = lD;
    var cD = null;
    ot.bpfrpt_proptype_StyleCache = cD;
    var pD = null;
    ot.bpfrpt_proptype_CellRangeRendererParams = pD;
    var dD = null;
    ot.bpfrpt_proptype_CellRangeRenderer = dD;
    var uD = null;
    ot.bpfrpt_proptype_CellSizeGetter = uD;
    var mD = null;
    ot.bpfrpt_proptype_CellSize = mD;
    var gD = null;
    ot.bpfrpt_proptype_NoContentRenderer = gD;
    var hD = null;
    ot.bpfrpt_proptype_Scroll = hD;
    var fD = null;
    ot.bpfrpt_proptype_ScrollbarPresenceChange = fD;
    var bD = null;
    ot.bpfrpt_proptype_RenderedSection = bD;
    var wD = null;
    ot.bpfrpt_proptype_OverscanIndicesGetterParams = wD;
    var xD = null;
    ot.bpfrpt_proptype_OverscanIndices = xD;
    var vD = null;
    ot.bpfrpt_proptype_OverscanIndicesGetter = vD;
    var yD = null;
    ot.bpfrpt_proptype_Alignment = yD;
    var kD = null;
    ot.bpfrpt_proptype_VisibleCellRange = kD
});
var DP = qe(Rg => {
    "use strict";
    var kw = fr();
    Object.defineProperty(Rg, "__esModule", {
        value: !0
    });
    Rg.default = void 0;
    var _D = kw(rc()),
        CD = kw(ic()),
        sc = kw(nc()),
        l_e = _n(),
        SD = function() {
            function e(o) {
                var t = o.cellCount,
                    r = o.cellSizeGetter,
                    i = o.estimatedCellSize;
                (0, _D.default)(this, e), (0, sc.default)(this, "_cellSizeAndPositionData", {}), (0, sc.default)(this, "_lastMeasuredIndex", -1), (0, sc.default)(this, "_lastBatchedIndex", -1), (0, sc.default)(this, "_cellCount", void 0), (0, sc.default)(this, "_cellSizeGetter", void 0), (0, sc.default)(this, "_estimatedCellSize", void 0), this._cellSizeGetter = r, this._cellCount = t, this._estimatedCellSize = i
            }
            return (0, CD.default)(e, [{
                key: "areOffsetsAdjusted",
                value: function() {
                    return !1
                }
            }, {
                key: "configure",
                value: function(t) {
                    var r = t.cellCount,
                        i = t.estimatedCellSize,
                        n = t.cellSizeGetter;
                    this._cellCount = r, this._estimatedCellSize = i, this._cellSizeGetter = n
                }
            }, {
                key: "getCellCount",
                value: function() {
                    return this._cellCount
                }
            }, {
                key: "getEstimatedCellSize",
                value: function() {
                    return this._estimatedCellSize
                }
            }, {
                key: "getLastMeasuredIndex",
                value: function() {
                    return this._lastMeasuredIndex
                }
            }, {
                key: "getOffsetAdjustment",
                value: function() {
                    return 0
                }
            }, {
                key: "getSizeAndPositionOfCell",
                value: function(t) {
                    if (t < 0 || t >= this._cellCount) throw Error("Requested index ".concat(t, " is outside of range 0..").concat(this._cellCount));
                    if (t > this._lastMeasuredIndex)
                        for (var r = this.getSizeAndPositionOfLastMeasuredCell(), i = r.offset + r.size, n = this._lastMeasuredIndex + 1; n <= t; n++) {
                            var s = this._cellSizeGetter({
                                index: n
                            });
                            if (s === void 0 || isNaN(s)) throw Error("Invalid size returned for cell ".concat(n, " of value ").concat(s));
                            s === null ? (this._cellSizeAndPositionData[n] = {
                                offset: i,
                                size: 0
                            }, this._lastBatchedIndex = t) : (this._cellSizeAndPositionData[n] = {
                                offset: i,
                                size: s
                            }, i += s, this._lastMeasuredIndex = t)
                        }
                    return this._cellSizeAndPositionData[t]
                }
            }, {
                key: "getSizeAndPositionOfLastMeasuredCell",
                value: function() {
                    return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {
                        offset: 0,
                        size: 0
                    }
                }
            }, {
                key: "getTotalSize",
                value: function() {
                    var t = this.getSizeAndPositionOfLastMeasuredCell(),
                        r = t.offset + t.size,
                        i = this._cellCount - this._lastMeasuredIndex - 1,
                        n = i * this._estimatedCellSize;
                    return r + n
                }
            }, {
                key: "getUpdatedOffsetForIndex",
                value: function(t) {
                    var r = t.align,
                        i = r === void 0 ? "auto" : r,
                        n = t.containerSize,
                        s = t.currentOffset,
                        l = t.targetIndex;
                    if (n <= 0) return 0;
                    var p = this.getSizeAndPositionOfCell(l),
                        d = p.offset,
                        c = d - n + p.size,
                        m;
                    switch (i) {
                        case "start":
                            m = d;
                            break;
                        case "end":
                            m = c;
                            break;
                        case "center":
                            m = d - (n - p.size) / 2;
                            break;
                        default:
                            m = Math.max(c, Math.min(d, s));
                            break
                    }
                    var u = this.getTotalSize();
                    return Math.max(0, Math.min(u - n, m))
                }
            }, {
                key: "getVisibleCellRange",
                value: function(t) {
                    var r = t.containerSize,
                        i = t.offset,
                        n = this.getTotalSize();
                    if (n === 0) return {};
                    var s = i + r,
                        l = this._findNearestCell(i),
                        p = this.getSizeAndPositionOfCell(l);
                    i = p.offset + p.size;
                    for (var d = l; i < s && d < this._cellCount - 1;) d++, i += this.getSizeAndPositionOfCell(d).size;
                    return {
                        start: l,
                        stop: d
                    }
                }
            }, {
                key: "resetCell",
                value: function(t) {
                    this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, t - 1)
                }
            }, {
                key: "_binarySearch",
                value: function(t, r, i) {
                    for (; r <= t;) {
                        var n = r + Math.floor((t - r) / 2),
                            s = this.getSizeAndPositionOfCell(n).offset;
                        if (s === i) return n;
                        s < i ? r = n + 1 : s > i && (t = n - 1)
                    }
                    return r > 0 ? r - 1 : 0
                }
            }, {
                key: "_exponentialSearch",
                value: function(t, r) {
                    for (var i = 1; t < this._cellCount && this.getSizeAndPositionOfCell(t).offset < r;) t += i, i *= 2;
                    return this._binarySearch(Math.min(t, this._cellCount - 1), Math.floor(t / 2), r)
                }
            }, {
                key: "_findNearestCell",
                value: function(t) {
                    if (isNaN(t)) throw Error("Invalid offset ".concat(t, " specified"));
                    t = Math.max(0, t);
                    var r = this.getSizeAndPositionOfLastMeasuredCell(),
                        i = Math.max(0, this._lastMeasuredIndex);
                    return r.offset >= t ? this._binarySearch(i, 0, t) : this._exponentialSearch(i, t)
                }
            }]), e
        }();
    Rg.default = SD
});
var LP = qe(zg => {
    "use strict";
    Object.defineProperty(zg, "__esModule", {
        value: !0
    });
    zg.getMaxElementSize = void 0;
    var PD = 15e5,
        TD = 16777100,
        ID = function() {
            return typeof window < "u"
        },
        MD = function() {
            return !!window.chrome
        },
        BD = function() {
            return ID() && MD() ? TD : PD
        };
    zg.getMaxElementSize = BD
});
var Bg = qe(Eg => {
    "use strict";
    var Yp = fr();
    Object.defineProperty(Eg, "__esModule", {
        value: !0
    });
    Eg.default = void 0;
    var RD = Yp(EP()),
        zD = Yp(rc()),
        ED = Yp(ic()),
        OP = Yp(nc()),
        AD = Yp(DP()),
        DD = LP(),
        d_e = _n(),
        LD = function() {
            function e(o) {
                var t = o.maxScrollSize,
                    r = t === void 0 ? (0, DD.getMaxElementSize)() : t,
                    i = (0, RD.default)(o, ["maxScrollSize"]);
                (0, zD.default)(this, e), (0, OP.default)(this, "_cellSizeAndPositionManager", void 0), (0, OP.default)(this, "_maxScrollSize", void 0), this._cellSizeAndPositionManager = new AD.default(i), this._maxScrollSize = r
            }
            return (0, ED.default)(e, [{
                key: "areOffsetsAdjusted",
                value: function() {
                    return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize
                }
            }, {
                key: "configure",
                value: function(t) {
                    this._cellSizeAndPositionManager.configure(t)
                }
            }, {
                key: "getCellCount",
                value: function() {
                    return this._cellSizeAndPositionManager.getCellCount()
                }
            }, {
                key: "getEstimatedCellSize",
                value: function() {
                    return this._cellSizeAndPositionManager.getEstimatedCellSize()
                }
            }, {
                key: "getLastMeasuredIndex",
                value: function() {
                    return this._cellSizeAndPositionManager.getLastMeasuredIndex()
                }
            }, {
                key: "getOffsetAdjustment",
                value: function(t) {
                    var r = t.containerSize,
                        i = t.offset,
                        n = this._cellSizeAndPositionManager.getTotalSize(),
                        s = this.getTotalSize(),
                        l = this._getOffsetPercentage({
                            containerSize: r,
                            offset: i,
                            totalSize: s
                        });
                    return Math.round(l * (s - n))
                }
            }, {
                key: "getSizeAndPositionOfCell",
                value: function(t) {
                    return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(t)
                }
            }, {
                key: "getSizeAndPositionOfLastMeasuredCell",
                value: function() {
                    return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell()
                }
            }, {
                key: "getTotalSize",
                value: function() {
                    return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize())
                }
            }, {
                key: "getUpdatedOffsetForIndex",
                value: function(t) {
                    var r = t.align,
                        i = r === void 0 ? "auto" : r,
                        n = t.containerSize,
                        s = t.currentOffset,
                        l = t.targetIndex;
                    s = this._safeOffsetToOffset({
                        containerSize: n,
                        offset: s
                    });
                    var p = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({
                        align: i,
                        containerSize: n,
                        currentOffset: s,
                        targetIndex: l
                    });
                    return this._offsetToSafeOffset({
                        containerSize: n,
                        offset: p
                    })
                }
            }, {
                key: "getVisibleCellRange",
                value: function(t) {
                    var r = t.containerSize,
                        i = t.offset;
                    return i = this._safeOffsetToOffset({
                        containerSize: r,
                        offset: i
                    }), this._cellSizeAndPositionManager.getVisibleCellRange({
                        containerSize: r,
                        offset: i
                    })
                }
            }, {
                key: "resetCell",
                value: function(t) {
                    this._cellSizeAndPositionManager.resetCell(t)
                }
            }, {
                key: "_getOffsetPercentage",
                value: function(t) {
                    var r = t.containerSize,
                        i = t.offset,
                        n = t.totalSize;
                    return n <= r ? 0 : i / (n - r)
                }
            }, {
                key: "_offsetToSafeOffset",
                value: function(t) {
                    var r = t.containerSize,
                        i = t.offset,
                        n = this._cellSizeAndPositionManager.getTotalSize(),
                        s = this.getTotalSize();
                    if (n === s) return i;
                    var l = this._getOffsetPercentage({
                        containerSize: r,
                        offset: i,
                        totalSize: n
                    });
                    return Math.round(l * (s - r))
                }
            }, {
                key: "_safeOffsetToOffset",
                value: function(t) {
                    var r = t.containerSize,
                        i = t.offset,
                        n = this._cellSizeAndPositionManager.getTotalSize(),
                        s = this.getTotalSize();
                    if (n === s) return i;
                    var l = this._getOffsetPercentage({
                        containerSize: r,
                        offset: i,
                        totalSize: s
                    });
                    return Math.round(l * (n - r))
                }
            }]), e
        }();
    Eg.default = LD
});
var $P = qe(_w => {
    "use strict";
    Object.defineProperty(_w, "__esModule", {
        value: !0
    });
    _w.default = OD;

    function OD() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0,
            o = {};
        return function(t) {
            var r = t.callback,
                i = t.indices,
                n = Object.keys(i),
                s = !e || n.every(function(p) {
                    var d = i[p];
                    return Array.isArray(d) ? d.length > 0 : d >= 0
                }),
                l = n.length !== Object.keys(o).length || n.some(function(p) {
                    var d = o[p],
                        c = i[p];
                    return Array.isArray(c) ? d.join(",") !== c.join(",") : d !== c
                });
            o = i, s && l && r(i)
        }
    }
});
var Cw = qe(ki => {
    "use strict";
    Object.defineProperty(ki, "__esModule", {
        value: !0
    });
    ki.default = ND;
    ki.SCROLL_DIRECTION_VERTICAL = ki.SCROLL_DIRECTION_HORIZONTAL = ki.SCROLL_DIRECTION_FORWARD = ki.SCROLL_DIRECTION_BACKWARD = void 0;
    var g_e = _n(),
        $D = -1;
    ki.SCROLL_DIRECTION_BACKWARD = $D;
    var HP = 1;
    ki.SCROLL_DIRECTION_FORWARD = HP;
    var HD = "horizontal";
    ki.SCROLL_DIRECTION_HORIZONTAL = HD;
    var FD = "vertical";
    ki.SCROLL_DIRECTION_VERTICAL = FD;

    function ND(e) {
        var o = e.cellCount,
            t = e.overscanCellsCount,
            r = e.scrollDirection,
            i = e.startIndex,
            n = e.stopIndex;
        return r === HP ? {
            overscanStartIndex: Math.max(0, i),
            overscanStopIndex: Math.min(o - 1, n + t)
        } : {
            overscanStartIndex: Math.max(0, i - t),
            overscanStopIndex: Math.min(o - 1, n)
        }
    }
});
var FP = qe(Sw => {
    "use strict";
    var WD = fr();
    Object.defineProperty(Sw, "__esModule", {
        value: !0
    });
    Sw.default = VD;
    var f_e = WD(Bg()),
        b_e = _n();

    function VD(e) {
        var o = e.cellSize,
            t = e.cellSizeAndPositionManager,
            r = e.previousCellsCount,
            i = e.previousCellSize,
            n = e.previousScrollToAlignment,
            s = e.previousScrollToIndex,
            l = e.previousSize,
            p = e.scrollOffset,
            d = e.scrollToAlignment,
            c = e.scrollToIndex,
            m = e.size,
            u = e.sizeJustIncreasedFromZero,
            g = e.updateScrollIndexCallback,
            h = t.getCellCount(),
            b = c >= 0 && c < h,
            x = m !== l || u || !i || typeof o == "number" && o !== i;
        b && (x || d !== n || c !== s) ? g(c) : !b && h > 0 && (m < l || h < r) && p > t.getTotalSize() - m && g(h - 1)
    }
});
var Tw = qe(Pw => {
    "use strict";
    Object.defineProperty(Pw, "__esModule", {
        value: !0
    });
    Pw.default = UD;
    var x_e = _n();

    function UD(e) {
        for (var o = e.cellCache, t = e.cellRenderer, r = e.columnSizeAndPositionManager, i = e.columnStartIndex, n = e.columnStopIndex, s = e.deferredMeasurementCache, l = e.horizontalOffsetAdjustment, p = e.isScrolling, d = e.isScrollingOptOut, c = e.parent, m = e.rowSizeAndPositionManager, u = e.rowStartIndex, g = e.rowStopIndex, h = e.styleCache, b = e.verticalOffsetAdjustment, x = e.visibleColumnIndices, S = e.visibleRowIndices, v = [], P = r.areOffsetsAdjusted() || m.areOffsetsAdjusted(), C = !p && !P, k = u; k <= g; k++)
            for (var T = m.getSizeAndPositionOfCell(k), R = i; R <= n; R++) {
                var I = r.getSizeAndPositionOfCell(R),
                    B = R >= x.start && R <= x.stop && k >= S.start && k <= S.stop,
                    L = "".concat(k, "-").concat(R),
                    D = void 0;
                C && h[L] ? D = h[L] : s && !s.has(k, R) ? D = {
                    height: "auto",
                    left: 0,
                    position: "absolute",
                    top: 0,
                    width: "auto"
                } : (D = {
                    height: T.size,
                    left: I.offset + l,
                    position: "absolute",
                    top: T.offset + b,
                    width: I.size
                }, h[L] = D);
                var E = {
                        columnIndex: R,
                        isScrolling: p,
                        isVisible: B,
                        key: L,
                        parent: c,
                        rowIndex: k,
                        style: D
                    },
                    $ = void 0;
                (d || p) && !l && !b ? (o[L] || (o[L] = t(E)), $ = o[L]) : $ = t(E), !($ == null || $ === !1) && v.push($)
            }
        return v
    }
});
var WP = qe((Xp, NP) => {
    "use strict";
    Xp.__esModule = !0;
    Xp.default = void 0;
    var GD = !!(typeof window < "u" && window.document && window.document.createElement);
    Xp.default = GD;
    NP.exports = Xp.default
});
var UP = qe((Dg, VP) => {
    "use strict";
    var jD = fr();
    Dg.__esModule = !0;
    Dg.default = YD;
    var qD = jD(WP()),
        Ag;

    function YD(e) {
        if ((!Ag && Ag !== 0 || e) && qD.default) {
            var o = document.createElement("div");
            o.style.position = "absolute", o.style.top = "-9999px", o.style.width = "50px", o.style.height = "50px", o.style.overflow = "scroll", document.body.appendChild(o), Ag = o.offsetWidth - o.clientWidth, document.body.removeChild(o)
        }
        return Ag
    }
    VP.exports = Dg.default
});
var YP = qe(Iw => {
    "use strict";
    Object.defineProperty(Iw, "__esModule", {
        value: !0
    });

    function GP() {
        var e = this.constructor.getDerivedStateFromProps(this.props, this.state);
        e != null && this.setState(e)
    }

    function jP(e) {
        function o(t) {
            var r = this.constructor.getDerivedStateFromProps(e, t);
            return r ? ? null
        }
        this.setState(o.bind(this))
    }

    function qP(e, o) {
        try {
            var t = this.props,
                r = this.state;
            this.props = e, this.state = o, this.__reactInternalSnapshotFlag = !0, this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(t, r)
        } finally {
            this.props = t, this.state = r
        }
    }
    GP.__suppressDeprecationWarning = !0;
    jP.__suppressDeprecationWarning = !0;
    qP.__suppressDeprecationWarning = !0;

    function XD(e) {
        var o = e.prototype;
        if (!o || !o.isReactComponent) throw new Error("Can only polyfill class components");
        if (typeof e.getDerivedStateFromProps != "function" && typeof o.getSnapshotBeforeUpdate != "function") return e;
        var t = null,
            r = null,
            i = null;
        if (typeof o.componentWillMount == "function" ? t = "componentWillMount" : typeof o.UNSAFE_componentWillMount == "function" && (t = "UNSAFE_componentWillMount"), typeof o.componentWillReceiveProps == "function" ? r = "componentWillReceiveProps" : typeof o.UNSAFE_componentWillReceiveProps == "function" && (r = "UNSAFE_componentWillReceiveProps"), typeof o.componentWillUpdate == "function" ? i = "componentWillUpdate" : typeof o.UNSAFE_componentWillUpdate == "function" && (i = "UNSAFE_componentWillUpdate"), t !== null || r !== null || i !== null) {
            var n = e.displayName || e.name,
                s = typeof e.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
            throw Error(`Unsafe legacy lifecycles will not be called for components using new component APIs.

` + n + " uses " + s + " but also contains the following legacy lifecycles:" + (t !== null ? `
  ` + t : "") + (r !== null ? `
  ` + r : "") + (i !== null ? `
  ` + i : "") + `

The above lifecycles should be removed. Learn more about this warning here:
https://fb.me/react-async-component-lifecycle-hooks`)
        }
        if (typeof e.getDerivedStateFromProps == "function" && (o.componentWillMount = GP, o.componentWillReceiveProps = jP), typeof o.getSnapshotBeforeUpdate == "function") {
            if (typeof o.componentDidUpdate != "function") throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");
            o.componentWillUpdate = qP;
            var l = o.componentDidUpdate;
            o.componentDidUpdate = function(d, c, m) {
                var u = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : m;
                l.call(this, d, c, u)
            }
        }
        return e
    }
    Iw.polyfill = XD
});
var XP = qe(ac => {
    "use strict";
    Object.defineProperty(ac, "__esModule", {
        value: !0
    });
    ac.caf = ac.raf = void 0;
    var Qo;
    typeof window < "u" ? Qo = window : typeof self < "u" ? Qo = self : Qo = {};
    var KD = Qo.requestAnimationFrame || Qo.webkitRequestAnimationFrame || Qo.mozRequestAnimationFrame || Qo.oRequestAnimationFrame || Qo.msRequestAnimationFrame || function(e) {
            return Qo.setTimeout(e, 1e3 / 60)
        },
        ZD = Qo.cancelAnimationFrame || Qo.webkitCancelAnimationFrame || Qo.mozCancelAnimationFrame || Qo.oCancelAnimationFrame || Qo.msCancelAnimationFrame || function(e) {
            Qo.clearTimeout(e)
        },
        JD = KD;
    ac.raf = JD;
    var QD = ZD;
    ac.caf = QD
});
var KP = qe(bs => {
    "use strict";
    var eL = fr();
    Object.defineProperty(bs, "__esModule", {
        value: !0
    });
    bs.bpfrpt_proptype_AnimationTimeoutId = bs.requestAnimationTimeout = bs.cancelAnimationTimeout = void 0;
    var Mw = XP(),
        __e = eL(el()),
        tL = null;
    bs.bpfrpt_proptype_AnimationTimeoutId = tL;
    var oL = function(o) {
        return (0, Mw.caf)(o.id)
    };
    bs.cancelAnimationTimeout = oL;
    var rL = function(o, t) {
        var r;
        Promise.resolve().then(function() {
            r = Date.now()
        });
        var i = function s() {
                Date.now() - r >= t ? o.call() : n.id = (0, Mw.raf)(s)
            },
            n = {
                id: (0, Mw.raf)(i)
            };
        return n
    };
    bs.requestAnimationTimeout = rL
});
var s3 = qe(lc => {
    "use strict";
    var Uo = fr(),
        i3 = oc();
    Object.defineProperty(lc, "__esModule", {
        value: !0
    });
    lc.default = lc.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = void 0;
    var iL = Uo(hw()),
        nL = Uo(rc()),
        sL = Uo(ic()),
        aL = Uo(Tg()),
        lL = Uo(Ig()),
        Et = Uo(Wp()),
        cL = Uo(Mg()),
        yt = Uo(nc()),
        Bw = i3(F()),
        pL = Uo(vw()),
        ZP = Uo(RP()),
        JP = Uo(Bg()),
        QP = Uo($P()),
        Ar = i3(Cw()),
        e3 = Uo(FP()),
        dL = Uo(Tw()),
        uL = Uo(UP()),
        mL = YP(),
        Rw = KP(),
        S_e = _n(),
        P_e = Uo(el()),
        t3, o3;

    function r3(e, o) {
        var t = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            o && (r = r.filter(function(i) {
                return Object.getOwnPropertyDescriptor(e, i).enumerable
            })), t.push.apply(t, r)
        }
        return t
    }

    function Sa(e) {
        for (var o = 1; o < arguments.length; o++) {
            var t = arguments[o] != null ? arguments[o] : {};
            o % 2 ? r3(t, !0).forEach(function(r) {
                (0, yt.default)(e, r, t[r])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : r3(t).forEach(function(r) {
                Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r))
            })
        }
        return e
    }
    var n3 = 150;
    lc.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = n3;
    var zw = {
            OBSERVED: "observed",
            REQUESTED: "requested"
        },
        gL = function() {
            return null
        },
        Ew = (o3 = t3 = function(e) {
            (0, cL.default)(o, e);

            function o(t) {
                var r;
                (0, nL.default)(this, o), r = (0, aL.default)(this, (0, lL.default)(o).call(this, t)), (0, yt.default)((0, Et.default)(r), "_onGridRenderedMemoizer", (0, QP.default)()), (0, yt.default)((0, Et.default)(r), "_onScrollMemoizer", (0, QP.default)(!1)), (0, yt.default)((0, Et.default)(r), "_deferredInvalidateColumnIndex", null), (0, yt.default)((0, Et.default)(r), "_deferredInvalidateRowIndex", null), (0, yt.default)((0, Et.default)(r), "_recomputeScrollLeftFlag", !1), (0, yt.default)((0, Et.default)(r), "_recomputeScrollTopFlag", !1), (0, yt.default)((0, Et.default)(r), "_horizontalScrollBarSize", 0), (0, yt.default)((0, Et.default)(r), "_verticalScrollBarSize", 0), (0, yt.default)((0, Et.default)(r), "_scrollbarPresenceChanged", !1), (0, yt.default)((0, Et.default)(r), "_scrollingContainer", void 0), (0, yt.default)((0, Et.default)(r), "_childrenToDisplay", void 0), (0, yt.default)((0, Et.default)(r), "_columnStartIndex", void 0), (0, yt.default)((0, Et.default)(r), "_columnStopIndex", void 0), (0, yt.default)((0, Et.default)(r), "_rowStartIndex", void 0), (0, yt.default)((0, Et.default)(r), "_rowStopIndex", void 0), (0, yt.default)((0, Et.default)(r), "_renderedColumnStartIndex", 0), (0, yt.default)((0, Et.default)(r), "_renderedColumnStopIndex", 0), (0, yt.default)((0, Et.default)(r), "_renderedRowStartIndex", 0), (0, yt.default)((0, Et.default)(r), "_renderedRowStopIndex", 0), (0, yt.default)((0, Et.default)(r), "_initialScrollTop", void 0), (0, yt.default)((0, Et.default)(r), "_initialScrollLeft", void 0), (0, yt.default)((0, Et.default)(r), "_disablePointerEventsTimeoutId", void 0), (0, yt.default)((0, Et.default)(r), "_styleCache", {}), (0, yt.default)((0, Et.default)(r), "_cellCache", {}), (0, yt.default)((0, Et.default)(r), "_debounceScrollEndedCallback", function() {
                    r._disablePointerEventsTimeoutId = null, r.setState({
                        isScrolling: !1,
                        needToResetStyleCache: !1
                    })
                }), (0, yt.default)((0, Et.default)(r), "_invokeOnGridRenderedHelper", function() {
                    var s = r.props.onSectionRendered;
                    r._onGridRenderedMemoizer({
                        callback: s,
                        indices: {
                            columnOverscanStartIndex: r._columnStartIndex,
                            columnOverscanStopIndex: r._columnStopIndex,
                            columnStartIndex: r._renderedColumnStartIndex,
                            columnStopIndex: r._renderedColumnStopIndex,
                            rowOverscanStartIndex: r._rowStartIndex,
                            rowOverscanStopIndex: r._rowStopIndex,
                            rowStartIndex: r._renderedRowStartIndex,
                            rowStopIndex: r._renderedRowStopIndex
                        }
                    })
                }), (0, yt.default)((0, Et.default)(r), "_setScrollingContainerRef", function(s) {
                    r._scrollingContainer = s
                }), (0, yt.default)((0, Et.default)(r), "_onScroll", function(s) {
                    s.target === r._scrollingContainer && r.handleScrollEvent(s.target)
                });
                var i = new JP.default({
                        cellCount: t.columnCount,
                        cellSizeGetter: function(l) {
                            return o._wrapSizeGetter(t.columnWidth)(l)
                        },
                        estimatedCellSize: o._getEstimatedColumnSize(t)
                    }),
                    n = new JP.default({
                        cellCount: t.rowCount,
                        cellSizeGetter: function(l) {
                            return o._wrapSizeGetter(t.rowHeight)(l)
                        },
                        estimatedCellSize: o._getEstimatedRowSize(t)
                    });
                return r.state = {
                    instanceProps: {
                        columnSizeAndPositionManager: i,
                        rowSizeAndPositionManager: n,
                        prevColumnWidth: t.columnWidth,
                        prevRowHeight: t.rowHeight,
                        prevColumnCount: t.columnCount,
                        prevRowCount: t.rowCount,
                        prevIsScrolling: t.isScrolling === !0,
                        prevScrollToColumn: t.scrollToColumn,
                        prevScrollToRow: t.scrollToRow,
                        scrollbarSize: 0,
                        scrollbarSizeMeasured: !1
                    },
                    isScrolling: !1,
                    scrollDirectionHorizontal: Ar.SCROLL_DIRECTION_FORWARD,
                    scrollDirectionVertical: Ar.SCROLL_DIRECTION_FORWARD,
                    scrollLeft: 0,
                    scrollTop: 0,
                    scrollPositionChangeReason: null,
                    needToResetStyleCache: !1
                }, t.scrollToRow > 0 && (r._initialScrollTop = r._getCalculatedScrollTop(t, r.state)), t.scrollToColumn > 0 && (r._initialScrollLeft = r._getCalculatedScrollLeft(t, r.state)), r
            }
            return (0, sL.default)(o, [{
                key: "getOffsetForCell",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
                        i = r.alignment,
                        n = i === void 0 ? this.props.scrollToAlignment : i,
                        s = r.columnIndex,
                        l = s === void 0 ? this.props.scrollToColumn : s,
                        p = r.rowIndex,
                        d = p === void 0 ? this.props.scrollToRow : p,
                        c = Sa({}, this.props, {
                            scrollToAlignment: n,
                            scrollToColumn: l,
                            scrollToRow: d
                        });
                    return {
                        scrollLeft: this._getCalculatedScrollLeft(c),
                        scrollTop: this._getCalculatedScrollTop(c)
                    }
                }
            }, {
                key: "getTotalRowsHeight",
                value: function() {
                    return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize()
                }
            }, {
                key: "getTotalColumnsWidth",
                value: function() {
                    return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize()
                }
            }, {
                key: "handleScrollEvent",
                value: function(r) {
                    var i = r.scrollLeft,
                        n = i === void 0 ? 0 : i,
                        s = r.scrollTop,
                        l = s === void 0 ? 0 : s;
                    if (!(l < 0)) {
                        this._debounceScrollEnded();
                        var p = this.props,
                            d = p.autoHeight,
                            c = p.autoWidth,
                            m = p.height,
                            u = p.width,
                            g = this.state.instanceProps,
                            h = g.scrollbarSize,
                            b = g.rowSizeAndPositionManager.getTotalSize(),
                            x = g.columnSizeAndPositionManager.getTotalSize(),
                            S = Math.min(Math.max(0, x - u + h), n),
                            v = Math.min(Math.max(0, b - m + h), l);
                        if (this.state.scrollLeft !== S || this.state.scrollTop !== v) {
                            var P = S !== this.state.scrollLeft ? S > this.state.scrollLeft ? Ar.SCROLL_DIRECTION_FORWARD : Ar.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal,
                                C = v !== this.state.scrollTop ? v > this.state.scrollTop ? Ar.SCROLL_DIRECTION_FORWARD : Ar.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical,
                                k = {
                                    isScrolling: !0,
                                    scrollDirectionHorizontal: P,
                                    scrollDirectionVertical: C,
                                    scrollPositionChangeReason: zw.OBSERVED
                                };
                            d || (k.scrollTop = v), c || (k.scrollLeft = S), k.needToResetStyleCache = !1, this.setState(k)
                        }
                        this._invokeOnScrollMemoizer({
                            scrollLeft: S,
                            scrollTop: v,
                            totalColumnsWidth: x,
                            totalRowsHeight: b
                        })
                    }
                }
            }, {
                key: "invalidateCellSizeAfterRender",
                value: function(r) {
                    var i = r.columnIndex,
                        n = r.rowIndex;
                    this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex == "number" ? Math.min(this._deferredInvalidateColumnIndex, i) : i, this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex == "number" ? Math.min(this._deferredInvalidateRowIndex, n) : n
                }
            }, {
                key: "measureAllCells",
                value: function() {
                    var r = this.props,
                        i = r.columnCount,
                        n = r.rowCount,
                        s = this.state.instanceProps;
                    s.columnSizeAndPositionManager.getSizeAndPositionOfCell(i - 1), s.rowSizeAndPositionManager.getSizeAndPositionOfCell(n - 1)
                }
            }, {
                key: "recomputeGridSize",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
                        i = r.columnIndex,
                        n = i === void 0 ? 0 : i,
                        s = r.rowIndex,
                        l = s === void 0 ? 0 : s,
                        p = this.props,
                        d = p.scrollToColumn,
                        c = p.scrollToRow,
                        m = this.state.instanceProps;
                    m.columnSizeAndPositionManager.resetCell(n), m.rowSizeAndPositionManager.resetCell(l), this._recomputeScrollLeftFlag = d >= 0 && (this.state.scrollDirectionHorizontal === Ar.SCROLL_DIRECTION_FORWARD ? n <= d : n >= d), this._recomputeScrollTopFlag = c >= 0 && (this.state.scrollDirectionVertical === Ar.SCROLL_DIRECTION_FORWARD ? l <= c : l >= c), this._styleCache = {}, this._cellCache = {}, this.forceUpdate()
                }
            }, {
                key: "scrollToCell",
                value: function(r) {
                    var i = r.columnIndex,
                        n = r.rowIndex,
                        s = this.props.columnCount,
                        l = this.props;
                    s > 1 && i !== void 0 && this._updateScrollLeftForScrollToColumn(Sa({}, l, {
                        scrollToColumn: i
                    })), n !== void 0 && this._updateScrollTopForScrollToRow(Sa({}, l, {
                        scrollToRow: n
                    }))
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    var r = this.props,
                        i = r.getScrollbarSize,
                        n = r.height,
                        s = r.scrollLeft,
                        l = r.scrollToColumn,
                        p = r.scrollTop,
                        d = r.scrollToRow,
                        c = r.width,
                        m = this.state.instanceProps;
                    if (this._initialScrollTop = 0, this._initialScrollLeft = 0, this._handleInvalidatedGridSize(), m.scrollbarSizeMeasured || this.setState(function(h) {
                            var b = Sa({}, h, {
                                needToResetStyleCache: !1
                            });
                            return b.instanceProps.scrollbarSize = i(), b.instanceProps.scrollbarSizeMeasured = !0, b
                        }), typeof s == "number" && s >= 0 || typeof p == "number" && p >= 0) {
                        var u = o._getScrollToPositionStateUpdate({
                            prevState: this.state,
                            scrollLeft: s,
                            scrollTop: p
                        });
                        u && (u.needToResetStyleCache = !1, this.setState(u))
                    }
                    this._scrollingContainer && (this._scrollingContainer.scrollLeft !== this.state.scrollLeft && (this._scrollingContainer.scrollLeft = this.state.scrollLeft), this._scrollingContainer.scrollTop !== this.state.scrollTop && (this._scrollingContainer.scrollTop = this.state.scrollTop));
                    var g = n > 0 && c > 0;
                    l >= 0 && g && this._updateScrollLeftForScrollToColumn(), d >= 0 && g && this._updateScrollTopForScrollToRow(), this._invokeOnGridRenderedHelper(), this._invokeOnScrollMemoizer({
                        scrollLeft: s || 0,
                        scrollTop: p || 0,
                        totalColumnsWidth: m.columnSizeAndPositionManager.getTotalSize(),
                        totalRowsHeight: m.rowSizeAndPositionManager.getTotalSize()
                    }), this._maybeCallOnScrollbarPresenceChange()
                }
            }, {
                key: "componentDidUpdate",
                value: function(r, i) {
                    var n = this,
                        s = this.props,
                        l = s.autoHeight,
                        p = s.autoWidth,
                        d = s.columnCount,
                        c = s.height,
                        m = s.rowCount,
                        u = s.scrollToAlignment,
                        g = s.scrollToColumn,
                        h = s.scrollToRow,
                        b = s.width,
                        x = this.state,
                        S = x.scrollLeft,
                        v = x.scrollPositionChangeReason,
                        P = x.scrollTop,
                        C = x.instanceProps;
                    this._handleInvalidatedGridSize();
                    var k = d > 0 && r.columnCount === 0 || m > 0 && r.rowCount === 0;
                    v === zw.REQUESTED && (!p && S >= 0 && (S !== this._scrollingContainer.scrollLeft || k) && (this._scrollingContainer.scrollLeft = S), !l && P >= 0 && (P !== this._scrollingContainer.scrollTop || k) && (this._scrollingContainer.scrollTop = P));
                    var T = (r.width === 0 || r.height === 0) && c > 0 && b > 0;
                    if (this._recomputeScrollLeftFlag ? (this._recomputeScrollLeftFlag = !1, this._updateScrollLeftForScrollToColumn(this.props)) : (0, e3.default)({
                            cellSizeAndPositionManager: C.columnSizeAndPositionManager,
                            previousCellsCount: r.columnCount,
                            previousCellSize: r.columnWidth,
                            previousScrollToAlignment: r.scrollToAlignment,
                            previousScrollToIndex: r.scrollToColumn,
                            previousSize: r.width,
                            scrollOffset: S,
                            scrollToAlignment: u,
                            scrollToIndex: g,
                            size: b,
                            sizeJustIncreasedFromZero: T,
                            updateScrollIndexCallback: function() {
                                return n._updateScrollLeftForScrollToColumn(n.props)
                            }
                        }), this._recomputeScrollTopFlag ? (this._recomputeScrollTopFlag = !1, this._updateScrollTopForScrollToRow(this.props)) : (0, e3.default)({
                            cellSizeAndPositionManager: C.rowSizeAndPositionManager,
                            previousCellsCount: r.rowCount,
                            previousCellSize: r.rowHeight,
                            previousScrollToAlignment: r.scrollToAlignment,
                            previousScrollToIndex: r.scrollToRow,
                            previousSize: r.height,
                            scrollOffset: P,
                            scrollToAlignment: u,
                            scrollToIndex: h,
                            size: c,
                            sizeJustIncreasedFromZero: T,
                            updateScrollIndexCallback: function() {
                                return n._updateScrollTopForScrollToRow(n.props)
                            }
                        }), this._invokeOnGridRenderedHelper(), S !== i.scrollLeft || P !== i.scrollTop) {
                        var R = C.rowSizeAndPositionManager.getTotalSize(),
                            I = C.columnSizeAndPositionManager.getTotalSize();
                        this._invokeOnScrollMemoizer({
                            scrollLeft: S,
                            scrollTop: P,
                            totalColumnsWidth: I,
                            totalRowsHeight: R
                        })
                    }
                    this._maybeCallOnScrollbarPresenceChange()
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    this._disablePointerEventsTimeoutId && (0, Rw.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId)
                }
            }, {
                key: "render",
                value: function() {
                    var r = this.props,
                        i = r.autoContainerWidth,
                        n = r.autoHeight,
                        s = r.autoWidth,
                        l = r.className,
                        p = r.containerProps,
                        d = r.containerRole,
                        c = r.containerStyle,
                        m = r.height,
                        u = r.id,
                        g = r.noContentRenderer,
                        h = r.role,
                        b = r.style,
                        x = r.tabIndex,
                        S = r.width,
                        v = this.state,
                        P = v.instanceProps,
                        C = v.needToResetStyleCache,
                        k = this._isScrolling(),
                        T = {
                            boxSizing: "border-box",
                            direction: "ltr",
                            height: n ? "auto" : m,
                            position: "relative",
                            width: s ? "auto" : S,
                            WebkitOverflowScrolling: "touch",
                            willChange: "transform"
                        };
                    C && (this._styleCache = {}), this.state.isScrolling || this._resetStyleCache(), this._calculateChildrenToRender(this.props, this.state);
                    var R = P.columnSizeAndPositionManager.getTotalSize(),
                        I = P.rowSizeAndPositionManager.getTotalSize(),
                        B = I > m ? P.scrollbarSize : 0,
                        L = R > S ? P.scrollbarSize : 0;
                    (L !== this._horizontalScrollBarSize || B !== this._verticalScrollBarSize) && (this._horizontalScrollBarSize = L, this._verticalScrollBarSize = B, this._scrollbarPresenceChanged = !0), T.overflowX = R + B <= S ? "hidden" : "auto", T.overflowY = I + L <= m ? "hidden" : "auto";
                    var D = this._childrenToDisplay,
                        E = D.length === 0 && m > 0 && S > 0;
                    return Bw.createElement("div", (0, iL.default)({
                        ref: this._setScrollingContainerRef
                    }, p, {
                        "aria-label": this.props["aria-label"],
                        "aria-readonly": this.props["aria-readonly"],
                        className: (0, pL.default)("ReactVirtualized__Grid", l),
                        id: u,
                        onScroll: this._onScroll,
                        role: h,
                        style: Sa({}, T, {}, b),
                        tabIndex: x
                    }), D.length > 0 && Bw.createElement("div", {
                        className: "ReactVirtualized__Grid__innerScrollContainer",
                        role: d,
                        style: Sa({
                            width: i ? "auto" : R,
                            height: I,
                            maxWidth: R,
                            maxHeight: I,
                            overflow: "hidden",
                            pointerEvents: k ? "none" : "",
                            position: "relative"
                        }, c)
                    }, D), E && g())
                }
            }, {
                key: "_calculateChildrenToRender",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props,
                        i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state,
                        n = r.cellRenderer,
                        s = r.cellRangeRenderer,
                        l = r.columnCount,
                        p = r.deferredMeasurementCache,
                        d = r.height,
                        c = r.overscanColumnCount,
                        m = r.overscanIndicesGetter,
                        u = r.overscanRowCount,
                        g = r.rowCount,
                        h = r.width,
                        b = r.isScrollingOptOut,
                        x = i.scrollDirectionHorizontal,
                        S = i.scrollDirectionVertical,
                        v = i.instanceProps,
                        P = this._initialScrollTop > 0 ? this._initialScrollTop : i.scrollTop,
                        C = this._initialScrollLeft > 0 ? this._initialScrollLeft : i.scrollLeft,
                        k = this._isScrolling(r, i);
                    if (this._childrenToDisplay = [], d > 0 && h > 0) {
                        var T = v.columnSizeAndPositionManager.getVisibleCellRange({
                                containerSize: h,
                                offset: C
                            }),
                            R = v.rowSizeAndPositionManager.getVisibleCellRange({
                                containerSize: d,
                                offset: P
                            }),
                            I = v.columnSizeAndPositionManager.getOffsetAdjustment({
                                containerSize: h,
                                offset: C
                            }),
                            B = v.rowSizeAndPositionManager.getOffsetAdjustment({
                                containerSize: d,
                                offset: P
                            });
                        this._renderedColumnStartIndex = T.start, this._renderedColumnStopIndex = T.stop, this._renderedRowStartIndex = R.start, this._renderedRowStopIndex = R.stop;
                        var L = m({
                                direction: "horizontal",
                                cellCount: l,
                                overscanCellsCount: c,
                                scrollDirection: x,
                                startIndex: typeof T.start == "number" ? T.start : 0,
                                stopIndex: typeof T.stop == "number" ? T.stop : -1
                            }),
                            D = m({
                                direction: "vertical",
                                cellCount: g,
                                overscanCellsCount: u,
                                scrollDirection: S,
                                startIndex: typeof R.start == "number" ? R.start : 0,
                                stopIndex: typeof R.stop == "number" ? R.stop : -1
                            }),
                            E = L.overscanStartIndex,
                            $ = L.overscanStopIndex,
                            G = D.overscanStartIndex,
                            de = D.overscanStopIndex;
                        if (p) {
                            if (!p.hasFixedHeight()) {
                                for (var Q = G; Q <= de; Q++)
                                    if (!p.has(Q, 0)) {
                                        E = 0, $ = l - 1;
                                        break
                                    }
                            }
                            if (!p.hasFixedWidth()) {
                                for (var U = E; U <= $; U++)
                                    if (!p.has(0, U)) {
                                        G = 0, de = g - 1;
                                        break
                                    }
                            }
                        }
                        this._childrenToDisplay = s({
                            cellCache: this._cellCache,
                            cellRenderer: n,
                            columnSizeAndPositionManager: v.columnSizeAndPositionManager,
                            columnStartIndex: E,
                            columnStopIndex: $,
                            deferredMeasurementCache: p,
                            horizontalOffsetAdjustment: I,
                            isScrolling: k,
                            isScrollingOptOut: b,
                            parent: this,
                            rowSizeAndPositionManager: v.rowSizeAndPositionManager,
                            rowStartIndex: G,
                            rowStopIndex: de,
                            scrollLeft: C,
                            scrollTop: P,
                            styleCache: this._styleCache,
                            verticalOffsetAdjustment: B,
                            visibleColumnIndices: T,
                            visibleRowIndices: R
                        }), this._columnStartIndex = E, this._columnStopIndex = $, this._rowStartIndex = G, this._rowStopIndex = de
                    }
                }
            }, {
                key: "_debounceScrollEnded",
                value: function() {
                    var r = this.props.scrollingResetTimeInterval;
                    this._disablePointerEventsTimeoutId && (0, Rw.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId), this._disablePointerEventsTimeoutId = (0, Rw.requestAnimationTimeout)(this._debounceScrollEndedCallback, r)
                }
            }, {
                key: "_handleInvalidatedGridSize",
                value: function() {
                    if (typeof this._deferredInvalidateColumnIndex == "number" && typeof this._deferredInvalidateRowIndex == "number") {
                        var r = this._deferredInvalidateColumnIndex,
                            i = this._deferredInvalidateRowIndex;
                        this._deferredInvalidateColumnIndex = null, this._deferredInvalidateRowIndex = null, this.recomputeGridSize({
                            columnIndex: r,
                            rowIndex: i
                        })
                    }
                }
            }, {
                key: "_invokeOnScrollMemoizer",
                value: function(r) {
                    var i = this,
                        n = r.scrollLeft,
                        s = r.scrollTop,
                        l = r.totalColumnsWidth,
                        p = r.totalRowsHeight;
                    this._onScrollMemoizer({
                        callback: function(c) {
                            var m = c.scrollLeft,
                                u = c.scrollTop,
                                g = i.props,
                                h = g.height,
                                b = g.onScroll,
                                x = g.width;
                            b({
                                clientHeight: h,
                                clientWidth: x,
                                scrollHeight: p,
                                scrollLeft: m,
                                scrollTop: u,
                                scrollWidth: l
                            })
                        },
                        indices: {
                            scrollLeft: n,
                            scrollTop: s
                        }
                    })
                }
            }, {
                key: "_isScrolling",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props,
                        i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;
                    return Object.hasOwnProperty.call(r, "isScrolling") ? !!r.isScrolling : !!i.isScrolling
                }
            }, {
                key: "_maybeCallOnScrollbarPresenceChange",
                value: function() {
                    if (this._scrollbarPresenceChanged) {
                        var r = this.props.onScrollbarPresenceChange;
                        this._scrollbarPresenceChanged = !1, r({
                            horizontal: this._horizontalScrollBarSize > 0,
                            size: this.state.instanceProps.scrollbarSize,
                            vertical: this._verticalScrollBarSize > 0
                        })
                    }
                }
            }, {
                key: "scrollToPosition",
                value: function(r) {
                    var i = r.scrollLeft,
                        n = r.scrollTop,
                        s = o._getScrollToPositionStateUpdate({
                            prevState: this.state,
                            scrollLeft: i,
                            scrollTop: n
                        });
                    s && (s.needToResetStyleCache = !1, this.setState(s))
                }
            }, {
                key: "_getCalculatedScrollLeft",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props,
                        i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;
                    return o._getCalculatedScrollLeft(r, i)
                }
            }, {
                key: "_updateScrollLeftForScrollToColumn",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props,
                        i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state,
                        n = o._getScrollLeftForScrollToColumnStateUpdate(r, i);
                    n && (n.needToResetStyleCache = !1, this.setState(n))
                }
            }, {
                key: "_getCalculatedScrollTop",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props,
                        i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;
                    return o._getCalculatedScrollTop(r, i)
                }
            }, {
                key: "_resetStyleCache",
                value: function() {
                    var r = this._styleCache,
                        i = this._cellCache,
                        n = this.props.isScrollingOptOut;
                    this._cellCache = {}, this._styleCache = {};
                    for (var s = this._rowStartIndex; s <= this._rowStopIndex; s++)
                        for (var l = this._columnStartIndex; l <= this._columnStopIndex; l++) {
                            var p = "".concat(s, "-").concat(l);
                            this._styleCache[p] = r[p], n && (this._cellCache[p] = i[p])
                        }
                }
            }, {
                key: "_updateScrollTopForScrollToRow",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props,
                        i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state,
                        n = o._getScrollTopForScrollToRowStateUpdate(r, i);
                    n && (n.needToResetStyleCache = !1, this.setState(n))
                }
            }], [{
                key: "getDerivedStateFromProps",
                value: function(r, i) {
                    var n = {};
                    r.columnCount === 0 && i.scrollLeft !== 0 || r.rowCount === 0 && i.scrollTop !== 0 ? (n.scrollLeft = 0, n.scrollTop = 0) : (r.scrollLeft !== i.scrollLeft && r.scrollToColumn < 0 || r.scrollTop !== i.scrollTop && r.scrollToRow < 0) && Object.assign(n, o._getScrollToPositionStateUpdate({
                        prevState: i,
                        scrollLeft: r.scrollLeft,
                        scrollTop: r.scrollTop
                    }));
                    var s = i.instanceProps;
                    n.needToResetStyleCache = !1, (r.columnWidth !== s.prevColumnWidth || r.rowHeight !== s.prevRowHeight) && (n.needToResetStyleCache = !0), s.columnSizeAndPositionManager.configure({
                        cellCount: r.columnCount,
                        estimatedCellSize: o._getEstimatedColumnSize(r),
                        cellSizeGetter: o._wrapSizeGetter(r.columnWidth)
                    }), s.rowSizeAndPositionManager.configure({
                        cellCount: r.rowCount,
                        estimatedCellSize: o._getEstimatedRowSize(r),
                        cellSizeGetter: o._wrapSizeGetter(r.rowHeight)
                    }), (s.prevColumnCount === 0 || s.prevRowCount === 0) && (s.prevColumnCount = 0, s.prevRowCount = 0), r.autoHeight && r.isScrolling === !1 && s.prevIsScrolling === !0 && Object.assign(n, {
                        isScrolling: !1
                    });
                    var l, p;
                    return (0, ZP.default)({
                        cellCount: s.prevColumnCount,
                        cellSize: typeof s.prevColumnWidth == "number" ? s.prevColumnWidth : null,
                        computeMetadataCallback: function() {
                            return s.columnSizeAndPositionManager.resetCell(0)
                        },
                        computeMetadataCallbackProps: r,
                        nextCellsCount: r.columnCount,
                        nextCellSize: typeof r.columnWidth == "number" ? r.columnWidth : null,
                        nextScrollToIndex: r.scrollToColumn,
                        scrollToIndex: s.prevScrollToColumn,
                        updateScrollOffsetForScrollToIndex: function() {
                            l = o._getScrollLeftForScrollToColumnStateUpdate(r, i)
                        }
                    }), (0, ZP.default)({
                        cellCount: s.prevRowCount,
                        cellSize: typeof s.prevRowHeight == "number" ? s.prevRowHeight : null,
                        computeMetadataCallback: function() {
                            return s.rowSizeAndPositionManager.resetCell(0)
                        },
                        computeMetadataCallbackProps: r,
                        nextCellsCount: r.rowCount,
                        nextCellSize: typeof r.rowHeight == "number" ? r.rowHeight : null,
                        nextScrollToIndex: r.scrollToRow,
                        scrollToIndex: s.prevScrollToRow,
                        updateScrollOffsetForScrollToIndex: function() {
                            p = o._getScrollTopForScrollToRowStateUpdate(r, i)
                        }
                    }), s.prevColumnCount = r.columnCount, s.prevColumnWidth = r.columnWidth, s.prevIsScrolling = r.isScrolling === !0, s.prevRowCount = r.rowCount, s.prevRowHeight = r.rowHeight, s.prevScrollToColumn = r.scrollToColumn, s.prevScrollToRow = r.scrollToRow, s.scrollbarSize = r.getScrollbarSize(), s.scrollbarSize === void 0 ? (s.scrollbarSizeMeasured = !1, s.scrollbarSize = 0) : s.scrollbarSizeMeasured = !0, n.instanceProps = s, Sa({}, n, {}, l, {}, p)
                }
            }, {
                key: "_getEstimatedColumnSize",
                value: function(r) {
                    return typeof r.columnWidth == "number" ? r.columnWidth : r.estimatedColumnSize
                }
            }, {
                key: "_getEstimatedRowSize",
                value: function(r) {
                    return typeof r.rowHeight == "number" ? r.rowHeight : r.estimatedRowSize
                }
            }, {
                key: "_getScrollToPositionStateUpdate",
                value: function(r) {
                    var i = r.prevState,
                        n = r.scrollLeft,
                        s = r.scrollTop,
                        l = {
                            scrollPositionChangeReason: zw.REQUESTED
                        };
                    return typeof n == "number" && n >= 0 && (l.scrollDirectionHorizontal = n > i.scrollLeft ? Ar.SCROLL_DIRECTION_FORWARD : Ar.SCROLL_DIRECTION_BACKWARD, l.scrollLeft = n), typeof s == "number" && s >= 0 && (l.scrollDirectionVertical = s > i.scrollTop ? Ar.SCROLL_DIRECTION_FORWARD : Ar.SCROLL_DIRECTION_BACKWARD, l.scrollTop = s), typeof n == "number" && n >= 0 && n !== i.scrollLeft || typeof s == "number" && s >= 0 && s !== i.scrollTop ? l : {}
                }
            }, {
                key: "_wrapSizeGetter",
                value: function(r) {
                    return typeof r == "function" ? r : function() {
                        return r
                    }
                }
            }, {
                key: "_getCalculatedScrollLeft",
                value: function(r, i) {
                    var n = r.columnCount,
                        s = r.height,
                        l = r.scrollToAlignment,
                        p = r.scrollToColumn,
                        d = r.width,
                        c = i.scrollLeft,
                        m = i.instanceProps;
                    if (n > 0) {
                        var u = n - 1,
                            g = p < 0 ? u : Math.min(u, p),
                            h = m.rowSizeAndPositionManager.getTotalSize(),
                            b = m.scrollbarSizeMeasured && h > s ? m.scrollbarSize : 0;
                        return m.columnSizeAndPositionManager.getUpdatedOffsetForIndex({
                            align: l,
                            containerSize: d - b,
                            currentOffset: c,
                            targetIndex: g
                        })
                    }
                    return 0
                }
            }, {
                key: "_getScrollLeftForScrollToColumnStateUpdate",
                value: function(r, i) {
                    var n = i.scrollLeft,
                        s = o._getCalculatedScrollLeft(r, i);
                    return typeof s == "number" && s >= 0 && n !== s ? o._getScrollToPositionStateUpdate({
                        prevState: i,
                        scrollLeft: s,
                        scrollTop: -1
                    }) : {}
                }
            }, {
                key: "_getCalculatedScrollTop",
                value: function(r, i) {
                    var n = r.height,
                        s = r.rowCount,
                        l = r.scrollToAlignment,
                        p = r.scrollToRow,
                        d = r.width,
                        c = i.scrollTop,
                        m = i.instanceProps;
                    if (s > 0) {
                        var u = s - 1,
                            g = p < 0 ? u : Math.min(u, p),
                            h = m.columnSizeAndPositionManager.getTotalSize(),
                            b = m.scrollbarSizeMeasured && h > d ? m.scrollbarSize : 0;
                        return m.rowSizeAndPositionManager.getUpdatedOffsetForIndex({
                            align: l,
                            containerSize: n - b,
                            currentOffset: c,
                            targetIndex: g
                        })
                    }
                    return 0
                }
            }, {
                key: "_getScrollTopForScrollToRowStateUpdate",
                value: function(r, i) {
                    var n = i.scrollTop,
                        s = o._getCalculatedScrollTop(r, i);
                    return typeof s == "number" && s >= 0 && n !== s ? o._getScrollToPositionStateUpdate({
                        prevState: i,
                        scrollLeft: -1,
                        scrollTop: s
                    }) : {}
                }
            }]), o
        }(Bw.PureComponent), (0, yt.default)(t3, "propTypes", null), o3);
    (0, yt.default)(Ew, "defaultProps", {
        "aria-label": "grid",
        "aria-readonly": !0,
        autoContainerWidth: !1,
        autoHeight: !1,
        autoWidth: !1,
        cellRangeRenderer: dL.default,
        containerRole: "rowgroup",
        containerStyle: {},
        estimatedColumnSize: 100,
        estimatedRowSize: 30,
        getScrollbarSize: uL.default,
        noContentRenderer: gL,
        onScroll: function() {},
        onScrollbarPresenceChange: function() {},
        onSectionRendered: function() {},
        overscanColumnCount: 0,
        overscanIndicesGetter: Ar.default,
        overscanRowCount: 10,
        role: "grid",
        scrollingResetTimeInterval: n3,
        scrollToAlignment: "auto",
        scrollToColumn: -1,
        scrollToRow: -1,
        style: {},
        tabIndex: 0,
        isScrollingOptOut: !1
    });
    (0, mL.polyfill)(Ew);
    var hL = Ew;
    lc.default = hL
});
var l3 = qe(_i => {
    "use strict";
    Object.defineProperty(_i, "__esModule", {
        value: !0
    });
    _i.default = xL;
    _i.SCROLL_DIRECTION_VERTICAL = _i.SCROLL_DIRECTION_HORIZONTAL = _i.SCROLL_DIRECTION_FORWARD = _i.SCROLL_DIRECTION_BACKWARD = void 0;
    var I_e = _n(),
        fL = -1;
    _i.SCROLL_DIRECTION_BACKWARD = fL;
    var a3 = 1;
    _i.SCROLL_DIRECTION_FORWARD = a3;
    var bL = "horizontal";
    _i.SCROLL_DIRECTION_HORIZONTAL = bL;
    var wL = "vertical";
    _i.SCROLL_DIRECTION_VERTICAL = wL;

    function xL(e) {
        var o = e.cellCount,
            t = e.overscanCellsCount,
            r = e.scrollDirection,
            i = e.startIndex,
            n = e.stopIndex;
        return t = Math.max(1, t), r === a3 ? {
            overscanStartIndex: Math.max(0, i - 1),
            overscanStopIndex: Math.min(o - 1, n + t)
        } : {
            overscanStartIndex: Math.max(0, i - t),
            overscanStopIndex: Math.min(o - 1, n + 1)
        }
    }
});
var p3 = qe(er => {
    "use strict";
    var Lg = fr();
    Object.defineProperty(er, "__esModule", {
        value: !0
    });
    Object.defineProperty(er, "default", {
        enumerable: !0,
        get: function() {
            return c3.default
        }
    });
    Object.defineProperty(er, "Grid", {
        enumerable: !0,
        get: function() {
            return c3.default
        }
    });
    Object.defineProperty(er, "accessibilityOverscanIndicesGetter", {
        enumerable: !0,
        get: function() {
            return vL.default
        }
    });
    Object.defineProperty(er, "defaultCellRangeRenderer", {
        enumerable: !0,
        get: function() {
            return yL.default
        }
    });
    Object.defineProperty(er, "defaultOverscanIndicesGetter", {
        enumerable: !0,
        get: function() {
            return kL.default
        }
    });
    Object.defineProperty(er, "bpfrpt_proptype_NoContentRenderer", {
        enumerable: !0,
        get: function() {
            return ws.bpfrpt_proptype_NoContentRenderer
        }
    });
    Object.defineProperty(er, "bpfrpt_proptype_Alignment", {
        enumerable: !0,
        get: function() {
            return ws.bpfrpt_proptype_Alignment
        }
    });
    Object.defineProperty(er, "bpfrpt_proptype_CellPosition", {
        enumerable: !0,
        get: function() {
            return ws.bpfrpt_proptype_CellPosition
        }
    });
    Object.defineProperty(er, "bpfrpt_proptype_CellSize", {
        enumerable: !0,
        get: function() {
            return ws.bpfrpt_proptype_CellSize
        }
    });
    Object.defineProperty(er, "bpfrpt_proptype_OverscanIndicesGetter", {
        enumerable: !0,
        get: function() {
            return ws.bpfrpt_proptype_OverscanIndicesGetter
        }
    });
    Object.defineProperty(er, "bpfrpt_proptype_RenderedSection", {
        enumerable: !0,
        get: function() {
            return ws.bpfrpt_proptype_RenderedSection
        }
    });
    Object.defineProperty(er, "bpfrpt_proptype_CellRendererParams", {
        enumerable: !0,
        get: function() {
            return ws.bpfrpt_proptype_CellRendererParams
        }
    });
    Object.defineProperty(er, "bpfrpt_proptype_Scroll", {
        enumerable: !0,
        get: function() {
            return ws.bpfrpt_proptype_Scroll
        }
    });
    var c3 = Lg(s3()),
        vL = Lg(l3()),
        yL = Lg(Tw()),
        kL = Lg(Cw()),
        ws = _n()
});
var Aw = qe(Gi => {
    "use strict";
    var _L = fr(),
        CL = oc();
    Object.defineProperty(Gi, "__esModule", {
        value: !0
    });
    Gi.bpfrpt_proptype_Scroll = Gi.bpfrpt_proptype_RenderedRows = Gi.bpfrpt_proptype_RowRenderer = Gi.bpfrpt_proptype_RowRendererParams = void 0;
    var R_e = CL(F()),
        z_e = _L(el()),
        SL = null;
    Gi.bpfrpt_proptype_RowRendererParams = SL;
    var PL = null;
    Gi.bpfrpt_proptype_RowRenderer = PL;
    var TL = null;
    Gi.bpfrpt_proptype_RenderedRows = TL;
    var IL = null;
    Gi.bpfrpt_proptype_Scroll = IL
});
var b3 = qe(Og => {
    "use strict";
    var ji = fr(),
        g3 = oc();
    Object.defineProperty(Og, "__esModule", {
        value: !0
    });
    Og.default = void 0;
    var ML = ji(hw()),
        BL = ji(rc()),
        RL = ji(ic()),
        zL = ji(Tg()),
        EL = ji(Ig()),
        Kp = ji(Wp()),
        AL = ji(Mg()),
        Pa = ji(nc()),
        h3 = g3(p3()),
        d3 = g3(F()),
        DL = ji(vw()),
        A_e = Aw(),
        D_e = ji(el()),
        u3, m3, f3 = (m3 = u3 = function(e) {
            (0, AL.default)(o, e);

            function o() {
                var t, r;
                (0, BL.default)(this, o);
                for (var i = arguments.length, n = new Array(i), s = 0; s < i; s++) n[s] = arguments[s];
                return r = (0, zL.default)(this, (t = (0, EL.default)(o)).call.apply(t, [this].concat(n))), (0, Pa.default)((0, Kp.default)(r), "Grid", void 0), (0, Pa.default)((0, Kp.default)(r), "_cellRenderer", function(l) {
                    var p = l.parent,
                        d = l.rowIndex,
                        c = l.style,
                        m = l.isScrolling,
                        u = l.isVisible,
                        g = l.key,
                        h = r.props.rowRenderer,
                        b = Object.getOwnPropertyDescriptor(c, "width");
                    return b && b.writable && (c.width = "100%"), h({
                        index: d,
                        style: c,
                        isScrolling: m,
                        isVisible: u,
                        key: g,
                        parent: p
                    })
                }), (0, Pa.default)((0, Kp.default)(r), "_setRef", function(l) {
                    r.Grid = l
                }), (0, Pa.default)((0, Kp.default)(r), "_onScroll", function(l) {
                    var p = l.clientHeight,
                        d = l.scrollHeight,
                        c = l.scrollTop,
                        m = r.props.onScroll;
                    m({
                        clientHeight: p,
                        scrollHeight: d,
                        scrollTop: c
                    })
                }), (0, Pa.default)((0, Kp.default)(r), "_onSectionRendered", function(l) {
                    var p = l.rowOverscanStartIndex,
                        d = l.rowOverscanStopIndex,
                        c = l.rowStartIndex,
                        m = l.rowStopIndex,
                        u = r.props.onRowsRendered;
                    u({
                        overscanStartIndex: p,
                        overscanStopIndex: d,
                        startIndex: c,
                        stopIndex: m
                    })
                }), r
            }
            return (0, RL.default)(o, [{
                key: "forceUpdateGrid",
                value: function() {
                    this.Grid && this.Grid.forceUpdate()
                }
            }, {
                key: "getOffsetForRow",
                value: function(r) {
                    var i = r.alignment,
                        n = r.index;
                    if (this.Grid) {
                        var s = this.Grid.getOffsetForCell({
                                alignment: i,
                                rowIndex: n,
                                columnIndex: 0
                            }),
                            l = s.scrollTop;
                        return l
                    }
                    return 0
                }
            }, {
                key: "invalidateCellSizeAfterRender",
                value: function(r) {
                    var i = r.columnIndex,
                        n = r.rowIndex;
                    this.Grid && this.Grid.invalidateCellSizeAfterRender({
                        rowIndex: n,
                        columnIndex: i
                    })
                }
            }, {
                key: "measureAllRows",
                value: function() {
                    this.Grid && this.Grid.measureAllCells()
                }
            }, {
                key: "recomputeGridSize",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
                        i = r.columnIndex,
                        n = i === void 0 ? 0 : i,
                        s = r.rowIndex,
                        l = s === void 0 ? 0 : s;
                    this.Grid && this.Grid.recomputeGridSize({
                        rowIndex: l,
                        columnIndex: n
                    })
                }
            }, {
                key: "recomputeRowHeights",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    this.Grid && this.Grid.recomputeGridSize({
                        rowIndex: r,
                        columnIndex: 0
                    })
                }
            }, {
                key: "scrollToPosition",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    this.Grid && this.Grid.scrollToPosition({
                        scrollTop: r
                    })
                }
            }, {
                key: "scrollToRow",
                value: function() {
                    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    this.Grid && this.Grid.scrollToCell({
                        columnIndex: 0,
                        rowIndex: r
                    })
                }
            }, {
                key: "render",
                value: function() {
                    var r = this.props,
                        i = r.className,
                        n = r.noRowsRenderer,
                        s = r.scrollToIndex,
                        l = r.width,
                        p = (0, DL.default)("ReactVirtualized__List", i);
                    return d3.createElement(h3.default, (0, ML.default)({}, this.props, {
                        autoContainerWidth: !0,
                        cellRenderer: this._cellRenderer,
                        className: p,
                        columnWidth: l,
                        columnCount: 1,
                        noContentRenderer: n,
                        onScroll: this._onScroll,
                        onSectionRendered: this._onSectionRendered,
                        ref: this._setRef,
                        scrollToRow: s
                    }))
                }
            }]), o
        }(d3.PureComponent), (0, Pa.default)(u3, "propTypes", null), m3);
    Og.default = f3;
    (0, Pa.default)(f3, "defaultProps", {
        autoHeight: !1,
        estimatedRowSize: 30,
        onScroll: function() {},
        noRowsRenderer: function() {
            return null
        },
        onRowsRendered: function() {},
        overscanIndicesGetter: h3.accessibilityOverscanIndicesGetter,
        overscanRowCount: 10,
        scrollToAlignment: "auto",
        scrollToIndex: -1,
        style: {}
    })
});
var x3 = qe(Zp => {
    "use strict";
    var LL = fr();
    Object.defineProperty(Zp, "__esModule", {
        value: !0
    });
    Object.defineProperty(Zp, "default", {
        enumerable: !0,
        get: function() {
            return w3.default
        }
    });
    Object.defineProperty(Zp, "List", {
        enumerable: !0,
        get: function() {
            return w3.default
        }
    });
    Object.defineProperty(Zp, "bpfrpt_proptype_RowRendererParams", {
        enumerable: !0,
        get: function() {
            return OL.bpfrpt_proptype_RowRendererParams
        }
    });
    var w3 = LL(b3()),
        OL = Aw()
});
var v3 = qe(Dw => {
    "use strict";
    Object.defineProperty(Dw, "__esModule", {
        value: !0
    });
    Dw.default = $L;

    function $L(e, o) {
        var t;
        typeof o < "u" ? t = o : typeof window < "u" ? t = window : typeof self < "u" ? t = self : t = window;
        var r = typeof t.document < "u" && t.document.attachEvent;
        if (!r) {
            var i = function() {
                    var R = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || function(I) {
                        return t.setTimeout(I, 20)
                    };
                    return function(I) {
                        return R(I)
                    }
                }(),
                n = function() {
                    var R = t.cancelAnimationFrame || t.mozCancelAnimationFrame || t.webkitCancelAnimationFrame || t.clearTimeout;
                    return function(I) {
                        return R(I)
                    }
                }(),
                s = function(I) {
                    var B = I.__resizeTriggers__,
                        L = B.firstElementChild,
                        D = B.lastElementChild,
                        E = L.firstElementChild;
                    D.scrollLeft = D.scrollWidth, D.scrollTop = D.scrollHeight, E.style.width = L.offsetWidth + 1 + "px", E.style.height = L.offsetHeight + 1 + "px", L.scrollLeft = L.scrollWidth, L.scrollTop = L.scrollHeight
                },
                l = function(I) {
                    return I.offsetWidth != I.__resizeLast__.width || I.offsetHeight != I.__resizeLast__.height
                },
                p = function(I) {
                    if (!(I.target.className && typeof I.target.className.indexOf == "function" && I.target.className.indexOf("contract-trigger") < 0 && I.target.className.indexOf("expand-trigger") < 0)) {
                        var B = this;
                        s(this), this.__resizeRAF__ && n(this.__resizeRAF__), this.__resizeRAF__ = i(function() {
                            l(B) && (B.__resizeLast__.width = B.offsetWidth, B.__resizeLast__.height = B.offsetHeight, B.__resizeListeners__.forEach(function(L) {
                                L.call(B, I)
                            }))
                        })
                    }
                },
                d = !1,
                c = "",
                m = "animationstart",
                u = "Webkit Moz O ms".split(" "),
                g = "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" "),
                h = ""; {
                var b = t.document.createElement("fakeelement");
                if (b.style.animationName !== void 0 && (d = !0), d === !1) {
                    for (var x = 0; x < u.length; x++)
                        if (b.style[u[x] + "AnimationName"] !== void 0) {
                            h = u[x], c = "-" + h.toLowerCase() + "-", m = g[x], d = !0;
                            break
                        }
                }
            }
            var S = "resizeanim",
                v = "@" + c + "keyframes " + S + " { from { opacity: 0; } to { opacity: 0; } } ",
                P = c + "animation: 1ms " + S + "; "
        }
        var C = function(I) {
                if (!I.getElementById("detectElementResize")) {
                    var B = (v || "") + ".resize-triggers { " + (P || "") + 'visibility: hidden; opacity: 0; } .resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',
                        L = I.head || I.getElementsByTagName("head")[0],
                        D = I.createElement("style");
                    D.id = "detectElementResize", D.type = "text/css", e != null && D.setAttribute("nonce", e), D.styleSheet ? D.styleSheet.cssText = B : D.appendChild(I.createTextNode(B)), L.appendChild(D)
                }
            },
            k = function(I, B) {
                if (r) I.attachEvent("onresize", B);
                else {
                    if (!I.__resizeTriggers__) {
                        var L = I.ownerDocument,
                            D = t.getComputedStyle(I);
                        D && D.position == "static" && (I.style.position = "relative"), C(L), I.__resizeLast__ = {}, I.__resizeListeners__ = [], (I.__resizeTriggers__ = L.createElement("div")).className = "resize-triggers";
                        var E = '<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>';
                        if (window.trustedTypes) {
                            var $ = trustedTypes.createPolicy("react-virtualized-auto-sizer", {
                                createHTML: function() {
                                    return E
                                }
                            });
                            I.__resizeTriggers__.innerHTML = $.createHTML("")
                        } else I.__resizeTriggers__.innerHTML = E;
                        I.appendChild(I.__resizeTriggers__), s(I), I.addEventListener("scroll", p, !0), m && (I.__resizeTriggers__.__animationListener__ = function(de) {
                            de.animationName == S && s(I)
                        }, I.__resizeTriggers__.addEventListener(m, I.__resizeTriggers__.__animationListener__))
                    }
                    I.__resizeListeners__.push(B)
                }
            },
            T = function(I, B) {
                if (r) I.detachEvent("onresize", B);
                else if (I.__resizeListeners__.splice(I.__resizeListeners__.indexOf(B), 1), !I.__resizeListeners__.length) {
                    I.removeEventListener("scroll", p, !0), I.__resizeTriggers__.__animationListener__ && (I.__resizeTriggers__.removeEventListener(m, I.__resizeTriggers__.__animationListener__), I.__resizeTriggers__.__animationListener__ = null);
                    try {
                        I.__resizeTriggers__ = !I.removeChild(I.__resizeTriggers__)
                    } catch {}
                }
            };
        return {
            addResizeListener: k,
            removeResizeListener: T
        }
    }
});
var P3 = qe($g => {
    "use strict";
    var Cn = fr(),
        HL = oc();
    Object.defineProperty($g, "__esModule", {
        value: !0
    });
    $g.default = void 0;
    var FL = Cn(rc()),
        NL = Cn(ic()),
        WL = Cn(Tg()),
        VL = Cn(Ig()),
        Ta = Cn(Wp()),
        UL = Cn(Mg()),
        qi = Cn(nc()),
        y3 = HL(F()),
        GL = Cn(v3()),
        H_e = Cn(el()),
        k3, _3;

    function C3(e, o) {
        var t = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            o && (r = r.filter(function(i) {
                return Object.getOwnPropertyDescriptor(e, i).enumerable
            })), t.push.apply(t, r)
        }
        return t
    }

    function jL(e) {
        for (var o = 1; o < arguments.length; o++) {
            var t = arguments[o] != null ? arguments[o] : {};
            o % 2 ? C3(t, !0).forEach(function(r) {
                (0, qi.default)(e, r, t[r])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : C3(t).forEach(function(r) {
                Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r))
            })
        }
        return e
    }
    var S3 = (_3 = k3 = function(e) {
        (0, UL.default)(o, e);

        function o() {
            var t, r;
            (0, FL.default)(this, o);
            for (var i = arguments.length, n = new Array(i), s = 0; s < i; s++) n[s] = arguments[s];
            return r = (0, WL.default)(this, (t = (0, VL.default)(o)).call.apply(t, [this].concat(n))), (0, qi.default)((0, Ta.default)(r), "state", {
                height: r.props.defaultHeight || 0,
                width: r.props.defaultWidth || 0
            }), (0, qi.default)((0, Ta.default)(r), "_parentNode", void 0), (0, qi.default)((0, Ta.default)(r), "_autoSizer", void 0), (0, qi.default)((0, Ta.default)(r), "_window", void 0), (0, qi.default)((0, Ta.default)(r), "_detectElementResize", void 0), (0, qi.default)((0, Ta.default)(r), "_onResize", function() {
                var l = r.props,
                    p = l.disableHeight,
                    d = l.disableWidth,
                    c = l.onResize;
                if (r._parentNode) {
                    var m = r._parentNode.offsetHeight || 0,
                        u = r._parentNode.offsetWidth || 0,
                        g = r._window || window,
                        h = g.getComputedStyle(r._parentNode) || {},
                        b = parseInt(h.paddingLeft, 10) || 0,
                        x = parseInt(h.paddingRight, 10) || 0,
                        S = parseInt(h.paddingTop, 10) || 0,
                        v = parseInt(h.paddingBottom, 10) || 0,
                        P = m - S - v,
                        C = u - b - x;
                    (!p && r.state.height !== P || !d && r.state.width !== C) && (r.setState({
                        height: m - S - v,
                        width: u - b - x
                    }), c({
                        height: m,
                        width: u
                    }))
                }
            }), (0, qi.default)((0, Ta.default)(r), "_setRef", function(l) {
                r._autoSizer = l
            }), r
        }
        return (0, NL.default)(o, [{
            key: "componentDidMount",
            value: function() {
                var r = this.props.nonce;
                this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement && (this._parentNode = this._autoSizer.parentNode, this._window = this._autoSizer.parentNode.ownerDocument.defaultView, this._detectElementResize = (0, GL.default)(r, this._window), this._detectElementResize.addResizeListener(this._parentNode, this._onResize), this._onResize())
            }
        }, {
            key: "componentWillUnmount",
            value: function() {
                this._detectElementResize && this._parentNode && this._detectElementResize.removeResizeListener(this._parentNode, this._onResize)
            }
        }, {
            key: "render",
            value: function() {
                var r = this.props,
                    i = r.children,
                    n = r.className,
                    s = r.disableHeight,
                    l = r.disableWidth,
                    p = r.style,
                    d = this.state,
                    c = d.height,
                    m = d.width,
                    u = {
                        overflow: "visible"
                    },
                    g = {};
                return s || (u.height = 0, g.height = c), l || (u.width = 0, g.width = m), y3.createElement("div", {
                    className: n,
                    ref: this._setRef,
                    style: jL({}, u, {}, p)
                }, i(g))
            }
        }]), o
    }(y3.Component), (0, qi.default)(k3, "propTypes", null), _3);
    $g.default = S3;
    (0, qi.default)(S3, "defaultProps", {
        onResize: function() {},
        disableHeight: !1,
        disableWidth: !1,
        style: {}
    })
});
var I3 = qe(Hg => {
    "use strict";
    var qL = fr();
    Object.defineProperty(Hg, "__esModule", {
        value: !0
    });
    Object.defineProperty(Hg, "default", {
        enumerable: !0,
        get: function() {
            return T3.default
        }
    });
    Object.defineProperty(Hg, "AutoSizer", {
        enumerable: !0,
        get: function() {
            return T3.default
        }
    });
    var T3 = qL(P3())
});
var r0 = M(Ht()),
    b6 = M(Mo());
Is();
var pe = M(Ht());
s0();
var Qi = M(Mo()),
    Ae = M(lt());
Co();
yd();
Lr();
ut();
$0();
Bo();
Hd();
var Ir = M(Ht()),
    Pk = M(Mo()),
    Te = M(lt());
Fd();
$o();
yd();
rf();
Ua();
Pu();
jI();
yh();
Bo();
qh();
wI();
var Tk = M(UI());
Bo();
$o();
Bo();
var J = M(lt());
Hd();
Kt();
Co();
nu();
var Ru = ["aboveAll", "frontFixed", "normal", "backFixed"],
    Ck = {
        aboveAll: [],
        frontFixed: [],
        normal: [],
        backFixed: []
    },
    Sk = (e, o) => {
        let t = !0;
        return J.default.each(De.viewports, r => {
            !!e[r.name] != !!o[r.name] && (t = !1)
        }), t && (J.default.each(e, (r, i) => {
            if (!o[i]) t = !1;
            else {
                let n = o[i];
                J.default.each(r, (s, l) => {
                    let p = n[l];
                    p.length !== s.length && (t = !1);
                    let d = J.default.flatten(s),
                        c = J.default.flatten(p);
                    J.default.each(d, (m, u) => {
                        c[u] !== m && (t = !1)
                    })
                })
            }
        }), t)
    },
    Pt = class Pt {
        constructor(o, t) {
            this.mag = t, this._order = {}, this._calculated = {}, Me.on("mag:loadfull:complete", () => {
                this.mag.pages.each(r => this._bindPageEvents(r)), this._updateCalculatedIndex(), this.mag.pages.on("add", r => {
                    this._fillInitialOrder(r), this._bindPageEvents(r), this._updateCalculatedIndex()
                }), this._snapshot = this._doSnapshop()
            })
        }
        _getModelFromMag(o) {
            let t;
            return this.mag.pages.each(r => {
                t || (t = r.widgets.get(o))
            }), t
        }
        static conditionalSet(o, t) {
            o && (Sk(o.get("order"), t) || o.set({
                order: JSON.parse(JSON.stringify(t))
            }, {
                silent: !0,
                skipHistory: !0
            }))
        }
        static conditionalSave(o, t, r = {}) {
            o && (!Sk(o.get("order"), t) || o.changed.order && !o._saveInProgress ? o.save({
                order: JSON.parse(JSON.stringify(t))
            }, {
                silent: !0,
                parse: !1,
                skipHistory: !0,
                ...r,
                patch: !0
            }) : r.success && r.success())
        }
        static getPartialOrder(o, t) {
            let r = {};
            return J.default.each(o, (i, n) => {
                r[n] = {}, J.default.each(i, (s, l) => {
                    r[n][l] = J.default.reduce(s, (p, d) => {
                        if (d instanceof Array) {
                            let c = J.default.filter(d, m => t.includes(m));
                            return c.length && p.push(c), p
                        }
                        return t.includes(d) && p.push(d), p
                    }, [])
                })
            }), r
        }
        static extendOrder(o, t) {
            J.default.each(o, (r, i) => {
                J.default.each(r, (n, s) => {
                    n.unshift((t[i] || t.default)[s])
                })
            })
        }
        static getWidgetOrder(o = [], t = {
            aboveAll: [],
            frontFixed: [],
            normal: [],
            backFixed: []
        }, r = "default") {
            let i = o.map(u => u.id),
                n = u => {
                    if (Array.isArray(u)) return u.length > 0 ? u.every(g => i.includes(g)) : !1; {
                        let g = u;
                        return i.includes(g)
                    }
                },
                {
                    aboveAll: s = [],
                    frontFixed: l = [],
                    normal: p = [],
                    backFixed: d = []
                } = t,
                c = J.default.flatten([...s, ...l, ...p, ...d]);
            if (J.default.difference(i, c).length === 0) return {
                aboveAll: s.filter(n),
                frontFixed: l.filter(n),
                normal: p.filter(n),
                backFixed: d.filter(n)
            }; {
                let u = o.map(v => ci({
                        target: v,
                        viewport: r,
                        pageId: v.get("pid")
                    })),
                    g = new Map;
                for (let v in t)
                    for (let P of J.default.flatten(t[v])) {
                        let C = u.find(T => T.get("_id") === P),
                            k = C ? C.get("pack_id") || C.get("_id") : P;
                        g.set(k, v)
                    }
                let h = J.default.sortBy(u, v => v.get("z") * -1),
                    b = h.reduce((v, P) => {
                        let C = P.get("pack_id"),
                            k = P.get("_id");
                        return C && Array.isArray(v[C]) ? v[C].push(k) : C && (v[C] = [k]), v
                    }, {}),
                    x = h.reduce((v, P) => {
                        let C = P.get("pack_id") || P.get("_id");
                        if (P.get("is_above")) v.aboveAll.push(C);
                        else if (P.get("fixed_position")) {
                            let k = g.get(C);
                            ["frontFixed", "backFixed"].includes(k) ? v[k].push(C) : v.normal.length === 0 ? v.frontFixed.push(C) : v.backFixed.push(C)
                        } else v.normal.push(C);
                        return v
                    }, {
                        aboveAll: [],
                        frontFixed: [],
                        normal: [],
                        backFixed: []
                    }),
                    S = v => v in b ? b[v] : v;
                return {
                    aboveAll: J.default.unique(x.aboveAll).map(S),
                    frontFixed: J.default.unique(x.frontFixed).map(S),
                    normal: J.default.unique(x.normal).map(S),
                    backFixed: J.default.unique(x.backFixed).map(S)
                }
            }
        }
        static getCorrectedOrderForPage({
            mixedWidgets: o,
            pageOrder: t,
            addViewports: r = [],
            viewportsForCorrection: i = ["default", "tablet_portrait", "phone_portrait"]
        }) {
            let n = J.default.compact(dh(o, "id").map(p => p ? .get("type") !== "background" ? p : null)),
                s = dh([...Object.keys(t), ...r]),
                l = {};
            for (let p of s) {
                let d = t[p] ? nt(t[p]) : nt(Ck);
                i.includes(p) ? l[p] = Pt.getWidgetOrder(n, d, p) : l[p] = d
            }
            return l
        }
        static getAttributeForViewport(o, t, r) {
            return ci({
                target: o,
                viewport: t,
                pageId: o.get("pid")
            }).get(r)
        }
        getFullOrder() {
            return this._order
        }
        _fillNewViewport(o, t) {
            let r = o.get("_id"),
                i = {};
            this._order[r][t] = i;
            let n = {},
                s = this.mag.pages.find(p => p !== o && p.getViewportParam(t, "enabled") && this._order[p.get("_id")] && this._order[p.get("_id")][t]);
            J.default.each(this._order[r].default, (p, d) => {
                if (d === "aboveAll" && s) {
                    i[d] = J.default.clone(this._order[s.get("_id")][t].aboveAll);
                    return
                }
                i[d] = [];
                let c = i[d];
                J.default.each(J.default.flatten(p), m => {
                    let u = this._getModelFromMag(m);
                    if (!u) return;
                    let g = this.getValueForViewport(u, t, "pack_id", !0),
                        h = !!this.getValueForViewport(u, t, "fixed_position", !0);
                    g ? (n[g] || (n[g] = [], h && d === "normal" ? (i.frontFixed = i.frontFixed || [], i.frontFixed.push(n[g])) : !h && (d === "frontFixed" || d === "backFixed") ? (i.normal = i.normal || [], i.normal.push(n[g])) : c.push(n[g])), n[g].push(m)) : h && d === "normal" ? (i.frontFixed = i.frontFixed || [], i.frontFixed.push(m)) : !h && (d === "frontFixed" || d === "backFixed") ? (i.normal = i.normal || [], i.normal.push(m)) : c.push(m)
                })
            });
            let l = p => {
                J.default.each(p, d => {
                    J.default.each(d, c => {
                        c.widgetsOrder[r] && (c.widgetsOrder[r][t] = JSON.parse(JSON.stringify(i)))
                    })
                })
            };
            l($t.undoStacks), l($t.redoStacks)
        }
        _fillInitialOrder(o) {
            let t = o.get("order"),
                r = J.default.flatten([].concat(t.default.aboveAll, t.default.frontFixed, t.default.normal, t.default.backFixed)),
                i = {};
            this.mag.pages.each(d => d.widgets.each(c => {
                c.get("is_global") && c.get("originId") && (i[c.get("originId")] = c.get("_id"))
            })), J.default.each(t, d => {
                J.default.each(d, c => {
                    J.default.each(c, (m, u) => {
                        m instanceof Array ? c[u] = m.map(g => i[g] || g) : c[u] = i[m] || m
                    })
                })
            });
            let n = J.default.filter(J.default.map(this.getGlobalWids(), d => d.id), d => !r.includes(d)),
                s = this.mag.pages.find(d => d.get("num") === 1),
                l = this.getOrder(s, "default");
            J.default.each(Ru, d => {
                l[d] = J.default.filter(l[d], c => c instanceof Array ? !!J.default.compact(J.default.map(c, m => n.includes(m) ? !0 : null)).length : n.includes(c))
            }), J.default.each(t, d => {
                J.default.each(d, (c, m) => {
                    c.splice.apply(c, [0, 0].concat(l[m]))
                })
            }), Pt.conditionalSet(o, t), Pt.conditionalSave(o, t);
            let p = d => {
                J.default.each(d, c => {
                    J.default.each(c, m => {
                        m.widgetsOrder[o.get("_id")] = JSON.parse(JSON.stringify(o.get("order")))
                    })
                })
            };
            p($t.undoStacks), p($t.redoStacks)
        }
        _bindPageEvents(o) {
            if (!this._order[o.get("_id")]) {
                let r = o.getViewportParam("tablet_portrait", "enabled"),
                    i = o.getViewportParam("phone_portrait", "enabled"),
                    n = ["default"];
                r && n.push("tablet_portrait"), i && n.push("phone_portrait");
                let s = Pt.getCorrectedOrderForPage({
                    mixedWidgets: [...this.mag.globalWidgets, ...o.widgets],
                    pageOrder: o.get("order"),
                    addViewports: n
                });
                this._order[o.get("_id")] = nt(s)
            }
            o.on("widget:remove", (r, i) => {
                i.changeParentPage || (this.mag.pages.each(n => {
                    De.viewports.forEach(s => {
                        let l = s.name;
                        this._order[n.get("_id")][l] && this.removeWidsFromOrder(this._order[n.get("_id")][l], [r.id])
                    })
                }), this.saveAffectedPages(), this._updateCalculatedIndex())
            }), o.on("widgets:remove", (r, i) => {
                i.changeParentPage || (this.mag.pages.each(n => {
                    De.viewports.forEach(s => {
                        let l = s.name;
                        this._order[n.get("_id")][l] && this.removeWidsFromOrder(this._order[n.get("_id")][l], r)
                    }), setTimeout(() => {
                        Pt.conditionalSave(n, this._order[n.get("_id")])
                    }, 0)
                }), this._updateCalculatedIndex())
            });
            let t = r => i => {
                let n = i.previousAttributes();
                if ((!n["viewport_" + r] || !n["viewport_" + r].enabled) && i.get("viewport_" + r).enabled) {
                    let s = this._order[i.get("_id")];
                    if (!s[r]) this._fillNewViewport(i, r);
                    else {
                        let l = {},
                            p = s.default,
                            d = s[r];
                        for (let c of Ru) {
                            let m = Pt.mergeOrderItems({
                                basicOrder: p[c],
                                orderForMerge: d[c],
                                models: [...this.mag.globalWidgets, ...i.widgets],
                                viewport: r
                            });
                            l[c] = m
                        }
                        this._order[i.get("_id")][r] = l
                    }
                    Pt.conditionalSave(i, this._order[i.get("_id")]), this._updateCalculatedIndex()
                }
            };
            o.on("change:viewport_phone_portrait", t("phone_portrait")), o.on("change:viewport_tablet_portrait", t("tablet_portrait"))
        }
        getGlobalWids() {
            return this.mag.globalWidgets.models
        }
        getWidsOrder(o, t = {}) {
            let r = o.get("order"),
                i = [];
            return J.default.each(De.viewports, n => {
                let s = t.viewport && t.viewport !== n.name ? void 0 : n.name;
                if (s && r[s])
                    for (let l of Object.keys(r[s])) {
                        let p = t.type && t.type !== l ? void 0 : l;
                        p && r[s][p] && (i = i.concat(J.default.flatten(r[s][p])))
                    }
            }), i
        }
        restoreViewportToDefault(o, t) {
            let r = o.get("_id");
            !this._order[r][t] || t === "default" || (this._fillNewViewport(o, t), Pt.conditionalSet(o, this._order[r]), this._updateCalculatedIndex())
        }
        _updateCalculatedIndex(o) {
            for (let t in this._order)
                if (this._order.hasOwnProperty(t)) {
                    this._calculated[t] = {};
                    let r = this._calculated[t];
                    De.viewports.forEach(i => {
                        let n = i.name;
                        if (r[n] = {}, !this._order[t][n]) return;
                        let s = J.default.flatten(J.default.map(Ru, p => J.default.flatten(this._order[t][n][p]))),
                            l = 100 + s.length;
                        J.default.each(s, p => {
                            r[n][p] = l--
                        })
                    })
                }
            Me.trigger("index:changed", this._order, o)
        }
        updateFromSocket(o) {
            Object.assign(this._order, o), this._updateCalculatedIndex(!0)
        }
        getZIndex(o, t, r) {
            return !this._calculated[t] || !this._calculated[t][r] || !this._calculated[t][r][o] ? 100 : this._calculated[t][r][o]
        }
        getOrder(o, t) {
            return o ? t ? (this._order[o.get("_id")][t] || (this._order[o.get("_id")][t] = JSON.parse(JSON.stringify(this._order[o.get("_id")].default))), JSON.parse(JSON.stringify(this._order[o.get("_id")][t]))) : this._order[o.get("_id")] : this._order
        }
        _doSnapshop() {
            return JSON.parse(JSON.stringify(this._order))
        }
        snapshot() {
            let o = this._snapshot;
            return this._snapshot = this._doSnapshop(), o
        }
        applySnapshot(o) {
            let t = [];
            this.mag.pages.each(r => {
                let i = r.get("wids");
                r.widgets.each(n => {
                    n.get("is_global") && i.includes(n.get("_id")) && t.push(n.get("_id"))
                })
            }), J.default.each(o, (r, i) => {
                let n = this.mag.pages.get(i);
                n && J.default.each(r, s => {
                    J.default.each(s, (l, p) => {
                        s[p] = J.default.compact(J.default.map(l, d => d instanceof Array ? J.default.compact(J.default.map(d, c => !t.includes(c) && !n.widgets.get(c) ? null : c)) : !t.includes(d) && !n.widgets.get(d) ? null : d))
                    })
                })
            }), this._order = o, this.mag.pages.each(r => {
                let i = this._order[r.get("_id")];
                i && Pt.conditionalSet(r, i)
            }), setTimeout(() => {
                let r = [];
                this.mag.pages.each(i => {
                    let n = i.get("wids");
                    i.widgets.each(s => {
                        s.get("is_global") && n.includes(s.get("_id")) && r.push(s.get("_id"))
                    })
                }), J.default.each(this._order, (i, n) => {
                    let s = this.mag.pages.get(n);
                    s && (J.default.each(i, (l, p) => {
                        J.default.each(l, (d, c) => {
                            l[c] = J.default.compact(J.default.map(d, g => g instanceof Array ? J.default.compact(J.default.map(g, h => !r.includes(h) && !s.widgets.get(h) ? null : h)) : !r.includes(g) && !s.widgets.get(g) ? null : g));
                            let m = [],
                                u = J.default.compact(J.default.map(r, g => {
                                    let h = !1;
                                    return J.default.each(l, b => {
                                        h || J.default.flatten(b).includes(g) && (h = !0)
                                    }), h || J.default.each(this._order, (b, x) => {
                                        if (x === n) return;
                                        let S = b[p] || b.default,
                                            v = !1;
                                        J.default.each(S, (P, C) => {
                                            v || J.default.flatten(P).includes(g) && (v = C)
                                        }), v && J.default.each(S[v], (P, C) => {
                                            if (P === g && (h = {
                                                    idx: C,
                                                    group: v,
                                                    global: g
                                                }), P instanceof Array) {
                                                if (m.includes(g)) return;
                                                P.includes(g) && (m = m.concat(P), h = {
                                                    idx: C,
                                                    global: g,
                                                    group: v,
                                                    pack: P
                                                })
                                            }
                                        })
                                    }), h === !0 ? null : h
                                }));
                            J.default.each(J.default.sortBy(u, (g, h) => g.idx < h.idx ? 1 : -1), g => {
                                l[g.group].splice(g.idx, 0, g.pack ? g.pack : g.global)
                            })
                        })
                    }), Pt.conditionalSave(s, i))
                }), this._updateCalculatedIndex()
            }, 0)
        }
        setOrderForPage(o, t, r, i) {
            let n = this.getGlobalWids();
            this._order[t.id][r] = o, Pt.conditionalSet(t, this._order[t.id]);
            let s = (d, c) => {
                    let m = null;
                    return J.default.each(d, u => {
                        J.default.each(u, g => {
                            if (g instanceof Array) {
                                let h = J.default.filter(n, b => g.includes(b.id));
                                !J.default.isEmpty(h) && h[0].get("pack_id") === c && (m = g)
                            }
                        })
                    }), m
                },
                l = (d, c) => {
                    let m = !1;
                    J.default.each(d, u => {
                        J.default.each(u, (g, h) => {
                            if (g instanceof Array && !m) {
                                let b = g.indexOf(c);
                                b !== -1 && (m = !0, g.length <= 2 ? u.splice(h, 1, g[0], g[1]) : (g.splice(b, 1), u.splice(h, 0, c)))
                            }
                        })
                    })
                },
                p = (d, c, m, u, g) => {
                    let h = u ? s(d, m) : null;
                    u && this.removeWidsFromOrder(d, u), g && J.default.each(g, b => {
                        l(d, b)
                    }), h && Array.prototype.splice.apply(h, [0, h.length].concat(JSON.parse(JSON.stringify(c))))
                };
            if (i) {
                J.default.each(this._order, (c, m) => {
                    J.default.each(c, (u, g) => {
                        m !== t.id && r === g && (p(u, i.pack, i.pack_id, i.added, i.removed, r), Pt.conditionalSet(this.mag.pages.get(m), this._order[m]))
                    })
                });
                let d = c => {
                    J.default.each(c, m => {
                        J.default.each(m, u => {
                            J.default.each(u.widgetsOrder, (g, h) => {
                                h !== t.get("_id") && De.viewports.forEach(b => {
                                    let x = b.name;
                                    u.widgetsOrder[h][x] && p(u.widgetsOrder[h][x], i.pack, i.pack_id, i.added, i.removed, x)
                                })
                            })
                        })
                    })
                };
                d($t.undoStacks), d($t.redoStacks)
            }
            this._syncAbovePages(t.id, r), this._updateCalculatedIndex()
        }
        getCurrentGroup(o, t) {
            let r = "";
            return J.default.each(o, (i, n) => {
                if (i.indexOf(t) !== -1) {
                    r = n;
                    return
                }
                let l = i.filter(p => p instanceof Array);
                J.default.each(l, p => {
                    p.indexOf(t) !== -1 && (r = n)
                })
            }), r
        }
        removeWidsFromOrder(o, t) {
            J.default.each(t, function(r) {
                J.default.each(o, function(i) {
                    let n = i.indexOf(r);
                    n !== -1 && i.splice(n, 1);
                    let s = null,
                        l = i.filter(p => p instanceof Array);
                    if (J.default.each(l, p => {
                            let d = p.indexOf(r);
                            d !== -1 && (p.splice(d, 1), p.length === 0 && (s = p))
                        }), s) {
                        let p = i.indexOf(s);
                        p !== -1 && i.splice(p, 1)
                    }
                })
            }.bind(this))
        }
        _moveWidsTo(o, t, r, i) {
            let n = J.default.compact(t.map(function(s) {
                if (J.default.flatten(r).includes(s)) return null;
                let l = null;
                return J.default.each(o, p => {
                    p !== r && (l || (l = J.default.find(p, d => d instanceof Array && d.includes(s))))
                }), l ? JSON.parse(JSON.stringify(l)) : s
            }));
            this.removeWidsFromOrder(o, J.default.flatten(n)), J.default.each(n, function(s) {
                r.unshift(i || s)
            })
        }
        moveWidsToFix(o, t, r, i) {
            this._moveWidsTo(o, t.filter(function(n) {
                return !o.frontFixed.includes(n) && !o.backFixed.includes(n)
            }.bind(this)), i ? o.backFixed : o.frontFixed, r)
        }
        moveWidsToFrontFixed(o, t, r) {
            this._moveWidsTo(o, t, o.frontFixed, r)
        }
        moveWidsToBackFixed(o, t, r) {
            this._moveWidsTo(o, t, o.backFixed, r)
        }
        moveWidsToNormal(o, t, r) {
            this._moveWidsTo(o, t, o.normal, r)
        }
        moveWidsToAbove(o, t, r) {
            this._moveWidsTo(o, t, o.aboveAll, r)
        }
        _syncAbovePages(o, t) {
            let r = this._order[o][t].aboveAll;
            J.default.each(this._order, (i, n) => {
                n !== o && i[t] && i[t].aboveAll && (i[t].aboveAll.splice.apply(i[t].aboveAll, [0, i[t].aboveAll.length, ...r]), Pt.conditionalSet(this.mag.pages.get(n), i))
            })
        }
        addWidgetsToDisabledViewport(o, t, r) {
            let i = this._order[o],
                n = i && i[r],
                s = Pt.insertWidgetsIntoViewport({
                    pageOrder: n,
                    models: t,
                    viewport: r
                });
            this._order[o][r] = s
        }
        static insertWidgetsIntoViewport({
            pageOrder: o,
            models: t,
            viewport: r
        }) {
            let i = o ? nt(o) : nt(Ck),
                n = [],
                s = {};
            for (let p of t) {
                let d = ci({
                        target: p,
                        viewport: r,
                        pageId: p.get("_id")
                    }),
                    c = d.get("pack_id"),
                    m = d.get("_id");
                c && Array.isArray(s[c]) ? s[c].unshift(m) : c && (s[c] = [m]), n.push(d)
            }
            for (let p of n) {
                let d = p.get("_id"),
                    m = p.get("pack_id") || d;
                p.get("is_above") ? i.aboveAll.unshift(m) : p.get("fixed_position") ? i.frontFixed.unshift(m) : i.normal.unshift(m)
            }
            let l = p => p in s ? s[p] : p;
            return {
                aboveAll: J.default.unique(i.aboveAll).map(l),
                frontFixed: J.default.unique(i.frontFixed).map(l),
                normal: J.default.unique(i.normal).map(l),
                backFixed: J.default.unique(i.backFixed).map(l)
            }
        }
        moveWidget(o, t, r, i = o.getCurrentViewport()) {
            let n = this._order[o.get("_id")][i];
            J.default.each(Ru, s => {
                let l = n[s],
                    p = l.map(d => {
                        if (d instanceof Array) {
                            let c = d.map(m => t.find(u => u.get("_id") === m) && m);
                            return c.length === 0 || c.filter(m => !!m).length === 0 ? null : c.filter(m => !!m).length === d.length ? d : c
                        } else return t.find(c => c.get("_id") === d) && d
                    }).reduce((d, c, m, u) => {
                        if (c instanceof Array) {
                            let g = c.reduce((h, b, x, S) => (b && !S[x - 1] && h.push([b]), b && S[x - 1] && h[h.length - 1].push(b), h), []);
                            if (g.length === 0) return d;
                            if (g.length !== 1 || g[0].length !== c.length) return [...d, ...g]
                        }
                        return c && !u[m - 1] ? d.push([c]) : c && u[m - 1] instanceof Array && u[m - 1].filter(g => !g).length > 0 ? d.push([c]) : c && u[m - 1] && d[d.length - 1].push(c), d
                    }, []);
                J.default.each(p, d => {
                    let c = d[0],
                        m = l.indexOf(c);
                    if (m === -1) {
                        J.default.each(l, g => {
                            if (g instanceof Array && g.includes(c)) {
                                let h = g.indexOf(c),
                                    b = h - r;
                                g.splice(h, d.length), g.splice.apply(g, [b < 0 ? 0 : b, 0].concat(d))
                            }
                        });
                        return
                    }
                    let u = m - r;
                    if (s === "frontFixed" && u >= l.length) {
                        l.splice(m, d.length), n.backFixed.splice.apply(n.backFixed, [0, 0].concat(d));
                        return
                    }
                    if (s === "backFixed" && u < 0) {
                        l.splice(m, d.length), n.frontFixed.splice.apply(n.frontFixed, [n.frontFixed.length, 0].concat(d));
                        return
                    }
                    l.splice(m, d.length), l.splice.apply(l, [u < 0 ? 0 : u, 0].concat(d))
                })
            }), this._syncAbovePages(o.get("_id"), i), Pt.conditionalSet(o, this._order[o.get("_id")]), this._updateCalculatedIndex()
        }
        getPagesToSave() {
            return this.mag.pages.map(o => o)
        }
        saveAffectedPages() {
            if (this.saveInProgress) return this.saveRequired || (this.saveRequired = new Promise(o => {
                this.saveResolve = o
            })), this.saveRequired; {
                let o;
                return this.saveRequired && (o = this.saveResolve), this.saveRequired = null, this.saveInProgress = !0, new Promise(t => {
                    J.default.defer(() => {
                        let r = this._saveAffectedPages().then(() => {
                            if (this.saveInProgress = !1, this.saveRequired) return this.saveAffectedPages()
                        });
                        o && o(r), t(r)
                    })
                })
            }
        }
        _saveAffectedPages() {
            return Promise.all(J.default.map(this.getPagesToSave(), o => new Promise(t => {
                Pt.conditionalSave(o, this._order[o.get("_id")], {
                    success: t,
                    error: t
                })
            })))
        }
        packOrder(o, t, r) {
            let i = {},
                n = o.reduce((l, p) => (p instanceof Array ? l = [...l, ...p.map(d => t.find(c => c.id === d))] : l.push(t.find(d => d.id === p)), l), []).filter(l => !!l);
            if (!n.length) return;
            let s = o.filter(l => l instanceof Array);
            J.default.each(n, l => {
                let p = l.get("_id"),
                    d = s.find(m => m.includes(p));
                if (!o.includes(p) && !d) return;
                let c = this.getValueForViewport(l, r, "pack_id");
                c && (i[c] = i[c] || [], i[c].includes(p) || i[c].push(p), o.includes(i[c]) || (d ? o.splice(o.indexOf(d), 0, i[c]) : o[o.indexOf(p)] = i[c]), d ? (d.splice(d.indexOf(p), 1), d.length === 0 && o.splice(o.indexOf(d), 1)) : o.includes(p) && o.splice(o.indexOf(p), 1))
            })
        }
        doPack(o, t, r, i) {
            this.mag.pages.map(s => {
                let l = this._order[s.get("_id")];
                J.default.each(l, (p, d) => {
                    this.getValueForViewport(o[0], d, "pack_id") === i && J.default.each(p, c => {
                        this.packOrder(c, o, d)
                    })
                }), Pt.conditionalSet(s, this._order[s.get("_id")])
            });
            let n = s => {
                J.default.each(s, l => {
                    J.default.each(l, p => {
                        J.default.each(p.widgetsOrder, (d, c) => {
                            c !== t.get("_id") && De.viewports.forEach(m => {
                                let u = m.name;
                                p.widgetsOrder[c][u] && this.getValueForViewport(o[0], u, "pack_id") === i && J.default.each(p.widgetsOrder[c][u], g => {
                                    this.packOrder(g, o, u)
                                })
                            })
                        })
                    })
                })
            };
            n($t.undoStacks), n($t.redoStacks), this._syncAbovePages(t.get("_id"), r), this._updateCalculatedIndex()
        }
        doUnpack(o, t, r) {
            this.mag.pages.map(n => {
                let l = this._order[n.get("_id")][r];
                J.default.each(l, p => {
                    let d = o[0].get("_id"),
                        c = p.find(m => m instanceof Array && m.includes(d));
                    if (c) {
                        let m = p.indexOf(c);
                        p.splice.apply(p, [m, 1].concat(c))
                    }
                }), Pt.conditionalSet(n, this._order[n.get("_id")])
            });
            let i = n => {
                J.default.each(n, s => {
                    J.default.each(s, l => {
                        J.default.each(l.widgetsOrder, (p, d) => {
                            d !== t.get("_id") && De.viewports.forEach(c => {
                                let m = c.name;
                                l.widgetsOrder[d][m] && J.default.each(l.widgetsOrder[d][m], u => {
                                    let g = o[0].get("_id"),
                                        h = u.find(b => b instanceof Array && b.includes(g));
                                    if (h) {
                                        let b = u.indexOf(h);
                                        u.splice.apply(u, [b, 1].concat(h))
                                    }
                                })
                            })
                        })
                    })
                })
            };
            this._syncAbovePages(t.get("_id"), r), i($t.undoStacks), i($t.redoStacks), this._updateCalculatedIndex()
        }
        getValueForViewport(o, t, r, i) {
            if (i && !J.default.isEmpty(o["viewport_" + t])) return o["viewport_" + t][r];
            let n = o.toJSON(),
                s = n[r];
            return De.widgetViewportFields(o.get("type")).includes(r) ? t === "default" ? s : n["viewport_" + t] ? n["viewport_" + t][r] : s : s
        }
        updateOrder(o, t, r, i, n, s) {
            let l = {},
                p = {},
                d = (g, h) => {
                    let b = !1;
                    return J.default.each(this._order, x => {
                        x[h] && J.default.flatten(x[h].backFixed).includes(g) && (b = !0)
                    }), b
                },
                c = {},
                m = {},
                u = [];
            for (let g of t) {
                let h = ci({
                        target: g,
                        viewport: r,
                        pageId: g.get("pid")
                    }),
                    b = h.get("pack_id");
                u.push(h), b && (c[b] = c[b] || [], c[b].unshift(g.get("_id")))
            }
            u.forEach(g => {
                let b = this.getGlobalWids().concat(n ? n.widgets.map(I => I) : []),
                    x = g.get("is_global"),
                    S = g.get("is_above"),
                    v = g.get("_id"),
                    P = this.getCurrentGroup(o, v),
                    C = !!g.get("fixed_position"),
                    k = g.get("pack_id"),
                    T = null,
                    R = "";
                if (k && (J.default.each(o, (I, B) => {
                        J.default.each(I, L => {
                            if (L instanceof Array) {
                                let D = J.default.find(b, E => E.id === L[0]);
                                D && Pt.getAttributeForViewport(D, r, "pack_id") === k && (T = L, R = B)
                            }
                        })
                    }), p[k] || J.default.each(i, I => {
                        let B = J.default.find(I, L => L instanceof Array && L.includes(v));
                        B && (p[k] = JSON.parse(JSON.stringify(B)))
                    })), S) R !== "aboveAll" && (T = null), n !== s && k ? !T && !l[k] && p[k] ? (this.moveWidsToAbove(o, [v], p[k]), l[k] = 1) : T && !T.includes(v) ? T.unshift(v) : !T && !m[k] && !p[k] && (this.moveWidsToAbove(o, [c[k]]), m[k] = 1) : !T && k && !m[k] && !p[k] ? (this.moveWidsToAbove(o, [c[k]]), m[k] = 1) : T && !T.includes(v) ? T.unshift(v) : this.moveWidsToAbove(o, [v]);
                else if (C) {
                    R !== "frontFixed" && R !== "backFixed" && (T = null);
                    let I = x && d(v, r);
                    x || n === s ? P !== "frontFixed" && P !== "backFixed" && (n !== s && k ? !T && !l[k] && p[k] ? (this.moveWidsToFix(o, [v], p[k], I), l[k] = 1) : T && !T.includes(v) ? T.unshift(v) : !T && !m[k] && !p[k] && (this.moveWidsToFix(o, [c[k]], void 0, I), m[k] = 1) : !T && k && !m[k] && !p[k] ? (this.moveWidsToFix(o, [c[k]], void 0, I), m[k] = 1) : T && !T.includes(v) ? T.unshift(v) : this.moveWidsToFix(o, [v], void 0, I)) : this.removeWidsFromOrder(o, [v])
                } else R !== "normal" && (T = null), x || n === s ? P !== "normal" && (n !== s && k ? !T && !l[k] && p[k] ? (this.moveWidsToNormal(o, [v], p[k]), l[k] = 1) : T && !T.includes(v) ? T.unshift(v) : !T && !m[k] && !p[k] && (this.moveWidsToNormal(o, [c[k]]), m[k] = 1) : !T && k && !m[k] && !p[k] ? (this.moveWidsToNormal(o, [c[k]]), m[k] = 1) : T && !T.includes(v) ? T.unshift(v) : this.moveWidsToNormal(o, [v])) : this.removeWidsFromOrder(o, [v])
            })
        }
        updateIndexAddFromTemplate(o, t, r = !0) {
            this.mag.pages.each(n => {
                let s = this._order[n.get("_id")];
                n !== o && Pt.extendOrder(s, t), r ? Pt.conditionalSave(n, this._order[n.get("_id")]) : Pt.conditionalSet(n, this._order[n.get("_id")])
            });
            let i = n => {
                J.default.each(n, (s, l) => {
                    J.default.each(s, p => {
                        J.default.each(p.widgetsOrder, (d, c) => {
                            c === o.get("_id") && l === c || p.widgetsOrder[c] && Pt.extendOrder(p.widgetsOrder[c], t)
                        })
                    })
                })
            };
            i($t.undoStacks), i($t.redoStacks), this._updateCalculatedIndex()
        }
        updateIndex(o, t, r = !0) {
            let i = this._order[o.get("_id")],
                n = {};
            this.mag.pages.each(l => {
                n[l.id] = {}, De.viewports.forEach(p => {
                    let d = p.name;
                    if (J.default.isEmpty(l.get("viewport_" + d)) && d !== "default") return;
                    d && !this._order[l.get("_id")][d] && (this._order[l.get("_id")][d] = JSON.parse(JSON.stringify(this._order[l.get("_id")].default)));
                    let c = J.default.sortBy(t, m => this.getZIndex(m.id, o.id, d));
                    n[l.id][d] = c, this.updateOrder(this._order[l.get("_id")][d], c, d, i[d], l, o)
                }), r ? Pt.conditionalSave(l, this._order[l.get("_id")]) : Pt.conditionalSet(l, this._order[l.get("_id")])
            });
            let s = l => {
                J.default.each(l, (p, d) => {
                    J.default.each(p, c => {
                        J.default.each(c.widgetsOrder, (m, u) => {
                            u === o.get("_id") && d === u || De.viewports.forEach(g => {
                                let h = g.name;
                                c.widgetsOrder[u] && c.widgetsOrder[u][h] && n[u] && this.updateOrder(c.widgetsOrder[u][h], n[u] && n[u][h] || t, h, i[h], null, o.get("_id"))
                            })
                        })
                    })
                })
            };
            this._syncAbovePages(o.get("_id"), o.getCurrentViewport()), s($t.undoStacks), s($t.redoStacks), this._updateCalculatedIndex()
        }
    };
z(Pt, "mergeOrderItems", ({
    basicOrder: o = [],
    orderForMerge: t = [],
    models: r = [],
    viewport: i = "default"
}) => {
    let n = J.default.flatten(o),
        s = J.default.flatten(t),
        l = {},
        p = new Set,
        d = (g, h, b) => {
            h && Array.isArray(g[h]) ? g[h].push(b) : h && (g[h] = [b])
        },
        c = 0;
    for (let g = 0; g < n.length; g++) {
        let h = n[g],
            b = r.find(S => S.get("_id") === h),
            x = b ? Pt.getAttributeForViewport(b, i, "pack_id") : null;
        if (s.includes(h)) {
            let S = s[c];
            x && d(l, x, S);
            let v = x || S;
            p.add(v), c++
        } else {
            x && d(l, x, h);
            let S = x || h;
            p.add(S)
        }
    }
    let m = g => g in l ? l[g] : g;
    return Array.from(p).map(m)
});
var af = Pt,
    Jc = af;
Dn();
Ye();
var lf = nr.prototype,
    qI = nr.extend({
        idAttribute: "_id",
        urlRoot: "/api/mag/",
        PUBLISH_URL: "/api/publish/",
        UNPUBLISH_URL: "/api/unpublish/",
        CHECKDOMAIN_URL: "/api/checkdomain",
        SETDOMAIN_URL: "/api/mag/domain/",
        publish_attempts: 0,
        user_templates: {},
        name: "Mag",
        undoKeys: [],
        initialize: function() {
            Te.default.bindAll(this), this.globalWidgets = new Cu, of && (this.pages = new of , this.trashPages = new fk, this.pages.on("change:screenshot", e => {
                this.trigger("change:page:screenshot", e.id, e.get("screenshot"), "default")
            }), this.pages.on("change:viewport_phone_portrait change:viewport_tablet_portrait", e => {
                let o = Object.keys(e.changedAttributes())[0],
                    t = e.previousAttributes()[o] ? .screenshot,
                    r = e.attributes[o] ? .screenshot;
                t !== r && this.trigger("change:page:screenshot", e.id, r, o === "viewport_tablet_portrait" ? "tablet_portrait" : "phone_portrait")
            })), this.on("mag_state_changed", function(e) {
                e && e.socketUpdate || this.triggerSocketUpdate()
            }, this), this.on("change:updated", function(e, o, t) {
                this.trigger("mag_state_changed", t)
            }, this), this.on("change:changed", function(e, o, t) {
                if (o) {
                    if (this.trigger("changed"), t && t.socketUpdate) return;
                    this.triggerSocketUpdate({
                        changed: o
                    })
                }
            }, this), this.on("change:pids", function(e, o, t) {
                Te.default.defer(Te.default.bind(function() {
                    this.pages.each(function(r) {
                        r && o.indexOf(r.id) === -1 && this.pages.remove(r.id)
                    }, this)
                }, this)), (!t || !t.xhr && !t.socketUpdate && !t.success) && this.triggerSocketUpdate(this.pick("pids"), {})
            }, this), this.on("change:opts", function(e, o, t) {
                (!t || !t.socketUpdate) && this.triggerSocketUpdate(this.pick("opts"))
            }), this.on("error", function() {
                this._saveduser && this.set("user", this._saveduser), delete this._saveduser
            }, this), Me.on("global_appear:widget", function(e) {
                this.globalWidgets.add(e)
            }.bind(this)), Me.on("global_disappear:widget", function(e) {
                this.globalWidgets.remove(e)
            }.bind(this))
        },
        parse: function(e) {
            return this.has("changed") && delete e.changed, Te.default.isObject(this.get("user")) && delete e.user, e.last_changed = e.last_changed && new Date(e.last_changed), e.user && (this.user = new vd(e.user, {
                parse: !0
            })), lf.parse.apply(this, arguments)
        },
        save: function() {
            if (!this.get("user")) return lf.save.apply(this, arguments);
            let e = lf.save.apply(this, arguments);
            return this.set("changed", !0), e
        },
        getPage: function(e) {
            return this.pages.get(e)
        },
        addPage: function(e, o, t, r = void 0) {
            e = e || {}, !this._addBlock && (this._addBlock = !0, e.num = e.num || this.getMaxNum() + 1, e.mid = this.id, e.order = this.hasGlobalWidgets() ? {
                default: Jc.getWidgetOrder(this.globalWidgets.models, r)
            } : void 0, Ir.default.ajax({
                url: "/api/page/",
                method: "POST",
                dataType: "json",
                data: e,
                success: function(i) {
                    this._addBlock = !1;
                    let n = new Wr(i.page, {
                        parse: !0
                    });
                    i.edit_params && (window.RM.constructorRouter.mag.edit_params.set(i.edit_params), window.RM.constructorRouter.textStyles.generateCSS("paragraph", "constructor", document), window.RM.constructorRouter.textStyles.generateCSS("link", "constructor", document));
                    let s = i.textStyles,
                        l = i.linkStyles,
                        p = i.listStyles;
                    if (i.edit_params) {
                        let d = xy(i.edit_params.paragraph_styles || []);
                        d.length && d.forEach(m => {
                            s.some(u => u.name === m.name) || s.push(m)
                        });
                        let c = wy(i.edit_params.link_styles || []);
                        c.length && c.forEach(m => {
                            l.some(u => u.name === m.name) || l.push(m)
                        })
                    }
                    pu({
                        newTextStyles: s,
                        newLinkStyles: l,
                        newListStyles: p
                    }), n.set("parentPage", null), t || this.onAdd(n), o && o(n)
                },
                error: function(i) {
                    if (this._addBlock = !1, i.status === 400) try {
                        o(JSON.parse(i.responseText))
                    } catch {
                        alert("Seems there is a connection problem.")
                    } else alert("Seems there is a connection problem.")
                },
                context: this
            }))
        },
        onAdd: function(e, o) {
            this.pages.add(e);
            let t;
            t = Te.default.clone(this.get("pids")), t.push(e.id), t = (0, Te.default)(t).chain().uniq().compact().value(), this.set({
                pids: t
            }, o)
        },
        getActivePages: function() {
            return this.pages.filter(function(e) {
                return Te.default.include(this.get("pids"), e.id)
            }, this)
        },
        getTitle: function() {
            return this.get("title") || "Project Title"
        },
        getMaxNum: function() {
            let e = Te.default.max(Te.default.map(this.getActivePages(), function(o) {
                return o.get("num")
            }));
            return (!e || e < 0) && (e = 0), e
        },
        loadFull: function(e) {
            let o = e.success;
            e.success = Te.default.bind(function(t, r, i) {
                let n = Te.default.clone(t);
                this.pages.reset(n.pages, {
                    parse: Te.default.has(e, "parse") ? e.parse : !0
                }), delete n.pages;
                let s = n.user.email === window.RM.constructorRouter.me ? .get("email"),
                    l = n.roleName;
                (s || l === "member") && (l = Qe.getCurrentProjectRole(n.num_id)), this.roleName = l, this.rolePermissions = l === "editor" ? n.editorPermissions : n.rolePermissions, this.teamRole = n.roleName, delete n.roleName, delete n.rolePermissions, delete n.editorPermissions, this.set(this.parse(n)), this.initGlobalWidgets(), Me.trigger("mag:loadfull:complete"), o && o(t, r, i)
            }, this), Ir.default.ajax(Te.default.extend(e, {
                url: "/api/magFullById/" + this.get("num_id"),
                dataType: "json"
            }))
        },
        setMag: function(e) {
            let o = Te.default.clone(e);
            this.pages.reset(o.pages, {
                parse: !0
            }), delete o.pages, this.set(this.parse(o)), this.initGlobalWidgets()
        },
        fetchTrashPages: function(e = {}) {
            return mk(this.get("num_id")).then(o => {
                o && this.trashPages.reset(o, {
                    parse: !0
                });
                let t = !!(o && o.length);
                return this.get("has_deleted_pages") !== t && this.set({
                    has_deleted_pages: t
                }, e), o
            })
        },
        sendPagesToTrash: function(e = []) {
            return gk(this.get("num_id"), e.map(o => o.get("_id"))).then(() => {
                e.map(o => {
                    this.trashPages.get(o.get("_id")) || this.trashPages.add(o)
                })
            })
        },
        restorePage: async function(e, o, t = !1) {
            o = o || {}, Ir.default.ajax({
                type: "POST",
                url: "/api/user/permissions/can_create_page",
                data: JSON.stringify({
                    mag: this.toJSON()
                }),
                contentType: "application/json",
                context: this,
                success: function() {
                    Ir.default.get("/api/pageFullById/" + e, Te.default.bind(function(r) {
                        r = new Wr(r, {
                            parse: !0
                        }), t || this.onAdd(r), this.trashPages.remove(r), this.set("has_deleted_pages", !!this.trashPages.length), t || this.save(), o.success && o.success(r)
                    }, this)).fail(o.error)
                },
                error: o.error
            })
        },
        restoreMag: function(e) {
            Ir.default.ajax({
                type: "POST",
                url: "/api/mag/" + this.get("num_id") + "/revert-version",
                success: function() {
                    typeof e == "function" && e()
                },
                error: function() {
                    console.log("Error while restore :(")
                },
                context: this
            })
        },
        emptyTrash: function() {
            return this.deleteTrashPages().then(() => {
                this.trashPages.reset(), this.trashPages.triggerSocketEmptyTrash(), this.set("has_deleted_pages", !1)
            })
        },
        deleteTrashPage: function(e, o) {
            o = o || {};
            let t = this.trashPages.get(e) || this.pages.get(e);
            Ir.default.ajax({
                url: "/api/page/" + e + "/trash",
                type: "DELETE",
                success: function() {
                    this.trashPages.get(e) && (this.trashPages.remove(t), this.set("has_deleted_pages", !!this.trashPages.length)), o.success && o.success()
                },
                error: o.error,
                context: this
            })
        },
        deleteTrashPages: function(e = []) {
            return hk(this.get("num_id"), e).then(() => {
                e.forEach(o => {
                    let t = this.trashPages.get(o);
                    t && this.trashPages.remove(t)
                }), this.set("has_deleted_pages", !!this.trashPages.length)
            })
        },
        getPageNumId: function(e, o) {
            let r = (o && o.onlyActive ? (0, Te.default)(this.getActivePages()) : this.pages).find(function(i) {
                return i.get("num") === e
            });
            return r && r.get("num_id")
        },
        getPageId: function(e, o) {
            let r = (o && o.onlyActive ? (0, Te.default)(this.getActivePages()) : this.pages).find(function(i) {
                let n = i.get("num"),
                    s = i.get("uri");
                return n && e && n.toString() === e.toString() || s && e && s.toString() === e.toString()
            });
            return r && r.id
        },
        getPageUri: function(e) {
            let o = this.pages.find(function(t) {
                return t.get("_id") == e
            });
            return o && (o.get("uri") || o.get("num"))
        },
        getPageDataUri: function(e) {
            let o = this.pages.find(function(t) {
                return t.get("_id") == e
            });
            return o && o.get("uri")
        },
        getPageNum: function(e) {
            let o = this.pages.find(function(t) {
                return t.get("_id") == e
            });
            return o && o.get("num")
        },
        getWidgetPage: function(e) {
            return Te.default.find(this.pages.models, function(o) {
                return Te.default.find(o.widgets.models, function(t) {
                    return t.get("_id") === e
                })
            })
        },
        getWidgetById: function(e) {
            let o;
            return Te.default.find(this.pages.models, function(t) {
                let r = Te.default.find(t.widgets.models, function(i) {
                    return i.get("_id") === e
                });
                return r && (o = r), r
            }), o
        },
        deletePage: function(e, o) {
            let t = Te.default.reject(this.get("pids"), function(l) {
                    return l === e.id
                }, this),
                r, i, n, s;
            if (Te.default.isEmpty(t)) return !1;
            this.get("master_share_pid") === e.get("_id") && this.unset("master_share_pid"), r = e.getOwnGlobalWidgets(), Te.default.isEmpty(r) || (i = this.pages.get(t[0]), n = this.changeParentPage(r, i, {
                silent: !0
            }), s = r.concat(n), window.RM.constructorRouter.workspace.save_group(s, {
                skipHistory: !0
            })), this._deleteXHR && this._deleteXHR.abort(), this._deleteXHR = this.save({
                pids: t
            }, {
                success: Te.default.bind(function() {
                    e.isEmptyPage || (this.set("has_deleted_pages", !0), this.trigger("change:has_deleted_pages", this)), o && o(), e.isEmptyPage && !this.get("shared") && this.deleteTrashPage(e.id)
                }, this)
            }), e.save({
                trash_date: new Date
            }, {
                silent: !0,
                noSocketUpdate: !0,
                patch: !0
            })
        },
        checkDeletingPages: function(e = []) {
            if (e.find(r => window.RM.constructorRouter.isPageLocked(r)) !== void 0) return !1;
            let t = Te.default.reject(this.get("pids"), function(r) {
                return e.includes(r)
            }, this);
            return !Te.default.isEmpty(t)
        },
        deletePages: function(e, o) {
            let t = Te.default.reject(this.get("pids"), function(s) {
                return e.includes(s)
            }, this);
            if (Te.default.isEmpty(t)) {
                o && o(new Error("can not delete all pages"));
                return
            }
            this.get("master_share_pid") && e.includes(this.get("master_share_pid")) && (this.unset("master_share_pid"), this.save({}));
            let r = [],
                i = [],
                n = [];
            if (e.forEach(s => {
                    let l = this.getPage(s);
                    n = n.concat(l.getOwnGlobalWidgets()), l.isEmptyPage ? r.push(l) : i.push(l)
                }), !Te.default.isEmpty(n)) {
                let s = this.pages.get(t[0]),
                    l = this.changeParentPage(n, s, {
                        silent: !0
                    }),
                    p = n.concat(l);
                window.RM.constructorRouter.workspace.save_group(p, {
                    skipHistory: !0
                })
            }
            this._deleteXHR && this._deleteXHR.abort(), this._deleteXHR = this.save({
                pids: t
            }, {
                success: () => {
                    i.length && (this.set("has_deleted_pages", !0), this.trigger("change:has_deleted_pages", this)), o && o({
                        deleteNotEmptyPages: !!i.length
                    }), r.length && (this.get("shared") ? i = i.concat(r) : this.deleteTrashPages(r.map(s => s.get("_id")))), i.length && this.sendPagesToTrash(i)
                },
                error: () => {
                    o && o(new Error("save project pids error"))
                },
                patch: !0
            })
        },
        deleteMag: function(e) {
            Ir.default.ajax({
                type: "POST",
                url: "/api/mags/archive",
                data: JSON.stringify({
                    mag_num_ids: [Number(this.get("num_id"))],
                    folder_num_ids: []
                }),
                contentType: "application/json; charset=utf-8",
                success: function() {
                    typeof e == "function" && e()
                },
                error: function(o) {
                    console.log("Error deleting mag: " + o.responseText)
                },
                context: this
            })
        },
        publish: function(e, o) {
            this.updateUsedFonts({
                success: Te.default.bind(function() {
                    let t = {
                        major: e || void 0,
                        description: e && o || void 0
                    };
                    this.publish_attempts += 1, Ir.default.ajax({
                        type: "POST",
                        url: this.PUBLISH_URL + this.get("num_id"),
                        global: !1,
                        data: t,
                        success: Te.default.bind(function(r) {
                            this.set(Te.default.extend(this.parse(r), {
                                changed: !1
                            })), this.publish_attempts = 0
                        }, this),
                        error: Te.default.bind(function(r) {
                            this.trigger("mag_publish_error", r.responseJSON || {
                                error: r.statusText,
                                message: r.responseText
                            })
                        }, this)
                    })
                }, this),
                error: Te.default.bind(function() {
                    this.trigger("mag_publish_error", {
                        error: "Used fonts save error",
                        message: "Used fonts save error"
                    })
                }, this)
            })
        },
        unpublish: function() {
            Ir.default.ajax({
                type: "POST",
                url: this.UNPUBLISH_URL + this.get("num_id"),
                success: Te.default.bind(function() {
                    this.set({
                        is_published: null,
                        published: null,
                        updated: null
                    })
                }, this),
                error: Te.default.bind(function() {
                    console.error(arguments)
                }, this)
            })
        },
        checkDomain: function(e, o) {
            return Ir.default.ajax({
                type: "POST",
                url: this.CHECKDOMAIN_URL,
                data: {
                    num_id: this.get("num_id"),
                    domain: e
                },
                success: Te.default.bind(function(t) {
                    this.set({
                        last_checked_domain: e
                    }, {
                        silent: !0
                    }), o && o(t)
                }, this),
                error: Te.default.bind(function() {
                    console.error(arguments), o && o(null)
                }, this)
            })
        },
        mapDomain: function(e, o) {
            return o = o || {}, Ir.default.ajax({
                type: "POST",
                url: this.SETDOMAIN_URL + this.get("num_id"),
                data: {
                    domain: e,
                    status: "on"
                },
                success: Te.default.bind(function(t) {
                    this.set({
                        domain: e
                    }, {
                        silent: !0
                    }), o.success && o.success(t)
                }, this),
                error: Te.default.bind(function(t) {
                    return t && t.status >= 500 ? o.error(null) : o.error && o.error({
                        badDNSSettings: !0
                    })
                }, this)
            })
        },
        unmapDomain: function(e) {
            return Ir.default.ajax({
                type: "POST",
                url: this.SETDOMAIN_URL + this.get("num_id"),
                data: {
                    status: "off"
                },
                success: Te.default.bind(function(o) {
                    this.unset("domain", {
                        silent: !0
                    }), e && e(o)
                }, this),
                error: Te.default.bind(function() {
                    console.error(arguments), e && e(null)
                }, this)
            })
        },
        loadUserTemplates() {
            return px().then(e => (this.isTemplatesLoaded = !0, this.user_templates = e, e)).catch(() => {
                throw this.isTemplatesLoaded = !1, new Error("Error loading page templates")
            })
        },
        getPageTemplate: function(e) {
            let o = null;
            return Te.default.any(this.user_templates, function(t) {
                if (t.id == e) return o = t, !0
            }), o
        },
        addCustomPageTemplate: function(e) {
            let o = Te.default.find(this.user_templates, function(t) {
                return t.custom
            });
            o && o.templates.unshift(e)
        },
        getAllWidgets() {
            let e = [];
            return Te.default.each(this.pages.models, o => {
                if (o.widgets.length) {
                    let t = o.attributes.wids;
                    Te.default.each(o.widgets.models, r => {
                        let i = De.viewport_list.reduce((n, s) => (r[s] && (n[s] = r[s]), n), {});
                        t.includes(r.id) && e.push({ ...r.attributes,
                            ...i,
                            ...r.hasNested && r.widgets_collection ? .models ? {
                                widgets_collection: r.widgets_collection.models
                            } : {}
                        })
                    })
                } else Te.default.each(o.attributes.wids, t => e.push(t))
            }), e
        },
        getUsedFontsNames: function() {
            return new Set(It.getUsedFontsFromWidgetsModels({
                models: this.getAllWidgets(),
                onlyFontsNames: !0
            }, It.fontsShortList))
        },
        getFontsShortList() {
            return It.fontsShortList
        },
        getUsedFonts: function(e) {
            e = e || {};
            let o = this.edit_params ? this.edit_params.get("fonts") : this.get("edit_params") ? this.get("edit_params").fonts : [];
            return It.getUsedFontsFromWidgetsModels({ ...e,
                models: this.getAllWidgets(),
                customList: e.includeCustom ? Te.default.filter(o, {
                    provider: "custom"
                }) : []
            }, It.fontsShortList)
        },
        updateUsedFonts: function(e) {
            e = e || {};
            let o = this.getUsedFonts({
                    includeCustom: !0,
                    excludeUnusedDefault: !0
                }),
                t = It.sortFontsByProvider(o);
            this.save(t, {
                patch: !0,
                url: this.url() + "?skip_changed=true",
                success: Te.default.bind(function() {
                    e.success && e.success()
                }, this),
                error: Te.default.bind(function() {
                    e.error && e.error()
                }, this)
            })
        },
        filterUnusedFonts: function() {
            let e = this.edit_params.attributes.fonts;
            if (!Te.default.any(e, function(i) {
                    return i.provider == "typekit" && i.hidden
                })) return;
            let t = Te.default.pluck(Te.default.where(this.getUsedFonts({
                    includeCustom: !1
                }), {
                    provider: "typekit"
                }), "css_name"),
                r = Te.default.reject(e, function(i) {
                    return t.indexOf(i.css_name) === -1 && i.hidden && i.provider == "typekit"
                });
            Te.default.isEqual(Te.default.pluck(r, "css_name"), Te.default.pluck(e, "css_name")) || this.edit_params.save({
                fonts: r
            }, {
                silent: !0
            })
        },
        getUsedStyles: function(e) {
            return It.getUsedStylesFromWidgetsModels(this.getAllWidgets(), e, e === "link")
        },
        mergeEditParams: function(e) {
            e = e || {};
            let o = this.edit_params,
                t, r = Te.default.clone(o.get("paragraph_styles")) || [],
                i = !1;
            t = Te.default.pluck(r, "_name"), Te.default.each(e.paragraph_styles, function(l) {
                Te.default.contains(t, l._name) || (r.push(l), i = !0)
            }), i && (o.set("paragraph_styles", r), window.RM.constructorRouter.textStyles.generateCSS("paragraph", "constructor", document));
            let n = Te.default.clone(o.get("link_styles")) || [],
                s = !1;
            t = Te.default.pluck(n, "_name"), Te.default.each(e.link_styles, function(l) {
                Te.default.contains(t, l._name) || (n.push(l), s = !0)
            }), s && (o.set("link_styles", n), window.RM.constructorRouter.textStyles.generateCSS("link", "constructor", document)), (i || s) && this.save(), e.fonts && e.fonts.length && window.RM.constructorRouter.fonts.addFonts(e.fonts, "paste")
        },
        triggerEditParamsRewrite: function(e, o) {
            JSON.stringify(e.paragraph_styles) != JSON.stringify(o.paragraph_styles) && window.RM.constructorRouter.textStyles.generateCSS("paragraph", "constructor", document), JSON.stringify(e.link_styles) != JSON.stringify(o.link_styles) && window.RM.constructorRouter.textStyles.generateCSS("link", "constructor", document), JSON.stringify(e.fonts) != JSON.stringify(o.fonts) && window.RM.constructorRouter.fonts.appendFontsCssToDocument({
                version: "edit"
            }, function() {
                window.RM.constructorRouter.trigger("font-added")
            })
        },
        fetchLastChanged: function(e) {
            this.fetch({
                data: {
                    fields: "last_changed"
                },
                noSocketUpdate: !0,
                success: Te.default.bind(function() {
                    this.previousAttributes() && this.previousAttributes().last_changed ? new Date(this.previousAttributes().last_changed).getTime() + 300 * 1e3 < new Date(this.get("last_changed")).getTime() ? e({
                        wasChanged: !0
                    }) : e({
                        wasChanged: !1
                    }) : e({
                        wasChanged: !1
                    })
                }, this)
            })
        },
        updateLastChanged: function() {
            this.set("last_changed", new Date)
        },
        changeParentPage: function(e, o, t) {
            t = Te.default.extend(t || {}, {
                nosave: !0,
                changeParentPage: !0
            });
            let r = new Pk.default.Collection;
            return Te.default.each(e, function(i) {
                let n = i.get("pid"),
                    s = this.pages.get(n);
                n != o.id && (i.set("pid", o.id, {
                    silent: !0
                }), i.collection = o.widgets, o.addWidget(i, t), t.forceRemove = !0, s.removeWidgets([i.id], t), r.add(s))
            }.bind(this)), r.isEmpty() || r.add(o), r.models
        },
        removeGlobalWidgets: function(e) {
            let o = Te.default.difference(this.get("gwids"), e);
            this.save({
                gwids: o
            })
        },
        initGlobalWidgets: function() {
            let e = this.pages.chain().reduce(function(o, t) {
                return [...o, ...t.widgets.models]
            }, []).filter(function(o) {
                return o.isGlobal()
            }).uniq(function(o) {
                return o.get("_id")
            }.bind(this)).value();
            this.globalWidgets.set(e)
        },
        addGlobalWidgetsFromTemplate: function(e) {
            let o = e.widgets.models.filter(i => i.isGlobal()),
                t = Te.default.map(o, i => i.get("_id")),
                r = Jc.getPartialOrder(e.attributes.order, t);
            RM.constructorRouter.indexController.updateIndexAddFromTemplate(e, r), this.initGlobalWidgets()
        },
        hasGlobalWidgets: function() {
            return this.globalWidgets && this.globalWidgets.length > 0
        },
        hasCodeInjection() {
            if (Te.default.any(["ci_head", "ci_body_top", "ci_body_bottom", "ci_css"], r => this.get(r))) return !0;
            let o = !1,
                t = r => {
                    let i = (d, c) => typeof d.get == "function" ? d.get(c) : d[c],
                        n = !!(i(r, "type") === "iframe" && i(r, "code"));
                    if (!n || i(r, "use_iframe")) return;
                    let l = (0, Tk.getEmbedType)(i(r, "code")) === "codeinjection";
                    if (!l) return;
                    let p = !!(Te.default.all(De.viewport_listall, function(d) {
                        let c = r[d];
                        return c && c.hidden || !c
                    }) && i(r, "hidden"));
                    n && l && !p && (o = !0)
                };
            return this.pages.each(function(r) {
                r.widgets.length ? r.widgets.each(t) : r.attributes.wids.forEach(t)
            }), o
        },
        hasWidgetsWithType(e) {
            return this.pages.some(o => (o.widgets.length ? o.widgets : o.attributes.wids).some(t => (typeof t.get == "function" ? t.get("type") : t.type) === e))
        },
        getViewportWidth(e) {
            return !e || e === "default" ? this.get("desktopWidth") || De.dictionary.default.width : e === "phone_portrait" ? this.get("phoneWidth") || De.dictionary.phone_portrait.width : De.dictionary[e].width
        },
        setViewportWidth(e, o) {
            e === "default" ? this.set("desktopWidth", o) : e === "phone_portrait" && this.set("phoneWidth", o)
        },
        isPermissionAllowed(e) {
            return e ? ((this.rolePermissions || []).find((t = {}) => t.name === e) || {}).value ? ? !0 : !0
        },
        increaseWidgetAddCounter() {
            let e = this.get("widgetAddCounter") || 0;
            this.save({
                widgetAddCounter: ++e
            }, {
                patch: !0
            }), (e > 0 && e <= 20 && e % 5 === 0 || e > 20 && e <= 100 && e % 10 === 0) && re(fe.WidgetTotal, {
                total: e
            })
        }
    }),
    Qc = qI;
uI();
var jn = M(lt());
Fd();
Lc();
var Ik = nr.prototype,
    YI = nr.extend({
        id: "_pageOrder",
        url: "/api/pageOrder/",
        name: "PageOrder",
        isNew: function() {
            return !1
        },
        load: function(e) {
            let o = e.pages.reduce(function(t, r) {
                return t.push({
                    id: r.id,
                    num: r.get("num"),
                    parentPage: r.get("parentPage") || null
                }), t
            }, []);
            return this.magId = e.get("_id"), this.set({
                order: o
            }), null
        },
        saveInProgress: function() {
            return this._xhr && this._xhr.state() === "pending"
        },
        save: function(e) {
            if (e.order) return this.orderPages(e.order), this._xhr && this._xhr.abort(), this._xhr = An.prototype.save.apply(this, arguments), this._xhr.skipResponse = !0, this._xhr.fail(jn.default.bind(function(o) {
                if (o.responseJSON && o.responseJSON.error && o.responseJSON.error === "invalid order") return this.trigger("reorder");
                alert("Something went wrong while saving the pages order. Please, reload the page.")
            }, this)), this._xhr
        },
        parse: function(e, o) {
            if (o && o.xhr && o.xhr.skipResponse) {
                Ik.parse.apply(this, arguments);
                return
            }
            return Ik.parse.apply(this, arguments)
        },
        orderPages: function(e, o = {}) {
            jn.default.each(RM.constructorRouter.mag.getActivePages(), t => {
                let r = jn.default.find(e || this.get("order"), i => i.id === t.id);
                r && t.set({
                    num: r.num,
                    parentPage: r.parentPage || null
                }, o)
            })
        },
        validateAndFixPageOrder(e) {
            let o = jn.default.pluck(this.get("order"), "num");
            (o[0] !== 1 || !jn.default.isEqual(o, jn.default.range(1, o.length + 1))) && this.fixPageOrder(e)
        },
        fixPageOrder(e) {
            let o = e.getActivePages().map(t => ({
                id: t.get("_id"),
                num: t.get("num"),
                parentPage: t.parentPage || null
            }));
            this.fixNums(o, e.get("_id") || this.magId)
        },
        fixNums(e, o) {
            let t = [],
                r = {};
            return jn.default.sortBy(e, "num").forEach((i, n) => {
                t.push({
                    id: i.id,
                    parentPage: i.parentPage && r[i.parentPage] ? i.parentPage : null,
                    num: n + 1
                }), r[i.id] = i
            }), this.save({
                order: t,
                mid: o || this.magId
            })
        },
        reorderPagesAfterAdd({
            page: e,
            pageNum: o,
            magId: t
        }) {
            let r = Array.from(this.get("order")),
                i = o || e.get("num"),
                n = i > r.length ? r.length : r.findIndex(s => s.num === i);
            r.splice(n, 0, {
                id: e.get("_id"),
                num: i,
                parentPage: e.get("parentPage")
            }), this.fixNums(r, t)
        },
        reorderAfterDrag(e, o = 0, t, r) {
            let i = Array.from(this.get("order")),
                n = i.findIndex(d => d.num === e);
            if (n === -1) return;
            let s = i.splice(n, o + 1),
                l = e === t.num ? e + 1 : t.num,
                p = i.findIndex(d => d.num === l);
            p === -1 && (p = i.length), s.length && (s[0] = t), i.splice(p, 0, ...s), this.fixNums(i, r)
        },
        deletePagesFromOrder(e, o) {
            let r = this.get("order").filter(i => !e.includes(i.id));
            return this.fixNums(r, o)
        },
        updateParentIds(e, o) {
            let r = this.get("order").map(i => e.includes(i.id) ? {
                id: i.id,
                num: i.num,
                parentPage: o
            } : i);
            this.set("order", r)
        },
        removeParentIds(e) {
            let t = this.get("order").map(r => e.includes(r.id) ? {
                id: r.id,
                num: r.num,
                parentPage: null
            } : r);
            this.set("order", t)
        }
    }),
    Mk = YI;
var Eo = M(lt());
Ua();
Lr();
var Bk = function(e) {
    this.edit_params = e, this.proxyMethods(["set", "get", "fetch", "on", "off", "save"]), this.rememberStylesOrder(), this.on("sync", Eo.default.bind(this.rememberStylesOrder, this))
};
Bk.prototype = {
    id: "_textStyles",
    isNew: function() {
        return !1
    },
    proxyMethods: function(e) {
        let o = this,
            t = this.edit_params;
        Eo.default.each(e, function(r) {
            o[r] = function() {
                return t[r].apply(t, arguments)
            }
        })
    },
    getList: function(e, o) {
        let t = [];
        return e == "paragraph" && (t = this.get("paragraph_styles") || []), e == "link" && (t = this.get("link_styles") || []), o ? Eo.default.clone(t) : t
    },
    getStylesListSorted: function(e) {
        let o = this.getList(e, !0);
        return o.sort(function(t, r) {
            return t._sort - r._sort
        }), o
    },
    getOrder: function(e) {
        return Eo.default.pluck(this.getList(e), "_sort")
    },
    rememberStylesOrder: function() {
        this.orderBefore = {}, this.orderBefore.paragraph = this.getOrder("paragraph"), this.orderBefore.link = this.getOrder("link")
    },
    generateCSS: function(e, o, t, r) {
        It.generateCSS(e, o, t, this.getList(e), r)
    },
    findStyle: function(e, o) {
        return Eo.default.findWhere(this.getList(e), {
            _name: o
        })
    },
    redefineStyle: function(e, o, t) {
        let r = this.getList(e, !0);
        for (var i = 0; i < r.length && r[i]._name != o; i++);
        if (i >= r.length) return;
        let n = Eo.default.clone(r[i]);
        r[i] = Eo.default.extend(n, t), this.save(e + "_styles", r)
    },
    reorder: function(e, o) {
        let t = this.getList(e, !0);
        for (let r = 0; r < t.length; r++) t[r] = Eo.default.clone(t[r]), t[r]._sort = Eo.default.indexOf(o, t[r]._name);
        this.set(e + "_styles", t)
    },
    addStyle: function(e, o) {
        let t = this.getList(e, !0);
        return o = Eo.default.extend({
            _caption: "New style",
            _name: e + "-" + Je.generateUUID(),
            _sort: t.length
        }, o), t.push(o), this.save(e + "_styles", t), o
    },
    deleteStyle: function(e, o) {
        let t = this.getList(e),
            r = Eo.default.findWhere(t, {
                _name: o
            });
        r && (t = Eo.default.without(t, r), this.save(e + "_styles", t))
    },
    duplicateStyle: function(e, o) {
        let t = this.getList(e, !0),
            r = Eo.default.findWhere(t, {
                _name: o
            });
        if (!r) return;
        let i = Eo.default.clone(r);
        return i._name = e + "-" + Je.generateUUID(), t.push(i), this.save(e + "_styles", t), i
    },
    changeStyle: function(e, o) {
        let t = this.getList(e, !0);
        for (var r = 0; r < t.length && t[r]._name != o; r++);
        r >= t.length || (t[r] = Eo.default.clone(t[r]), this.save(e + "_styles", t))
    },
    restoreStyle: function(e, o, t) {
        let r = this.getList(e);
        for (var i = 0; i < r.length && r[i]._name != o; i++);
        i >= r.length || Eo.default.extend(r[i], t)
    }
};
var Rk = Bk;
I6();
var Yn = M(Ht()),
    tp = M(Mo()),
    st = M(lt());
en();
var zk = {
    "template-constructor-grid-guides-controller": Ot `
    <% if (offsetTop) { %>
        <div class="guide-columns ghost <%= zeroGutter ? 'zero-gutter' : '' %>" style="height: <%= offsetTop %>px; bottom: auto;">
            <% for (var i = 0; i < columnWidths.length; i++) { %>
                <div class="guide-column" style="width: <%= columnWidths[i] %>px;"></div>
            <% };%>
        </div>
    <% };%>
    <div class="guide-columns <%= zeroGutter ? 'zero-gutter' : '' %>" style="top: <%= offsetTop %>px; bottom: <%= offsetBottom %>px;">
        <% for (var i = 0; i < columnWidths.length; i++) { %>
            <div class="guide-column" style="width: <%= columnWidths[i] %>px;">
                <% if (zeroGutter) { %>
                    <svg viewBox="0 0 2 <%= maxGuideHeight %>" xmlns="http://www.w3.org/2000/svg" class="left-stroke">
                        <line x1="<%= i === 0 ? 0.5 : 1 %>" y1="0" x2="<%= i === 0 ? 0.5 : 1 %>" y2="100%" stroke-width="1"></line>
                    </svg>
                    <svg viewBox="0 0 2 <%= maxGuideHeight %>" xmlns="http://www.w3.org/2000/svg" class="right-stroke">
                        <line x1="<%= i === columnWidths.length - 1 ? 1.5 : 1 %>" y1="0" x2="<%= i === columnWidths.length - 1 ? 1.5 : 1 %>" y2="100%" stroke-width="1"></line>
                    </svg>
                <% };%>
            </div>
        <% };%>
    </div>
    <% if (offsetBottom) { %>
        <div class="guide-columns ghost <%= zeroGutter ? 'zero-gutter' : '' %>" style="height: <%= offsetBottom %>px; top: auto;">
            <% for (var i = 0; i < columnWidths.length; i++) { %>
                <div class="guide-column" style="width: <%= columnWidths[i] %>px;"></div>
            <% };%>
        </div>
    <% };%>
`
};
var Ek = M(Mo()),
    Ys = M(lt());
Fd();
var XI = nr.extend({
        idAttribute: "_id",
        name: "Guides",
        addPage: function(e, o) {
            if (Ys.default.isArray(this.get("pages"))) {
                let t = Ys.default.clone(this.get("pages"));
                t.push(e), this.set({
                    pages: t
                }, o)
            }
            return this
        },
        removePage: function(e) {
            return Ys.default.isArray(this.get("pages")) && this.set({
                pages: Ys.default.without(this.get("pages"), e)
            }), this
        }
    }),
    Ak = Ek.default.Collection.extend({
        model: XI,
        url: "/api/guides/",
        initialize: function(e, o) {
            this.url += "" + o.mag.get("num_id") + "/"
        },
        getByPage: function(e) {
            let o = this.find(function(t) {
                return Ys.default.contains(t.get("pages") || [], e.id) && t.get("viewport") === e.getCurrentViewport()
            });
            if (!o) {
                let t = RM.constructorRouter.mag.get("_id"),
                    r = RM.constructorRouter.mag.pages.map(n => n.get("_id")),
                    i;
                try {
                    i = JSON.parse(window.sessionStorage.getItem("RM-lastUsedGuidesSet") || "{}")[t]
                } catch {}
                i && (o = this.find(function(n) {
                    return Ys.default.intersection(n.get("pages") || [], r).length && n.get("viewport") === e.getCurrentViewport() && n.get("index") === i
                }))
            }
            return o || this.find(function(t) {
                return t.get("index") === 1 && t.get("viewport") === e.getCurrentViewport()
            })
        },
        getByIndex: function(e, o) {
            return this.find(function(t) {
                return t.get("index") === e && t.get("viewport") === o
            })
        },
        setPage: function(e, o) {
            let t = this.getByPage(e);
            t.get("viewport") === e.getCurrentViewport() && t.removePage(e.id).save(), this.getByIndex(o, e.getCurrentViewport()).addPage(e.id).save()
        },
        comparator: function(e) {
            return e.get("index") + e.get("viewport")
        }
    });
var Xs = M(Ht()),
    vo = M(a0()),
    Eu = class {
        constructor(o, t) {
            this.type = ["right", "left"].includes(t) ? "horizontal" : "vertical", this.$el = (0, Xs.default)(`<div class="distance-line distance-line-${this.type}"></div>`).appendTo(o), this.$length = (0, Xs.default)('<span class="distance-length"></span>').appendTo(this.$el), ["right", "left"].includes(t) ? (this.$markerLeft = (0, Xs.default)('<span class="distance-marker-left"></span>').appendTo(this.$el), this.$markerRight = (0, Xs.default)('<span class="distance-marker-right"></span>').appendTo(this.$el)) : ["top", "bottom"].includes(t) && (this.$markerTop = (0, Xs.default)('<span class="distance-marker-top"></span>').appendTo(this.$el), this.$markerBottom = (0, Xs.default)('<span class="distance-marker-bottom"></span>').appendTo(this.$el)), this.length = 0
        }
        destroy() {
            this.$el.remove()
        }
        updateLength(o) {
            this.length = o, this.$length.text(o)
        }
        update(o, t, r, i = !1, n = !1) {
            let s = RM.constructorRouter.zoom.getZoom(),
                l = o * s,
                p = t * s,
                d = r * s;
            this.$el.toggleClass("only-text", i), this.$el.toggleClass("flip-text", n);
            let c = Math.round(Math.abs(t - r));
            if (this.type === "vertical" && c < 11) {
                this.hide();
                return
            }
            if (this.type === "horizontal" && c < 8) {
                this.hide();
                return
            }
            this.length !== c && this.updateLength(c), this.type === "horizontal" ? this.$el.css({
                height: 1,
                left: Math.min(p, d),
                width: Math.abs(p - d),
                top: l
            }) : this.$el.css({
                width: 1,
                top: Math.min(p, d),
                height: Math.abs(p - d),
                left: l
            }), this.$el.toggleClass("visible", !0)
        }
        hide() {
            this.$el.removeClass("visible")
        }
    },
    Ks = class e {
        constructor(o) {
            this.workspace = o, this.linePool = vo.default.map(["top", "left", "right", "bottom"], t => ({
                direction: t,
                line: new Eu(o.$origin, t)
            }))
        }
        getMovedRects(o) {
            let t = 1 / 0,
                r = 1 / 0,
                i = -1 / 0,
                n = -1 / 0;
            return vo.default.each(o, s => {
                t = Math.min(t, s.latestPosSizeAngle.bb_left), r = Math.min(r, s.latestPosSizeAngle.bb_top), i = Math.max(i, s.latestPosSizeAngle.bb_left + s.latestPosSizeAngle.bb_width), n = Math.max(n, s.latestPosSizeAngle.bb_top + s.latestPosSizeAngle.bb_height)
            }), {
                bb_left: t,
                bb_top: r,
                bb_width: i - t,
                bb_height: n - r
            }
        }
        static rectIntersection(o, t, r) {
            switch (r) {
                case "top":
                case "bottom":
                    {
                        let [i, n] = o.bb_left < t.bb_left ? [o, t] : [t, o],
                        s = n.bb_left - i.bb_left < i.bb_width,
                        l = r === "top" ? o.bb_top > t.bb_top : o.bb_top + o.bb_height < t.bb_top;
                        return s && l
                    }
                case "left":
                case "right":
                    {
                        let [i, n] = o.bb_top < t.bb_top ? [o, t] : [t, o],
                        s = n.bb_top - i.bb_top < i.bb_height;
                        return (r === "left" ? o.bb_left > t.bb_left : o.bb_left + o.bb_width < t.bb_left) && s
                    }
            }
            return !1
        }
        static rectDist(o, t, r) {
            switch (r) {
                case "left":
                    return o.bb_left < t.bb_left + t.bb_width ? 1 / 0 : o.bb_left - (t.bb_left + t.bb_width);
                case "right":
                    return t.bb_left < o.bb_left + o.bb_width ? 1 / 0 : t.bb_left - (o.bb_left + o.bb_width);
                case "top":
                    return o.bb_top < t.bb_top + t.bb_height ? 1 / 0 : o.bb_top - (t.bb_top + t.bb_height);
                case "bottom":
                    return t.bb_top < o.bb_top + o.bb_height ? 1 / 0 : t.bb_top - (o.bb_top + o.bb_height)
            }
        }
        getCloserRect(o, t, r) {
            let i = vo.default.difference(o, t),
                n = this.getMovedRects(t),
                s = vo.default.filter(i, d => !d.outofbox && !d.model.get("fixed_position") && e.rectIntersection(n, d.latestPosSizeAngle, r)),
                l = vo.default.filter(s, d => isFinite(e.rectDist(n, d.latestPosSizeAngle, r))),
                p = vo.default.sortBy(l, d => e.rectDist(n, d.latestPosSizeAngle, r))[0];
            return {
                softIntersection: !!s.length,
                closerRect: p && p.latestPosSizeAngle
            }
        }
        static getOffset(o, t, r) {
            switch (r) {
                case "right":
                case "left":
                    {
                        if (!t) return o.bb_top + o.bb_height / 2;
                        let [i, n] = o.bb_top < t.bb_top ? [o, t] : [t, o];
                        return i.bb_top + i.bb_height > n.bb_top + n.bb_height ? n.bb_top + n.bb_height / 2 : n.bb_top + (i.bb_top + i.bb_height - n.bb_top) / 2
                    }
                case "top":
                case "bottom":
                    {
                        if (!t) return o.bb_left + o.bb_width / 2;
                        let [i, n] = o.bb_left < t.bb_left ? [o, t] : [t, o];
                        return i.bb_left + i.bb_width > n.bb_left + n.bb_width ? n.bb_left + n.bb_width / 2 : n.bb_left + (i.bb_left + i.bb_width - n.bb_left) / 2
                    }
            }
        }
        drawLine({
            line: o,
            direction: t
        }, r, i, {
            closerRect: n,
            softIntersection: s
        }, l, p, d) {
            if (!n && s) {
                o.hide();
                return
            }
            let c = 0,
                m = 0;
            switch (t) {
                case "right":
                    {
                        c = r.bb_left + r.bb_width,
                        m = n ? n.bb_left : i.width;
                        break
                    }
                case "left":
                    {
                        c = r.bb_left,
                        m = n ? n.bb_left + n.bb_width : 0;
                        break
                    }
                case "top":
                    {
                        c = r.bb_top,
                        m = n ? n.bb_top + n.bb_height : 0;
                        break
                    }
                case "bottom":
                    {
                        c = r.bb_top + r.bb_height,
                        m = n ? n.bb_top : i.pageHeight;
                        break
                    }
            }
            let u = !1;
            switch (t) {
                case "top":
                case "bottom":
                    m > i.top + i.height && (u = !0), m < i.top && (u = !0);
                    break;
                case "left":
                case "right":
            }
            if (u) {
                o.hide();
                return
            }
            o.update(l, c, m, p, d)
        }
        updateLine({
            line: o,
            direction: t
        }, r, i) {
            let n = this.getMovedRects(r),
                {
                    closerRect: s,
                    softIntersection: l
                } = this.getCloserRect(this.workspace.blocks, r, t);
            this.drawLine({
                line: o,
                direction: t
            }, n, i, {
                closerRect: s,
                softIntersection: l
            }, e.getOffset(n, s, t))
        }
        collectLines(o, t, r, i) {
            let n = vo.default.chain(o).filter(g => {
                let h = ul(g.latestPosSizeAngle, g.model.get("fixed_position"), i),
                    [b, x] = ["top", "bottom"].includes(t) ? ["bb_left", "bb_width"] : ["bb_top", "bb_height"];
                if (!(Math.abs(r[b] - h[b]) < 8 && r[x] === h[x])) return !1;
                switch (t) {
                    case "left":
                        return h.bb_left + h.bb_width < r.bb_left;
                    case "right":
                        return h.bb_left > r.bb_left + r.bb_width;
                    case "top":
                        return h.bb_top + h.bb_height < r.bb_top;
                    case "bottom":
                        return h.bb_top > r.bb_top + r.bb_height
                }
            }).sortBy(g => {
                let h = ["left", "top"].includes(t) ? -1 : 1,
                    b = ["left", "right"].includes(t) ? "bb_left" : "bb_top",
                    x = ul(g.latestPosSizeAngle, g.model.get("fixed_position"), i);
                return h * x[b]
            }).value();
            if (n.length < 2) return;
            let s = n[0],
                l = ul(s.latestPosSizeAngle, s.model.get("fixed_position"), i),
                p = ul(n[1].latestPosSizeAngle, n[1].model.get("fixed_position"), i),
                [d, c] = ["left", "right"].includes(t) ? ["bb_left", "bb_width"] : ["bb_top", "bb_height"],
                m = l[d] - p[d] - p[c],
                u = !0;
            return {
                coord: l[d] + l[c] + m,
                block: s,
                inline: vo.default.filter(n, (g, h) => {
                    if (h > 1 && u) {
                        let b = ul(g.latestPosSizeAngle, g.model.get("fixed_position"), i);
                        u = ul(n[h - 1].latestPosSizeAngle, n[h - 1].model.get("fixed_position"), i)[d] - b[d] - b[c] === m
                    }
                    return u
                })
            }
        }
        deleteLinePool() {
            this.linePool.forEach(o => {
                o.line.destroy()
            }), this.linePool = []
        }
        checkIfFilteringIsNeeded({
            guide: o,
            guides: t,
            renderedDistances: r,
            movedRect: i,
            isTopBottomFiltering: n = !1,
            isLeftRightFiltering: s = !1
        }) {
            let l = o.blockBox,
                p = n ? "center" : s ? "middle" : null;
            if (s) {
                let d = l.bb_left > i.bb_left + i.bb_width,
                    c = i.bb_left > l.bb_left + l.bb_width;
                if (!d && !c) return !1
            } else if (n) {
                let d = i.bb_top > l.bb_top + l.bb_height,
                    c = l.bb_top > i.bb_top + i.bb_height;
                if (!d && !c) return !1
            }
            return p && [p].includes(o.type) ? !r.includes(o) : r.includes(o) ? !1 : !t.find(c => {
                let m = c.blockBox;
                if (m.bb_height === l.bb_height && m.bb_width === l.bb_width && m.bb_top === l.bb_top && m.bb_left === l.bb_left && [p].includes(c.type)) return !0
            })
        }
        generateLinePool(o, t) {
            let r = [...this.linePool];
            o.forEach(i => {
                let n = i.blockBox,
                    s = t.bb_left > n.bb_left + n.bb_width,
                    l = n.bb_left > t.bb_left + t.bb_width,
                    p = t.bb_top > n.bb_top + n.bb_height,
                    d = n.bb_top > t.bb_top + t.bb_height,
                    c = null;
                if (["top", "bottom", "middle"].includes(i.type) ? c = s ? "left" : l ? "right" : null : ["left", "right", "center"].includes(i.type) && (c = p ? "top" : d ? "bottom" : null), c) {
                    let m = new Eu(this.workspace.$origin, c);
                    r.push({
                        direction: c,
                        line: m,
                        cid: i.cid
                    })
                }
            }), this.linePool = [...r]
        }
        updateForRect(o, t, r, i, n) {
            let s = i ? o : { ...o,
                    bb_left: r.x,
                    bb_top: r.y
                },
                l = vo.default.filter(t, m => m ? .block && ["top", "bottom", "middle"].includes(m.type)),
                p = vo.default.filter(t, m => m ? .block && ["left", "right", "center"].includes(m.type)),
                d = [];
            this.deleteLinePool(), this.generateLinePool(l, s), this.generateLinePool(p, s);
            let c = [];
            vo.default.each(this.linePool, m => {
                switch (m.direction) {
                    case "left":
                    case "right":
                        {
                            let u = vo.default.chain(l).filter(g => this.checkIfFilteringIsNeeded({
                                guide: g,
                                guides: l,
                                renderedDistances: c,
                                movedRect: s,
                                isLeftRightFiltering: !0
                            })).sortBy(g => {
                                let h = g.blockBox;
                                return m.direction === "left" ? h.bb_left : -h.bb_left + h.bb_width
                            }).value();
                            if (u.length) {
                                let g = vo.default.find(u, S => S.type === "middle"),
                                    h = g && g.block === u[0].block ? g : u[0],
                                    b = h.blockBox,
                                    x = 0;
                                x = h.y, c.push(h), this.drawLine(m, s, n, {
                                    closerRect: b,
                                    softIntersection: !1
                                }, x, !0, h.type === "bottom");
                                return
                            }
                            d.push(m);
                            break
                        }
                    case "top":
                    case "bottom":
                        {
                            let u = vo.default.chain(p).filter(g => this.checkIfFilteringIsNeeded({
                                guide: g,
                                guides: p,
                                renderedDistances: c,
                                movedRect: s,
                                isTopBottomFiltering: !0
                            })).sortBy(g => {
                                let h = g.blockBox;
                                return m.direction === "top" ? h.bb_top : -h.bb_top + h.bb_height
                            }).value();
                            if (u.length) {
                                let g = vo.default.find(u, S => S.type === "center"),
                                    h = g && g.block === u[0].block ? g : u[0],
                                    b = h.blockBox,
                                    x = h.x;
                                c.push(h), this.drawLine(m, s, n, {
                                    closerRect: b,
                                    softIntersection: !1
                                }, x, !0);
                                return
                            }
                            d.push(m);
                            break
                        }
                }
            }), this.destroyDynLines(), vo.default.each(d, m => {
                m.line.hide()
            })
        }
        update() {}
        destroyDynLines() {
            this.dynLines && (vo.default.each(this.dynLines, o => {
                o.line.hide(), delete o.line
            }), this.dynLines = null)
        }
        hide() {
            this.destroyDynLines(), vo.default.each(this.linePool, o => {
                o.line.hide()
            })
        }
    },
    ul = (e, o, t) => {
        if (!o) return e;
        let r = e.bb_left,
            i = e.bb_top;
        switch (o) {
            case "nw":
            case "n":
            case "ne":
                i += t.top;
                break;
            case "e":
            case "c":
            case "w":
                i += t.top + t.height / 2 - e.bb_height / 2;
                break;
            case "sw":
            case "s":
            case "se":
                i = t.top + t.height - i - e.bb_height;
                break
        }
        switch (o) {
            case "nw":
            case "w":
            case "sw":
                r -= (t.viewportWidth - t.width) / 2;
                break;
            case "n":
            case "c":
            case "s":
                r += t.width / 2 - e.bb_width / 2;
                break;
            case "ne":
            case "e":
            case "se":
                r = t.width + (t.viewportWidth - t.width) / 2 - r - e.bb_width;
                break
        }
        return { ...e,
            bb_left: r,
            bb_top: i
        }
    };
Bo();
en();
var Dk = Ot `
    <div class="baseline-group <%= pale ? 'pale' : '' %>" style="top: <%= top %>px; height: <%= height %>px;">
        <% if (left) { %>
        <div class="left-baseline" style="width: <%= left || 0 %>px;">
            <% if (fill) { %>
            <div class="fill"></div>
            <% } %>
            <svg viewBox="0 0 <%= left %> 2" xmlns="http://www.w3.org/2000/svg" class="left-stroke">
                <line x1="0" y1="1" x2="100%" y2="1" stroke-width="1"></line>
            </svg>         
        </div>
        <% } %>
        <div class="middle-baseline" style="left: <%= left || 0 %>px; right: <%= right || 0 %>px;">
            <% if (fill) { %>
            <div class="fill"></div>
            <% } %>
            <svg viewBox="0 0 <%= maxGuideWidth %> 2" xmlns="http://www.w3.org/2000/svg" class="middle-stroke">
                <line x1="0" y1="1" x2="100%" y2="1" stroke-width="1"></line>
            </svg>
        </div>
        <% if (right) { %>
        <div class="right-baseline" style="width: <%= right || 0 %>px;">
            <% if (fill) { %>
            <div class="fill"></div>
            <% } %>
            <svg viewBox="0 0 <%= right %> 2" xmlns="http://www.w3.org/2000/svg" class="right-stroke">
                <line x1="0" y1="1" x2="100%" y2="1" stroke-width="1"></line>
            </svg>          
        </div>
        <% } %>
    </svg>
`;
E0();
$o();
Rs();
var $k = M(Ht());
Bo();
var Hk = M(Mo()),
    Au = 4,
    Du = .25,
    qn = [Du, .5, 1, 1.25, 2, Au],
    KI = 187,
    Lk = 189,
    Ok = 48,
    ZI = 2e3,
    JI = 4e3,
    Fk = Hk.default.View.extend({
        className: "zoom-panel hidden",
        zoom: void 0,
        sizesPanelShown: !1,
        typographyPanelShown: !1,
        guidesPanelShown: !1,
        hideTimeoutId: void 0,
        isZoomEnabled: !Modernizr.firefox,
        isZoomScaleEnabled: !Modernizr.firefox,
        zoomBeforeGesture: void 0,
        mag: void 0,
        router: void 0,
        initialize(e, o, t) {
            this.mag = o, this.router = e, this.isZoomEnabled && (t.append(this.$el), this.render(), Me.listenTo(e, "changeViewport", this.onViewportChange.bind(this)), Me.on("panel:showed", this.onControlPanelToggle.bind(this, !0)), Me.on("panel:hidden", this.onControlPanelToggle.bind(this, !1)), Me.on("panel:hiddenGroup", this.onControlPanelToggleGroup.bind(this, !1)), Me.on("sizes:shown", this.setSizesPanel.bind(this, !0)), Me.on("sizes:hidden", this.setSizesPanel.bind(this, !1)), Me.listenTo(o.edit_params, "change:sizes", this.onSizesModeToggle.bind(this)), Me.listenTo(o, "change:desktopWidth", this.onViewportWidthChange.bind(this)), Me.listenTo(o, "change:phoneWidth", this.onViewportWidthChange.bind(this)), Me.listenTo(e, "pageChange", this.onPageChange.bind(this)), this.isZoomScaleEnabled && Me.listenTo(o, "change:opts", (r, i) => {
                let n = r.previous("opts");
                n && i.scalableviewer !== n.scalableviewer && this.onScaleLayoutToggle(i.scalableviewer), n && i.scalewidth !== n.scalewidth && this.onMaxScaleWidthChange(i.scalewidth)
            }), document.addEventListener("keydown", this.onZoomKey.bind(this, e)), Modernizr.safari ? (document.addEventListener("gesturestart", this.onGesturePinchStart.bind(this)), document.addEventListener("gesturechange", this.onGesturePinch.bind(this, e))) : document.addEventListener("wheel", this.onWheelPinch.bind(this, e), {
                passive: !1
            }), window.addEventListener("resize", this.onResize.bind(this)))
        },
        render() {
            return this.$el.html((0, $k.default)(`<div class="zoom-panel-content"><span class="zoom-panel-value">${Math.round(this.getZoom()*100)}</span>%${this.isScaledZoomEnabled()?" Scaled layout":""}</div>`)), this
        },
        showPanel() {
            this.$el.removeClass("hidden")
        },
        hidePanel() {
            this.$el.addClass("hidden")
        },
        getZoomLevels() {
            let e = this.getScaleRatio();
            return this.allowFullscreen() && e !== 1 ? [...qn, e].sort() : qn
        },
        getZoom() {
            return this.isZoomEnabled && this.zoom || 1
        },
        setZoom(e) {
            if (this.isZoomEnabled) {
                let o = this.zoom;
                this.zoom = e, this.fullscreen = e === this.getScaleRatio(), this.render(), o && o !== e && this.togglePanel(!0), o !== e && Me.trigger("zoom", e, this.isFullScreenOrMore());
                let t = document.documentElement.style;
                t.setProperty("--workspace-zoom", e), t.setProperty("--workspace-inverse-zoom", `${1/e}`), t.setProperty("--workspace-inverse-zoom-px", `${1/e}px`)
            }
        },
        togglePanel(e) {
            window.clearTimeout(this.hideTimeoutId);
            let o = this.getZoom() !== 1 && (!this.isBoundToScreenWidth() || this.typographyPanelShown || this.guidesPanelShown || this.isSizesPanelVisible()),
                t = this.isBoundToScreenWidth() && (this.typographyPanelShown || this.guidesPanelShown || this.isSizesPanelVisible());
            (e || o) && this.showPanel(), (!o || t) && (this.hideTimeoutId = window.setTimeout(() => this.hidePanel(), t ? JI : ZI))
        },
        getNextZoom(e, o) {
            let t = this.getZoomLevels(),
                r = t.indexOf(e || 1),
                i = r > -1 ? r + (o ? -1 : 1) : t.indexOf(this.getClosestZoom(e, o));
            return t[Math.max(Math.min(i, t.length - 1), 0)]
        },
        getClosestZoom(e, o) {
            let t = this.getZoomLevels();
            return e === t[0] && o || e === t[t.length - 1] && !o ? e : t.reduce((r, i) => r < e && i > e ? o ? r : i : o ? i : r, -1 / 0)
        },
        isFullScreenZoom() {
            return this.fullscreen
        },
        isFullScreenOrMore() {
            return this.getZoom() >= this.getScaleRatio()
        },
        isDefaultZoom() {
            return this.getZoom() === 1
        },
        allowFullscreen() {
            return this.mag.get("opts").scalableviewer && this.router.workspace && this.router.workspace.viewport === "default" && this.isZoomScaleEnabled
        },
        isScaledZoomEnabled() {
            return this.getZoom() === this.getScaleRatio() && this.isFullScreenZoom()
        },
        isBoundToScreenWidth() {
            return this.allowFullscreen() && this.isFullScreenZoom()
        },
        isSizesPanelVisible() {
            return this.sizesPanelShown && this.mag.edit_params.get("sizes")
        },
        getCenter(e, o, t) {
            let i = o.page.getViewportParam(o.viewport, "height");
            return o.getSelectedBlocks().length ? pt.getBoundingBoxOfBlocks(o.getSelectedBlocks()) : {
                left: t.scrollLeft / e + Math.min(o.mag.getViewportWidth(o.page.get("viewport")) * e, window.innerWidth) / 2 / e - 10 / 2,
                top: t.scrollTop / e + Math.min(i * e, window.innerHeight) / 2 / e - 10 / 2,
                width: 10,
                height: 10
            }
        },
        getCenteringOffset(e, o, t, r = {}) {
            return {
                left: Math.max((r.left + r.width / 2) * e - t.offsetWidth / 2, 0),
                top: Math.max((r.top + r.height / 2) * e - t.offsetHeight / 2, 0)
            }
        },
        zoomTo(e, o, t, r = void 0) {
            if (this.setZoom(e), r) {
                let {
                    left: i,
                    top: n
                } = this.getCenteringOffset(e, o, t, r);
                t.scrollLeft = i, t.scrollTop = n
            }
            window.dispatchEvent(new Event("resize"))
        },
        onZeroZoomKey(e) {
            if (e.name !== "default") return;
            let o, t = this.getZoom(),
                r = this.allowFullscreen(),
                i = this.getScaleRatio();
            return t === i ? o = 1 : t !== 1 ? o = r ? i : 1 : o = i, o
        },
        onZoomKey(e, o) {
            let t = e.workspace.getViewports().find(i => i.isCurrent),
                r = Modernizr.mac ? o.metaKey : o.ctrlKey;
            if ([Lk, KI, Ok].includes(o.keyCode) && r) {
                o.preventDefault();
                let i = o.keyCode === Ok ? this.onZeroZoomKey(t) : this.getNextZoom(this.getZoom(), o.keyCode === Lk);
                this.zoomTo(i, e.workspace, e.workspace.$container[0], this.getCenter(this.getZoom(), e.workspace, e.workspace.$container[0]))
            }
        },
        onWheelPinch(e, o) {
            if (o.ctrlKey) {
                o.preventDefault();
                let t = o.deltaY * .015;
                this.zoomTo(Math.min(Math.max(qn[0], this.getZoom() - t), qn[qn.length - 1]), e.workspace, e.workspace.$container[0], this.getCenter(this.getZoom(), e.workspace, e.workspace.$container[0]))
            }
        },
        onGesturePinchStart(e) {
            e.preventDefault(), this.zoomBeforeGesture = this.getZoom()
        },
        onGesturePinch(e, o) {
            if (o.preventDefault(), o.scale) {
                let t = o.scale - 1;
                this.zoomTo(Math.min(Math.max(qn[0], this.zoomBeforeGesture + t), qn[qn.length - 1]), e.workspace, e.workspace.$container[0], this.getCenter(this.getZoom(), e.workspace, e.workspace.$container[0]))
            }
        },
        onResize() {
            this.setZoom(this.isBoundToScreenWidth() ? this.getScaleRatio() : this.getZoom())
        },
        onMaxScaleWidthChange(e) {
            this.isBoundToScreenWidth() && (this.setZoom(this.getScaleRatio({
                maxScaleWidth: e
            })), window.dispatchEvent(new Event("resize")))
        },
        onViewportWidthChange(e, o) {
            this.isBoundToScreenWidth() && (this.setZoom(this.getScaleRatio({
                viewportWidth: o
            })), window.dispatchEvent(new Event("resize")))
        },
        onSizesModeToggle(e) {
            e.get("sizes") !== e.previous("sizes") && this.togglePanel()
        },
        onScaleLayoutToggle(e) {
            e && this.allowFullscreen() && (this.isDefaultZoom() || !this.zoom) ? (this.setZoom(this.getScaleRatio()), window.dispatchEvent(new Event("resize"))) : !e && this.isFullScreenZoom() && (this.setZoom(1), window.dispatchEvent(new Event("resize"))), Me.trigger("zoom:fullscreen:toggle")
        },
        setSizesPanel(e) {
            let o = this.sizesPanelShown !== e;
            this.sizesPanelShown = e, o && this.togglePanel()
        },
        setTypographyPanel(e) {
            let o = this.typographyPanelShown !== e;
            this.typographyPanelShown = e, o && this.togglePanel()
        },
        setGuidesPanel(e) {
            let o = this.guidesPanelShown !== e;
            this.guidesPanelShown = e, o && this.togglePanel()
        },
        onControlPanelToggleGroup(e, o) {
            o.includes("guides") && this.setGuidesPanel(e)
        },
        onControlPanelToggle(e, o) {
            o === "guides" && this.setGuidesPanel(e)
        },
        onPageChange() {
            let e = this.getZoom();
            this.setZoom(this.allowFullscreen() ? this.getScaleRatio() : 1);
            let o = this.getZoom();
            e !== o && window.dispatchEvent(new Event("resize")), this.togglePanel()
        },
        onViewportChange() {
            this.setZoom(this.allowFullscreen() ? this.getScaleRatio() : 1), window.dispatchEvent(new Event("resize"))
        },
        getScaleRatio({
            viewportWidth: e,
            minScaleWidth: o,
            maxScaleWidth: t
        } = {}) {
            return xd.getLimitedRatio(e || this.mag.getViewportWidth(this.router.workspace ? .viewport), t || this.mag.get("opts").scalewidth, o || De.dictionary.default.min_scale_width, !1)
        }
    });
Mi();
Dn();
var Lu = class {
    constructor(o) {
        z(this, "horizontalLines");
        z(this, "verticalLines");
        z(this, "maxStepForHardGridSnapping");
        z(this, "minStickingDistance");
        this.horizontalLines = [], this.verticalLines = [], this.maxStepForHardGridSnapping = o.maxStepForHardGridSnapping, this.minStickingDistance = o.minStickingDistance
    }
    setNearestHorizontalLine(o) {
        this.horizontalLines.push(o)
    }
    setNearestVerticalLine(o) {
        this.verticalLines.push(o)
    }
    removeLines(o = null) {
        if (o) {
            let t = [...this.verticalLines],
                r = [...this.horizontalLines];
            o === "baseline" ? r = r.filter(i => i.lineType !== o) : o === "guideline" ? t = t.filter(i => i.lineType !== o) : (t = t.filter(i => i.lineType !== o), r = r.filter(i => i.lineType !== o)), this.verticalLines = [...t], this.horizontalLines = [...r]
        } else this.verticalLines = [], this.horizontalLines = []
    }
    findNearestGridLines({
        blockCoords: o,
        step: t,
        leftBorderX: r
    }) {
        let i = {
                x: Math.round(o.x),
                y: Math.round(o.y),
                width: Math.round(o.width),
                height: Math.round(o.height)
            },
            n = (i.x - r) % t,
            s = (i.x - r + i.width) % t,
            l = i.y % t,
            p = (i.y + i.height) % t;
        if (this.removeLines("baseline"), this.removeLines("guideline"), this.removeLines("gridLine"), this.maxStepForHardGridSnapping > t) {
            let d = Math.min(s, t - s) < Math.min(n, t - n) ? s : n,
                c = Math.min(l, t - l) < Math.min(p, t - p) ? l : p,
                m = d < t - d ? -d : t - d,
                u = c < t - c ? -c : t - c;
            this.setNearestVerticalLine({
                x: Math.round(i.x + m),
                lineType: "gridLine",
                delta: d,
                isVerticalSnapping: !0
            }), this.setNearestHorizontalLine({
                y: Math.round(i.y + u),
                lineType: "gridLine",
                delta: c,
                isHorizontalSnapping: !0
            })
        } else {
            let d = n,
                c = t - n,
                m = s,
                u = t - s,
                g = l,
                h = t - l,
                b = p,
                x = t - p,
                S = d < c ? -d : c,
                v = m < u ? -m : u,
                P = g < h ? -g : h,
                C = b < x ? -b : x,
                k = Math.abs(S) < Math.abs(v) ? S : v,
                T = Math.abs(P) < Math.abs(C) ? P : C;
            Math.abs(k) < this.minStickingDistance && this.setNearestVerticalLine({
                x: i.x + k,
                lineType: "gridLine",
                delta: Math.abs(k),
                isVerticalSnapping: !0
            }), Math.abs(T) < this.minStickingDistance && this.setNearestHorizontalLine({
                y: i.y + T,
                lineType: "gridLine",
                delta: Math.abs(T),
                isHorizontalSnapping: !0
            })
        }
    }
    findNearestGuidelines({
        guidelines: o,
        blockCoords: t
    }) {
        this.removeLines("gridLine"), this.removeLines("guideline"), o.forEach(r => {
            let i = Math.abs(r - t.x),
                n = Math.abs(r - t.x - t.width);
            i < this.minStickingDistance && this.setNearestVerticalLine({
                x: r,
                lineType: "guideline",
                delta: i,
                isLeftSnapping: !0
            }), n < this.minStickingDistance && this.setNearestVerticalLine({
                x: r,
                lineType: "guideline",
                delta: n,
                isRightSnapping: !0
            })
        })
    }
    findNearestBaselines({
        baselines: o,
        blockCoords: t
    }) {
        this.removeLines("gridLine"), this.removeLines("baseline"), o.forEach(r => {
            let i = Math.abs(r.y - t.y),
                n = Math.abs(r.y - t.y - t.height);
            i < this.minStickingDistance && this.setNearestHorizontalLine({
                y: r.y,
                lineType: "baseline",
                delta: i,
                isTopSnapping: !0
            }), n < this.minStickingDistance && this.setNearestHorizontalLine({
                y: r.y,
                lineType: "baseline",
                delta: n,
                isBottomSnapping: !0
            })
        })
    }
    findNearestWidgetLines({
        widgetLines: o,
        blockCoords: t,
        movingFixeds: r
    }) {
        this.removeLines("widgetLine");
        let [i, n] = ep(r[0]);
        o.forEach(s => {
            let l = s.block && s.block.model.get("fixed_position") || "",
                [p, d] = ep(l);
            switch (s.type) {
                case "left":
                case "right":
                    {
                        if (p !== i) break;
                        let c = Math.abs(s.x - t.x),
                            m = Math.abs(s.x - t.x - t.width);c < this.minStickingDistance && this.setNearestVerticalLine({
                            x: s.x,
                            lineType: "widgetLine",
                            delta: c,
                            isLeftSnapping: !0
                        }),
                        m < this.minStickingDistance && this.setNearestVerticalLine({
                            x: s.x,
                            lineType: "widgetLine",
                            delta: m,
                            isRightSnapping: !0
                        });
                        break
                    }
                case "top":
                case "bottom":
                    {
                        if (d !== n) break;
                        let c = Math.abs(s.y - t.y),
                            m = Math.abs(s.y - t.y - t.height);c < this.minStickingDistance && this.setNearestHorizontalLine({
                            y: s.y,
                            lineType: "widgetLine",
                            delta: c,
                            isTopSnapping: !0
                        }),
                        m < this.minStickingDistance && this.setNearestHorizontalLine({
                            y: s.y,
                            lineType: "widgetLine",
                            delta: m,
                            isBottomSnapping: !0
                        });
                        break
                    }
                case "center":
                    {
                        if (p !== i) break;
                        let c = Math.abs(s.x - t.x - Math.floor(t.width / 2));c < this.minStickingDistance && this.setNearestVerticalLine({
                            x: s.x,
                            lineType: "widgetLine",
                            delta: c,
                            isCenterSnapping: !0
                        });
                        break
                    }
                case "middle":
                    {
                        if (d !== n) break;
                        let c = Math.abs(s.y - t.y - Math.floor(t.height / 2));c < this.minStickingDistance && this.setNearestHorizontalLine({
                            y: s.y,
                            lineType: "widgetLine",
                            delta: c,
                            isMiddleSnapping: !0
                        });
                        break
                    }
            }
            s.toggleOpacity(0)
        })
    }
    getLineForVerticalSnapping(o) {
        let t = [...this.verticalLines];
        return t.sort((r, i) => r.delta - i.delta), t.length > 0 ? { ...t[0]
        } : { ...o
        }
    }
    getLineForHorizontalSnapping(o) {
        let t = [...this.horizontalLines];
        return t.sort((r, i) => r.delta - i.delta), t.length > 0 ? { ...t[0]
        } : { ...o
        }
    }
    snapToLine({
        blockCoords: o,
        gridActivated: t,
        guidesActivated: r
    }) {
        t || this.removeLines("gridLine"), r || (this.removeLines("guideline"), this.removeLines("baseline"));
        let i = o ? .fixed_position && o.fixed_position.length > 0,
            n = {
                x: i ? o.x : Math.round(o.x),
                y: i ? o.y : Math.round(o.y),
                width: i ? o.width : Math.round(o.width),
                height: i ? o.height : Math.round(o.height)
            },
            s = {
                x: n.x,
                y: n.y
            },
            l = { ...s
            },
            p = this.getLineForVerticalSnapping(s),
            d = this.getLineForHorizontalSnapping(s);
        return p.isRightSnapping ? l.x = p.x - n.width : p.isLeftSnapping ? l.x = p.x : p.isCenterSnapping && (l.x = p.x - Math.ceil(n.width / 2)), d.isBottomSnapping ? l.y = d.y - n.height : d.isTopSnapping ? l.y = d.y : d.isMiddleSnapping && (l.y = d.y - Math.ceil(n.height / 2)), p.isVerticalSnapping && (l.x = p.x), d.isHorizontalSnapping && (l.y = d.y), {
            x: i ? l.x : Math.round(l.x),
            y: i ? l.y : Math.round(l.y)
        }
    }
};
Hc();
var Nk = ({
    deltaCorrectedX: e,
    deltaCorrectedY: o
}) => {
    let t = {
        right: !1,
        left: !1,
        top: !1,
        bottom: !1
    };
    return Math.abs(e) > Math.abs(o) ? e < 0 ? t.left = !0 : e > 0 && (t.right = !0) : Math.abs(e) < Math.abs(o) && (o < 0 ? t.top = !0 : o > 0 && (t.bottom = !0)), t
};

function Wk({
    step: e,
    leftBorderX: o,
    direction: t,
    correctedBox: r,
    originalBox: i,
    isSidePointProportional: n,
    fromCenter: s
}) {
    let l = { ...i
        },
        p = Math.round(o);

    function d({
        source: c,
        step: m
    }) {
        let u = c % m;
        return u < m - u ? -u : m - u
    }
    switch (t) {
        case "n":
            {
                let c = d({
                        source: r.top,
                        step: e
                    }),
                    m = (r.height - c) / i.height,
                    u = i.width / 2 - i.width * m / 2;s ? (l.height = r.height - c * 2, l.top = r.top + c) : (l.height = r.height - c, l.top = r.top + c),
                n && !s && (l.left = i.left + u);
                break
            }
        case "s":
            {
                let c = r.top + r.height,
                    m = d({
                        source: c,
                        step: e
                    }),
                    u = (r.height + m) / i.height,
                    g = i.width / 2 - i.width * u / 2;s ? (l.top = r.top - m, l.height = r.height + m * 2) : l.height = r.height + m,
                n && !s && (l.left = i.left + g);
                break
            }
        case "w":
            {
                let c = r.left - p,
                    m = d({
                        source: c,
                        step: e
                    }),
                    u = (r.width - m) / i.width,
                    g = i.height / 2 - i.height * u / 2;s ? (l.width = r.width - m * 2, l.left = r.left + m) : (l.width = r.width - m, l.left = r.left + m),
                n && !s && (l.top = i.top + g);
                break
            }
        case "e":
            {
                let c = r.left + r.width - p,
                    m = d({
                        source: c,
                        step: e
                    }),
                    u = (r.width + m) / i.width,
                    g = i.height / 2 - i.height * u / 2;s ? (l.left = r.left - m, l.width = r.width + m * 2) : l.width = r.width + m,
                n && !s && (l.top = i.top + g);
                break
            }
        case "nw":
            {
                let c = r.top,
                    m = r.left - p,
                    u = d({
                        source: c,
                        step: e
                    }),
                    g = d({
                        source: m,
                        step: e
                    });s ? (l.top = r.top + u, l.height = r.height - u * 2, l.left = r.left + g, l.width = r.width - g * 2) : (l.top = r.top + u, l.height = r.height - u, l.left = r.left + g, l.width = r.width - g)
            }
            break;
        case "se":
            {
                let c = r.top + r.height,
                    m = r.left + r.width - p,
                    u = d({
                        source: c,
                        step: e
                    }),
                    g = d({
                        source: m,
                        step: e
                    });s ? (l.top = r.top - u, l.height = r.height + u * 2, l.left = r.left - g, l.width = r.width + g * 2) : (l.height = r.height + u, l.width = r.width + g)
            }
            break;
        case "ne":
            {
                let c = r.top,
                    m = r.left + r.width - p,
                    u = d({
                        source: c,
                        step: e
                    }),
                    g = d({
                        source: m,
                        step: e
                    });s ? (l.top = r.top + u, l.height = r.height - u * 2, l.left = r.left - g, l.width = r.width + g * 2) : (l.top = r.top + u, l.height = r.height - u, l.width = r.width + g);
                break
            }
        case "sw":
            {
                let c = r.top + r.height,
                    m = r.left - p,
                    u = d({
                        source: c,
                        step: e
                    }),
                    g = d({
                        source: m,
                        step: e
                    });s ? (l.top = r.top - u, l.height = r.height + u * 2, l.left = r.left + g, l.width = r.width - g * 2) : (l.height = r.height + u, l.left = r.left + g, l.width = r.width - g);
                break
            }
    }
    return l.left = Math.ceil(parseFloat(l.left.toFixed(2))), l.top = Math.ceil(parseFloat(l.top.toFixed(2))), l.width = Math.floor(parseFloat(l.width.toFixed(2))), l.height = Math.floor(parseFloat(l.height.toFixed(2))), l
}

function cf({
    sticky: e,
    verticalLines: o,
    horizontalLines: t,
    leftBorderX: r,
    direction: i,
    correctedBox: n,
    originalBox: s,
    isSidePointProportional: l,
    fromCenter: p
}) {
    let d = p ? 2 : 1,
        c = {
            left: Math.floor(parseFloat(n.left.toFixed(2))),
            top: Math.floor(parseFloat(n.top.toFixed(2))),
            width: Math.ceil(parseFloat(n.width.toFixed(2))),
            height: Math.ceil(parseFloat(n.height.toFixed(2)))
        },
        m = { ...s
        },
        u = o.find(h => ["nw", "w", "sw"].includes(i) && Math.abs(h - n.left) < e || ["ne", "e", "se"].includes(i) && Math.abs(h - (n.left + n.width)) < e) || null,
        g = t.find(h => ["nw", "n", "ne"].includes(i) && Math.abs(h - n.top) < e || ["sw", "s", "se"].includes(i) && Math.abs(h - (n.top + n.height)) < e) || null;
    switch (i) {
        case "w":
            {
                if (u) {
                    let b = s.left - r - (u - r);
                    if (m.left = u, m.width = s.width + b * d, l && !p) {
                        let x = m.width / s.width,
                            S = s.height / 2 - s.height * x / 2;
                        m.top = s.top + S, m.height = s.height + S
                    }
                } else m = { ...c
                };
                break
            }
        case "e":
            {
                if (u) {
                    let h = s.left + s.width,
                        b = u - r - (h - r);
                    if (m.left = p ? s.left - b : s.left, m.width = s.width + b * d, l && !p) {
                        let x = m.width / s.width,
                            S = s.height / 2 - s.height * x / 2;
                        m.top = s.top + S, m.height = s.height + S
                    }
                } else m = { ...c
                };
                break
            }
        case "n":
            {
                if (g) {
                    let h = s.top,
                        b = g - h;
                    if (m.top = g, m.height = s.height - b * d, l && !p) {
                        let x = m.height / s.height,
                            S = s.width / 2 - s.width * x / 2;
                        m.left = s.left + S, m.width = s.width + S
                    }
                } else m = { ...c
                };
                break
            }
        case "s":
            {
                if (g) {
                    let h = s.top + s.height,
                        b = g - h;
                    if (m.top = p ? s.top - b : s.top, m.height = s.height + b * d, l && !p) {
                        let x = m.height / s.height,
                            S = s.width / 2 - s.width * x / 2;
                        m.left = s.left + S, m.width = s.width + S
                    }
                } else m = { ...c
                };
                break
            }
        case "nw":
            {
                if (g || u) {
                    let h = s.left,
                        b = s.top,
                        x = g ? g - b : 0,
                        S = u ? h - r - (u - r) : 0,
                        v = (s.width + S) / s.width,
                        P = (s.height - x) / s.height,
                        C = s.width - s.width * P,
                        k = s.height * v - s.height;
                    m.left = u || c.left, m.width = u ? s.width + S * d : c.width, l && !u && (m.left = s.left + C, m.width = s.width - C * d), m.top = g || c.top, m.height = g ? s.height - x * d : c.height, l && !g && (m.top = s.top - k, m.height = s.height + k * d)
                } else m = { ...c
                };
                break
            }
        case "sw":
            {
                if (g || u) {
                    let h = s.left,
                        b = s.top + s.height,
                        x = g ? g - b : 0,
                        S = u ? h - r - (u - r) : 0,
                        v = (s.width + S) / s.width,
                        P = (s.height + x) / s.height,
                        C = s.width - s.width * P,
                        k = s.height - s.height * v;
                    m.left = u || c.left, m.width = u ? s.width + S * d : c.width, l && !u && (m.left = s.left + C, m.width = s.width - C * d), m.top = g ? p ? s.top - x : s.top : c.top, m.height = g ? s.height + x * d : c.height, l && !g && (m.height = s.height - k * d, p ? m.top = s.top + k : m.top = s.top)
                } else m = { ...c
                };
                break
            }
        case "ne":
            {
                if (g || u) {
                    let h = s.left + s.width,
                        b = s.top,
                        x = g ? g - b : 0,
                        S = u ? u - r - (h - r) : 0,
                        v = (s.width + S) / s.width,
                        P = (s.height - x) / s.height,
                        C = s.width * P; - s.width;
                    let k = s.height * v - s.height;
                    m.left = u ? p ? s.left - S : s.left : c.left, m.width = u ? s.width + S * d : c.width, l && !u && (m.width = s.width - C * d, p ? m.left = s.left + C : m.left = s.left), m.top = g || c.top, m.height = g ? s.height - x * d : c.height, l && !g && (m.top = s.top - k, m.height = s.height + k * d)
                } else m = { ...c
                };
                break
            }
        case "se":
            {
                if (g || u) {
                    let h = s.left + s.width,
                        b = s.top + s.height,
                        x = g ? g - b : 0,
                        S = u ? u - r - (h - r) : 0,
                        v = (s.height - x) / s.height,
                        P = s.width * v,
                        C = (s.width + S) / s.width,
                        k = s.height - s.height * C;
                    m.left = u ? p ? s.left - S : s.left : c.left, m.width = u ? s.width + S * d : c.width, l && !u && (m.width = s.width - P * d, p ? m.left = s.left + P : m.left = s.left), m.top = g ? p ? s.top - x : s.top : c.top, m.height = g ? s.height + x * d : c.height, l && !g && (m.height = s.height - k * d, p ? m.top = s.top + k : m.top = s.top)
                } else m = { ...c
                };
                break
            }
    }
    return {
        left: Math.ceil(m.left),
        top: Math.ceil(m.top),
        width: Math.floor(m.width),
        height: Math.floor(m.height)
    }
}
var QI = tp.default.View.extend({
        initialize: function(e) {
            st.default.bindAll(this), st.default.extend(this, e), this.created = !1, this.setElement((0, Yn.default)("#gg")), this.distance = new Ks((0, Yn.default)("#gg"))
        },
        create: function() {
            if (!Qe.isPermissionAllowed("GridsAndGuidesCanUse")) return;
            this.snap = this.mag.edit_params.get("snap"), this.expand = this.mag.edit_params.get("expand"), this.workspace = RM.constructorRouter.workspace, this.updateDims();
            let e = new Ak(null, {
                    mag: this.mag
                }),
                o = new Lu({
                    minStickingDistance: 8,
                    maxStepForHardGridSnapping: 40
                });
            this.snapController = o, this.grid = new eM({
                el: this.$(".grid"),
                controller: this,
                enabled: this.mag.edit_params.get("grid"),
                snapController: o,
                models: e
            }), this.widget_lines = new tM({
                el: this.$(".lines"),
                controller: this,
                snapController: o
            }), this.guides = new Gk({
                $guides: this.$(".guides"),
                $baselines: this.$(".baselines"),
                controller: this,
                snapController: o,
                enabled: this.mag.edit_params.get("guides"),
                models: e
            }), this.guides.hidden = !this.mag.edit_params.get("guides"), this.grid.hidden = !this.mag.edit_params.get("grid"), this.mag.edit_params.on("change:expand", this.onExpandChange), this.mag.edit_params.on("change:snap", this.onSnapChange), this.mag.edit_params.on("change:guides", this.guides.toggle), this.mag.edit_params.on("change:grid", this.grid.toggle), this.listenTo(this.mag, "change:desktopWidth", this.guides.renderColumns), this.listenTo(this.mag, "change:phoneWidth", this.guides.renderColumns), this.listenTo(this.mag, "change:tabletWidth", this.guides.renderColumns), this.onPageChange(this.workspace), this.router.on("pageChange", this.onPageChange), this.router.on("changeViewport", this.onViewportChange), (0, Yn.default)(window).on("resize", this.onResize), this.trigger("create"), this.created = !0
        },
        destroy() {
            this.stopListening(this.mag)
        },
        onResize: function() {
            this.updateDims(), this.guides.render.__debounced()
        },
        onViewportChange: function() {
            this.updateDims(), this.guides.changeViewport(), this.grid.changeViewport()
        },
        switchOn: function(e) {
            let o = ["guides", "grid"];
            if (o.includes(e)) {
                let t = o.filter(r => r !== e);
                this.mag.edit_params.save(e, !0), t.forEach(r => {
                    this.mag.edit_params.save(r, !1)
                })
            }
        },
        onPageChange: function(e) {
            if (!e) {
                this.$el.detach();
                return
            }
            this.$el.appendTo(e.$el), this.workspace && this.stopListening(this.workspace), this.workspace = e, this.listenTo(this.workspace, "workspace-resize", this.updateDims), this.updateDims(), setTimeout(st.default.bind(function() {
                this.updateDims(), this.guides.render()
            }, this), 450)
        },
        updateDims: function() {
            let e = this.mag.getViewportWidth(this.workspace.viewport),
                o = this.workspace.page.getViewportParam(this.workspace.viewport, "height"),
                t = this.workspace.viewport;
            if (this.$el.hide(), this.expand && t == "default") {
                let i = this.workspace.$container.width() - this.workspace.$container[0].clientWidth,
                    n = (0, Yn.default)("#main").width(),
                    s = (0, Yn.default)("#main").height();
                this.dims = {
                    width: Math.max(n - i, e),
                    height: Math.max(s, o),
                    left: Math.min(Math.floor((e - n) / 2), 0),
                    top: Math.min(Math.floor((o - s) / 2), 0)
                }, this.workspace.$el.addClass("hide-border")
            } else this.dims = {
                width: e,
                height: o,
                left: 0,
                top: 0
            }, this.workspace.$el.removeClass("hide-border");
            this.$el.show();
            let r = RM.constructorRouter.zoom.getZoom();
            this.$el.css(st.default.mapObject(this.dims, i => i * r)), this.mag.edit_params.get("guides") && this.guides ? this.guides.render() : this.guides && (this.guides.rendered = !1)
        },
        handleMoveStart: function(e, o) {
            this._movingBlocks = e, this._duplicateMode = o;
            let t = !this.grid.hidden,
                r = !this.guides.hidden;
            this.widget_lines.loadLines({
                blocks: this.workspace.getActiveBlocks(),
                moving_blocks: this._movingBlocks,
                duplicateMode: o,
                gridActivated: t,
                guidesActivated: r
            })
        },
        handleMoveEnd: function() {
            this.widget_lines.hideLines()
        },
        onSnapChange: function() {
            this.snap = this.mag.edit_params.get("snap")
        },
        onExpandChange: function() {
            this.expand = this.mag.edit_params.get("expand"), this.updateDims(), this.guides.render()
        },
        hideLinesWithDelay: function() {
            this._hideLinesTimeout && clearTimeout(this._hideLinesTimeout), this._hideLinesTimeout = setTimeout(() => {
                this.widget_lines.hideLines(), this.workspace.distance.hide()
            }, 1e3)
        },
        handleSnapMove: function({
            position: e,
            width: o,
            height: t,
            duplicateMode: r,
            fromKeyboard: i,
            workspacePosition: n,
            prevBlockPostion: s
        }) {
            let l = e.fixeds && e.fixeds.length > 0,
                p = this.workspace.mag.edit_params.get("sizes"),
                d = !this.grid.hidden,
                c = !this.guides.hidden,
                m = this.workspace.viewport;
            i && (this._movingBlocks = this.workspace.getSelectedBlocks()), this._duplicateMode !== r ? (this._duplicateMode = r, this.widget_lines.loadLines({
                blocks: this.workspace.getActiveBlocks(),
                moving_blocks: this._movingBlocks,
                duplicateMode: r,
                gridActivated: d,
                guidesActivated: c
            })) : i && this.widget_lines.loadLines({
                blocks: this.workspace.getActiveBlocks(),
                moving_blocks: this._movingBlocks,
                duplicateMode: r,
                gridActivated: d,
                guidesActivated: c
            });
            let u = st.default.chain(this._movingBlocks).map(x => x.model.get("fixed_position") || "").uniq().value();
            if (u.length > 1) return {
                x: 0,
                y: 0
            };
            this.widget_lines.findDataForSnapping({
                position: {
                    x: e.x,
                    y: e.y
                },
                width: o,
                height: t,
                movingFixeds: u
            }), c && !i ? this.guides.findDataForSnapping({
                position: e,
                width: o,
                height: t
            }) : d && !i && this.grid.findDataForSnapping({
                position: e,
                width: o,
                height: t
            });
            let g = this.snapController.snapToLine({
                    blockCoords: {
                        x: e.x,
                        y: e.y,
                        width: o,
                        height: t,
                        fixed_position: e.fixeds
                    },
                    gridActivated: d,
                    guidesActivated: c
                }),
                h = Nk({
                    deltaCorrectedX: e.x - s.x,
                    deltaCorrectedY: e.y - s.y
                }),
                {
                    sizeLines: b
                } = this.widget_lines.showSnapLines({
                    corrected: i ? { ...e
                    } : g,
                    width: o,
                    height: t,
                    direction: h,
                    fromKeyboard: i
                });
            return p && RM.constructorRouter.workspace.distance.updateForRect({
                bb_top: e.y,
                bb_left: e.x,
                bb_width: o,
                bb_height: t,
                fixed: e.fixeds[0]
            }, b, g, i, { ...n,
                viewport: m
            }), {
                x: l ? g.x - e.x : Math.round(g.x) - e.x,
                y: l ? g.y - e.y : Math.round(g.y) - e.y
            }
        },
        handleSnapResize: function({
            originalBox: e,
            correctedBox: o,
            direction: t,
            isSidePointProportional: r,
            fromCenter: i
        }) {
            if (!this.snap) return o;
            let n = st.default.clone(e),
                s = this.guides.model && !this.guides.model.get("baseline_height") && !this.guides.model.get("columns");
            return !this.guides.hidden && !s ? n = this.guides.stickOnResize({
                originalBox: e,
                correctedBox: o,
                direction: t,
                isSidePointProportional: r,
                fromCenter: i
            }) : this.grid.hidden ? n = this.widget_lines.stickOnResize({
                originalBox: e,
                correctedBox: o,
                direction: t,
                isSidePointProportional: r,
                fromCenter: i
            }) : n = this.grid.stickOnResize({
                originalBox: e,
                correctedBox: o,
                direction: t,
                isSidePointProportional: r,
                fromCenter: i
            }), n
        }
    }),
    Uk = tp.default.View.extend({
        created: !1,
        controller: void 0,
        model: void 0,
        initialize: function(e) {
            this.controller = e.controller, this.models = e.models
        },
        getModelUrl: function() {
            return this.models.url + this.controller.router.workspace.viewport
        },
        create: function(e) {
            this.created = !0, this.models.off("change", null, this), this.models.fetch({
                url: this.getModelUrl(),
                success: () => {
                    this.loadModel(), RM.constructorRouter.on("pageChange", this.loadModel), RM.constructorRouter.on("updateWorkspaceViewport", this.render), e && this.show()
                }
            })
        },
        changeViewport: function() {
            let e = this.controller.router.workspace.page;
            this.model = this.models.getByPage(e);
            let o = this;
            !this.model || this.model.get("viewport") !== e.getCurrentViewport() ? this.models.fetch({
                remove: !1,
                url: this.models.url + this.controller.router.workspace.viewport,
                success: function() {
                    o.loadModel()
                }
            }) : this.loadModel()
        },
        loadModel: function(e) {
            if (e = e || this.controller.router.workspace, !this.controller.router) return;
            let o = this.model && this.model.id;
            this.model = this.models.getByPage(e.page), this.model && (this.model.id != o && (this.models.trigger("reload"), this.updateModel && this.updateModel(this.model)), this.trigger("modelLoaded"), this.render())
        },
        show: function() {
            if (!this.created) return this.create(!0);
            this.rendered || this.render(), this.$el.fadeIn("fast"), this.hidden = !1
        }
    }),
    eM = Uk.extend({
        step: 8,
        count: 8,
        hidden: !0,
        initialize: function(e) {
            st.default.bindAll(this), st.default.extend(this, e), this.models = e.models, this.controller.mag.edit_params.on("change:grid_step", this.onGridChanged), this.controller.mag.edit_params.on("change:grid_count", this.onGridChanged), this.listenTo(this.controller.router.workspace, "workspace-resize", this.render), e.enabled ? this.show() : this.created || this.create(!1)
        },
        updateModel: function(e) {
            this.model && (this.model.off("change:grid_step", this.onGridChanged), this.model.off("change:grid_count", this.onGridChanged)), this.model = e, this.model.on("change:grid_step", this.onGridChanged), this.model.on("change:grid_count", this.onGridChanged), this.step = this.model.get("grid_step") || 8, this.count = this.model.get("grid_count") || 8, this.render()
        },
        show: function() {
            if (!this.created) return this.create(!0);
            this.rendered || this.render(), this.$el.fadeIn("fast"), this.hidden = !1
        },
        hide: function() {
            this.$el.fadeOut("fast"), this.hidden = !0
        },
        toggle: function() {
            this.controller.mag.edit_params.get("grid") ? this.show() : this.hide()
        },
        generateGridSVG: function() {
            let e = [],
                o = this.step * this.count,
                t = "rgba(128, 128, 128, 1)",
                r = "rgba(128, 128, 128, 0.4)",
                i = 1 / (window.devicePixelRatio || 1) / RM.constructorRouter.zoom.getZoom();
            for (let n = 1; n < this.count; n++) e.push('<rect width="' + i + '" height="' + o + '" x="' + n * this.step + '" y="0" style="fill:' + r + '"></rect>'), e.push('<rect height="' + i + '" width="' + o + '" y="' + n * this.step + '" x="0" style="fill:' + r + '"></rect>');
            return btoa('<?xml version="1.0" encoding="UTF-8"?><svg width="' + o + 'px" height="' + o + 'px" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="Line">' + e.join("") + '<rect width="' + i + '" height="' + o + '" x="0" y="0" style="fill:' + t + '"></rect><rect height="' + i + '" width="' + o + '" y="0" x="0" style="fill:' + t + '"></rect></g></svg>')
        },
        onGridChanged: function() {
            this.step = this.model.get("grid_step") || 8, this.count = this.model.get("grid_count") || 8, this.hidden && this.controller.switchOn("grid"), this.render()
        },
        render: function() {
            let e = RM.constructorRouter.zoom.getZoom();
            this.$el.css({
                "background-size": this.step * this.count * e + "px " + this.step * this.count * e + "px",
                "background-image": 'url("data:image/svg+xml;base64,' + this.generateGridSVG() + '")'
            })
        },
        findDataForSnapping: function({
            position: e,
            width: o,
            height: t
        }) {
            let r = this.controller.workspace.viewport,
                i = this.controller.mag.getViewportWidth(r),
                n = De.dictionary[r].width,
                s = 0 - Math.abs((i - n) / 2),
                l = {
                    x: e.x,
                    y: e.y,
                    width: o,
                    height: t
                };
            this.snapController.findNearestGridLines({
                blockCoords: l,
                step: this.step,
                leftBorderX: s
            })
        },
        stickOnResize: function({
            originalBox: e,
            correctedBox: o,
            direction: t,
            isSidePointProportional: r,
            fromCenter: i
        }) {
            let n = this.controller.workspace.viewport,
                s = this.controller.mag.getViewportWidth(n),
                l = De.dictionary[n].width,
                p = 0 - Math.abs((s - l) / 2),
                d = { ...e
                },
                c = this.step,
                m = Wk({
                    step: c,
                    leftBorderX: p,
                    originalBox: e,
                    correctedBox: o,
                    direction: t,
                    isSidePointProportional: r,
                    fromCenter: i
                });
            return d = { ...d,
                ...m
            }, d
        }
    }),
    tM = tp.default.View.extend({
        sticky: 8,
        near: 12,
        initialize: function(e) {
            st.default.bindAll(this), st.default.extend(this, e), this.controller.mag.edit_params.on("change:snap", this.onSnapChange)
        },
        findDataForSnapping({
            position: e,
            width: o,
            height: t,
            movingFixeds: r
        }) {
            this.snapController.findNearestWidgetLines({
                widgetLines: this.lines,
                blockCoords: { ...e,
                    width: o,
                    height: t
                },
                movingFixeds: r
            })
        },
        showSnapLines({
            corrected: e,
            width: o,
            height: t,
            direction: r,
            fromKeyboard: i
        }) {
            let n = [],
                s = st.default.uniq(this._movingBlocks ? .map(l => l.model.get("fixed_position") || ""));
            return s.length === 1 && this.getClosestLines({
                x: e.x,
                y: e.y,
                width: o,
                height: t
            }, this.lines ? .filter(p => this.shouldSnapOnMove(s[0], p)), this.sticky).forEach(p => {
                let d = !1;
                if (i) {
                    let c = p.blockBox;
                    if (c) {
                        let m = e.x > c.bb_left + c.bb_width,
                            u = c.bb_left > e.x + o,
                            g = e.y > c.bb_top + c.bb_height,
                            h = c.bb_top > e.y + t,
                            b = e.y <= c.bb_top && e.y + t >= c.bb_top || e.y >= c.bb_top && e.y + t <= c.bb_top + c.bb_height || e.y <= c.bb_top + c.bb_height && e.y + t >= c.bb_top + c.bb_height,
                            x = e.x <= c.bb_left && e.x + o >= c.bb_left || e.x >= c.bb_left && e.x + o <= c.bb_left + c.bb_width || e.x <= c.bb_left + c.bb_width && e.x + o >= c.bb_left + c.bb_width,
                            S = Math.min(Math.abs(e.y - c.bb_top), Math.abs(e.y - (c.bb_top + c.bb_height))),
                            v = Math.min(Math.abs(e.y + t - (c.bb_top + c.bb_height)), Math.abs(e.y + t - c.bb_top)),
                            P = Math.min(Math.abs(e.x - c.bb_left), Math.abs(e.x - (c.bb_left + c.bb_width))),
                            C = Math.min(Math.abs(e.x + o - (c.bb_left + c.bb_width)), Math.abs(e.x + o - c.bb_left)),
                            k = (m || u) && (S <= this.sticky || v <= this.sticky),
                            T = (h || g) && (P <= this.sticky || C <= this.sticky);
                        (m || T || x) && r.left ? (n.push(p), d = !0) : ((u || T || x) && r.right || (g || k || b) && r.top || (h || k || b) && r.bottom) && (d = !0, n.push(p))
                    } else d = !0, n.push(p)
                } else d = !0, n.push(p);
                d && (p.opacity = 1, p.calculateDimensions({
                    x: e.x,
                    y: e.y,
                    width: o,
                    height: t,
                    fixed: s[0]
                }), p.render())
            }), {
                sizeLines: n
            }
        },
        getClosestLines(e, o = [], t) {
            let r = S => Math.abs(e.y - S.y),
                i = S => Math.abs(e.y + e.height - S.y),
                n = S => Math.abs(e.y + Math.floor(e.height / 2) - S.y),
                s = S => Math.abs(e.x - S.x),
                l = S => Math.abs(e.x + e.width - S.x),
                p = S => Math.abs(e.x + Math.floor(e.width / 2) - S.x),
                d = o.filter(S => ["left", "right"].includes(S.type)),
                c = o.filter(S => ["top", "bottom"].includes(S.type)),
                m = st.default.min(c, r),
                u = st.default.min(c, i),
                g = st.default.min(o.filter(S => S.type === "middle"), n),
                h = st.default.min(d, s),
                b = st.default.min(d, l),
                x = st.default.min(o.filter(S => S.type === "center"), p);
            return st.default.compact([m && r(m) <= t ? m : void 0, u && i(u) <= t ? u : void 0, g && n(g) <= t ? g : void 0, h && s(h) <= t ? h : void 0, b && l(b) <= t ? b : void 0, x && p(x) <= t ? x : void 0])
        },
        stickOnResize: function({
            originalBox: e,
            correctedBox: o,
            direction: t,
            isSidePointProportional: r,
            fromCenter: i
        }) {
            let n = this.sticky,
                s = this.lines,
                l = this.controller.workspace.viewport,
                p = this.controller.mag.getViewportWidth(l),
                d = De.dictionary[l].width,
                c = 0 - Math.abs((p - d) / 2),
                m = {
                    x: null,
                    delta: 1 / 0
                },
                u = {
                    y: null,
                    delta: 1 / 0
                };
            s ? .forEach(b => {
                b.toggleOpacity(0);
                let x = Math.abs(b.y - o.top),
                    S = Math.abs(b.y - o.top - o.height),
                    v = Math.abs(b.x - o.left),
                    P = Math.abs(b.x - o.left - o.width);
                v < n && ["w", "sw", "nw"].includes(t) && ["left", "right"].includes(b.type) ? v < m.delta && (m.delta = v, m.x = b.x) : P < n && ["e", "se", "ne"].includes(t) && ["left", "right"].includes(b.type) && P < m.delta && (m.delta = P, m.x = b.x), x < n && ["n", "ne", "nw"].includes(t) && ["top", "bottom"].includes(b.type) ? x < u.delta && (u.delta = x, u.y = b.y) : S < n && ["s", "se", "sw"].includes(t) && ["top", "bottom"].includes(b.type) && S < u.delta && (u.delta = S, u.y = b.y)
            });
            let g = cf({
                sticky: n,
                verticalLines: [m.x],
                horizontalLines: [u.y],
                leftBorderX: c,
                direction: t,
                correctedBox: o,
                originalBox: e,
                isSidePointProportional: r,
                fromCenter: i
            });
            return this.getClosestLines({
                x: g.left,
                y: g.top,
                width: g.width,
                height: g.height
            }, this.lines ? .filter(b => this.shouldSnapOnResize(b, t)), this.sticky).forEach(b => {
                b.opacity = 1, b.calculateDimensions({
                    x: g.left,
                    y: g.top,
                    width: g.width,
                    height: g.height
                }), b.render()
            }), g
        },
        loadLines: function({
            blocks: e,
            moving_blocks: o,
            duplicateMode: t,
            gridActivated: r,
            guidesActivated: i
        }) {
            this.moving_ids = st.default.pluck(o, "id"), this._movingBlocks = o;
            let n = this.controller.router.workspace.getViewportPosition(),
                s = this.controller.router.workspace.viewport,
                l = De.dictionary[s].width,
                p = this.controller.router.workspace.mag.getViewportWidth(s),
                d = RM.constructorRouter.zoom.getZoom();
            this.hideLines(), this.lines = (0, st.default)(e).chain().filter(g => {
                if (!t && st.default.contains(this.moving_ids, g.id)) return !1;
                if (g.model.get("fixed_position")) return !0;
                let h = g.latestPosSizeAngle;
                return (h.bb_top + h.bb_height) * d > n.top * d && h.bb_top * d < n.top * d + window.innerHeight && (h.bb_left + h.bb_width - (l - p) / 2) * d > n.left * d && (h.bb_left - (l - p) / 2) * d < n.left * d + window.innerWidth
            }).map(g => {
                let h = [],
                    b = g.latestPosSizeAngle,
                    x = g.model.get("fixed_position");
                if (x) {
                    let S = this.controller.workspace.viewport,
                        v = this.controller.workspace.$container[0],
                        P = RM.constructorRouter.zoom.getZoom(),
                        {
                            x: C,
                            y: k
                        } = Lx({
                            boxCoordinates: {
                                x: b.bb_left || b.left,
                                y: b.bb_top || b.top,
                                w: b.width,
                                h: b.height,
                                fixed_position: x
                            },
                            scroller: {
                                scrollTop: v.scrollTop,
                                scrollLeft: v.scrollLeft
                            },
                            workspaceBox: {
                                left: n.left,
                                top: n.top,
                                width: n.width,
                                height: n.pageHeight
                            },
                            windowSize: {
                                width: n.viewportWidth,
                                height: n.height
                            },
                            viewportType: S,
                            zoom: P
                        });
                    b = { ...b,
                        bb_left: C,
                        bb_top: k,
                        fixed: x
                    }
                }
                return g.model.get("type") === "background" ? h : (h.push(this.newLine({
                    x: b.bb_left,
                    type: "left",
                    block: g,
                    blockBox: b
                })), h.push(this.newLine({
                    x: b.bb_left + b.bb_width,
                    type: "right",
                    block: g,
                    blockBox: b
                })), h.push(this.newLine({
                    x: b.bb_left + Math.floor(b.bb_width / 2),
                    type: "center",
                    block: g,
                    blockBox: b
                })), h.push(this.newLine({
                    y: b.bb_top,
                    type: "top",
                    block: g,
                    blockBox: b
                })), h.push(this.newLine({
                    y: b.bb_top + b.bb_height,
                    type: "bottom",
                    block: g,
                    blockBox: b
                })), h.push(this.newLine({
                    y: b.bb_top + Math.floor(b.bb_height / 2),
                    type: "middle",
                    block: g,
                    blockBox: b
                })), st.default.compact(h))
            }).flatten().value();
            let c = this.controller.dims;
            this.lines.push(this.newLine({
                hidden: !0,
                x: c.left,
                type: "left"
            })), this.lines.push(this.newLine({
                hidden: !0,
                x: c.left + c.width,
                type: "right"
            })), this.lines.push(this.newLine({
                hidden: !0,
                y: c.top,
                type: "top"
            })), this.lines.push(this.newLine({
                hidden: !0,
                y: c.top + c.height,
                type: "bottom"
            })), !r && !i && ["center", "left", "right"].forEach(g => {
                this.lines.push(this.newLine({
                    x: l / 2,
                    type: g
                }))
            });
            let {
                top: m
            } = ct.mapFromViewportToElement({
                top: window.innerHeight / 2,
                left: 0
            }, this.controller.workspace.$origin.get(0), 1, d);
            !r && !i && ["middle", "top", "bottom"].forEach(g => {
                this.lines.push(this.newLine({
                    y: m,
                    type: g
                }))
            }), this.lines = st.default.compact(this.lines);
            let u = document.createDocumentFragment();
            this.lines ? .forEach(g => {
                let h = g.render();
                h && u.appendChild(h[0])
            }), this.$el.append(u)
        },
        newLine: function(e) {
            return new Ou(st.default.extend(e, {
                $container: this.$el,
                controller: this.controller
            }))
        },
        onSnapChange: function() {
            this.controller.mag.edit_params.get("snap") || this.hideLines()
        },
        hideLines: function() {
            st.default.each(this.lines, function(e) {
                e.remove()
            }), this.lines = []
        },
        shouldSnapOnMove(e, o) {
            let t = ep(e),
                r = ep(o.block ? .model.get("fixed_position")),
                i = ["left", "right", "center"].includes(o.type) && t[0] === r[0],
                n = ["top", "bottom", "middle"].includes(o.type) && t[1] === r[1];
            return i || n
        },
        shouldSnapOnResize(e, o) {
            let t = ["left", "right", "center"].includes(e.type) && ["s", "n"].includes(o),
                r = ["top", "bottom", "middle"].includes(e.type) && ["e", "w"].includes(o);
            return !t && !r
        }
    }),
    Ou = tp.default.View.extend({
        type: "",
        x: void 0,
        y: void 0,
        length: void 0,
        opacity: 0,
        block: void 0,
        blockBox: void 0,
        initialize: function(e) {
            st.default.bindAll(this), st.default.extend(this, e), this.x && delete this.y, this.y && delete this.x, this._opacities = {}
        },
        toggle: function(e, o) {
            let t = this.getOpacity(e, o);
            return this.toggleOpacity(t), t > 0
        },
        toggleOpacity(e) {
            this.opacity !== e && (this.opacity = e, this.draw(this.opacity))
        },
        getOpacity: function(e, o) {
            return e < o ? o / 2 > e ? 1 : (o - e) / (o / 2) : 0
        },
        calculateDimensions(e) {
            let o = this.blockBox,
                t = {
                    top: e.y,
                    left: e.x,
                    bottom: e.y + e.height,
                    right: e.x + e.width
                },
                r = this.length || 0,
                i = {
                    x: null,
                    y: null
                };
            if (o && ["left", "right", "center"].includes(this.type)) {
                let n = {
                    top: o.bb_top,
                    bottom: o.bb_top + o.bb_height
                };
                t.bottom <= n.top ? (i.y = t.top, r = n.bottom - t.top) : t.top <= n.top && t.bottom > n.top ? (i.y = t.top, r = Math.max(n.bottom, t.bottom) - t.top) : t.top > n.top && t.bottom <= n.bottom ? (i.y = n.top, r = n.bottom - n.top) : (t.bottom > n.bottom && t.top <= n.bottom || t.top > n.bottom) && (i.y = n.top, r = t.bottom - n.top)
            } else if (o && ["top", "bottom", "middle"].includes(this.type)) {
                let n = {
                    left: o.bb_left,
                    right: o.bb_left + o.bb_width
                };
                t.right <= n.left ? (i.x = t.left, r = n.right - t.left) : t.left <= n.left && t.right > n.left ? (i.x = t.left, r = Math.max(n.right, t.right) - t.left) : t.right <= n.right && t.left > n.left ? (i.x = n.left, r = n.right - n.left) : (t.right > n.right && t.left <= n.right || t.left > n.right) && (i.x = n.left, r = t.right - n.left)
            }
            this.x = i.x ? i ? .x : this.x, this.y = i.y ? i ? .y : this.y, this.length = Math.abs(r)
        },
        show: function() {
            this.draw(1)
        },
        draw: function(e) {
            this.$el.css({
                opacity: e
            })
        },
        drawByWidget: function(e, o, t) {
            this._opacities[e] = this.getOpacity(o, t);
            let r = st.default.reduce(this._opacities, function(i, n) {
                return Math.max(i, n)
            }, 0);
            this.draw(r)
        },
        remove: function() {
            this.rendered = !1, this.$el && this.$el.remove()
        },
        render: function() {
            let e = !this.rendered;
            if (this.rendered = !0, this.hidden) return;
            e && this.setElement((0, Yn.default)("<div></div>").addClass(this.type));
            let o = RM.constructorRouter.zoom.getZoom(),
                {
                    dictionary: t
                } = De,
                r = t[this.controller.workspace.viewport].width,
                i = {
                    left: (this.x - this.controller.dims.left + Math.abs(r - this.controller.dims.width) / 2) * o,
                    top: (this.y - this.controller.dims.top) * o,
                    width: ["top", "bottom", "middle"].includes(this.type) && this.length ? this.length * o : void 0,
                    height: ["left", "right", "center"].includes(this.type) && this.length ? this.length * o : void 0
                };
            return i.opacity = this.opacity, this.$el.css(i), this.$el
        }
    }),
    Vk = Ou.extend({
        initialize: function(e) {
            e.type = "baseline", Ou.prototype.initialize.call(this, e)
        },
        render: function() {
            let e = this.y - this.controller.dims.top,
                o = RM.constructorRouter.zoom.getZoom(),
                t = this.controller.workspace.viewport,
                r = (0, Yn.default)(Dk({
                    maxGuideWidth: Tr.prototype.getViewportSetting("max_width", t) * Au,
                    top: e * o,
                    left: this.margin.left * o || 0,
                    right: this.margin.right * o || 0,
                    height: this.height * o,
                    pale: this.margin.top > e || this.controller.dims.height - this.margin.bottom < e,
                    fill: !!this.fill
                }));
            r.appendTo(this.$container), this.setElement(r)
        },
        remove: function() {
            Ou.prototype.remove.apply(this), this.$pale_left && this.$pale_left.remove(), this.$pale_right && this.$pale_right.remove(), this.$leftLine && this.$leftLine.remove(), this.$middleLine && this.$middleLine.remove(), this.$rightLine && this.$rightLine.remove()
        }
    }),
    oM = 8,
    Gk = Uk.extend({
        sticky: 8,
        hidden: !1,
        initialize: function(e) {
            st.default.bindAll(this), st.default.extend(this, e), this.models = e.models, e.enabled && this.show(), this.render.__debounced = st.default.debounce(this.render, 100)
        },
        create: function(e) {
            this.created = !0;
            let o = this;
            o.models.off("change", null, o), this.models.fetch({
                url: this.getModelUrl(),
                success: function() {
                    o.loadModel(), o.models.on("change", o.onGuidesChange), o.models.on("change:margin.top", o.onGuidesChange), RM.constructorRouter.on("pageChange", o.loadModel), RM.constructorRouter.on("updateWorkspaceViewport", o.render), e && o.show()
                }
            })
        },
        switchOn: function(e) {
            this.hidden && (e.changed.padding || e.changed.columns || e.changed.margin || e.changed.baseline_height || e.changed.baseline_group) && this.controller.switchOn("guides")
        },
        onGuidesChange: function(e) {
            this.switchOn(e), this.render(), e.changed.pages && e.changed.pages.indexOf && e.changed.pages.indexOf(this.controller.router.workspace.page.id) > -1 && this.loadModel()
        },
        getColumnWidths: function(e, o, t, r, i, n) {
            if (n) return [...Array(i)].map(() => n); {
                let p = e - t - o + r,
                    d = p / i - r,
                    c = Math.floor(d),
                    m = (c + r) * i,
                    u = p - m,
                    g = [];
                for (var s = 0; s < i; s++) g[s] = c;
                for (var s = 0; s < u; s++) g[Math.floor((i - u) / 2) + s] = Math.ceil(d);
                return g
            }
        },
        render: function(e) {
            this.renderColumns(), this.renderBaselines(), this.rendered = !0, e && e.callback && e.callback.call()
        },
        renderColumns() {
            if (!this.model) return;
            let e = this.controller.workspace.viewport,
                o = RM.constructorRouter.zoom.getZoom(),
                t = this.controller.mag.getViewportWidth(e),
                r = De.dictionary[e].width,
                i = this.model.toJSON();
            i.margin = st.default.clone(i.margin), i.columns <= 0 && (i.margin = {
                top: 0,
                right: 0,
                bottom: 0,
                left: 0
            }), this.$guides.empty().css({
                margin: "0 " + Math.round(i.margin.right * o) + "px 0 " + Math.round(i.margin.left * o) + "px",
                width: t * o - i.margin.right * o - i.margin.left * o + "px"
            });
            let n = this.getColumnWidths(t, i.margin.left, i.margin.right, i.padding, i.columns, i.columnWidth);
            this.$guideColumns = this.template(st.default.extend({}, i, {
                zeroGutter: !i.padding,
                columnWidths: n.map(d => d * o),
                offsetTop: i.margin.top * o,
                offsetBottom: i.margin.bottom * o,
                maxGuideHeight: Tr.prototype.getViewportSetting("max_height", e) * Au
            })), this.$guides.html(this.$guideColumns), this.guidelines = [];
            let s = 0 - Math.abs(Math.round((t - r) / 2)),
                l = r + Math.abs((t - r) / 2),
                p = s + i.margin.left + this.controller.dims.left;
            for (let d = 0; d < i.columns; d++) p = p + n[d], this.guidelines.push(p), i.padding && (p += i.padding, this.guidelines.push(p));
            st.default.each([s, s + i.margin.left, l - i.margin.right, l], function(d) {
                this.guidelines.push(d + this.controller.dims.left)
            }, this)
        },
        renderBaselines() {
            if (!this.model) return;
            this.$baselines.empty(), this.baselines = [];
            let e = this.model.toJSON();
            if (st.default.each([0, e.margin.top, this.controller.dims.height - e.margin.bottom + 1, this.controller.dims.height], function(o) {
                    this.baselines.push(new Vk({
                        y: o + this.controller.dims.top,
                        $container: this.$baselines,
                        margin: e.margin
                    }))
                }, this), e.baseline_height >= oM)
                for (let o = 1; o * e.baseline_height <= this.controller.dims.height; o++) {
                    let t = new Vk({
                        controller: this.controller,
                        y: o * e.baseline_height + this.controller.dims.top,
                        $container: this.$baselines,
                        margin: e.margin,
                        fill: o % e.baseline_group,
                        height: e.baseline_height
                    });
                    t.render(), t.show(), this.baselines.push(t)
                }
        },
        show: function() {
            if (!this.created) return this.create(!0);
            this.rendered || this.render(), this.$guides.add(this.$baselines).fadeIn("fast"), this.hidden = !1
        },
        hide: function() {
            this.$guides.add(this.$baselines).fadeOut("fast"), this.hidden = !0
        },
        toggle: function() {
            this.controller.mag.edit_params.get("guides") ? this.show() : this.hide()
        },
        findDataForSnapping: function({
            position: e,
            width: o,
            height: t
        }) {
            let r = {
                x: e.x,
                y: e.y,
                width: o,
                height: t
            };
            this.snapController.findNearestBaselines({
                baselines: this.baselines,
                blockCoords: r
            }), this.snapController.findNearestGuidelines({
                guidelines: this.guidelines,
                blockCoords: r
            })
        },
        stickOnResize: function({
            originalBox: e,
            correctedBox: o,
            direction: t,
            isSidePointProportional: r,
            fromCenter: i
        }) {
            let n = this.controller.workspace.viewport,
                s = this.controller.mag.getViewportWidth(n),
                l = De.dictionary[n].width,
                p = this.sticky,
                d = this.baselines || [],
                c = this.guidelines || [],
                m = 0 - Math.abs((s - l) / 2);
            return cf({
                sticky: p,
                verticalLines: c,
                horizontalLines: d ? .map(g => g.y),
                leftBorderX: m,
                direction: t,
                correctedBox: o,
                originalBox: e,
                isSidePointProportional: r,
                fromCenter: i
            })
        }
    }),
    ep = e => (e = e || "", e.length === 2 ? [e[1], e[0]] : e.length === 0 ? ["", ""] : e === "c" ? ["c", "c"] : ["n", "s"].includes(e) ? ["c", e] : [e, "c"]);
Gk.prototype.template = zk["template-constructor-grid-guides-controller"];
var jk = QI;
var ml = M(Ht()),
    qk = M(Mo()),
    op = M(lt());
en();
var pf = {
    "template-constructor-arrows": Ot `
	<div aria-label="Left navigation arrow" class="navigation-arrow left" style="display: <%= hidden ? 'none' : 'block'%>;"><div class="icon sprite" style="background-image: url('<%=icons.sprite%>')"></div></div>
	<div aria-label="Right navigation arrow" class="navigation-arrow right" style="display: <%= hidden ? 'none' : 'block'%>;"><div class="icon sprite" style="background-image: url('<%=icons.sprite%>')"></div></div>
`,
    "template-constructor-arrows-color-selector": Ot `
	<div class="arrow-color-selector">
		<div class="color-clip-wrapper">
			<div class="color-wrapper">
				<div class="color white"></div>
				<div class="color black"></div>
			</div>
		</div>
	</div>
`
};
wd();
var rM = qk.default.View.extend({
        colorSelectorTemplate: pf["template-constructor-arrows-color-selector"],
        className: "constructor-navigation-arrows",
        events: {
            "click .navigation-arrow": "go",
            "click .color-clip-wrapper": "toggleArrowsColor"
        },
        initialize: function(e) {
            op.default.bindAll(this), this.router = e.router, this.router.on("pageChange changePids page-order-change", this.onPageChange), this.render(), this.listenTo(this.router.mag, "change:opts change:viewport_phone_portrait change:viewport_tablet_portrait", () => {
                this.render(), this.onPageChange(this.router.workspace)
            }), this.listenTo(this.router, "changeViewport", this.render)
        },
        render: function() {
            let e = pf["template-constructor-arrows"],
                o = this.router.workspace ? .viewport || "default",
                t = o === "phone_portrait" || o === "tablet_portrait" ? `viewport_${o}` : void 0,
                r = t ? this.router.mag.get(t) ? .opts ? .viewertype || this.router.mag.get("opts").viewertype : this.router.mag.get("opts").viewertype;
            this.$el.toggleClass("is-vertical", r === "vertical"), this.$el.html(e({
                hidden: this.router.previewMode,
                icons: {
                    sprite: Bi(`./common/navigation/sprite${R0?"@2x":""}.png`)
                }
            })), (0, ml.default)("#constructor").prepend(this.$el), (0, op.default)(this.$(".navigation-arrow")).each(function(i) {
                (0, ml.default)(i).append(this.colorSelectorTemplate())
            }.bind(this))
        },
        go: function(e) {
            if ((0, ml.default)(e.target).closest(".arrow-color-selector").length) return;
            let o = (0, ml.default)(e.currentTarget).hasClass("left") ? "prev" : "next";
            this.router.go(o)
        },
        onPageChange: function(e) {
            !e || this.router.previewMode || op.default.defer(op.default.bind(function() {
                let o = this.router.isCurrentPageLocked();
                this.$(".left").toggle(e.page.get("num") != 1).toggleClass("disabled", !!o), this.$(".right").toggle(e.page.get("num") != this.router.mag.get("pids").length).toggleClass("disabled", !!o), this.updateArrowsColor(e.page.get("arrows_color"))
            }, this))
        },
        updateArrowsColor: function(e) {
            e = e || "white", (0, ml.default)("#constructor").removeClass("navigation-white-arrows").removeClass("navigation-black-arrows").addClass("navigation-" + e + "-arrows"), this.$(".arrow-color-selector").removeClass("white").removeClass("black").addClass(e)
        },
        toggleArrowsColor: function() {
            let e = this.router.workspace.page,
                o = this.$(".arrow-color-selector"),
                t = e.get("arrows_color") || "white",
                r = t == "white" ? "black" : "white";
            o.hasClass("disabled") || (this.$(".arrow-color-selector").addClass("disabled"), this.updateArrowsColor(r), e.save({
                arrows_color: r
            }, {
                patch: !0,
                skipHistory: !0
            }).success(function() {
                this.updateArrowsColor(r)
            }.bind(this)).error(function() {
                this.updateArrowsColor(t)
            }.bind(this)).complete(function() {
                o.removeClass("disabled")
            }.bind(this)))
        },
        destroy() {
            this.stopListening(this.router.mag, "change:opts", this.render), this.stopListening(this.router, "changeViewport", this.render)
        }
    }),
    Yk = rM;
var L1 = M(Mo()),
    Gt = M(lt());
ut();
yd();
$o();
var n1 = M(F()),
    mf = M(lt());
Ye();
Bh();
_c();
gh();
$o();
var Xn = M(F()),
    Xk = M(lt());
_c();
FI();
ut();

function Kk(e, o) {
    return e.reduce((t, r) => {
        let i = r[o];
        return typeof i == "string" && (t[i] = r), t
    }, {})
}

function Zk(e, o) {
    let t = x0(o || new Date, e),
        [r, i] = t.split(" ");
    if (i === "seconds") return "Now";
    let s = {
        minutes: "min",
        hour: "h",
        day: "d",
        months: "mo",
        year: "y"
    }[i] || i[0];
    return `${r}${s} ago`
}
var gl = {
        zoomedBox: 8e3,
        expandedBubble: 1e4
    },
    Jk = (e, o, t = [], r = []) => {
        let i = r.map(s => s.author),
            n = [o].concat(t).concat(i);
        return Xk.default.unique(n, "_id").filter(s => !s.isPending && !s.isSupport && e._id !== s._id)
    };
async function Qk(e, o, t) {
    let r = `${ae.readymag_auth_host}/edit/${e}/${o}/comment/${t}`;
    await navigator.clipboard.writeText(r)
}
var e1 = ek("resize", () => ({
        zoom: window.RM.constructorRouter ? .zoom ? .getZoom() || 0
    }), () => ({
        zoom: window.RM.constructorRouter ? .zoom ? .getZoom() || 0
    })),
    iM = {
        x: 0,
        y: 0,
        width: 0,
        height: 0,
        top: 0,
        left: 0,
        bottom: 0,
        right: 0
    };

function t1(e) {
    let [o, t] = (0, Xn.useState)(iM), r = (0, Xn.useMemo)(() => new ResizeObserver(i => {
        if (i[0]) {
            let {
                x: n,
                y: s,
                width: l,
                height: p,
                top: d,
                left: c,
                bottom: m,
                right: u
            } = i[0].contentRect;
            t({
                x: n,
                y: s,
                width: l,
                height: p,
                top: d,
                left: c,
                bottom: m,
                right: u
            })
        }
    }), []);
    return (0, Xn.useEffect)(() => {
        if (e) return r.observe(e), () => {
            r.disconnect()
        }
    }, [e]), o
}
var $u = (e, o) => {
    let [t, r] = (0, Xn.useState)(null);
    return (0, Xn.useEffect)(() => {
        if (e.current && typeof IntersectionObserver == "function") {
            let i = s => {
                    r(s[0])
                },
                n = new IntersectionObserver(i, o);
            return n.observe(e.current), () => {
                r(null), n.disconnect()
            }
        }
    }, [e.current, o.threshold, o.root, o.rootMargin]), t
};
var df = "commentsModeState",
    uf = "rm:comments-panel:height";
var nM = {
        comments: null
    },
    gf = {
        viewTree: {},
        totalNew: 0
    },
    [Kn, s1] = Or(gf);

function a1(e, o) {
    let t = {},
        r = 0;
    return e.forEach(i => {
        i.status !== "resolved" && (i.author._id !== o && !i.seen.includes(o) ? (t[i._id] ? t[i._id].isNew = !0 : t[i._id] = {
            isNew: !0,
            newChildren: 0
        }, i.parent && (t[i.parent] ? t[i.parent].newChildren += 1 : t[i.parent] = {
            isNew: !1,
            newChildren: 1
        }), r += 1) : t[i._id] = {
            isNew: !1,
            newChildren: 0
        })
    }), {
        viewTree: t,
        totalNew: r
    }
}

function sM() {
    let e = sessionStorage.getItem(df);
    return e ? !!parseInt(e) : !1
}

function aM(e) {
    sessionStorage.setItem(df, `${e?1:0}`)
}
var [an, Fu, lM] = Or(null), [uo, rp, l1, hf] = Or(sM()), o1 = !0, [cM, hl, Zn] = Or(nM), [c1, p1, pM] = Or("initial");

function ff(e, o) {
    pM() === "loading" && p1("loaded");
    let t = Kk(e, "_id"),
        i = { ...Zn().comments ? ? {},
            ...t
        };
    hl({
        comments: i
    });
    let n = Object.values(i || {});
    s1(a1(n, o)), o1 && (o1 = !1, Me.trigger("comments:init"))
}

function d1(e) {
    return (Zn().comments ? ? {})[e]
}

function bf({
    id: e,
    frontId: o,
    comment: t,
    userId: r
}) {
    let i = Zn().comments ? ? {},
        n = i[e] ? ? {},
        s = { ...i,
            [e]: { ...n,
                ...t
            }
        };
    if (o && s[o]) {
        delete s[o];
        let p = lM();
        if (p) {
            let d = { ...p.comment
            };
            d.isTmp && d._id === o && (d._id = e, Fu({ ...p,
                comment: d
            }))
        }
    }
    hl({
        comments: s
    });
    let l = Object.values(s || {});
    s1(a1(l, r))
}

function Nu({
    parentCommentId: e,
    childCommentId: o
}) {
    let t = Zn().comments ? ? {},
        r = { ...t
        };
    if (e && o) {
        let i = { ...t[e]
        };
        i.children = i ? .children ? ? [], i.children = i.children.filter(n => n._id !== o), delete r[o], r = { ...r,
            [e]: i
        }
    } else e && !o && delete r[e];
    hl({
        comments: r
    })
}

function dM(e, o) {
    return { ...o,
        _id: e,
        projectId: window.RM.constructorRouter.mag.get("_id"),
        seen: [],
        status: "unresolved",
        author: {
            email: window.RM.constructorRouter.me ? .attributes.email || "",
            name: window.RM.constructorRouter.me ? .attributes.name || "",
            num_id: Number(window.RM.constructorRouter.me ? .attributes.num_id) || 0,
            _id: window.RM.constructorRouter.me ? .attributes._id || ""
        },
        attachments: [],
        createdDate: v0(new Date),
        isTmp: !0
    }
}

function u1(e) {
    let o = Zn().comments ? ? {};
    if (o[e]) {
        let t = { ...o
        };
        delete t[e], hl({
            comments: t
        })
    }
}

function Wu(e) {
    let o = On(),
        t = Zn().comments ? ? {},
        r = dM(o, e);
    return hl({
        comments: { ...t,
            [o]: r
        }
    }), window.RM.constructorRouter.sockets.createComment(e, o), r
}

function m1({
    commentId: e,
    ...o
}) {
    let t = Zn().comments ? ? {},
        i = { ...t[e],
            ...o
        };
    hl({
        comments: { ...t,
            [e]: i
        }
    }), window.RM.constructorRouter.sockets.updateComment({
        commentId: e,
        ...o
    })
}

function g1(e) {
    Nu(e), window.RM.constructorRouter.sockets.deleteComment({
        commentId: e.childCommentId ? ? e.parentCommentId
    })
}

function h1(e) {
    window.RM.constructorRouter.sockets.deleteCommentsMany({
        widgetId: e
    })
}

function f1() {
    p1("loading"), window.RM.constructorRouter.sockets.getProjectComments()
}
var Hu = [],
    r1 = 0;

function uM() {
    let e = [...Hu];
    Hu = [], window.RM.constructorRouter.sockets.viewManyComments({
        commentsIds: e
    })
}

function b1({
    comment: e,
    userId: o,
    remove: t
}) {
    let r = { ...e
    };
    t ? r.seen = r.seen.filter(i => i !== o) : r.seen.push(o), bf({
        id: r._id,
        comment: r,
        userId: o
    })
}

function w1({
    commentId: e,
    userId: o,
    remove: t
}) {
    let i = (Zn().comments ? ? {})[e];
    b1({
        comment: i,
        userId: o,
        remove: t
    })
}
async function x1(e, o) {
    Hu.includes(e._id) || (Hu.push(e._id), clearTimeout(r1), r1 = setTimeout(uM, 1500), setTimeout(() => {
        b1({
            comment: e,
            userId: o
        })
    }, 0))
}

function Vu(e = {
    status: "unresolved"
}) {
    let [o] = cM();
    return (0, n1.useMemo)(() => {
        let t = Object.values(o.comments || {}),
            r = mf.default.where(t, e),
            i = mf.default.groupBy(r, s => s.parent ? s.parent : "parents"),
            n = [];
        return i.parents && (n = [...i.parents].sort((s, l) => new Date(l.createdDate).getTime() - new Date(s.createdDate).getTime())), Object.keys(i).length > 1 && n.forEach(s => {
            i[s._id] && (s.children = i[s._id].sort((l, p) => new Date(l.createdDate).getTime() - new Date(p.createdDate).getTime()))
        }), n
    }, [o.comments, e.status, e.viewport, e.pageId])
}
hf(e => {
    e || Fu(null), aM(e), e && re(fe.CommentsMode, {
        settingsType: "on"
    })
});
var [v1, mM] = Or(new Date);

function gM() {
    mM(new Date)
}
setInterval(gM, 60 * 1e3);
gh();
$a();
async function y1(e) {
    return await po.post(`/api/mag/${e}/snapshots`)
}
async function k1(e, o) {
    return await po.get(`/api/mag/${e}/snapshots`, void 0, o)
}
async function _1(e, o, t) {
    return await po.post(`/api/mag/${e}/snapshots/${o}/restore`, void 0, t)
}
async function C1(e, o, t) {
    return await po.post(`/api/mag/${e}/snapshots/${o}/copy`, void 0, t)
}
async function S1(e, o) {
    return await po.get(`/api/mag/${e}/snapshots/last-copy`, void 0, o)
}
_c();

function hM(e) {
    let o = C0(new Date, 7);
    return k0(e, o) || h0(e, o)
}

function fM(e) {
    let o = y0(e) ? 366 : 365;
    return f0(new Date, e) >= o
}

function P1(e) {
    return uh(e) ? `Today ${xr(e,"h:mm a")}` : _0(e) ? xr(e, "MMMM do") : xr(e, "MMMM do yyyy")
}

function bM(e) {
    if (uh(e)) {
        let o = xr(e, "h:mm a"),
            t = w0(new Date, e),
            r = Math.floor(t / 60),
            i = r ? `${r}h ${t%60||1}m ago` : `${t%60||1} min ago`;
        return {
            category: "today",
            formatedDate: o,
            titlePrefix: "Today,",
            titlePostfix: i
        }
    }
    return S0(e) ? {
        category: "weekly",
        formatedDate: `Yesterday, ${xr(e,"MMM d, h:mm a")}`
    } : hM(e) ? {
        category: "weekly",
        formatedDate: xr(e, "EEEE, MMM d, h:mm a")
    } : fM(e) ? {
        category: "older",
        formatedDate: xr(e, "MMM d, yyyy, h:mm a")
    } : {
        category: "older",
        formatedDate: xr(e, "MMM d, h:mm a")
    }
}

function Uu(e) {
    let o = b0(new Date, e);
    return Math.max(0, o)
}

function T1(e) {
    return e.map(o => ({ ...o,
        metadata: bM(o.createdDate)
    }))
}

function I1(e) {
    switch (e) {
        case "today":
            return "Today";
        case "weekly":
            return "Last 7 days";
        case "older":
            return "Older ones";
        default:
            return ""
    }
}
var M1 = {
        show: !1,
        status: "idle",
        versions: [],
        selectedVersion: null
    },
    [wf, Zs, Gu] = Or(M1),
    [B1, fl] = Or({
        show: !1
    });
async function R1({
    projectId: e,
    signal: o
}) {
    let t = Gu();
    if (t.show) try {
        Zs({ ...t,
            status: "loading"
        });
        let r = await k1(e, {
                signal: o
            }),
            i = T1(r),
            n = i[0];
        Zs({ ...t,
            status: "loaded",
            versions: i,
            selectedVersion: n ? {
                idx: 0,
                value: n
            } : null
        })
    } catch {
        Zs({ ...t,
            status: "error"
        })
    }
}

function z1() {
    let e = Gu();
    Zs({ ...e,
        show: !0
    })
}

function E1() {
    Zs(M1)
}

function A1(e) {
    let o = Gu(),
        t = o.versions ? .[e];
    t && Zs({ ...o,
        selectedVersion: {
            idx: e,
            value: t
        }
    })
}

function D1(e) {
    let o = Gu(),
        t = o.versions ? .findIndex(({
            _id: i
        }) => i === e),
        r = o.versions ? .[t];
    r && Zs({ ...o,
        selectedVersion: {
            idx: t,
            value: r
        }
    })
}
rr();
var O1 = function(e, o, t, r) {
    return this.num_id = e, this.hash = o, this.user = t, this.router = r, this
};
Gt.default.extend(O1.prototype, L1.default.Events, {
    CONNECTION_TIMEOUT: 5e3,
    CONNECTION_ATTEMPTS: 5,
    initSocket: function() {
        if (!this.hash) return console.error("sockets hash not found for mag!");
        let e = window.location.origin === ae.readymag_auth_host,
            o = e && ae.isProd ? "sockets.readymag.com" : "";
        Ve("constructor.socketsHostFromEnv") && (o = e && ae.readymag_sockets_host ? ae.readymag_sockets_host : "");
        let t = io(o, {
            timeout: this.CONNECTION_TIMEOUT,
            transports: ["websocket"]
        });
        this.socket = t, this.attempts = 0, t.on("connect", Gt.default.bind(function() {
            RM.DEBUG && console.log("socket.io connected :4095"), this.trigger("connect")
        }, this)), t.on("disconnect", Gt.default.bind(function() {
            RM.DEBUG && console.log("socket.io disconnected :4095"), this.trigger("disconnect"), this.connected ? this.isConnectionErrorRaised || setTimeout(() => {
                t.connect()
            }, 1e3) : this.onConnectionError()
        }, this)), t.on("technical stream", r => {
            console.log("technical stream input", r)
        }), t.on("client connect", Gt.default.bind(this.onClientConnect, this)), t.on("client disconnect", Gt.default.bind(this.onClientDisconnect, this)), t.on("page comments", Gt.default.bind(this.onPageComments, this)), t.on("project comments", Gt.default.bind(this.onProjectComments, this)), t.on("update comment", Gt.default.bind(this.onUpdateComment, this)), t.on("delete comment", Gt.default.bind(this.onDeleteComment, this)), t.on("delete comments many", Gt.default.bind(this.onDeleteCommentsMany, this)), t.on("view many comments result", Gt.default.bind(this.onViewManyComments, this)), t.on("create comment error", Gt.default.bind(this.onCreateCommentError, this)), t.on("project restore", Gt.default.bind(this.onProjectRestore, this)), t.io.on("connect_error", Gt.default.bind(this.onConnectionError, this)), t.io.on("connect_timeout", Gt.default.bind(this.onConnectionError, this)), t.io.on("reconnect", Gt.default.bind(this.onReconnect, this)), this.on("connect", this.joinRoom, this), this.router.on("update_from_server", this.sendUpdate, this), f1()
    },
    getMagLockedPages: function() {
        this.socket.emit("get mag locked pages", {
            numId: this.num_id,
            userId: this.user.get("_id"),
            hash: this.hash
        })
    },
    getPageQueue: function(e) {
        this.socket.emit("get page queue", {
            numId: this.num_id,
            pageId: e,
            userId: this.user.get("_id"),
            hash: this.hash
        })
    },
    getRedisStatus: function() {
        this.socket.emit("check redis status", {
            numId: this.num_id,
            userId: this.user.get("_id"),
            hash: this.hash
        })
    },
    joinRoom: function() {
        this.socket.emit("join mag", {
            num_id: this.num_id,
            hash: this.hash,
            user_id: this.user.id,
            user_data: this.user.pick("name", "email", "pic", "_id")
        })
    },
    lockPage: function(e) {
        this.socket.emit("lock page", {
            page_id: e
        })
    },
    takeOver: function(e) {
        this.socket.emit("take over", {
            page_id: e
        })
    },
    leavePage: function(e) {
        this.socket.emit("leave page", {
            page_id: e
        })
    },
    onLockChange: function(e) {
        let o = [];
        Gt.default.each(e && e.unlocked, function(t) {
            o.push({
                tp: "unlock",
                pageId: t.page_id,
                userId: t.user_id,
                user_data: this.users_list.get(t.user_id)
            })
        }, this), Gt.default.each(e && e.locked, function(t) {
            o.push({
                tp: "lock",
                pageId: t.page_id,
                userId: t.user_id,
                user_data: this.users_list.get(t.user_id)
            })
        }, this), this.trigger("lockChange", o)
    },
    onTakeOver: function(e) {
        this.trigger("takeOver", this.users_list.get(e.user_id))
    },
    onClientConnect: function(e) {
        this.attempts = 0, RM.DEBUG && console.log("client connect", e), this.connected || (this.socket.on("message", Gt.default.bind(this.onNewMessage, this)), this.socket.on("lock change", Gt.default.bind(this.onLockChange, this)), this.socket.on("take over", Gt.default.bind(this.onTakeOver, this)), this.socket.on("duplicate disconnect", Gt.default.bind(this.onDuplicateDisconnect, this))), !this.isConnectionErrorRaised && (this.connected = !0, e && e.user_id === this.user.id && this.router.workspace.page && this.lockPage(this.router.workspace.page.id), e ? .list && (this.users_list = new L0(e.list, {
            parse: !0
        })), Me.trigger("sockets:connect", e))
    },
    onClientDisconnect: function(e) {
        RM.DEBUG && console.log("client disconnect", e), this.users_list && this.users_list.remove(e.user_id), e.user_id && this.trigger("client-disconnected", e.user_id)
    },
    onDuplicateDisconnect: function() {
        this.onConnectionError({
            duplicate: !0
        })
    },
    onConnectionError: function(e) {
        RM.DEBUG && console.log("socket connection error", e), this.attempts++, !(!e.duplicate && this.attempts < this.CONNECTION_ATTEMPTS || this.isConnectionErrorRaised) && (this.isConnectionErrorRaised = !0, this.errorRaisedAt = Date.now(), this.router.raiseSocketConnectionError())
    },
    onReconnect: function(e) {
        RM.DEBUG && console.log("socket reconnected", e), this.isConnectionErrorRaised && (delete this.isConnectionErrorRaised, this.router.clearSocketConnectionError())
    },
    sendUpdate: function(e, o, t) {
        RM.DEBUG && console.log("send update", e, o), this.socket.emit("message", {
            type: "model_update",
            data: {
                modelName: e,
                viewport: t,
                data: o
            }
        })
    },
    onNewMessage: function(e) {
        RM.DEBUG && console.log("new socket message", e), e && e.type === "model_update" && this.router.updateFromSocket(e.data)
    },
    getAuthParams: function() {
        return {
            numId: this.num_id,
            userId: this.user.get("_id"),
            hash: this.hash,
            projectId: this.router.mag.get("_id")
        }
    },
    createComment: function({
        pageId: e,
        viewport: o,
        content: t,
        position: r,
        parent: i,
        attachments: n
    }, s) {
        this.socket.emit("create comment", { ...this.getAuthParams(),
            pageId: e,
            viewport: o,
            content: t,
            position: r,
            parent: i,
            attachments: n
        }, s)
    },
    updateComment: function({
        commentId: e,
        content: o,
        status: t,
        attachments: r
    }) {
        this.socket.emit("update comment", { ...this.getAuthParams(),
            commentId: e,
            content: o,
            status: t,
            attachments: r
        })
    },
    deleteComment: function({
        commentId: e
    }) {
        this.socket.emit("delete comment", { ...this.getAuthParams(),
            commentId: e
        })
    },
    viewComment: function({
        commentId: e,
        unview: o
    }) {
        this.socket.emit("view comment", { ...this.getAuthParams(),
            commentId: e,
            unview: o
        })
    },
    viewManyComments: function({
        commentsIds: e
    }) {
        this.socket.emit("view many comments", { ...this.getAuthParams(),
            commentsIds: e
        })
    },
    getPageComments: function(e, o) {
        this.socket.emit("get page comments", { ...this.getAuthParams(),
            pageId: e,
            viewport: o
        })
    },
    getProjectComments: function() {
        this.socket.emit("get project comments", { ...this.getAuthParams()
        })
    },
    deleteCommentsMany: function({
        widgetId: e
    }) {
        this.socket.emit("delete comments many", { ...this.getAuthParams(),
            widgetId: e
        })
    },
    onPageComments: function({
        comments: e
    }) {
        ff(e, this.user.get("_id"))
    },
    onProjectComments: function({
        comments: e
    }) {
        ff(e, this.user.get("_id"))
    },
    onUpdateComment: function(e, o) {
        bf({
            id: e._id,
            frontId: o,
            comment: e,
            userId: this.user.get("_id")
        })
    },
    onDeleteComment: function(e) {
        Nu(e, this.user.get("_id"))
    },
    onDeleteCommentsMany: function({
        deletedComments: e = []
    }) {
        e.forEach(o => {
            Nu({
                parentCommentId: o
            })
        })
    },
    onViewManyComments: function(e) {
        e ? .notProcessed && e ? .notProcessed.length && e.userId && e.notProcessed.forEach(o => w1({
            commentId: o,
            userId: e.userId,
            remove: !0
        }))
    },
    onCreateCommentError: function({
        error: e,
        uuid: o
    }) {
        console.error("create comment error", e), o && u1(o)
    },
    startProjectRestore: function({
        restoreId: e
    }) {
        this.socket.emit("start project restoring", { ...this.getAuthParams(),
            restoreId: e
        })
    },
    onProjectRestore: function({
        restoreId: e
    }) {
        fl({
            show: !0,
            jobId: e
        })
    }
});
var $1 = O1;
var V = M(lt());
Co();
var gt = M(Ht());
Ye();
Mi();
Dn();
$o();
Lr();
R6();
Bo();
rf();
var xf = M(Mo()),
    vf = M(ir()),
    eo = M(lt());
Ky();
zh();
Dn();
$o();
Es();
kt();
No();
kt();
vr();
ef();
var wM = xf.default.View.extend({
        className: "controls",
        attributes: {
            "aria-label": "Controls"
        },
        groupControls: {
            0: "common_pack",
            1: "common_unpack",
            2: "common_align",
            3: "common_arrange",
            4: "common_interactions",
            5: "common_position",
            6: "common_layer"
        },
        controls: [],
        groupControlsDividers: (e, o) => o.viewport !== "default" && !o.getSelectedBlocks().every(t => t.model.get("is_global")) ? ["common_arrange"] : ["common_align"],
        ICON_HEIGHT: 30,
        ICON_PADDING: 2,
        initialize: function(e) {
            eo.default.bindAll(this), this.workspace = e.workspace, this.workspace.on("deselect", this.hide), this.workspace.on("select", this.onSelect), this.$main.append(this.$el), this.$el.addClass(this.className), this.$el.append('<div id="controls-help-tour-tooltip"></div>'), this.selectedBlocks = [], this.tooltipIsMount = !1, Me.on("tips:show", this.showTip.bind(this))
        },
        getBlocksThatPassedRestrictionsCheck: function(e, o) {
            let t = [],
                r = null;
            return e[0] && e[0].has_parent_block ? r = e[0].workspace : r = this.workspace, eo.default.each(o, function(i) {
                js[i] && js[i].prototype.restrictions && !js[i].prototype.restrictions.call(this, r, e) || t.push(i)
            }, this), t
        },
        setControls: function(e, o, t = {}) {
            let r = eo.default.find(this.controls, function(m) {
                return m.selected == !0
            });
            clearTimeout(this.hideTimeout);
            let i = {},
                n = {};
            eo.default.isArray(o) || (o = [o]), !eo.default.isArray(e) && eo.default.isString(e) && (e = [e]);
            let s = this.getBlocksThatPassedRestrictionsCheck(o, e);
            eo.default.each(this.controls, function(m) {
                eo.default.contains(s, m.name) ? t.destroyAll ? (i[m.name] = m.$el.position().top, m.destroy(!1)) : n[m.name] = m : m.destroy(!0)
            }, this), this.controls = [];
            let l = eo.default.pluck(o, "model"),
                p = this.calculateDividersTotal(o, s),
                d = s.length * (this.ICON_HEIGHT + this.ICON_PADDING) - this.ICON_PADDING + p,
                c = -d / 2;
            eo.default.each(s, function(m) {
                let u = n[m];
                if (u) u.moveToNewPos(c);
                else {
                    let h = i[m] != null;
                    u = new js[m]({
                        blocks: o,
                        models: l,
                        master: this,
                        $container: this.$el,
                        appearanceAnimation: !h,
                        fromY: h ? i[m] : c,
                        y: c
                    })
                }
                u.moveToNewPos(c), c += this.ICON_HEIGHT + this.ICON_PADDING;
                let g = this.getControlsByDividersField(o);
                g.length && (c += this.getDividerSize(g, m)), this.controls.push(u)
            }, this), this.selectedBlocks = o, this.controls.indexOf(r) > -1 && !t.noSelect ? this.select(r) : eo.default.invoke(this.controls, "removeFade"), this.workspace.trigger("controls-have-been-updated"), this.show(), this.$("div[data-alt]:not(.rmalttext)").RMAltText()
        },
        toggleHelpNotice: function(e) {
            Hr(["TextWidgetSelect", "PictureWidgetUse", "TextWidgetOpenPanel", "TextWidgetProperties", "ButtonWidgetAdjustVisualProperties", "ButtonWidgetAddLink", "ButtonWidgetAddLinkType", "AddAnimations", "PositionControlClick"], e)
        },
        softUpdateControlsForBlocks: function(e) {
            if (!e || !e.length) return;
            let o = this.getBlocksGroupControls(e),
                t = e.length === 1 ? e[0].controls : o,
                r = this.getBlocksThatPassedRestrictionsCheck(e, t),
                i = this.controls ? .map(s => s.name);
            eo.default.isEqual(i, r) || this.setControls(r, e, {
                destroyAll: !0
            })
        },
        onSelect: function(e) {
            if (this.toggleHelpNotice({
                    show: !1
                }), e.length === 1 && e[0].model.get("hidden")) {
                this.hide();
                return
            }
            let t = this.getBlocksGroupControls(e),
                r = e.length === 1 ? e[0].controls : t;
            !e || !e.length || (e.length > 1 && e.every(i => i.isVector && i.isVector()) && (r = this.replacePictureSettings(r)), this.setControls(r, e, {
                destroyAll: !0
            }))
        },
        getBlocksGroupControls: function(e) {
            if (e.length > 1) {
                let t = e.map(s => s.groupControls ? Object.values(s.groupControls).length : 0).reduce((s, l, p) => l ? Object.assign({}, s, e[p].groupControls || {}) : s, {}),
                    r = {},
                    i = {};
                Object.keys(t).forEach(s => {
                    i[t[s]] || (i[t[s]] = s, r[s] = t[s])
                });
                let n = Object.keys(r).map(s => parseInt(s));
                if (n.length) {
                    let l = Object.keys(this.groupControls).map(c => parseInt(c)).length + n.length,
                        p = [],
                        d = 0;
                    for (let c = 0; c < l; c++) n.includes(c) ? (d += 1, p.push(t[c])) : p.push(d ? this.groupControls[c - d] : this.groupControls[c]);
                    return eo.default.uniq(p)
                }
            }
            return Object.values(this.groupControls)
        },
        show: function() {
            setTimeout(() => {
                this.renderHelpTourTooltip()
            }, 100), eo.default.each(this.controls, function(o) {
                o.render()
            }, this);
            let e = this.selectedBlocks[0];
            e.settingsOnCreate && e.model.created && !e.model.settingsOpened && !e.has_parent_block && (e.onCreate ? e.onCreate() : this.selectFirst(), this.selectedBlocks[0].model.settingsOpened = !0)
        },
        hide: function(e) {
            this.unmountHelpTourTooltip(), e ? .fromAdd || this.toggleHelpNotice({
                show: !0
            }), this.hideTimeout = setTimeout(this.hideWithAnimation, 0)
        },
        renderControlTooltip: function() {
            let e = this.$el.children("#controls-help-tour-tooltip")[0],
                o = this.tipsFromY ? this.tipsFromY : this.controls[0] ? .fromY;
            !e || !o || Wa({
                component: iu,
                domElement: e,
                model: new xf.default.Model({
                    position: this.eduTipForRender ? "left" : "top",
                    indent: 8,
                    steps: ["TextWidgetOpenPanel", "ButtonWidgetAdjustVisualProperties"],
                    styles: {
                        position: "relative",
                        top: this.eduTipForRender ? o + this.ICON_HEIGHT / 2 : o
                    },
                    ...this.eduTipForRender && {
                        eduTips: this.eduTipForRender
                    }
                }),
                onRenderComplete: () => {
                    this.tooltipIsMount = !0, this.eduTipForRender && (this.eduTipRendered = this.eduTipForRender, this.eduTipForRender = null), this.tipsFromY && (this.tipsFromY = null)
                },
                onDestroy: () => {
                    vf.default.unmountComponentAtNode(e), e && e.parentNode && e.parentNode.removeChild(e)
                }
            })
        },
        showTip: function(e) {
            if (!kh.includes(e)) return;
            this.eduTipForRender = e;
            let o = e.toLowerCase();
            setTimeout(() => {
                let t;
                if (o.includes("color")) t = this.findControl("shape_color") || this.findControl("text_color");
                else if (o.includes("arrange")) t = this.findControl("common_arrange");
                else if (o.includes("typography")) t = this.findControl("text_typography");
                else if (o.includes("group")) t = this.controls[2];
                else if (o.includes("settings") && (t = this.controls[0], t && !t.selected)) {
                    this.renderControlTooltip();
                    return
                }!t && (t = this.controls[0], !t) || (this.tipsFromY = t.fromY, o.includes("settings") || this.renderControlTooltip())
            }, 300)
        },
        hideTip: function() {
            let e = kx();
            this.eduTipForRender === null && kh.includes(e.message) && window.RM.constructorRouter.trigger("notice:triggerEduTipClose")
        },
        renderHelpTourTooltip: function() {
            let {
                started: e
            } = Zt();
            e && (this.tooltipIsMount && this.unmountHelpTourTooltip(), this.renderControlTooltip())
        },
        unmountHelpTourTooltip: function() {
            if (!this.tooltipIsMount) return;
            let e = this.$el.children("#controls-help-tour-tooltip")[0];
            vf.default.unmountComponentAtNode(e) && (this.tooltipIsMount = !1)
        },
        canControlsBeClosed: function(e) {
            let o = !0;
            return eo.default.each(this.controls, function(t) {
                o = !t.canControlBeClosed(e) && o
            }), o
        },
        hideWithAnimation: function() {
            this.selectedBlocks = [], this.controls.length !== 0 && (eo.default.each(this.controls, function(e) {
                let o = e instanceof iv;
                e.destroy(!o)
            }), this.controls = [])
        },
        select: function(e) {
            if (!e || e.rolePermission && !Qe.isPermissionAllowed(e.rolePermission)) return;
            e.trigger("selected", {
                control: e,
                state: !0
            }), e.select();
            let o = eo.default.without(this.controls, e);
            eo.default.each(o, function(t) {
                t.fade()
            }), e.block && e.block.isEditMode || this.hideTip()
        },
        deselect: function() {
            this.nextHelpTourStepAfterDeselect(), this.hideTip(), eo.default.each(this.controls, function(e) {
                e.trigger("selected", {
                    control: e,
                    state: !1
                }), e.deselect()
            })
        },
        nextHelpTourStepAfterDeselect: function() {
            let {
                started: e
            } = Zt();
            e && (Oe(["TextWidgetSelect"]), Oe(["TextWidgetProperties"]), Oe(["TextWidgetOpenPanel", "ButtonWidgetAddLink", "ButtonWidgetAddLinkType"]), Oe(["PictureWidget", "PictureWidgetClickOutside"], {
                fallback: !0
            }), Oe(["ButtonWidgetAdjustVisualProperties", "ButtonWidgetAnchorLinkPosition"]), Oe(["PointerCursorUpload"]))
        },
        selectFirst: function() {
            this.select(this.controls[0])
        },
        selectSettingsControl: function() {
            this.controls[0] && this.select(this.controls[0])
        },
        findControl: function(e) {
            let o;
            return eo.default.each(this.controls, function(t) {
                t.name == e && (o = t)
            }), o
        },
        getControlsHeight: function() {
            return eo.default.isEmpty(this.controls) ? 0 : this.controls.length * (this.ICON_HEIGHT + this.ICON_PADDING) - this.ICON_PADDING
        },
        getControlRelativePosition: function(e) {
            let o = this.controls.indexOf(e);
            return o = o < 0 ? 0 : o, o == 0 ? o : o * (this.ICON_HEIGHT + this.ICON_PADDING) - this.ICON_PADDING / 2
        },
        calculateDividersTotal: function(e, o) {
            let t = 0,
                r = this.getControlsByDividersField(e);
            for (let i of r) o.includes(i) && (t += this.getDividerSize(r, i));
            return t
        },
        replacePictureSettings(e) {
            return [...e.join().replace("picture_settings", "picture_color").split(",")]
        },
        getControlsByDividersField(e) {
            let o = e.length === 1 ? "controlsDividers" : "groupControlsDividers",
                t = [];
            if (e[0][o] && (Array.isArray(e[0][o]) ? t = [...e[0][o]] : typeof e[0][o] == "function" && (t = [...e[0][o](e[0], this.workspace, Object.values(e[0].groupControls))]), e.length > 1)) {
                let r = typeof this.groupControlsDividers == "function" ? this.groupControlsDividers(e[0], this.workspace, Object.values(e[0].groupControls)) : this.groupControlsDividers;
                t.push(...r), e.every(i => i.isVector && i.isVector()) && (t = this.replacePictureSettings(t))
            }
            return t
        },
        getDividerSize: function(e, o) {
            return e && e.length && e.includes(o) ? 22 : 0
        }
    }),
    F1 = wM;
Ky();
Is();
var ln = M(Ht()),
    yf = M(lt());
Bo();
Wd();
var N1 = M(ir());
Es();
aI();
var xM = {
        props: {
            position: {
                type: String,
                default: null
            },
            indent: {
                type: Number,
                default: null
            },
            step: {
                type: String,
                default: null
            },
            modifiers: {
                type: Array,
                default: null
            },
            skidding: {
                type: Number,
                default: 0
            },
            componentsProps: {
                type: Object,
                default: void 0
            }
        },
        mounted: function() {
            Wa({
                component: iu,
                domElement: this.$el,
                model: new Backbone.Model({
                    position: this.position,
                    indent: this.indent,
                    steps: this.step,
                    styles: {
                        width: "100%",
                        height: "100%"
                    },
                    skidding: this.skidding,
                    modifiers: this.modifiers,
                    componentsProps: this.componentsProps
                })
            })
        },
        beforeDestroy: function() {
            N1.default.unmountComponentAtNode(this.$el)
        }
    },
    vM = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "help-tour-tooltip"
        })
    },
    yM = [],
    kM = void 0,
    _M = void 0,
    CM = void 0,
    SM = !1;

function PM(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "helptour-tooltip.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var TM = PM({
        render: vM,
        staticRenderFns: yM
    }, kM, xM, _M, SM, CM, !1, void 0, void 0, void 0),
    $i = TM;
$o();
kt();
var IM = {
        components: {
            NumericInput: Ln,
            HelpTourTooltip: $i
        },
        props: {
            workspace: Object,
            defaultZoom: {
                type: Number,
                default: 1
            },
            defaultSticky: Boolean
        },
        data: function() {
            return {
                pageHeight: 0,
                draggable: !1,
                viewport: "",
                nearHovered: !1,
                sX: 0,
                sY: 0,
                zoom: this.defaultZoom || 1,
                relativeToScreen: this.defaultSticky,
                helpTourStep: "PageHeight",
                isHelpTourStep: !1
            }
        },
        computed: {
            minH: function() {
                return this.getViewport().min_height
            },
            maxH: function() {
                return this.getViewport().max_height
            },
            isSticky() {
                return this.relativeToScreen && Modernizr.csspositionsticky || this.isHelpTourStep
            },
            isFixed() {
                return this.relativeToScreen && !Modernizr.csspositionsticky
            },
            roundedPageHeight: {
                get() {
                    return Math.round(this.pageHeight)
                },
                set(e) {
                    this.pageHeight = e
                }
            }
        },
        mounted: function() {
            (0, ln.default)(document).on("mousemove", this.dragMove), (0, ln.default)(document).on("mouseup", this.dragEnd), (0, ln.default)(window).on("blur", this.onBlur), Me.on("zoom", this.onZoom), Me.on("helptour:update", this.handleCheckTourStep), window.RM.constructorRouter.on("pageChange", this.handleCheckTourStep)
        },
        destroy: function() {
            (0, ln.default)(document).off("mousemove", this.dragMove), (0, ln.default)(document).off("mouseup", this.dragEnd), (0, ln.default)(window).off("blur", this.onBlur), Me.off("helptour:update", this.handleCheckTourStep), window.RM.constructorRouter.off("pageChange", this.handleCheckTourStep)
        },
        methods: {
            savePage: yf.default.debounce(function() {
                this.workspace.page.saveHeight()
            }, 300),
            loadHeight: function() {
                this.viewport = this.workspace.viewport, this.pageHeight = this.workspace.page.getViewportParam(this.workspace.viewport, "height")
            },
            getViewport: function() {
                return yf.default.find(De.viewports, e => e.name === this.viewport)
            },
            dragMove: function(e) {
                if (this.dragged) {
                    let o = this.pageHeight + (e.pageY - this.startY) / this.zoom,
                        t = this.workspace.$window.height();
                    o < t / this.zoom && this.viewport === "default" && (o += (e.pageY - this.startY) / this.zoom), e.pageY / this.zoom + 20 > t / this.zoom ? this.downInt || (this.downInt = setInterval(() => {
                        this.pageHeight += 20
                    }, 100)) : this.downInt && (clearInterval(this.downInt), this.downInt = null), this.pageHeight = Math.min(Math.max(o, this.minH), this.maxH), this.startY = e.pageY
                } else this.nearHovered && document.activeElement !== this.$refs.input.$el && Math.pow(this.sX - e.screenX, 2) + Math.pow(this.sY - e.screenY, 2) > 6e3 && (this.nearHovered = !1)
            },
            dragStart: function(e) {
                this.dragged = !0, this.startY = e.pageY, (0, ln.default)("body").addClass("ns-resize-cursor"), this.workspace.page.trigger("change-height-start")
            },
            dragEnd: function() {
                this.dragged = !1, (0, ln.default)("body").removeClass("ns-resize-cursor"), this.downInt && (clearInterval(this.downInt), this.downInt = null), this.workspace.page.trigger("change-height-end")
            },
            onBlur: function() {
                this.nearHovered = !1, this.dragEnd()
            },
            onZoom: function(e, o) {
                this.zoom = e, this.relativeToScreen = o
            },
            handleCheckTourStep: function() {
                let {
                    step: e
                } = Zt(), o = this.workspace.page.getPageId() === window.RM ? .constructorRouter ? .getCurrentPageId();
                this.isHelpTourStep = o && e ? .name === "PageHeight"
            }
        },
        watch: {
            pageHeight: function(e, o) {
                if (this.workspace.page.getViewportParam(this.workspace.viewport, "height") === e) return;
                this.workspace.page.setViewportParam(this.workspace.viewport, "height", Math.round(this.pageHeight)), this.workspace.page.setViewportParam(this.workspace.viewport, "type", "scroll");
                let t = this.workspace.$window.height();
                e > t / this.zoom && e > o && this.workspace.$container.scrollTop(this.workspace.$container.scrollTop() + Math.ceil((e - o) * this.zoom)), this.savePage(), Oe("PageHeight")
            },
            workspace: {
                handler: function(e, o) {
                    o && (o.page.off("change:viewport", this.loadHeight), o.page.off("change:height", this.loadHeight), o.page.off("change:viewport_phone_portrait", this.loadHeight), o.page.off("change:viewport_tablet_portrait", this.loadHeight)), e.page.on("change:viewport", this.loadHeight), e.page.on("change:height", this.loadHeight), e.page.on("change:viewport_phone_portrait", this.loadHeight), e.page.on("change:viewport_tablet_portrait", this.loadHeight), this.loadHeight()
                },
                immediate: !0
            },
            nearHovered(e) {
                this.workspace.toggleBorder({
                    guidesOn: RM.constructorRouter.mag.edit_params.get("guides"),
                    columnCount: RM.constructorRouter.gg.guides ? .model ? .get("columns"),
                    margin: RM.constructorRouter.gg.guides ? .model ? .get("margin"),
                    willResize: e
                })
            }
        }
    },
    MM = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            class: {
                "page-size-control": !0, sticky: e.isSticky, fixed: e.isFixed
            }
        }, [t("transition", {
            attrs: {
                name: "page-size-fade"
            }
        }, [e.nearHovered || e.isHelpTourStep ? t("numeric-input", {
            ref: "input",
            staticClass: "size-input-readonly",
            attrs: {
                min: e.minH,
                max: e.maxH,
                autosize: !0,
                "thousand-delimiter": ",",
                "mouse-use": !1
            },
            model: {
                value: e.roundedPageHeight,
                callback: function(r) {
                    e.roundedPageHeight = r
                },
                expression: "roundedPageHeight"
            }
        }) : e._e()], 1), e._v(" "), e.isHelpTourStep ? t("help-tour-tooltip", {
            attrs: {
                step: e.helpTourStep,
                position: "top",
                indent: 56
            }
        }) : e._e(), e._v(" "), t("div", {
            staticClass: "size-handle",
            on: {
                mousedown: e.dragStart,
                mouseover: function(r) {
                    e.sX = r.screenX, e.sY = r.screenY, e.nearHovered = !0
                }
            }
        })], 1)
    },
    BM = [],
    zM = void 0,
    EM = void 0,
    AM = void 0,
    DM = !1;

function LM(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "page-size.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var OM = LM({
        render: MM,
        staticRenderFns: BM
    }, zM, IM, EM, DM, AM, !1, void 0, void 0, void 0),
    W1 = OM;
_u();
Rs();
ut();
uu();
Yh();
jd();
Mh();
rr();
TI();
vr();
var cp = M(Mo());
qh();
Ph();
HI();
var bl = M(Ht());
Is();
var Pe = M(lt());
Rs();
var di = M(Ht());
Wd();
$o();
var kf = M(lt());
kt();
var $M = {
        components: {
            NumericInput: Ln,
            HelpTourTooltip: $i
        },
        props: {
            space: Object,
            spaces: Array,
            workspace: Object,
            blockHovered: Boolean,
            defaultZoom: {
                type: Number,
                default: 1
            }
        },
        data() {
            return {
                workspaceWidth: this.workspace.mag.getViewportWidth(this.workspace.viewport),
                windowWidth: (0, di.default)(window).width(),
                nearHandleHovered: !1,
                handleY: 0,
                dragged: !1,
                needSizes: this.workspace.mag.edit_params.get("sizes"),
                zoom: this.defaultZoom || 1,
                helpTourStep: "SetBlocksDistance",
                interval: void 0
            }
        },
        computed: {
            isMobile() {
                return this.workspace.viewport !== "default"
            },
            sideMargin() {
                return Math.max((this.windowWidth - this.workspaceWidth * this.zoom) / 2 / this.zoom, 0)
            },
            resizeSign() {
                return this.startHandle === "top" ? -1 : 1
            },
            prevSpace() {
                return this.spaces[this.spaces.indexOf(this.space) - 1] || null
            },
            topGroupHeight() {
                return this.prevSpace ? (this.space.top - this.prevSpace.bottom) * this.zoom : 0
            }
        },
        created() {
            this.onResizeEndDebounced = kf.default.debounce(this.onResizeEnd, 300), this.onHeightChangeDebounced = kf.default.debounce(this.onHeightChange, 300)
        },
        mounted() {
            (0, di.default)(window).on("resize", this.onWinowResize), (0, di.default)("body").on("mousemove", this.onDragMove), this.workspace.page.on("change:viewport", this.onChangeViewport), this.workspace.mag.edit_params.on("change:sizes", this.onToggleSizes), Me.on("zoom", this.onZoom)
        },
        beforeDestroy() {
            (0, di.default)(window).off("resize", this.onWinowResize), (0, di.default)("body").off("mousemove", this.onDragMove), this.workspace.page.off("change:viewport", this.onChangeViewport), this.workspace.mag.edit_params.off("change:sizes", this.onToggleSizes)
        },
        methods: {
            onChangeViewport() {
                this.workspaceWidth = this.workspace.mag.getViewportWidth(this.workspace.viewport)
            },
            onToggleSizes() {
                this.needSizes = this.workspace.mag.edit_params.get("sizes")
            },
            onHandleHover() {
                this.handleY = null, this.nearHandleHovered = !0, Oe("HoverBetweenBlocks")
            },
            onHandleLeave(e) {
                this.handleY = e.screenY, this.nearHandleHovered = !0
            },
            onWinowResize() {
                this.windowWidth = (0, di.default)(window).width()
            },
            onStartDrag(e) {
                if (e.target.parentNode !== this.$el) return;
                this.startEvent = e;
                let o = (0, di.default)("body");
                o.addClass("move-cursor"), o.on("mouseup", this.onDragEnd), o.on("mouseleave", this.onDragEnd), this.dragged = !0
            },
            onDragMove(e) {
                if (this.dragged) {
                    let o = (e.clientY - this.startEvent.clientY) / this.zoom,
                        t = Math.abs(window.innerHeight / this.zoom - e.pageY / this.zoom) < 20,
                        r = e.pageY / this.zoom < 20;
                    t && o >= 0 && !this.interval ? this.interval = setInterval(() => this.$emit("dragMove", this.space, o + 20, e), 100) : r && o <= 0 && !this.interval ? this.interval = setInterval(() => this.$emit("dragMove", this.space, o - 20, e), 100) : !t && !r && (this.interval && (this.interval = clearInterval(this.interval)), this.$emit("dragMove", this.space, o, e)), this.startEvent = e
                } else this.handleY !== null && Math.abs(e.screenY - this.handleY) > 40 && (this.nearHandleHovered = !1)
            },
            onDragEnd() {
                Oe("DeselectAfterSetBlocksDistance"), this.dragged = !1, this.interval = clearInterval(this.interval);
                let e = (0, di.default)("body");
                e.removeClass("move-cursor"), e.off("mousemove", this.onDragMove), e.off("mouseup", this.onDragEnd), e.off("mouseleave", this.onDragEnd), this.$emit("dragEnd", this.space)
            },
            onBottomMouseDown(e, o) {
                this.startEvent = e, this.startHandle = o;
                let t = (0, di.default)("body");
                t.addClass("ns-resize-cursor"), t.on("mousemove", this.mousemove), t.on("mouseup", this.mouseup)
            },
            mousemove(e) {
                let o = (e.clientY - this.startEvent.clientY) / this.zoom;
                this.space.height + o < 0 && (o = -this.space.height), o !== 0 && (this.$emit("changeHeight", this.startHandle, this.space, o, e.shiftKey), this.startEvent = e)
            },
            onHeightChange(e) {
                e && (this.$emit("changeHeight", "bottom", this.space, e - this.space.height, !1), this.onResizeEndDebounced(), e === 80 && Oe("SetBlocksDistance"))
            },
            onResizeEnd() {
                this.$emit("resizeEnd", this.space)
            },
            mouseup() {
                let e = (0, di.default)("body");
                e.removeClass("ns-resize-cursor"), e.off("mousemove", this.mousemove), e.off("mouseup", this.mouseup), this.$emit("resizeEnd", this.space)
            },
            onZoom: function(e) {
                this.zoom = e
            }
        }
    },
    HM = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "space-highlighter",
            class: {
                isMobile: e.isMobile, isDesktop: !e.isMobile, "always-line": e.space.height < 2, "always-plus": e.space.height < 25
            },
            style: {
                top: e.space.top + "px",
                height: e.space.height + "px",
                left: -e.sideMargin + "px"
            },
            on: {
                mouseover: e.onHandleHover,
                mouseleave: e.onHandleLeave,
                mousedown: function(r) {
                    e.onStartDrag(r)
                }
            }
        }, [t("div", {
            staticClass: "space-left",
            style: {
                "flex-basis": e.sideMargin + "px"
            }
        }, [e.space.isLast ? e._e() : t("div", {
            staticClass: "handle handle-bottom",
            on: {
                mousedown: function(r) {
                    e.onBottomMouseDown(r, "bottom")
                }
            }
        }), e._v(" "), t("div", {
            staticClass: "add-widget",
            on: {
                click: function(r) {
                    return e.$emit("addWidget", e.space)
                }
            }
        }), e._v(" "), e.prevSpace && e.blockHovered ? t("div", {
            staticClass: "duplicate-widget",
            style: {
                top: -e.topGroupHeight / 2 + "px"
            },
            on: {
                click: function(r) {
                    return e.$emit("duplicateGroup", e.space)
                }
            }
        }) : e._e(), e._v(" "), e.nearHandleHovered && e.needSizes ? t("div", {
            staticClass: "space-size",
            on: {
                click: function(r) {
                    r.stopPropagation()
                }
            }
        }, [t("div", {
            staticStyle: {
                position: "relative",
                top: "10px"
            }
        }, [t("help-tour-tooltip", {
            attrs: {
                step: e.helpTourStep,
                position: "right",
                indent: 16
            }
        })], 1), e._v(" "), t("numeric-input", {
            staticClass: "numeric",
            attrs: {
                autosize: !0,
                min: 0,
                value: Math.round(e.space.height),
                "mouse-use": !1
            },
            on: {
                change: e.onHeightChangeDebounced
            }
        })], 1) : e._e()]), e._v(" "), t("div", {
            staticClass: "space-center",
            style: {
                "flex-basis": e.workspaceWidth + "px"
            }
        }, [e.space.isLast ? e._e() : t("div", {
            staticClass: "handle handle-bottom",
            on: {
                mousedown: function(r) {
                    e.onBottomMouseDown(r, "bottom")
                }
            }
        })]), e._v(" "), t("div", {
            staticClass: "space-right",
            style: {
                "flex-basis": e.sideMargin + "px"
            }
        }, [e.space.isLast ? e._e() : t("div", {
            staticClass: "handle handle-bottom",
            on: {
                mousedown: function(r) {
                    e.onBottomMouseDown(r, "bottom")
                }
            }
        })])])
    },
    FM = [],
    NM = void 0,
    WM = void 0,
    VM = void 0,
    UM = !1;

function GM(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "space.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var jM = GM({
        render: HM,
        staticRenderFns: FM
    }, NM, $M, WM, UM, VM, !1, void 0, void 0, void 0),
    V1 = jM;
Mi();
Jt();
var qM = co.extend(V1),
    YM = class ju {
        constructor(o) {
            this.workspace = o, this._updateSpacesBinded = this.updateSpaces.bind(this), this._moveIntoSpacesBinded = this.moveIntoSpaces.bind(this), this._handleRotateBinded = this.resizeBlockHandler.bind(this), this._createWidgetHandlerBinded = this.createWidgetHandler.bind(this), this._removeWidgetHandlerBinded = this.removeWidgetHandler.bind(this), this._changeVisibilityHandlerBinded = this.changeVisibilityHandler.bind(this), this._undoRedoHandlerBinded = this.undoRedoHandler.bind(this), this._resizeBlockHandlerBinded = this.resizeBlockHandler.bind(this), this._resizePageHandlerBinded = this.resizePageHandler.bind(this), this._onMouseMoveBinded = this.onMouseMove.bind(this), this.refillGroupsDebounced = Pe.default.debounce(this.refillGroups.bind(this), 100), this.currentSpaces = [], this.affectedBlocks = [], this._container = o.$el, o.page.on("widget:create", this._createWidgetHandlerBinded), o.page.on("widget:remove", this._removeWidgetHandlerBinded), o.page.on("change:viewport", this._updateSpacesBinded), o.page.on("change:height", this._resizePageHandlerBinded), this.initTimeout = setTimeout(() => {
                Pe.default.each(this.workspace.blocks, t => {
                    t.on("resize", this._resizeBlockHandlerBinded), t.on("move", this._moveIntoSpacesBinded), t.model.on("change:hidden change:fixed_position", this._updateSpacesBinded), t.model.on("change:angle", this._handleRotateBinded), t.model.on("change", this._undoRedoHandlerBinded)
                }), this.updateSpaces()
            }, 0), Pe.default.each(o.getSelectedBlocks(), function(t) {
                t.$el.removeClass("bundle-allow-top"), t.$el.removeClass("bundle-allow-bottom")
            }), o.$el.toggleClass("blocks-mode", !0), (0, bl.default)(document).on("mousemove", this._onMouseMoveBinded)
        }
        onMouseMove(o) {
            let t = RM.constructorRouter.zoom.getZoom(),
                r = ct.mapPointerToElement(o, this.workspace.$origin[0], 1, t);
            Pe.default.each(this.spaces, (i, n) => {
                let s = this.spaces[n - 1];
                if (s) {
                    let l = {
                        top: s.bottom,
                        left: 0,
                        width: 1 / 0,
                        height: i.top - s.bottom
                    };
                    this.currentSpaces[n].blockHovered = r.top > l.top && r.top < l.top + l.height
                }
            })
        }
        createWidgetHandler(o, t) {
            Pe.default.each(this.workspace.blocks, r => {
                r.off("resize", this._resizeBlockHandlerBinded), r.off("move", this._moveIntoSpacesBinded), r.model.off("change:hidden change:fixed_position", this._updateSpacesBinded), r.model.off("change:angle", this._handleRotateBinded), r.model.off("change", this._undoRedoHandlerBinded), r.on("resize", this._resizeBlockHandlerBinded), r.on("move", this._moveIntoSpacesBinded), r.model.on("change:hidden change:fixed_position", this._updateSpacesBinded), r.model.on("change:angle", this._handleRotateBinded), r.model.on("change", this._undoRedoHandlerBinded)
            }), this.pasteHandler(o, t), this.undoRedoHandler(o, t), this.duplicateGroupHandler(o, t)
        }
        duplicateGroupHandler(o, t) {
            t.duplicateGroup && this.refillGroupsDebounced()
        }
        refillGroups() {
            let o = this.workspace.filterAutolayoutBlocks(this.workspace.blocks);
            this.blocks = this.workspace.collectBlocks(o), this.packs = this.calcPackData(this.blocks), this.groupedBlocks = this.collectBlockGroups(this.blocks, this.packs, this.spaces), this.spaces = this.blocksGroupsToSpaces(this.groupedBlocks, this.spaces), this.redrawSpaces(!0)
        }
        pasteHandler(o, t) {
            !t || !t.copy && !t.clone || t.duplicateGroup || this.updateSpaces()
        }
        undoRedoHandler(o, t) {
            !t || !t.undo && !t.redo || this.updateSpaces()
        }
        removeWidgetHandler(o) {
            let t = this.getGroupByModel(o);
            t && (t.items = Pe.default.filter(t.items, r => r.model !== o), this.recalcSpaces())
        }
        changeVisibilityHandler() {}
        resizePageHandler(o) {
            let t = o.getViewportParam(this.workspace.viewport, "height"),
                r = Pe.default.last(this.spaces);
            r.height = Math.max(30, t - r.top), r.bottom = r.top + r.height, this.recalcSpaces()
        }
        resizeSpace(o, t, r = "top") {
            if (!t) return;
            let i = this.groupedBlocks[o.groupIdx - 1] || o.isLast && Pe.default.last(this.groupedBlocks);
            if (r === "top" && i) {
                let n = i.bb.top + i.bb.height;
                t = Math.min(t, o.height), t = Math.max(t, n - o.top), o.top = Math.round(o.top + t), o.height = Math.round(o.height - t)
            } else r === "bottom" && (o.height = Math.max(0, Math.round(o.height + t)))
        }
        resizeHandler(o, t, r, i) {
            o === "top" ? (this.resizeSpace(t, r, "top"), this.resizePageHandler(this.workspace.page)) : o === "bottom" && t.isLast ? (this.resizeSpace(t, r, "bottom"), this.recalcSpaces()) : i ? (this.moveAllBlocksBottom(this.groupedBlocks, r, !0), this.resizePageHandler(this.workspace.page)) : (this.moveBlocksBottom(this.groupedBlocks, t.groupIdx, r, !0), this.resizePageHandler(this.workspace.page))
        }
        resizeEndHandler(o) {
            if (o.height <= 1) {
                let t = this.spaces.indexOf(o),
                    r = this.groupedBlocks[o.groupIdx],
                    i = this.groupedBlocks[o.groupIdx - 1];
                i && t > 0 && (i.items.splice.apply(i.items, [i.items.length, 0].concat(r.items)), this.spaces.splice(t, 1), this.groupedBlocks.splice(o.groupIdx, 1), Pe.default.each(this.spaces, (n, s) => {
                    t <= s && n.groupIdx--
                }), i.spaceBottom = this.spaces[t])
            }
            this.recalcSpaces(), this.redrawSpaces(), this.saveChanges()
        }
        dragMoveSpace(o, t, r) {
            let i = this.groupedBlocks[o.groupIdx - 1];
            if (!i) return;
            o.top + t < i.bottom && (t = i.bottom - o.top), this.moveBlocksBottom(this.groupedBlocks, o.groupIdx, t), Pe.default.each(this.spaces, c => {
                c.groupIdx >= o.groupIdx && (c.top += t, c.bottom += t)
            }), this.recalcSpaces();
            let n = RM.constructorRouter.zoom.getZoom();
            if (this.workspace.page.getViewportParam(this.workspace.viewport, "height") < window.innerHeight / n || t === 0) return;
            let l = Math.abs(window.innerHeight / n - r.pageY / n) < 20,
                p = r.pageY / n < 20,
                d = this.workspace.$container;
            if (l && t > 0 || p && t < 0) {
                let c = d.scrollTop() + t * n;
                d.scrollTop(c)
            }
        }
        dragEndSpace() {
            let o = -1,
                t = -1;
            Pe.default.each(this.spaces, (n, s) => {
                o === n.top && (t = s), o = n.bottom
            });
            let r = this.spaces[t],
                i = this.spaces[t - 1];
            t > -1 && this.groupedBlocks[i.groupIdx].items.length === 0 && (i.height += r.height, i.bottom = i.top + i.height, this.groupedBlocks.splice(i.groupIdx, 1), this.groupedBlocks[i.groupIdx] && (this.groupedBlocks[i.groupIdx].spaceTop = i), Pe.default.each(this.spaces, n => {
                n.groupIdx > i.groupIdx && n.groupIdx--
            }), this.spaces.splice(t, 1)), this.recalcSpaces(), this.redrawSpaces(!0), this.saveChanges()
        }
        splitSpace(o, t, r) {
            let i = Pe.default.clone(o),
                n = this.spaces.indexOf(o),
                s = this.groupedBlocks[o.groupIdx],
                l = Pe.default.clone(s),
                p = Math.round((o.height - t) / 2);
            l ? (l.spaceBottom = i, s.spaceTop = i, this.groupedBlocks.splice(o.groupIdx, 0, l)) : (l = {
                spaceTop: o,
                spaceBottom: i
            }, this.groupedBlocks.push(l)), this.spaces.splice(n + 1, 0, i), o.height = p, o.bottom = o.top + p, i.height = p, i.top = o.bottom + t, i.bottom = i.top + i.height, l.items = Pe.default.map(r, d => ({
                block: d,
                model: d.model,
                box: d.getBoxData({
                    includeBoundingBox: !0
                })
            })), Pe.default.each(this.spaces, (d, c) => {
                c > n && (d.groupIdx += 1)
            }), this.recalcSpaces()
        }
        createWidgetAtSpace(o, t, r, i, n) {
            let s = this.spaces.indexOf(o),
                l = this.spaces[s + 1];
            l || (r = !1);
            let p = o.bottom;
            r && isFinite(n) && (p = n - 360 / 2, p + 360 > l.top && (p = l.top - 360), p = Math.max(o.bottom, p)), this.customCreateWidget() && n && (p = n - 360 / 2), RM.constructorRouter.workspace.addWidget({
                type: t,
                y: p
            }, {
                useDefaults: !0,
                success: d => {
                    if (this.customCreateWidget() && n) {
                        this.updateSpaces();
                        return
                    }
                    let c = Pe.default.find(this.workspace.blocks, g => g.id === d.id);
                    i && i.success(d);
                    let m = d.get("h"),
                        u = this.spaces[this.spaces.indexOf(o) + 1];
                    if (r) {
                        let g = p + m - u.top;
                        g > 0 && (this.moveBlocksBottom(this.groupedBlocks, o.groupIdx, g), Pe.default.each(this.spaces, (h, b) => {
                            b > s && (h.top += g, h.bottom += g)
                        })), this.groupedBlocks[o.groupIdx].items.push({
                            block: c,
                            model: c.model,
                            box: c.getBoxData({
                                includeBoundingBox: !0
                            })
                        })
                    } else this.moveBlocksBottom(this.groupedBlocks, o.groupIdx, m + o.height, !0), this.splitSpace(o, m, [c]);
                    this.redrawSpaces(), this.saveChanges()
                },
                error: d => {
                    i && i.error(d)
                }
            }), this.workspace.save_group(this.getModelToSave(), {
                silent: !0
            })
        }
        customCreateWidget() {
            return this.spaces.length === 1
        }
        addWidgetAtOffset(o, t, r) {
            let i, n;
            Pe.default.each(this.spaces, s => {
                s.top < t && s.bottom > t && (i = s), s.bottom < t && (n = s)
            }), i ? this.createWidgetAtSpace(i, o, !1, r, t) : n && this.createWidgetAtSpace(n, o, !0, r, t)
        }
        duplicateGroup(o) {
            let t = this.spaces[this.spaces.indexOf(o) - 1],
                r = Pe.default.clone(o),
                i = o.top - t.bottom + 20,
                n = this.spaces.indexOf(o),
                s = this.groupedBlocks[o.groupIdx - 1],
                l = Pe.default.clone(s),
                p = 20,
                d = o.top - t.bottom;
            this.moveBlocksBottom(this.groupedBlocks, o.groupIdx, i, !0), l.spaceBottom = r, s.spaceTop = r, this.groupedBlocks.splice(o.groupIdx + 1, 0, l), this.spaces.splice(n + 1, 0, r), o.height = p, o.bottom = o.top + o.height, r.top = o.bottom + d, r.bottom = r.top + r.height, l.items = [], Pe.default.each(this.spaces, (c, m) => {
                m > n && (c.groupIdx += 1)
            }), this.recalcSpaces(), this.groupedBlocks[t.groupIdx].items.length && this.workspace.cloneBlocks(Pe.default.map(this.groupedBlocks[t.groupIdx].items, function(c) {
                return c.block
            }), {
                offset: {
                    y: i
                },
                duplicateGroup: !0
            }), this.redrawSpaces(!0), this.saveChanges()
        }
        addWidgetIntoSpace(o) {
            Gv({
                name: "widget-selector",
                payload: {
                    y: o.top + (o.bottom - o.top) / 2
                }
            })
        }
        static recalcBBoxes(o) {
            o instanceof Array || (o = [o]), Pe.default.each(o, t => {
                t.box = t.block.getBoxData({
                    includeBoundingBox: !0
                })
            })
        }
        getBlocksToSave() {
            let o = Pe.default.chain(this.affectedBlocks).uniq().value();
            return this.affectedBlocks = [], o
        }
        getModelToSave() {
            return Pe.default.map(this.getBlocksToSave(), o => o.model)
        }
        getGroupByBlock(o) {
            return Pe.default.find(this.groupedBlocks, t => Pe.default.find(t.items, r => r.block === o))
        }
        getGroupByModel(o) {
            return Pe.default.find(this.groupedBlocks, t => Pe.default.find(t.items, r => r.model === o))
        }
        getBlockOffsetInGroup(o, t) {
            let r = Pe.default.reduce(t, (i, n) => (i.top = Math.min(i.top, n.box.bb_y), i.bottom = Math.max(i.bottom, n.box.bb_y + n.box.bb_h), i), {
                top: 1 / 0,
                bottom: -1 / 0
            });
            return {
                top: o.box.bb_y - r.top,
                bottom: r.bottom - o.box.bb_y - o.box.bb_h
            }
        }
        checkAllBlocksNear(o) {
            let t = this.getGroupByModel(o[0].model);
            return Pe.default.reduce(o, (r, i) => r && t === this.getGroupByModel(i.model), !0)
        }
        getRestriction(o, t) {
            let r = this.getGroupByModel(o);
            if (!r) return {
                canMoveTop: !0,
                canMoveBottom: !0
            };
            let i = Pe.default.find(r.items, p => p.model === o),
                n = r.bb.top + r.bb.height,
                s = 0,
                l = 0;
            if (t.length > 1) {
                let p = this.getBlockOffsetInGroup(i, Pe.default.map(t, d => {
                    let c = this.getGroupByBlock(d);
                    return Pe.default.find(c.items, m => m.block === d)
                }));
                s = p.top, l = p.bottom
            }
            return {
                top: Math.min(r.spaceTop && r.spaceTop.bottom || 0, r.bb.top) + s,
                bottom: Math.max(r.spaceBottom.top, n) - l,
                canMoveTop: Math.round(i.box.bb_y) > Math.round(r.bb.top) || Pe.default.filter(r.items, p => Math.round(r.bb.top) === Math.round(p.box.bb_y)).length > 1,
                canMoveBottom: Math.round(i.box.bb_y + i.box.bb_h) < Math.round(n) || Pe.default.filter(r.items, p => Math.round(n) === Math.round(p.box.bb_y + p.box.bb_h)).length > 1
            }
        }
        shiftLayout(o) {
            this.recalcGroupedBlocks();
            let t = 0,
                r = [];
            Pe.default.each(this.spaces, i => {
                let n = this.groupedBlocks[i.groupIdx - 1],
                    s = this.groupedBlocks[i.groupIdx];
                t && n && r.push({
                    group: n,
                    delta: t
                }), n && (n === o ? t += n.bottom - i.top : t += Math.max(0, n.bottom - i.top)), i.top += t, i.bottom += t, s && s.spaceTop
            }), Pe.default.each(r, i => {
                this.moveBlocksBottom([i.group], 0, i.delta)
            }), this.recalcSpaces()
        }
        resizeBlockHandler(o, t) {
            t ? .autosize ? (this.shiftLayout(o), this.saveChanges()) : this.shiftLayout(o)
        }
        moveIntoSpaces() {
            this.recalcSpaces()
        }
        recalcBoxOnResize(o, t, r) {
            let i = this.getGroupByModel(r);
            if (!i) return o;
            let n = t.boxOrig,
                s = t.DOTS_POS_X,
                l = t.DOTS_POS_Y,
                p = n.left + n.width * s,
                d = n.top + n.height * l,
                c = n.left + n.width / 2,
                m = n.top + n.height / 2,
                u = p - c,
                g = m - d,
                h = c + t.cosAngle * u + t.sinAngle * g,
                b = m + t.sinAngle * u - t.cosAngle * g,
                x = o.left + o.width * s,
                S = o.top + o.height * l,
                v = o.left + o.width / 2,
                P = o.top + o.height / 2,
                C = x - v,
                k = P - S,
                T = v + t.cosAngle * C + t.sinAngle * k,
                R = P + t.sinAngle * C - t.cosAngle * k,
                I = Pe.default.clone(o);
            I.left = o.left + (h - T), I.top = o.top + (b - R);
            let B = pt.calcBoundingBox(I),
                L = i.spaceTop.bottom - B.bb_top;
            if (L > 0) {
                let D = Math.sin(o.angle / 180 * Math.PI) * Math.cos(o.angle / 180 * Math.PI),
                    E = D > 0 ? o.height / o.width : o.width / o.height,
                    $ = Math.atan(E) + o.angle / 180 * Math.PI,
                    G = B.bb_height - L,
                    de = D > 0 ? $ - Math.PI / 2 : Math.PI - $,
                    Q = G / Math.abs(Math.cos(de)),
                    U = o.height / o.width,
                    Z = o.width - Q / Math.sqrt(1 + U * U),
                    xe = Z * U;
                o.top += xe, o.height -= xe, o.width -= Z
            }
            return o
        }
        recalcGroupedBlocks() {
            Pe.default.each(this.groupedBlocks, o => {
                Pe.default.isEmpty(o.items) ? (o.bb = {
                    top: o.spaceTop.bottom,
                    height: o.spaceBottom.top - o.spaceTop.bottom
                }, o.top = o.spaceTop.bottom, o.bottom = o.top) : (ju.recalcBBoxes(o.items), o.bb = ju.commonBB(o.items), o.top = o.bb.top, o.bottom = o.bb.top + o.bb.height)
            }), this.packs = this.calcPackData(this.blocks)
        }
        recalcSpaces() {
            this.recalcGroupedBlocks(), Pe.default.each(this.spaces, t => {
                t.bottom = t.top + t.height
            });
            let o = Math.round(Pe.default.last(this.spaces).bottom);
            this.workspace.page.setViewportParam(this.workspace.viewport, "height", o), this.workspace.page.setViewportParam(this.workspace.viewport, "type", "scroll")
        }
        redrawSpaces(o) {
            (this.spaces.length < this.currentSpaces.length || o) && (Pe.default.each(o ? this.currentSpaces : this.currentSpaces.slice(this.spaces.length), t => {
                t.$destroy(), t.$el.remove()
            }), o && (this.currentSpaces = [])), this.currentSpaces = Pe.default.map(this.spaces, (t, r) => {
                if (this.currentSpaces[r]) return this.currentSpaces[r].space = t, this.currentSpaces[r];
                let i = (0, bl.default)("<div>").appendTo(this._container),
                    n = new qM({
                        el: i.get(0),
                        propsData: {
                            space: t,
                            workspace: this.workspace,
                            spaces: this.spaces,
                            defaultZoom: RM.constructorRouter.zoom.getZoom()
                        }
                    });
                return n.$on("changeHeight", this.resizeHandler.bind(this)), n.$on("addWidget", this.addWidgetIntoSpace.bind(this)), n.$on("duplicateGroup", this.duplicateGroup.bind(this)), n.$on("dragMove", this.dragMoveSpace.bind(this)), n.$on("dragEnd", this.dragEndSpace.bind(this)), n.$on("resizeEnd", this.resizeEndHandler.bind(this)), n
            })
        }
        calcPackData(o) {
            let t = {};
            return Pe.default.each(o, r => {
                let i = r.model.get("pack_id");
                i && (t[i] = t[i] || {
                    top: r.box.bb_y,
                    bottom: r.box.bb_y + r.box.bb_h
                }, t[i].top = Math.min(t[i].top, r.box.bb_y), t[i].bottom = Math.max(t[i].bottom, r.box.bb_y + r.box.bb_h))
            }), t
        }
        updateSpaces() {
            let o = this.workspace.filterAutolayoutBlocks(this.workspace.blocks);
            this.blocks = this.workspace.collectBlocks(o), this.packs = this.calcPackData(this.blocks), this.groupedBlocks = this.collectBlockGroups(this.blocks, this.packs), this.spaces = this.blocksGroupsToSpaces(this.groupedBlocks), this.redrawSpaces(!0)
        }
        getGroupIdxByTop(o, t, r) {
            let i = null,
                n = Pe.default.find(r, s => i ? i.bottom <= o && s.top >= t : (i = s, !1));
            return n ? n.groupIdx - 1 : null
        }
        getGroupSize(o, t) {
            for (let r = 0; r < t.length; r++)
                if (t[r].groupIdx === o) return {
                    top: t[r].bottom,
                    bottom: t[r + 1].top
                };
            return {
                top: 0,
                bottom: 0
            }
        }
        collectBlockGroups(o, t, r) {
            let i = -1,
                n = !1;
            return Pe.default.chain(o).reduce((s, l) => {
                let p = l.model.get("pack_id"),
                    d = p ? t[p].top : l.box.bb_y,
                    c = p ? t[p].bottom : l.box.bb_y + l.box.bb_h,
                    m = Pe.default.isEmpty(s) || d - s[s.length - 1].bottom >= 2;
                if (r && !n) {
                    let u = this.getGroupIdxByTop(d, c, r);
                    if (u === null) n = !0;
                    else {
                        if (m = u !== i, u - i > 1)
                            for (let g = i + 1; g < u; g++) s.push(Pe.default.extend(this.getGroupSize(g, r), {
                                items: []
                            }));
                        i = u
                    }
                }
                return m ? s.push({
                    top: d,
                    items: [l],
                    bottom: c
                }) : (s[s.length - 1].items.push(l), s[s.length - 1].bottom = Math.max(s[s.length - 1].bottom, c)), s
            }, []).map(s => (s.bb = ju.commonBB(s.items), s)).value()
        }
        static commonBB(o) {
            if (!o || Pe.default.isEmpty(o)) return null;
            let t = 1 / 0,
                r = -1 / 0,
                i = 1 / 0,
                n = -1 / 0;
            return Pe.default.each(o, s => {
                t = Math.min(t, s.box.bb_x), i = Math.min(i, s.box.bb_y), r = Math.max(r, s.box.bb_x + s.box.bb_w), n = Math.max(n, s.box.bb_y + s.box.bb_h)
            }), {
                left: Math.round(t),
                top: Math.round(i),
                width: Math.round(r - t),
                height: Math.round(n - i)
            }
        }
        blocksGroupsToSpaces(o, t) {
            let r, i = Pe.default.find(RM.constructorRouter.workspace.getViewports(), p => p.isCurrent).height,
                n = 0,
                s = Pe.default.chain(o).map((p, d) => {
                    if (!d && p.top <= 0) return r = p, !1;
                    let c = {
                        top: Math.floor(r && r.bottom || 0),
                        bottom: Math.ceil(p.top),
                        groupIdx: d
                    };
                    return t && t[n] && t[n].top >= c.top && t[n].bottom <= c.bottom && (c.top = t[n].top, c.bottom = t[n].bottom), c.height = c.bottom - c.top, p.spaceTop = c, r && (r.spaceBottom = c), r = p, n++, c
                }).filter(p => p).value(),
                l = Math.max(i - (r && r.bottom || 0), 30);
            return s.push({
                top: r && r.bottom || 0,
                height: l,
                bottom: l + (r && r.bottom || 0),
                groupIdx: o.length || -1,
                isLast: !0,
                bbTop: r && {
                    top: -r.bb.height - 1 + "px",
                    left: r.bb.left - 1 + "px",
                    height: r.bb.height + "px",
                    width: r.bb.width + "px"
                },
                bbBottom: null
            }), o.length && (Pe.default.last(o).spaceBottom = Pe.default.last(s)), s
        }
        moveBlocksBottom(o, t, r, i) {
            let n = null;
            Pe.default.each(o, (l, p) => {
                p < t || (n = n || l.spaceTop, Pe.default.each(l.items, d => {
                    d.model.set("y", Math.round(d.model.get("y") + r)), d.box.bb_y = Math.round(d.box.bb_y + r), this.affectedBlocks.push(d.block)
                }), i && (l.bb.top = Math.round(l.bb.top + r), l.bb.bottom = Math.round(l.bb.top + l.bb.height)))
            });
            let s = n ? this.spaces.indexOf(n) : this.spaces.length - 1;
            i && s > -1 && Pe.default.each(this.spaces, (l, p) => {
                p === s ? (l.height = Math.round(l.height + r), l.bottom = Math.round(l.bottom + r)) : p > s && (l.top = Math.round(l.top + r), l.bottom = Math.round(l.bottom + r))
            })
        }
        moveAllBlocksBottom(o, t, r) {
            let i = t;
            Pe.default.each(o, n => {
                Pe.default.each(n.items, s => {
                    s.model.set("y", Math.round(s.model.get("y") + i)), this.affectedBlocks.push(s.block)
                }), r && (n.bb.top += i, n.bb.bottom = n.bb.top + n.bb.height, n.spaceTop.height = Math.round(n.spaceTop.height + t), n.spaceTop.top = Math.round(n.spaceTop.top + i - t), n.spaceTop.bottom = n.spaceTop.top + n.spaceTop.height), i = Math.round(i + t)
            })
        }
        sizeBetweenSpaces(o) {
            let t = o.spaceTop,
                r = this.spaces.indexOf(t),
                i = this.spaces[r + 1];
            return i ? i.top - (t && t.bottom || 0) : null
        }
        moveBlockToGroup(o, t, r) {
            let i = this.getGroupByModel(o.model),
                n = this.groupedBlocks.indexOf(i),
                s = this.groupedBlocks[t],
                l = n > t ? -1 : 1,
                p = Pe.default.find(i.items, x => x.block === o);
            if (!s || !i || s === i) return null;
            let d = this.getBlockOffsetInGroup(p, r),
                c = (o.model.get("angle") || 0) * Math.PI / 180,
                m = o.model.get("h"),
                u = m * Math.cos(c) + o.model.get("w") * Math.sin(c),
                g = u + d.top,
                h = Math.ceil((s.spaceTop && s.spaceTop.bottom || 0) + (u - m) / 2 + d.top),
                b = this.sizeBetweenSpaces(s);
            if (l < 0 && b > g && (h = Math.floor(s.spaceBottom.top - m - (u - m) / 2 - d.bottom)), o.latestPosSizeAngle.top = h, Pe.default.defer(() => {
                    o.model.set("y", h), o.redrawPosition(o.model, {
                        forceRedraw: !0
                    })
                }), s.items.push(p), i.items = Pe.default.without(i.items, p), b && b < g) {
                let x = g - b;
                this.moveBlocksBottom(this.groupedBlocks, this.groupedBlocks.indexOf(s) + 1, x);
                let S = this.spaces.indexOf(s.spaceTop);
                Pe.default.each(this.spaces, (v, P) => {
                    P > S && (v.top += x, v.bottom += x)
                })
            }
            return h
        }
        saveChanges() {
            this.workspace.page.saveHeight({
                skipHistory: !0
            }), this.workspace.save_group(this.getModelToSave())
        }
        moveBlocksToHighlighted(o) {
            let t = this.groupedBlocks[this.highlightGroupIdx];
            this.highlight && t && (Pe.default.each(o, r => {
                this.moveBlockToGroup(r, this.highlightGroupIdx, Pe.default.map(o, i => {
                    let n = this.getGroupByBlock(i);
                    return Pe.default.find(n.items, s => s.block === i)
                }))
            }), Pe.default.defer(() => {
                this.recalcSpaces()
            }))
        }
        highlightGroup(o, t, r, i, n) {
            if (i !== 0) return;
            let s = r.reduce((m, u) => {
                    let g = u.getBoxData();
                    return {
                        top: Math.min(g.y, m.top ? m.top : 1 / 0),
                        left: Math.min(g.x, m.left ? m.left : 1 / 0),
                        right: Math.min(g.x + g.w, m.left ? m.left : 1 / 0),
                        bottom: Math.min(g.y + g.h, m.top ? m.top : 1 / 0)
                    }
                }, {}),
                l = this.spaces[0];
            Pe.default.each(this.spaces, m => {
                (n < 0 ? m.top < s.top + n : m.bottom < s.bottom + n) && (l = m)
            });
            let p = this.spaces[this.spaces.indexOf(l) + 1],
                d = (0, bl.default)(window).width(),
                c = -Math.max((d - this.workspace.mag.getViewportWidth(this.workspace.viewport)) / 2, 0);
            p && (this.removeHighlight(), this.highlight = (0, bl.default)('<div class="space-highlighter green"/>').css({
                top: l.bottom,
                left: c,
                width: d,
                height: p.top - l.bottom
            }), this.highlight.appendTo(t.parent()), this.highlightGroupIdx = l.groupIdx)
        }
        needFreeze(o) {
            return this.highlightGroupIdx !== this.groupedBlocks.indexOf(this.getGroupByBlock(o))
        }
        updateGhost(o, t, r, i, n) {
            this.highlightGroup(n, i, o, t - this.prevdY, t), this.removeGhost(), this.ghostsContainers = Pe.default.map(o, s => {
                let l = s.$el.clone(),
                    p = this.groupedBlocks.indexOf(this.getGroupByBlock(s));
                return l.css({
                    opacity: p !== this.highlightGroupIdx ? 1 : ".2",
                    "z-index": 1e4,
                    left: parseInt(l.css("left"), 10) + r + "px",
                    top: parseInt(l.css("top"), 10) + t + "px"
                }), l.appendTo(i), p !== this.highlightGroupIdx && s.$el.css({
                    opacity: .2
                }), {
                    ghost: l,
                    source: s.$el
                }
            }), this.prevdY = t
        }
        removeGhost() {
            this.ghostsContainers && (Pe.default.each(this.ghostsContainers, o => {
                o.ghost.remove(), o.source.css({
                    opacity: ""
                })
            }), this.ghostsContainers = null)
        }
        removeHighlight() {
            this.highlight && (this.highlight.remove(), this.highlight = null)
        }
        clearAll() {
            this.removeHighlight(), this.removeGhost()
        }
        destroy() {
            clearTimeout(this.initTimeout), this._container.find("> .space-highlighter").remove(), Pe.default.each(this.currentSpaces, o => {
                o.$destroy()
            }), Pe.default.each(this.workspace.blocks, o => {
                o.off("resize", this._resizeBlockHandlerBinded), o.off("move", this._moveIntoSpacesBinded), o.model.off("change:hidden change:fixed_position", this._updateSpacesBinded), o.model.off("change:angle", this._handleRotateBinded), o.model.off("change", this._undoRedoHandlerBinded)
            }), this.workspace.page.off("widget:create", this._createWidgetHandlerBinded), this.workspace.page.off("widget:remove", this._removeWidgetHandlerBinded), this.workspace.page.off("change:viewport", this._updateSpacesBinded), this.workspace.page.off("change:height", this._resizePageHandlerBinded), this.workspace.$el.toggleClass("blocks-mode", !1), (0, bl.default)("body").off("mousemove", this._onMouseMoveBinded)
        }
    },
    U1 = YM;
Bh();
Kt();
nu();
Jy();
var Df = M(Ac());
Fa();
var Cl = M(F());
var qu = M(F());

function G1() {
    let e = (0, qu.useRef)(document.getElementById("main"));
    return (0, qu.useLayoutEffect)(() => (e.current.classList.add("comment-cursor"), () => {
        e.current.classList.remove("comment-cursor")
    }), []), null
}
var j1 = M(F());
y();
var q1 = (0, j1.forwardRef)(({
    children: e,
    width: o,
    height: t
}, r) => a("div", {
    style: {
        width: o,
        height: t,
        top: 0,
        left: 0,
        right: 0,
        margin: "0 auto",
        position: "absolute"
    },
    "data-testid": "comment-root",
    children: a("div", {
        ref: r,
        style: {
            zoom: "var(--workspace-inverse-zoom)"
        },
        children: e
    })
}));
var Ur = M(F());
W();
_r();
var Y1 = M(F());
_r();
y();
var XM = (0, Y1.forwardRef)((e, o) => a("svg", {
        width: "26",
        height: "26",
        viewBox: "0 0 26 26",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        ref: o,
        children: a("path", {
            d: "M25 13C25 19.6274 19.6274 25 13 25C9.41592 25 6.57143 25 1 25C0.999999 20.7143 1 16.0433 1 13C1 6.37258 6.37258 1 13 1C19.6274 1 25 6.37258 25 13Z",
            fill: "currentColor"
        })
    })),
    Yu = {
        rotate: [0, -45, 0, -45, 0],
        transition: {
            duration: 1
        }
    },
    Xu = Mt(XM);
var ro = M(F()),
    S2 = M(Ws()),
    xl = M(bh());
W();
qc();
ar();
te();
W();
be();
y();
var _f = "user",
    xt = {
        large: 128,
        regular: 72,
        medium: 48,
        small: 32,
        xsmall: 24
    },
    X1 = {
        user: "lightGray",
        info: "orange",
        count: "white",
        settingsUser: "white",
        commentsUser: "white"
    },
    KM = {
        user: "black",
        settingsUser: "black",
        info: "white",
        count: "black",
        commentsUser: "darkGray"
    },
    ZM = N(f)
`
  display: inline-block;
  border-radius: 50%;
  user-select: none;
  position: relative;
  overflow: hidden;
`, JM = N(we)
`
  text-transform: uppercase;
`, QM = N("img")
`
  top: 0;
  left: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
`, e9 = e => {
    let [o, t] = e.split(" ");
    return t ? o[0] + t[0] : o[0]
};

function K1({
    name: e,
    size: o,
    url: t,
    type: r,
    showInitials: i,
    showTitle: n,
    className: s,
    children: l,
    bgColor: p,
    textColor: d,
    ...c
}) {
    let m = o ? xt[o] : xt.regular,
        u = r === "user" || r === "settingsUser" || r === "commentsUser";
    return a(ZM, { ...c,
        width: m,
        height: m,
        cursor: c.onClick ? "pointer" : void 0,
        backgroundColor: r === "user" ? X1.user : "transparent",
        className: s,
        children: a(f, {
            display: "flex",
            backgroundColor: p || X1[r || _f],
            width: "100%",
            height: "100%",
            justifyContent: "center",
            alignItems: "center",
            title: n ? e : void 0,
            children: l ? a(Y, {
                children: l
            }) : a(Y, {
                children: t ? a(QM, {
                    src: t,
                    alt: e
                }) : i ? a(JM, {
                    color: d || KM[r || _f],
                    textStyle: o === "regular" ? "subheading" : r === "count" || o === "xsmall" ? "small" : "regular",
                    children: u ? e9(e) : e || "?"
                }) : null
            })
        })
    })
}
K1.defaultProps = {
    name: "?",
    size: "regular",
    type: _f,
    showInitials: !0
};
var Z1 = K1;
y();
var J1 = [64, 96, 128, 192, 256],
    t9 = (e, o) => {
        let t = e.split(".").pop(),
            r = o9(o);
        return e && r ? e.replace(`.${t}`, `_${r}.${t}`) : ""
    },
    o9 = e => {
        let o = e * 2;
        return J1.reduce((t, r) => o <= r && o > t ? r : t, J1[0])
    };

function Q1(e) {
    return a(Z1, { ...e,
        url: e.url ? t9(e.url, e.size ? xt[e.size] : xt.regular) : void 0
    })
}
Q1.defaultProps = {
    size: "regular"
};
var qt = Q1;
be();
Ro();
te();
T6();
var s2 = M(F()),
    a2 = M(F());
_r();
W();
Nr();
Ho();
Ai();
te();
var Ku = M(F());
_r();
W();
Oh();
te();
var t2 = M(Ws());
al();
y();
var Cf = {
        type: "spring",
        damping: 40,
        stiffness: 280
    },
    Sf = "rgba(0,0,0,.6)",
    r9 = Mt(N(f)({
        width: "100vw",
        height: "100vh",
        position: "fixed",
        zIndex: 99999,
        top: 0,
        left: 0
    })),
    i9 = Mt(N(f)({
        width: "100%",
        height: "100%",
        position: "fixed",
        top: 0,
        left: 0,
        zIndex: 1,
        backgroundColor: Sf,
        cursor: "zoom-out"
    })),
    e2 = Mt(N(f)({
        width: "100%",
        height: "100%",
        backgroundPosition: "center center",
        backgroundRepeat: "no-repeat",
        backgroundSize: "contain",
        opacity: 0
    }));

function o2({
    imgSrc: e,
    thumbSrc: o,
    isVisible: t,
    onClose: r
}) {
    lr(t2.Key.Escape, r);
    let [i, n] = (0, Ku.useState)(!1);
    return (0, Ku.useEffect)(() => {
        if (t) {
            let l = new Image;
            l.src = e, l.decode().then(() => n(!0))
        }
        return () => n(!1)
    }, [e, t]), a(nl, {
        container: () => document.getElementById("constructor"),
        children: a(So, {
            children: t && a(r9, {
                initial: {
                    opacity: 0
                },
                animate: {
                    opacity: 1
                },
                exit: {
                    opacity: 0
                },
                children: w(i9, {
                    role: "presentation",
                    animate: {
                        backgroundColor: Sf
                    },
                    transition: Cf,
                    onClick: l => {
                        l.stopPropagation(), r()
                    },
                    style: {
                        width: "100%",
                        height: "100%",
                        position: "fixed",
                        top: 0,
                        left: 0,
                        zIndex: 1,
                        backgroundColor: Sf,
                        cursor: "zoom-out"
                    },
                    children: [a(e2, {
                        role: "dialog",
                        initial: {
                            opacity: 0
                        },
                        animate: {
                            opacity: i ? 1 : 0
                        },
                        exit: {
                            opacity: 0
                        },
                        transition: Cf,
                        style: {
                            backgroundImage: `url(${e})`,
                            zIndex: 0
                        }
                    }), o && a(e2, {
                        initial: {
                            opacity: 1
                        },
                        animate: {
                            opacity: i ? 0 : 1
                        },
                        exit: {
                            opacity: 0
                        },
                        transition: Cf,
                        style: {
                            backgroundImage: `url(${o})`,
                            zIndex: 1,
                            filter: "blur(0.6px)"
                        }
                    })]
                })
            })
        })
    })
}
var r2 = M(F());
y();
var i2 = (0, r2.forwardRef)((e, o) => a("svg", {
    width: "32",
    height: "32",
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ...e,
    ref: o,
    children: a("path", {
        d: "M23.0146 8C23.5669 8 24.0146 8.44772 24.0146 9V13.5858C24.0146 14.4767 22.9375 14.9229 22.3075 14.2929L20.7573 12.7426L18.2573 15.2426C17.8667 15.6332 17.2336 15.6332 16.8431 15.2426C16.4525 14.8521 16.4525 14.219 16.8431 13.8284L19.3431 11.3284L17.7217 9.70711C17.0918 9.07714 17.5379 8 18.4288 8H23.0146ZM9 24.0356C8.44772 24.0356 8 23.5879 8 23.0356V18.4499C8 17.559 9.07714 17.1128 9.70711 17.7428L11.2574 19.293L13.7574 16.793C14.1479 16.4025 14.781 16.4025 15.1716 16.793C15.5621 17.1835 15.5621 17.8167 15.1716 18.2072L12.6716 20.7072L14.2929 22.3285C14.9229 22.9585 14.4767 24.0356 13.5858 24.0356H9Z",
        fill: "currentColor"
    })
}));
y();
var n2 = N(Ct)
`
  &:hover {
    color: ${e=>e.theme.colors.orange};
  }
`, Zu = s2.default.memo(function({
    image: e,
    showRemove: o,
    onRemove: t
}) {
    let r = e.url,
        i = e.meta ? .thumbUrl,
        n = () => {
            t && t()
        },
        {
            isHovered: s,
            ...l
        } = Ze(!1),
        [p, d] = (0, a2.useState)(!1),
        c = () => {
            d(!0)
        },
        m = () => {
            d(!1)
        },
        u = g => {
            g.stopPropagation(), c()
        };
    return w(Y, {
        children: [w(f, {
            width: "100%",
            height: 112,
            marginBottom: 4,
            marginTop: 8,
            borderRadius: 4,
            backgroundImage: `url(${r})`,
            backgroundColor: "transparent",
            backgroundSize: "cover",
            backgroundPosition: "center",
            backgroundRepeat: "no-repeat",
            position: "relative",
            borderWidth: 1,
            borderStyle: "solid",
            borderColor: Ie("darkGray", .15),
            ...l,
            children: [o && a(n2, {
                height: 32,
                width: 32,
                position: "absolute",
                top: -8,
                right: -8,
                hoverColor: "white",
                activeColor: "white",
                onClick: n,
                children: a(Lt, {})
            }), a(So, {
                children: s && !o && a(Mt.div, {
                    initial: {
                        opacity: 0
                    },
                    animate: {
                        opacity: 1
                    },
                    exit: {
                        opacity: 0
                    },
                    children: a(n2, {
                        height: 32,
                        width: 32,
                        position: "absolute",
                        left: "50%",
                        bottom: 9,
                        transform: "translateX(-50%)",
                        hoverColor: "white",
                        activeColor: "white",
                        onClickCapture: u,
                        children: a(i2, {})
                    })
                })
            })]
        }), a(o2, {
            imgSrc: r,
            thumbSrc: i,
            isVisible: p,
            onClose: m
        })]
    })
});
var l2 = M(F());
y();
var c2 = (0, l2.forwardRef)((e, o) => a("svg", {
    width: "26",
    height: "24",
    viewBox: "0 0 26 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ...e,
    ref: o,
    children: a("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M19.1313 3C17.5224 3 16.2182 4.30421 16.2182 5.91304C16.2182 7.52188 17.5224 8.82609 19.1313 8.82609C20.7401 8.82609 22.0443 7.52187 22.0443 5.91304C22.0443 4.30421 20.7401 3 19.1313 3ZM14.2182 5.91304C14.2182 3.19965 16.4179 1 19.1313 1C21.8447 1 24.0443 3.19964 24.0443 5.91304C24.0443 8.62645 21.8447 10.8261 19.1313 10.8261C16.4179 10.8261 14.2182 8.62644 14.2182 5.91304ZM10.7503 7.67753L15.9307 16.6501C16.3187 17.3222 17.2912 17.3154 17.6697 16.6379L19.0717 14.1287L22.9108 21L18.8129 21L18.8092 21L18.8067 21H3.05861L10.7503 7.67753ZM9.20062 6.36174C9.88939 5.16875 11.6113 5.16876 12.3001 6.36174L16.7825 14.1255L17.5095 12.8242C18.1924 11.602 19.951 11.602 20.6338 12.8242L24.8318 20.3377C25.4983 21.5305 24.636 23 23.2696 23H18.8129L18.8104 23L18.8067 23H2.69397C1.31643 23 0.455476 21.5088 1.14424 20.3158L9.20062 6.36174Z",
        fill: "currentColor"
    })
}));
var p2 = M(F());
y();
var d2 = (0, p2.forwardRef)((e, o) => a("svg", {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ...e,
    ref: o,
    children: a("path", {
        d: "M11.7379 9.04793C13.4178 9.04793 14.493 10.3984 14.493 12.5758C14.493 14.7531 13.4178 16.1312 11.7111 16.1312C10.0849 16.1312 9.09041 14.7945 9.09041 12.5758C9.09041 10.3571 10.0715 9.04793 11.7379 9.04793ZM12.1949 1C5.5559 1 1 5.68544 1 12.5069C1 19.4937 5.46182 24 12.4233 24C14.0226 24 15.5547 23.7795 16.7104 23.3936V21.4368C15.9041 21.7813 14.2108 22.0156 12.5174 22.0156C6.77886 22.0156 3.09652 18.3361 3.09652 12.5758C3.09652 6.93948 6.81918 2.95686 12.047 2.95686C17.3286 2.95686 20.9035 6.29179 20.9035 11.2804C20.9035 14.4086 19.8955 16.4206 18.3097 16.4206C17.3958 16.4206 16.8852 15.8418 16.8852 14.8772V7.13241H14.6005V8.79988H14.372C13.8479 7.58718 12.6518 6.84302 11.2407 6.84302C8.49908 6.84302 6.61759 9.17196 6.61759 12.5207C6.61759 16.0072 8.48564 18.3499 11.281 18.3499C12.8534 18.3499 14.0226 17.592 14.587 16.2001H14.8155C15.0305 17.5368 16.2535 18.4326 17.8662 18.4326C21.011 18.4326 23 15.6351 23 11.1977C23 5.16177 18.5785 1 12.1949 1Z",
        fill: "currentColor"
    })
}));
var Pf = M(F());
y();
var u2 = (0, Pf.forwardRef)((e, o) => a("svg", {
        width: "12",
        height: "12",
        viewBox: "0 0 12 12",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        ref: o,
        children: a("path", {
            d: "M11.1924 0.707108C11.5829 1.09763 11.5829 1.7308 11.1924 2.12132L7.36396 5.94975L11.1924 9.77818C11.5829 10.1687 11.5829 10.8019 11.1924 11.1924C10.8019 11.5829 10.1687 11.5829 9.77818 11.1924L5.94975 7.36396L2.12132 11.1924C1.7308 11.5829 1.09763 11.5829 0.707108 11.1924C0.316584 10.8019 0.316583 10.1687 0.707108 9.77818L4.53554 5.94975L0.707108 2.12132C0.316584 1.7308 0.316584 1.09763 0.707108 0.707108C1.09763 0.316584 1.7308 0.316584 2.12132 0.707108L5.94975 4.53554L9.77818 0.707108C10.1687 0.316584 10.8019 0.316584 11.1924 0.707108Z",
            fill: "currentColor"
        })
    })),
    m2 = (0, Pf.forwardRef)((e, o) => a("svg", {
        width: "7",
        height: "12",
        viewBox: "0 0 7 12",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        ref: o,
        children: a("path", {
            d: "M0.7072 0.7072C0.316676 1.09772 0.316675 1.73089 0.7072 2.12141L4.53566 5.94988L0.707271 9.77827C0.316747 10.1688 0.316746 10.802 0.707271 11.1925C1.09779 11.583 1.73096 11.583 2.12148 11.1925L6.65459 6.65938C6.75612 6.55785 6.83125 6.43992 6.87999 6.31412C7.02054 5.95529 6.94585 5.53164 6.65593 5.24172L2.12141 0.7072C1.73089 0.316676 1.09772 0.316676 0.7072 0.7072Z",
            fill: "currentColor"
        })
    }));
Kc();
ut();
var Js = M(F()),
    h2 = M(ir());
dk();
W();
te();
al();
var Ju = M(Ws());
y();
Pc();
var g2 = (e = "", o = "") => !e || o.toLowerCase().includes(e.toLowerCase()),
    n9 = ({
        items: e = [],
        search: o = "",
        disabled: t,
        isOpen: r,
        isCaretAtSearch: i,
        onToggle: n,
        onChange: s,
        getKey: l,
        getLabel: p,
        trigger: d,
        dropdownContainer: c,
        children: m,
        ...u
    }) => {
        let [g, h] = (0, Js.useState)(0), b = o ? o.replace(/^@/, "") : "", x = e.filter(S => g2(b, p(S)));
        return lr(Ju.Key.ArrowDown, S => {
            r && (S.preventDefault(), h(Math.min(x.length - 1, g + 1)))
        }, [g, x.length, r]), lr(Ju.Key.ArrowUp, S => {
            r && (S.preventDefault(), h(Math.max(0, g - 1)))
        }, [g, r]), lr(Ju.Key.Enter, S => {
            if (r) {
                S.preventDefault(), S.stopPropagation();
                let v = e.filter(P => g2(b, p(P)));
                s(v[g]), n(!1)
            }
        }, [g, e, r]), (0, Js.useEffect)(() => {
            !t && i && n(x.length > 0)
        }, [x.length, i, t]), (0, Js.useEffect)(() => {
            r || h(0)
        }, [r]), a(qs, {
            onStateChange: ({
                isOpen: S
            }) => {
                S !== void 0 && !t && n(S)
            },
            highlightedIndex: g,
            itemToString: p,
            children: ({
                getItemProps: S,
                getMenuProps: v,
                highlightedIndex: P,
                getRootProps: C,
                getToggleButtonProps: k
            }) => w(f, { ...C(),
                ...u,
                children: [r ? void 0 : (0, Js.cloneElement)(d, { ...k,
                    onClick: () => n(t ? !1 : !r)
                }), r ? h2.default.createPortal(a(f, {
                    as: "ul",
                    display: "flex",
                    flexDirection: "column",
                    gap: "4px 0",
                    ...v(),
                    "data-testid": "mention-suggest",
                    children: x.map((T, R) => {
                        let I = l(T);
                        return F0(f, {
                            as: "li",
                            ...S({
                                key: I,
                                index: R,
                                item: T
                            }),
                            onClick: B => {
                                B.stopPropagation(), s(T), n(!1)
                            },
                            key: I,
                            display: "flex",
                            alignItems: "center",
                            height: "32px",
                            lineHeight: "32px",
                            padding: "0 8px",
                            gap: "0 8px",
                            borderRadius: "8px",
                            background: P === R ? Ie("gray", .32) : "none",
                            cursor: "pointer",
                            whiteSpace: "nowrap"
                        }, m(T))
                    })
                }), c) : void 0]
            })
        })
    },
    f2 = n9;
al();
var tm = M(F()),
    Jn = M(bh());
var b2 = M(bh());
As();
Ue();
Ri();
var s9 = N("span")
`
  color: ${q.darkGray};
`, Qu = s9;
y();
var ip = "MENTION",
    a9 = /\[@([^\]]+)]\(([^)]+)\)/g,
    l9 = /\[@([^\]]+)]\(([^)]+)\)/,
    c9 = /(\[@[^\]]+]\([^)]+\))/g,
    p9 = (e, o) => `[@${o}](${e})`,
    w2 = e => e.split(c9).map((o, t) => {
        let [, r, i] = o.match(l9) || [];
        return r && i ? w(Qu, {
            children: ["@", r]
        }, t) : o
    }),
    x2 = e => {
        let o = [],
            t = {},
            r = 0,
            i = 0,
            n = (l, p, d, c) => {
                let m = r;
                return o.push({
                    offset: c + i,
                    length: p.length + 1,
                    key: m
                }), t[m.toString()] = {
                    type: ip,
                    mutability: "IMMUTABLE",
                    data: {
                        key: d
                    }
                }, i = i + p.length + 1 - l.length, r++, "@" + p
            };
        return {
            blocks: e.replace(a9, n).split(`
`).map(l => ({
                text: l,
                type: "unstyled",
                entityRanges: o
            })),
            entityMap: t
        }
    },
    em = e => {
        let o = e.getCurrentContent();
        return o.getBlocksAsArray().reduce((t, r) => {
            let i = r.getText(),
                n = 0;
            return r.findEntityRanges(function(l) {
                let p = l.getEntity(),
                    d = p !== null ? o.getEntity(p) : void 0;
                return !!(d && d.getType() === ip)
            }, function(l, p) {
                let d = r.getEntityAt(l),
                    m = o.getEntity(d).getData() ? .key || "",
                    u = i.slice(l + n, p + n).replace(/^@/, ""),
                    g = p9(m, u);
                m && (i = i.slice(0, l + n) + g + i.slice(p + n), n = n + g.length - u.length - 1)
            }), t ? t + `
` + i : i
        }, "")
    },
    v2 = (e, o, t) => {
        let r = b2.Entity.create(ip, "IMMUTABLE", {
                key: t
            }),
            i = e,
            n = i.getSelection().isCollapsed() && Md(i) || "",
            [s, l] = Bd(e, -1);
        /^@/.test(n) && !s && !l && (i = Q0(i));
        let {
            startOffset: p
        } = ex(i), d = Z0(i, 1), c = d && !/\s/.test(d);
        c && (i = Va({
            editorState: i,
            text: " "
        })), i = Va({
            editorState: i,
            text: "@" + o,
            entityKey: r
        });
        let m = J0(i, 1),
            u = m && !/\s/.test(m);
        u && (i = Va({
            editorState: i,
            text: " "
        }));
        let g = p + (c ? 1 : 0) + 1 + o.length + (u ? 1 : 0),
            h = i.getSelection().merge({
                anchorOffset: g,
                focusOffset: g
            });
        return Id(i, h)
    };
As();
y();
var y2 = new Jn.CompositeDecorator([{
        strategy: (e, o, t) => {
            e.findEntityRanges(r => {
                let i = r.getEntity();
                return i === null ? !1 : t.getEntity(i).getType() === ip
            }, o)
        },
        component: ({
            children: e
        }) => a(Qu, {
            children: e
        })
    }]),
    If = (0, tm.createContext)({
        items: [],
        isCaretAtSearch: !1,
        wordAtCaret: "",
        hasText: !1,
        editorState: Jn.EditorState.createEmpty(),
        setEditorState(e) {},
        clearContent() {},
        onMention(e) {},
        getMarkdown: () => "",
        getKey: e => "",
        getLabel: e => ""
    }),
    d9 = ({
        markdown: e = "",
        items: o,
        children: t,
        getLabel: r,
        getKey: i
    }) => {
        let n = x2(e),
            [s, l] = (0, tm.useState)(() => Jn.EditorState.createWithContent((0, Jn.convertFromRaw)(n), y2)),
            p = S => {
                let v = i(S);
                l(v2(s, r(S), v))
            },
            d = () => em(s),
            c = () => {
                l(Jn.EditorState.createEmpty(y2))
            },
            u = s.getSelection().isCollapsed() ? Md(s) : "",
            [g, h] = Bd(s, -1),
            b = /^@/.test(u) && !g && !h,
            x = !!d();
        return a(If.Provider, {
            value: {
                editorState: s,
                setEditorState: l,
                onMention: p,
                items: o,
                isCaretAtSearch: b,
                wordAtCaret: u,
                hasText: x,
                getMarkdown: d,
                clearContent: c,
                getKey: i,
                getLabel: r
            },
            children: t
        })
    },
    k2 = d9;
As();
var cn = M(F());
y();
var np = (0, cn.createContext)({
    teammates: [],
    getTeammateKey: () => "",
    getTeammateLabel: () => "",
    userId: "",
    ownerId: "",
    viewState: gf,
    availableMentions: !0,
    availableAttachment: !0
});

function wl({
    me: e,
    owner: o,
    projectTeam: t = [],
    viewState: r,
    children: i
}) {
    let n = (0, cn.useCallback)(c => c ? c.name || c.email : "", []),
        s = (0, cn.useCallback)(c => c ? c.num_id.toString() : "", []),
        l = (0, cn.useMemo)(() => Jk(e, o, t), [e, o, t]),
        p = (0, cn.useMemo)(() => ({
            availableMentions: !!o.permissions.can_use_comment_mentions,
            availableAttachment: !!o.permissions.can_use_comment_attachments
        }), [o.permissions.can_use_comment_mentions, o.permissions.can_use_comment_attachments]),
        d = (0, cn.useMemo)(() => ({
            getTeammateLabel: n,
            getTeammateKey: s,
            teammates: l,
            viewState: r,
            userId: e._id,
            ownerId: o._id,
            ...p
        }), [n, s, l, e._id, o._id, r, p]);
    return a(np.Provider, {
        value: d,
        children: i
    })
}
y();
var Mf = N("button")
`
  box-sizing: border-box;
  width: 32px;
  height: 32px;
  padding: 0;
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: 50%;
  color: ${e=>e.theme.colors.black};
  background-color: transparent;
  cursor: pointer;

  &:hover {
    color: ${e=>e.theme.colors.orange};
  }

  &:disabled {
    color: ${e=>e.theme.colors.gray};
    pointer-events: none;
  }
`, _2 = N(Mf)
`
  border: 1px solid ${e=>Ie(e.theme.colors.darkGray,.15)};

  &:hover {
    color: white;
  }

  ${e=>_d({submit:{"&:hover":{backgroundColor:e.theme.colors.orange}},close:{"&:hover":{backgroundColor:e.theme.colors.black}}})}
`, u9 = e => {
    let o = e.current,
        t = e.current ? .editor;
    if (!o || !t) return;
    let r = i => {
        i.preventDefault();
        let n = i.clipboardData ? .getData("text/plain");
        n && o.props ? .handlePaste && o.props.handlePaste(n, void 0, o ? ._latestEditorState)
    };
    return t.addEventListener("paste", r, !0), {
        unregister() {
            t.removeEventListener("paste", r, !0)
        }
    }
}, C2 = {
    editorSave: "editor-save"
}, m9 = N(we)
`
  & .public-DraftEditorPlaceholder-root {
    color: ${({theme:e})=>e.colors.gray};
    position: absolute;
    pointer-events: none;
  }
`;

function g9({
    defaultContent: e,
    image: o,
    textStyle: t,
    showCancel: r = !0,
    onCancel: i,
    onSubmit: n,
    disableMentions: s = !1,
    disableAttachments: l = !1,
    draftEditorRef: p,
    ...d
}) {
    let c = (0, ro.useRef)(null),
        m = (0, ro.useRef)(!0),
        u = $u(c, {
            root: null,
            rootMargin: "0px",
            threshold: 1
        }),
        [g, h] = (0, ro.useState)(!1),
        [b, x] = (0, ro.useState)(o || void 0),
        {
            items: S,
            onMention: v,
            hasText: P,
            isCaretAtSearch: C,
            wordAtCaret: k,
            clearContent: T,
            getMarkdown: R,
            getKey: I,
            getLabel: B,
            editorState: L,
            setEditorState: D
        } = (0, ro.useContext)(If),
        E = S.length > 0,
        $ = !E || s,
        G = (0, ro.useRef)(null),
        [de, Q] = (0, ro.useState)(!1),
        [U, Z] = (0, ro.useState)(E && C && !$),
        xe = (0, ro.useRef)(null),
        ye = Y0(p, xe);
    (0, ro.useEffect)(() => {
        let ie = c.current,
            _e = u && u.intersectionRatio < 1;
        ie && _e && m.current && (m.current = !1, ie.scrollIntoView({
            block: "end"
        }))
    }, [u]);
    let ve = ie => {
            let _e = c.current,
                Ce = u && u.intersectionRatio < 1;
            _e && Ce && _e.scrollIntoView({
                block: "end"
            }), D(ie)
        },
        ee = (0, ro.useCallback)(async ie => {
            if (!l) {
                if (ie.size > ae.UPLOAD_IMAGE_SIZE_LIMIT) {
                    window.alert(ae.MSG_UPLOAD_IMAGE_SIZE_ERROR);
                    return
                }
                if (!g) {
                    h(!0);
                    try {
                        let _e = await Vn("comment-image", ie);
                        _e && _e.picture && x({
                            url: _e.picture.url,
                            originUrl: _e.picture.originUrls ? .url,
                            meta: {
                                size: _e.size,
                                thumbUrl: _e.picture.thumbUrl
                            }
                        })
                    } catch (_e) {
                        console.error("upload image error", _e)
                    } finally {
                        h(!1)
                    }
                }
            }
        }, [g, l]),
        oe = () => {
            x(null)
        };
    (0, ro.useEffect)(() => {
        if (xe && xe.current !== null && xe.current.editor) {
            let ie = u9(xe);
            return D(xl.EditorState.moveFocusToEnd(L)), () => {
                ie ? .unregister()
            }
        }
    }, [xe]);
    let H = ie => {
            ie.stopPropagation(), T(), i ? .()
        },
        se = P || b,
        he = ie => {
            ie && ie.stopPropagation(), se && (n(R(), b), T())
        };

    function le(ie) {
        return ie.code === "Enter" && !ie.shiftKey ? C2.editorSave : (0, xl.getDefaultKeyBinding)(ie)
    }

    function ue(ie) {
        return ie === C2.editorSave ? (U || he(), "handled") : "not-handled"
    }
    let ke = (0, ro.useCallback)((ie, _e, Ce) => {
        let We = Va({
            editorState: Ce,
            text: ie
        });
        return D(We), "handled"
    }, [D]);
    return lr(S2.Key.Escape, () => {
        T(), i ? .()
    }, [T]), (0, ro.useEffect)(() => {
        $ || Z(C)
    }, [C, $]), (0, ro.useEffect)(() => {
        P || Z(!1)
    }, [P]), w(f, { ...d,
        ref: c,
        scrollMargin: 30,
        "data-testid": "comment-editor",
        children: [b && a(Zu, {
            image: b,
            showRemove: !0,
            onRemove: oe
        }), a(m9, {
            as: "div",
            textStyle: t,
            cursor: "initial",
            onClick: ie => ie.stopPropagation(),
            children: a(xl.Editor, {
                ref: ye,
                placeholder: "Add a comment",
                editorState: L,
                onChange: ve,
                keyBindingFn: le,
                handleKeyCommand: ue,
                handlePaste: ke,
                "data-testid": "comment-input"
            })
        }), a(f, {
            marginTop: 16,
            overflow: "hidden",
            children: a(h9, {
                left: w(f, {
                    display: "flex",
                    gap: 4,
                    marginLeft: -4,
                    children: [de && G.current && a(f2, {
                        title: E ? void 0 : "Add collaborator first",
                        disabled: $,
                        isOpen: U,
                        isCaretAtSearch: C,
                        onToggle: Z,
                        onChange: v,
                        items: S,
                        search: C ? k : void 0,
                        getKey: I,
                        getLabel: B,
                        trigger: a(f, {
                            children: a(Bt, {
                                text: "Upgrade to mention teammates",
                                disabled: !s,
                                children: a(f, {
                                    as: "span",
                                    children: a(Mf, {
                                        title: E ? "Mention" : void 0,
                                        disabled: $,
                                        "data-testid": "comment-mention-trigger",
                                        children: a(d2, {})
                                    })
                                })
                            })
                        }),
                        dropdownContainer: G.current,
                        children: ie => w(Y, {
                            children: [a(qt, {
                                size: "xsmall",
                                url: ie.pic,
                                name: ie.name || ie.email,
                                flex: "none"
                            }), a(we, {
                                textStyle: "small",
                                overflow: "hidden",
                                textOverflow: "ellipsis",
                                children: ie.name || ie.email
                            })]
                        })
                    }), U ? void 0 : a(Bt, {
                        text: "Upgrade to upload images",
                        disabled: !l,
                        children: a("span", {
                            children: a(Mf, {
                                title: "Add image",
                                disabled: g || l,
                                children: a(Oi, {
                                    accept: "image/*",
                                    dropFile: !1,
                                    readFileData: !1,
                                    onChange: ee,
                                    disabled: g,
                                    title: "Add image",
                                    children: a(f, {
                                        display: "flex",
                                        justifyContent: "center",
                                        alignItems: "center",
                                        children: g ? a(Rt, {
                                            color: "darkGray",
                                            bgColor: "transparent",
                                            size: 24
                                        }) : a(c2, {})
                                    })
                                })
                            })
                        })
                    })]
                }),
                right: U ? void 0 : w(f, {
                    display: "flex",
                    gap: 8,
                    role: "button",
                    children: [r ? a(_2, {
                        onClick: H,
                        variant: "close",
                        children: a(u2, {})
                    }) : void 0, a(_2, {
                        onClick: he,
                        disabled: !se,
                        variant: "submit",
                        "data-testid": "submit-comment",
                        children: a(m2, {})
                    })]
                })
            })
        }), a(f, {
            ref: ie => {
                G.current = ie, Q(!0)
            }
        })]
    })
}
var h9 = ({
    left: e,
    right: o,
    ...t
}) => w(f, {
    display: "flex",
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    ...t,
    children: [a(f, {
        children: e
    }), a(f, {
        children: o
    })]
});

function vl({
    content: e,
    ...o
}) {
    let {
        getTeammateKey: t = () => "",
        getTeammateLabel: r = () => "",
        teammates: i = [],
        availableMentions: n,
        availableAttachment: s
    } = (0, ro.useContext)(np);
    return a(k2, {
        markdown: e,
        items: i,
        getLabel: r,
        getKey: t,
        children: a(g9, { ...o,
            disableMentions: !n,
            disableAttachments: !s
        })
    })
}
var sp = M(F());
Mi();
y();

function P2(e, o, t = 1) {
    let r = ct.mapPointerToDocument(e, 1, t),
        i = ct.mapElementToDocument(o, 1, t);
    return ct.absoluteToRelative(r, i)
}

function T2({
    workspace: e,
    onCreate: o
}) {
    let [t, r] = (0, sp.useState)({
        width: 0,
        height: 0,
        top: 0,
        left: 0
    });
    (0, sp.useEffect)(() => {
        function n(s, l) {
            let p = window.RM.constructorRouter.zoom.getZoom(),
                d = s.$el.get(0),
                c = s.getBoxData({
                    includeRotationData: !0
                }),
                m = P2(l, d, p),
                u = ct.rotate(m, {
                    left: c.w / 2,
                    top: c.h / 2
                }, -c.angle);
            o({
                widgetId: s.model.id,
                placement: {
                    x: u.left,
                    y: u.top
                }
            })
        }
        return e.on("block:click", n), () => {
            e.off("block:click", n)
        }
    }, [e, o]), (0, sp.useEffect)(() => {
        function n() {
            let s = window.RM.constructorRouter.zoom.getZoom(),
                l = e.getDocumentBox(),
                p = e.getOriginBox(),
                d = {
                    width: l.width,
                    height: l.height,
                    top: -p.top,
                    left: -p.left
                };
            r(ct.resize(d, s))
        }
        return n(), e.on("workspace-resize", n), () => {
            e.off("workspace-resize", n)
        }
    }, [e]);

    function i(n) {
        let s = window.RM.constructorRouter.zoom.getZoom(),
            l = P2(n.nativeEvent, e.$origin.get(0), s);
        o({
            placement: {
                x: l.left,
                y: l.top
            }
        })
    }
    return a("div", {
        onClick: i,
        style: {
            position: "absolute",
            ...t
        }
    })
}
var ap = M(F());
te();
W();
Mi();
y();
var f9 = 27,
    b9 = 0,
    w9 = N(f, {
        excludeProps: ["placement", "top", "left", "bottom", "right", "offsetTop", "offsetLeft"]
    })
`
  top: ${e=>yl(e.placement.top)};
  left: ${e=>yl(e.placement.left)};
  bottom: ${e=>yl(e.placement.bottom)};
  right: ${e=>yl(e.placement.right)};
  z-index: ${e=>e.zIndex||gl.zoomedBox};
  margin-top: ${e=>yl(e.offsetTop)};
  margin-left: ${e=>yl(e.offsetLeft)};
  transform: ${e=>x9(e.placement)};
`, om = (0, ap.forwardRef)(({
    commentPosition: e,
    children: o,
    ...t
}, r) => {
    if (!e) return null;
    let i = e.y,
        n = e.x,
        s = e ? .style ? .right ? ? 0,
        l = e ? .style ? .bottom ? ? 0,
        p = e ? .style ? .marginTop ? ? 0,
        d = e ? .style ? .marginLeft ? ? 0;
    return a(w9, { ...t,
        ref: r,
        offsetTop: p,
        offsetLeft: d,
        placement: {
            top: i,
            left: n,
            bottom: l,
            right: s
        },
        position: e ? .style ? .position ? ? "absolute",
        "aria-label": "comment",
        children: a(f, {
            marginTop: -f9,
            marginLeft: -b9,
            children: o
        })
    })
});

function rm(e, o, t) {
    let {
        zoom: r
    } = e1(), i = (0, ap.useMemo)(() => {
        if (e) return t.getActiveBlocks().find(s => s.id === e.widgetId)
    }, [e]), n = i ? .model ? .get("sticked");
    return (0, ap.useMemo)(() => {
        if (!e) return null;
        let s = o === t.getPageId();
        return i && (s || i.model.get("is_global")) ? C9(e.placement, i) : s ? e.placement : null
    }, [e, i, n ? r : void 0])
}

function yl(e) {
    return e ? e === "auto" || typeof e == "string" && e.endsWith("%") ? e : `calc(${e}px * var(--workspace-zoom))` : ""
}

function x9(e) {
    return e.right && e.bottom ? "translate(100%, 100%)" : e.right ? "translateX(100%)" : e.bottom ? "translateY(100%)" : "none"
}

function v9(e, o) {
    let t = ct.rotate({
            left: e.x,
            top: e.y
        }, {
            left: o.w / 2,
            top: o.h / 2
        }, o.angle),
        r = t.left,
        i = t.top;
    return {
        x: r,
        y: i
    }
}

function kl(e) {
    return e ? e.endsWith("%") ? e : parseFloat(e) : 0
}

function y9(e) {
    let o = e.style;
    return {
        left: kl(o.left),
        top: kl(o.top),
        right: kl(o.right),
        bottom: kl(o.bottom),
        marginTop: kl(o.marginTop),
        marginLeft: kl(o.marginLeft)
    }
}

function k9(e, o, t, r) {
    let i = y9(r),
        {
            top: n,
            left: s
        } = i;
    return ["nw", "w", "sw"].includes(t) && typeof s == "number" && (s += e.x), ["nw", "n", "ne"].includes(t) && typeof n == "number" && (n += e.y), ["ne", "e", "se"].includes(t) && typeof i.right == "number" && (i.right += o.w - e.x), ["sw", "s", "se"].includes(t) && typeof i.bottom == "number" && (i.bottom += o.h - e.y), ["n", "c", "s"].includes(t) && (i.marginLeft += e.x), ["w", "c", "e"].includes(t) && (i.marginTop += e.y), {
        y: n,
        x: s,
        style: {
            position: "fixed",
            ...i
        }
    }
}

function _9(e, o) {
    let t = ct.relativeToAbsolute({
        top: e.y,
        left: e.x
    }, {
        left: o.x,
        top: o.y
    });
    return {
        y: t.top,
        x: t.left
    }
}

function C9(e, o) {
    let t = o.getBoxData({
            includeBoundingBox: !0,
            includeRotationData: !0
        }),
        r = e.x > t.w ? t.w : e.x,
        i = e.y > t.h ? t.h : e.y,
        n = v9({
            x: r,
            y: i
        }, t),
        s = o.model.get("fixed_position");
    if (s) {
        let l = o.$el.get(0);
        return k9(n, t, s, l)
    }
    return _9(n, t)
}
var Qn = M(F());
Lh();
iI();
y();
var S9 = 300,
    P9 = {
        name: "maxSize",
        enabled: !0,
        phase: "main",
        requiresIfExists: ["offset", "preventOverflow", "flip"],
        fn({
            state: e,
            name: o,
            options: t
        }) {
            let r = Hv(e, t),
                {
                    x: i,
                    y: n
                } = e.modifiersData.preventOverflow || {
                    x: 0,
                    y: 0
                },
                {
                    width: s,
                    height: l
                } = e.rects.popper,
                [p] = e.placement.split("-"),
                d = p === "left" ? "left" : "right",
                c = p === "top" ? "top" : "bottom";
            e.modifiersData[o] = {
                width: s - r[d] - i,
                height: l - r[c] - n
            }
        }
    },
    T9 = {
        name: "applyMaxSize",
        enabled: !0,
        phase: "beforeWrite",
        requires: ["maxSize"],
        fn({
            state: e
        }) {
            let {
                height: o
            } = e.modifiersData.maxSize;
            e.styles.popper.maxHeight = `${o}px`
        }
    },
    Bf = (e = {}) => ({
        rootBoundary: "document",
        boundary: document.body,
        padding: 30,
        ...e
    });

function im({
    children: e
}) {
    let [o, t] = (0, Qn.useState)(null), [r, i] = (0, Qn.useState)(null), {
        height: n
    } = t1(r), s = rl(o, r, {
        modifiers: [{
            name: "preventOverflow",
            options: Bf()
        }, {
            name: "offset",
            options: {
                offset: [0, 16]
            }
        }, {
            name: "flip",
            options: Bf({
                padding: {
                    right: S9
                }
            })
        }, { ...P9,
            options: Bf()
        }, T9],
        placement: "right"
    }), {
        styles: l,
        attributes: p
    } = s;
    (0, Qn.useEffect)(() => {
        n !== 0 && s ? .update ? .()
    }, [n]);
    let d = (0, Qn.useCallback)(m => {
            t(m)
        }, []),
        c = (0, Qn.useCallback)(m => {
            i(m)
        }, []);
    return a(Y, {
        children: e({
            setReferenceElementRef: d,
            setPopperElementRef: c,
            styles: l,
            attributes: p
        })
    })
}
Ee();
al();
var I2 = M(Ws());
As();
y();

function M2({
    workspace: e,
    onDone: o
}) {
    let [t, r] = (0, Ur.useState)(null), i = rm(t, e.getPageId(), e), [n, s] = an(), l = (0, Ur.useRef)(null), {
        me: p,
        owner: d,
        projectTeam: c
    } = (0, Ur.useContext)(me), m = sv(), u = (0, Ur.useCallback)((b = !0) => {
        let x = "";
        if (l.current ? .props.editorState) {
            x = em(l.current.props.editorState);
            let v = Id(l.current.props.editorState, K0({
                content: l.current.props.editorState.getCurrentContent()
            }));
            l.current.props.onChange(v)
        }
        let S = x.length === 0;
        return !S && b && m.start("shake"), S
    }, []);
    lr(I2.Key.Escape, () => {
        u(!1) && r(null)
    }, [u]), (0, Ur.useEffect)(() => {
        n !== null && i !== null && r(null)
    }, [n, i]);

    function g(b) {
        if (n) {
            s(null);
            return
        }
        if (t) {
            u() && r(null);
            return
        }
        r(b)
    }

    function h(b, x) {
        t && o({
            position: t,
            content: b,
            commentImage: x
        }), r(null)
    }
    return w(Ur.Fragment, {
        children: [a(om, {
            commentPosition: i,
            zIndex: gl.expandedBubble,
            children: a(im, {
                children: ({
                    setPopperElementRef: b,
                    setReferenceElementRef: x,
                    attributes: S,
                    styles: v
                }) => w(Y, {
                    children: [a(f, {
                        color: "orange",
                        ref: x,
                        children: a(Xu, {
                            animate: m,
                            variants: {
                                shake: Yu
                            },
                            initial: {
                                rotate: 0
                            },
                            exit: {
                                rotate: 0,
                                transition: {
                                    duration: .2
                                }
                            },
                            style: {
                                transformOrigin: "bottom left"
                            },
                            stroke: "white",
                            strokeWidth: 2,
                            filter: "drop-shadow(0px 2px 12px rgba(0, 0, 0, 0.16))"
                        })
                    }), a(f, {
                        ref: b,
                        style: v.popper,
                        ...S.popper,
                        children: a(wl, {
                            me: p,
                            owner: d,
                            projectTeam: c,
                            children: a(vl, {
                                onSubmit: h,
                                width: 224,
                                padding: "12px 16px 16px 16px",
                                boxShadow: "0px 2px 16px rgba(0, 0, 0, 0.16)",
                                backgroundColor: "white",
                                cursor: "initial",
                                showCancel: !1,
                                borderRadius: 8,
                                draftEditorRef: l
                            })
                        })
                    })]
                })
            })
        }), a(T2, {
            onCreate: g,
            workspace: e
        })]
    })
}
var pn = M(F());
W();
Ee();
var to = M(F());
gI();
Ho();
W();
var B2 = M(F());
W();
te();
y();
var I9 = N(f, {
        excludeProps: ["dense"]
    })(({
        dense: e
    }) => ({
        display: "flex",
        position: "relative",
        flexDirection: "column",
        padding: e ? "0" : "12px 8px"
    })),
    M9 = N(f, {
        excludeProps: ["dense"]
    })(({
        selected: e,
        dense: o
    }) => ({
        display: "flex",
        borderRadius: "8px",
        position: "relative",
        flexDirection: "column",
        padding: o ? "0" : "12px 8px 16px 8px",
        cursor: "pointer",
        backgroundColor: e ? "white" : "inherit",
        boxShadow: e ? "0px 2px 16px rgba(0, 0, 0, 0.08)" : "none",
        "&:hover": {
            backgroundColor: "white"
        }
    })),
    Rf = (0, B2.forwardRef)(({
        children: e,
        disableSelectable: o = !1,
        selected: t,
        ...r
    }, i) => a(o ? I9 : M9, {
        selected: t,
        ref: i,
        ...r,
        children: e
    }));
var R2 = M(F()),
    Qs = (0, R2.createContext)({
        selected: !1,
        hover: !1,
        commentRef: null,
        isTread: !1,
        readonly: !1
    });
var nm = M(F());
W();
be();
te();
Vh();
Nr();
Wc();
te();
y();
var B9 = N(f)({
    display: "flex",
    gap: "8px",
    width: "100%",
    alignItems: "center"
});

function z2({
    author: e,
    actions: o,
    description: t,
    disableActions: r
}) {
    let {
        hover: i
    } = (0, nm.useContext)(Qs), [n, s] = (0, nm.useState)(!1), {
        name: l,
        pic: p
    } = e, d = i || n;
    return (r || o.length === 0) && (d = !1), w(B9, {
        children: [w(f, {
            position: "relative",
            height: 24,
            children: [a(qt, {
                size: "xsmall",
                type: "commentsUser",
                name: l,
                url: p
            }), p ? null : a(f, {
                position: "absolute",
                top: 0,
                width: 24,
                height: 24,
                borderRadius: "50%",
                boxShadow: "0 0 0 1px inset rgba(133, 133, 133, 0.16)"
            })]
        }), a(we, {
            textStyle: "small",
            color: "darkGray",
            whiteSpace: "nowrap",
            overflow: "hidden",
            textOverflow: "ellipsis",
            maxWidth: "100%",
            as: "div",
            children: i ? t : l
        }), d ? a(f, {
            marginLeft: "auto",
            as: "span",
            children: a(sl, {
                width: 224,
                zIndex: 9999,
                popperOffset: [-84, 26],
                listItems: o,
                container: document.body,
                border: "none",
                borderRadius: 8,
                boxShadow: "0px 2px 16px rgba(0, 0, 0, 0.16)",
                "data-testid": "comment-context-menu",
                onToggleDropdown: s,
                role: "menu",
                children: ({
                    toggleDropdown: c
                }) => a(Ct, {
                    "aria-haspopup": !0,
                    height: 24,
                    width: 24,
                    color: "transparent",
                    activeColor: "lightGray",
                    hoverColor: "lightGray",
                    "data-testid": "comment-context-menu-trigger",
                    borderWidth: 1,
                    borderStyle: "solid",
                    borderColor: n ? "transparent" : Ie("darkGray", .15),
                    borderRadius: "50%",
                    backgroundColor: n ? "lightGray" : "transparent",
                    marginRight: 0,
                    onClick: m => {
                        m.stopPropagation(), c()
                    },
                    "aria-expanded": n ? "true" : "false",
                    children: a(Cr, {
                        color: "black"
                    })
                })
            })
        }) : null]
    })
}
var Mr = M(F());
W();
be();
te();
y();
var R9 = 20,
    z9 = 8,
    E9 = N(f)({
        marginTop: 4,
        paddingLeft: 32
    }),
    zf = N(we)
`
  display: block;
  overflow: hidden;
  white-space: pre-wrap;
  overflow-wrap: break-word;
`;
zf.defaultProps = {
    textStyle: "regular"
};
var A9 = N(zf)
`
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 8;
  text-overflow: ellipsis;
`, D9 = (0, Mr.forwardRef)(({
    children: e,
    collapsed: o
}, t) => a(o ? zf : A9, {
    ref: t,
    children: e
}));

function E2({
    content: e,
    image: o,
    edit: t,
    onEdit: r,
    onCloseEdit: i
}) {
    let [n, s] = (0, Mr.useState)(!1), {
        readonly: l
    } = (0, Mr.useContext)(Qs);

    function p(m) {
        m.stopPropagation(), s(!0)
    }
    return a(E9, {
        cursor: l ? "inherit" : "pointer",
        children: t ? a(vl, {
            content: e,
            image: o,
            onCancel: i,
            onSubmit: r,
            textStyle: "regular"
        }) : a(L9, {
            image: o,
            content: e,
            collapsed: n,
            onShowContent: p
        })
    })
}

function L9({
    image: e,
    content: o,
    collapsed: t = !1,
    onShowContent: r
}) {
    let i = (0, Mr.useRef)(null),
        [n, s] = (0, Mr.useState)(0);
    (0, Mr.useLayoutEffect)(() => {
        i.current && s(i.current.getBoundingClientRect().height / R9)
    }, [o]);
    let l = (0, Mr.useMemo)(() => w2(o), [o]);
    return w(f, {
        children: [e && a(Zu, {
            image: e
        }), a(D9, {
            ref: i,
            collapsed: n === 0 || t,
            children: a(N0, {
                color: "darkGray",
                target: "_blank",
                children: l
            })
        }), n > z9 && !t ? a(we, {
            display: "block",
            role: "button",
            color: "darkGray",
            cursor: "pointer",
            onClick: r,
            children: "Show more"
        }) : null]
    })
}
var A2 = M(F());
W();
y();
var Ef = (0, A2.memo)(function({
    color: o,
    children: t,
    ...r
}) {
    return a(f, {
        display: "flex",
        flexDirection: "column",
        gap: 16,
        paddingBottom: 16,
        color: o,
        ...r,
        children: t
    })
});
var sm = M(F());
W();
be();
tl();
te();
$y();
y();
var O9 = N(f)
`
  display: flex;
  flex-direction: column;
  margin-top: 16px;
  scroll-margin: 60px;
  gap: 16px;
`;

function Af({
    open: e,
    onClick: o,
    repliesCount: t,
    children: r
}) {
    let i = (0, sm.useRef)(null),
        n = vu(t);
    return (0, sm.useEffect)(() => {
        n && n < t && i ? .current ? .scrollIntoView({
            block: "end",
            behavior: "smooth"
        })
    }, [t, n]), w(Y, {
        children: [w(H9, {
            open: e,
            onClick: o,
            "data-testid": "comment-reply-toggle",
            children: [t, " repl", t > 1 ? "ies" : "y"]
        }), e ? a(O9, {
            role: "list",
            ref: i,
            children: r
        }) : null]
    })
}
var $9 = N(f)
`
  gap: 8px;
  display: flex;
  align-items: center;
  margin-top: 24px;

  &:hover {
    color: ${({theme:e})=>e.colors.orange};
  }
`;

function H9({
    open: e,
    children: o,
    onClick: t,
    ...r
}) {
    return w($9, {
        role: "button",
        onClick: t,
        ...r,
        children: [a(qo, {
            transform: e ? "rotate(0deg)" : "rotate(-90deg)",
            transition: "transform 0.3s"
        }), a(we, {
            textStyle: "small",
            userSelect: "none",
            children: o
        })]
    })
}
var D2 = M(F());
W();
He();
te();
y();
var F9 = N(f)({
    marginTop: 20,
    paddingLeft: 32
});

function L2({
    onSubmit: e
}) {
    let [o, t] = (0, D2.useState)(!1);

    function r() {
        t(!0)
    }

    function i() {
        t(!1)
    }

    function n(p, d) {
        t(!1), e(p, d)
    }
    return a(F9, {
        children: o ? a(vl, {
            width: "100%",
            position: "relative",
            onSubmit: n,
            onCancel: i,
            textStyle: "regular"
        }) : a(N9, {
            onClick: r
        })
    })
}

function N9(e) {
    return a(Ge, {
        variant: "primary",
        color: "orange",
        "data-testid": "reply-to-comment",
        ...e,
        children: "Reply"
    })
}
Bo();
Ye();
var O2 = M(F());
W();
te();
y();
var W9 = N("span")({
        position: "relative"
    }),
    V9 = N(f)(({
        theme: e,
        offset: o = [0, 0]
    }) => ({
        top: o[0] ? ? 0,
        left: o[1] ? ? 0,
        width: 6,
        height: 6,
        position: "absolute",
        borderRadius: "50%",
        backgroundColor: e.colors.orange
    })),
    Hi = (0, O2.memo)(function({
        show: o,
        offset: t,
        children: r
    }) {
        return w(W9, {
            children: [o ? a(V9, {
                offset: t,
                title: "A new comment"
            }) : null, r]
        })
    });
y();
var lp = (0, to.memo)(function(o) {
    let {
        comment: t,
        page: r,
        projectNumId: i,
        selected: n = !1,
        onStartEditing: s,
        onClick: l,
        isTread: p = !1,
        parentComment: d,
        readonly: c = !1,
        disableSelectable: m = !1,
        isLast: u = !1
    } = o, {
        userId: g,
        ownerId: h,
        viewState: b
    } = (0, to.useContext)(np), [x] = v1(), [S, v] = (0, to.useState)(!1), [P, C] = (0, to.useState)(!1), {
        isHovered: k,
        ...T
    } = Ze(), R = (0, to.useRef)(null), I = $u(R, {
        root: null,
        rootMargin: "0px",
        threshold: 1
    }), B = (0, to.useRef)(!1), {
        author: L,
        createdDate: D,
        viewport: E,
        isTmp: $
    } = t, G = g === L._id, de = h === g, Q = !!b ? .viewTree[t._id] ? .isNew, U = !!b ? .viewTree[t._id] ? .newChildren;
    (0, to.useEffect)(() => {
        k && Q && !G && g && x1(t, g)
    }, [t, k, Q, G, g]), (0, to.useEffect)(() => {
        if (!p)
            if (n) {
                let Ce = I && I.intersectionRatio > 0;
                I && I.intersectionRatio === 0 && !B.current ? (R.current ? .scrollIntoView(), B.current = !0) : Ce && !B.current && (B.current = !0)
            } else B.current = !1
    }, [n, p, I]);
    let Z = Ce => {
            Ce.stopPropagation(), l ? .({
                comment: t,
                parentComment: d
            }, n ? "selected" : "regular")
        },
        xe = (0, to.useCallback)(Ce => {
            Ce && Ce.stopPropagation(), !(S || !G || $ || c) && (v(!0), s && s({
                comment: t,
                parentComment: d
            }))
        }, [G, S, $, c, t, d, s]),
        ye = ly({
            onClick: Z,
            onDoubleClick: xe
        }),
        ve = (0, to.useCallback)(Ce => {
            Ce.stopPropagation(), C(We => !We)
        }, []),
        ee = (Ce, We) => {
            v(!1);
            let Ke = We ? [{
                type: "image",
                ...We
            }] : We === null ? [] : void 0;
            m1({
                commentId: t._id,
                content: Ce,
                attachments: Ke
            })
        },
        oe = (Ce, We) => {
            let Ke = We ? [{
                    type: "image",
                    ...We
                }] : void 0,
                O = d || t;
            Wu({
                pageId: r._id,
                viewport: t.viewport,
                content: Ce,
                parent: O._id,
                attachments: Ke
            }), re(fe.CommentAdd, {
                type: "reply"
            })
        },
        H = () => {
            v(!1)
        },
        se = (0, to.useCallback)(Ce => {
            Ce.stopPropagation();
            let We = d || t;
            Qk(i, r ? .num, We._id)
        }, [i, r, t, d]),
        he = (0, to.useCallback)(Ce => {
            Ce.stopPropagation();
            let We = d || t,
                Ke = d ? t : void 0;
            g1({
                parentCommentId: We._id,
                childCommentId: Ke ? ._id
            })
        }, [t, d]),
        le = (0, to.useMemo)(() => {
            let Ce = Zk(new Date(D), x),
                We = Cc[E],
                Ke = r.pageNestedNum ? ? r.num;
            return `${Ce}, P.${Ke}, ${We}`
        }, [E, D, x, r]),
        ue = (0, to.useMemo)(() => {
            let Ce = [];
            return G && Ce.push({
                title: "Edit",
                onClick: xe,
                closeOnClick: !0,
                props: {
                    paddingLeft: "48px"
                }
            }), (G || de) && Ce.push({
                title: t.children ? "Delete thread" : "Delete",
                onClick: he,
                closeOnClick: !0,
                props: {
                    paddingLeft: "48px"
                }
            }), p || Ce.push({
                title: "Copy link",
                onClick: se,
                closeOnClick: !0,
                props: {
                    paddingLeft: "48px"
                }
            }), Ce
        }, [G, p, de, t.children, xe, se, he]),
        ke = n && !p && !t.children || !p && P,
        ie = (0, to.useMemo)(() => ({
            selected: n,
            hover: k,
            commentRef: R,
            isTread: p,
            readonly: c
        }), [n, k, p, c]),
        _e = {
            disableSelectable: m,
            selected: n,
            ref: R,
            dense: !1,
            ...T
        };
    return p && (_e.dense = !0), a(Qs.Provider, {
        value: ie,
        children: w(Rf, {
            role: "comment",
            ..._e,
            marginBottom: u && S ? 16 : 0,
            children: [w(f, { ...ye,
                children: [a(Hi, {
                    offset: [-5, 0],
                    show: Q,
                    children: a(z2, {
                        author: L,
                        actions: ue,
                        description: le,
                        disableActions: S || c
                    })
                }), a(E2, {
                    edit: S,
                    content: t.content,
                    image: t.attachments ? .[0],
                    onCloseEdit: H,
                    onEdit: ee
                })]
            }), t.children ? .length ? a(Hi, {
                offset: [29, 0],
                show: !P && U,
                children: a(Af, {
                    open: P,
                    onClick: ve,
                    repliesCount: t.children.length,
                    children: t.children.map((Ce, We, Ke) => a(lp, { ...o,
                        isTread: !0,
                        disableSelectable: !0,
                        comment: Ce,
                        parentComment: t,
                        isLast: We + 1 === Ke.length
                    }, Ce._id))
                })
            }) : null, !c && ke ? a(L2, {
                onSubmit: oe
            }) : null]
        })
    })
});
var _l = M(F());
W();
te();
$y();
y();
var G9 = N(f)(({
        theme: e
    }) => ({
        width: 224,
        padding: 8,
        borderRadius: 8,
        cursor: "initial",
        backgroundColor: e ? .colors.lightGray
    })),
    j9 = N(f)({
        overflowY: "auto"
    }),
    $2 = (0, _l.forwardRef)(({
        onClose: e,
        replies: o,
        maxHeight: t,
        children: r,
        ...i
    }, n) => {
        let s = (0, _l.useRef)(null),
            l = vu(o);
        return (0, _l.useEffect)(() => {
            if (l && l < o) {
                let p = s.current;
                p.scrollTop = p.scrollHeight - p.scrollTop
            }
        }, [o, l]), a(G9, {
            ref: n,
            ...i,
            children: a(j9, {
                ref: s,
                maxHeight: t,
                children: r
            })
        })
    });
Mi();
y();
var q9 = 306;

function H2({
    comments: e,
    workspace: o
}) {
    let [, t] = an();

    function r() {
        t(null)
    }
    return a(Y, {
        children: e.map(i => a(Y9, {
            comment: i,
            workspace: o,
            onClose: r
        }, i._id))
    })
}

function Y9({
    comment: e,
    workspace: o,
    onClose: t
}) {
    let [r, i] = an(), n = rm(e.position, e.pageId, o), {
        pages: s,
        me: l,
        owner: p,
        projectTeam: d,
        project: c
    } = (0, pn.useContext)(me), [m] = Kn(), u = (0, pn.useRef)(null), g = X9(u, o, window.RM.constructorRouter.zoom), h = r ? .comment._id === e._id, x = h && r ? .fromList && !r ? .comment.isTmp;
    (0, pn.useEffect)(() => {
        h && g()
    }, [h]);
    let S = (0, pn.useCallback)(() => {
        e._id === r ? .comment._id ? i(null) : i({
            comment: e,
            commentElem: u.current,
            fromList: !1
        })
    }, [e, r, i]);
    return a(om, {
        commentPosition: n,
        zIndex: h ? gl.expandedBubble : void 0,
        ref: u,
        "data-testid": "comment-bubble",
        children: a(im, {
            children: ({
                setReferenceElementRef: v,
                setPopperElementRef: P,
                styles: C,
                attributes: k
            }) => w(Y, {
                children: [a(f, {
                    cursor: "pointer",
                    position: "relative",
                    ref: v,
                    color: h ? "orange" : "white",
                    children: a(Xu, {
                        animate: x ? Yu : void 0,
                        initial: {
                            rotate: 0
                        },
                        exit: {
                            rotate: 0,
                            transition: {
                                duration: .2
                            }
                        },
                        style: {
                            transformOrigin: "bottom left"
                        },
                        stroke: h ? "white" : "orange",
                        strokeWidth: 2,
                        onClick: S,
                        filter: "drop-shadow(0px 2px 12px rgba(0, 0, 0, 0.16))"
                    })
                }), h && !r ? .fromList ? a(wl, {
                    me: l,
                    owner: p,
                    projectTeam: d,
                    viewState: m,
                    children: a($2, {
                        ref: P,
                        style: C.popper,
                        onClose: t,
                        replies: e ? .children ? .length ? ? 0,
                        maxHeight: `calc(${C.popper.maxHeight} - 16px)`,
                        ...k.popper,
                        children: a(lp, {
                            selected: !0,
                            disableSelectable: !0,
                            comment: e,
                            projectNumId: c.num_id,
                            page: s.find(T => T._id === e.pageId)
                        })
                    })
                }) : null]
            })
        })
    })
}

function X9(e, o, t) {
    let [r, i] = [0, window.innerWidth - q9];
    return (0, pn.useCallback)(() => {
        let n = e.current;
        if (!n) return;
        let s = n;
        if (Modernizr.firefox) {
            s.scrollIntoView({
                block: "center",
                behavior: "smooth"
            });
            return
        }
        let l = ct.mapElementToViewport(s, 1, 1),
            p = t.getZoom();

        function d() {
            let c = l.left,
                m = l.left + l.width;
            (c < r || m > i) && p > Du ? (t.zoomTo(Math.max(Du, p -= .08), o, o.$container[0], t.getCenter(t.getZoom(), o, o.$container[0])), l = ct.mapElementToViewport(s, 1, 1), requestAnimationFrame(d)) : s.scrollIntoView({
                block: "center",
                behavior: "smooth"
            })
        }
        requestAnimationFrame(d)
    }, [o, r, i])
}
Ee();
Bo();
Ye();
y();

function F2({
    workspace: e,
    router: o
}) {
    let [t, r] = (0, Cl.useState)(() => e.viewport), [, i] = an(), n = (0, Cl.useMemo)(() => ({
        viewport: t,
        status: "unresolved"
    }), [t]), s = Vu(n);
    (0, Cl.useEffect)(() => {
        let m = e.mag.pages;

        function u() {
            r(e.viewport)
        }
        return m.on("change:viewport", u), () => {
            m.off("change:viewport", u)
        }
    }, [e, o]);

    function l(m) {
        let u = e.getPageId(),
            g = m.commentImage ? [{
                type: "image",
                ...m.commentImage
            }] : void 0,
            h = Wu({
                position: m.position,
                content: m.content,
                pageId: u,
                viewport: t,
                attachments: g
            });
        i({
            comment: h,
            fromList: !0
        }), re(fe.CommentAdd, {
            type: "origin"
        })
    }
    let p = e.viewport,
        d = e.page.getViewportParam(e.viewport, "height"),
        c = De.dictionary[p].width;
    return w(q1, {
        width: c,
        height: d,
        children: [a(G1, {}), w(qa, {
            project: e.mag,
            router: o,
            children: [a(H2, {
                workspace: e,
                comments: s
            }), a(M2, {
                workspace: e,
                onDone: l
            })]
        })]
    })
}
y();

function N2(e, o) {
    let t = Df.default.createRoot(e);

    function r() {
        t.render(a($r, {
            withGlobalStyles: !1,
            children: a(F2, {
                workspace: o.workspace,
                router: o.router
            })
        }))
    }

    function i() {
        t.unmount(), t = Df.default.createRoot(e)
    }
    return {
        render: r,
        unmount: i
    }
}
Lc();
var K9 = An.extend({
        idAttribute: "pack_id",
        urlRoot: "/api/pack/",
        name: "Pack"
    }),
    ea = K9;
Hc();
Qv();
kt();
VI();
N6();
var W2 = 20,
    Lf = class extends cp.default.View {
        constructor(t) {
            super();
            z(this, "mag");
            z(this, "blocks", []);
            z(this, "page");
            z(this, "packs", {});
            z(this, "$origin");
            z(this, "$scroller");
            z(this, "$frame");
            z(this, "$border");
            z(this, "$window");
            z(this, "$container");
            z(this, "loader");
            z(this, "$bottomShiftLine");
            z(this, "workspaceContainer");
            z(this, "position", {
                top: 0,
                left: 0
            });
            z(this, "locked", !1);
            z(this, "visible", !1);
            z(this, "eCommerceManager");
            z(this, "spacesController");
            z(this, "syncManager");
            z(this, "controls");
            z(this, "distance");
            z(this, "pagesize");
            z(this, "block");
            z(this, "common_layer");
            z(this, "rendered", !1);
            z(this, "bottomBlocksToMove");
            z(this, "movingBlocks");
            z(this, "movingDelta");
            z(this, "isDragActive", !1);
            z(this, "isBlockMovementActive", !1);
            z(this, "animationMode", !1);
            z(this, "cachedSizes");
            z(this, "animationSteps");
            z(this, "disableDragging");
            z(this, "disableBlocksInteractive");
            z(this, "disabledSelectMultiple");
            z(this, "saveGroupDebounced");
            z(this, "unsubscribeCommentMode");
            z(this, "previousObjectsUnderCursor", []);
            z(this, "previousIgnoreWidgetPacks");
            z(this, "oldParams");
            z(this, "bundleDragTimeout");
            z(this, "blocksToClone", {});
            z(this, "redrawPacksFramesHolded", !1);
            z(this, "cloneBlocksDebounced");
            z(this, "restoreFocusForCopyPasteDebounced");
            z(this, "triggerSelectOnSelectedBlockDebounced");
            z(this, "viewportScrolls", {});
            z(this, "viewportScroll", 0);
            z(this, "_unselectedBlocksForBottomLine");
            z(this, "widgetResizingOrRotating");
            z(this, "commentsRoot");
            z(this, "isActiveCommentMode", l1());
            z(this, "deletedWidgetsCount", 0);
            z(this, "_enableCommentMode", t => {
                this.isActiveCommentMode && !t ? .force || (window.RM.constructorRouter.changeEditorMode("member"), window.RM.constructorRouter.changeBlocksMode(!1), this.disableDragging = !0, this.disabledSelectMultiple = !0, this.disableBlocksInteractive = !0, this.trigger("deselect"), this.getAllPacks().forEach(r => {
                    r.frame.setFrameBorderVisible(!1)
                }), this.blocks.forEach(r => {
                    r.frame ? .toggleFrameColor("orange-border", !0)
                }), this.commentsRoot.render())
            });
            z(this, "_disableCommentMode", () => {
                this.isActiveCommentMode && (this.disableDragging = !1, this.disabledSelectMultiple = !1, this.disableBlocksInteractive = !1, this.getAllPacks().forEach(t => {
                    t.frame.setFrameBorderVisible(!0)
                }), this.blocks.forEach(t => {
                    t.frame ? .toggleFrameColor("orange-border", !1)
                }), this.commentsRoot.unmount())
            });
            z(this, "getCommentModeState", () => this.isActiveCommentMode);
            z(this, "onMouseLeave", () => {
                this.updateBlocksHighlight({
                    cursorX: 0,
                    cursorY: 0,
                    disableAllHighlights: !0
                })
            });
            z(this, "onMouseMove", t => {
                let r = window.Modernizr ? .mac ? "metaKey" : "ctrlKey",
                    i = t[r];
                this.updateBlocksHighlight({
                    cursorX: t.clientX,
                    cursorY: t.clientY,
                    ignoreWidgetPacks: i
                })
            });
            z(this, "updateBlocksHighlight", ({
                cursorX: t,
                cursorY: r,
                ignoreWidgetPacks: i,
                disableAllHighlights: n
            }) => {
                if (this.previousObjectsUnderCursor = this.previousObjectsUnderCursor || [], !this.isBlocksHighlightActive() || n) {
                    this.previousObjectsUnderCursor.forEach(u => u.triggerMouseLeave ? .()), this.previousObjectsUnderCursor = [];
                    return
                }
                let l = this.getBlocksByAbsoluteCoords({
                        x: t,
                        y: r,
                        ignoreWidgetPacks: i
                    }),
                    p = this.getTopmostBlock({
                        blocks: l
                    }),
                    d = p ? [p] : [];
                (this.previousIgnoreWidgetPacks !== i ? this.previousObjectsUnderCursor : V.default.difference(this.previousObjectsUnderCursor, d)).forEach(u => u.triggerMouseLeave ? .()), (this.previousIgnoreWidgetPacks !== i ? d : V.default.difference(d, this.previousObjectsUnderCursor)).forEach(u => u.triggerMouseEnter ? .({
                    metaKey: i
                })), this.previousObjectsUnderCursor = d, this.previousIgnoreWidgetPacks = i
            });
            z(this, "getTopmostBlock", ({
                blocks: t
            }) => {
                let r = t,
                    {
                        topBlock: i
                    } = r.reduce((n, s) => {
                        let l = s instanceof Fc ? s.blocks[0].currentZ : s.currentZ;
                        return l > n.maxZ ? {
                            maxZ: l,
                            topBlock: s
                        } : n
                    }, {
                        maxZ: 0,
                        topBlock: void 0
                    });
                return i
            });
            z(this, "getBackground", () => V.default.findWhere(this.blocks, {
                name: "Background"
            }));
            z(this, "getBlocksByAbsoluteCoords", ({
                x: t,
                y: r,
                ignoreWidgetPacks: i
            }) => {
                let n = this.getSelectableBlocks(),
                    s = i ? [] : this.getAllPacks(),
                    l = n.concat(s);
                return l = l.filter(p => {
                    let d = this.getBlockPositionInWindow(p);
                    return d.left <= t && d.left + d.width >= t && d.top <= r && d.top + d.height >= r
                }).filter(p => !p.latestPosSizeAngle ? .angle || p.contains({
                    x: this.convertX(t, "workspace"),
                    y: this.convertY(r, "workspace")
                })), l
            });
            z(this, "getBlockPositionInWindow", t => {
                let r = window.RM.constructorRouter.zoom.getZoom(),
                    i = this.viewport === "default",
                    n = this.getCachedSizes(),
                    s, l = {
                        left: t.latestPosSizeAngle.bb_left,
                        top: t.latestPosSizeAngle.bb_top,
                        width: t.latestPosSizeAngle.bb_width,
                        height: t.latestPosSizeAngle.bb_height
                    };
                if (t.isFixed())
                    if (t instanceof Fc) s = {
                        left: l.left * r + this.position.left,
                        top: l.top * r + this.position.top,
                        width: l.width * r,
                        height: l.height * r
                    };
                    else {
                        let p;
                        i ? (p = yr.getFixedPositionBox(t.model.get("fixed_position"), {
                            x: l.left,
                            y: l.top,
                            w: l.width,
                            h: l.height
                        }, r, {
                            width: n.width,
                            height: n.height
                        }), s = p) : (p = yr.getFixedPositionBox(t.model.get("fixed_position"), {
                            x: l.left,
                            y: l.top,
                            w: l.width,
                            h: l.height
                        }, r, {
                            width: n.elWidth,
                            height: (n.height || 0) - this.position.top - (this.position.bottom || 0)
                        }), s = {
                            left: p.left + this.position.left,
                            top: p.top + this.position.top,
                            width: p.width,
                            height: p.height
                        })
                    }
                else s = {
                    left: this.convertX(l.left, "absolute"),
                    top: this.convertY(l.top, "absolute"),
                    width: l.width * r,
                    height: l.height * r
                };
                return s
            });
            z(this, "isBlocksHighlightActive", () => this.isActiveCommentMode ? !0 : !this.isDragActive && !this.isBlockMovementActive && !window.RM.constructorRouter.isPageLocked(this.getPageId()));
            z(this, "convertX", (t, r) => {
                let i = window.RM.constructorRouter.zoom.getZoom(),
                    n = this.viewport,
                    s = De.dictionary[n].width,
                    l = this.mag.getViewportWidth(n);
                switch (r) {
                    case "absolute":
                        return Math.max((window.innerWidth - l * i) / 2, 0) + (t + (l - s) / 2) * i - (this.$container.scrollLeft() || 0);
                    case "workspace":
                        return (t - Math.max((window.innerWidth - l * i) / 2, 0) - (l - s) / 2 * i + (this.$container.scrollLeft() || 0)) / i;
                    default:
                        return t
                }
            });
            z(this, "convertY", (t, r) => {
                let i = window.RM.constructorRouter.zoom.getZoom();
                switch (r) {
                    case "absolute":
                        return t * i + this.position.top * i - (this.$container.scrollTop() || 0);
                    case "workspace":
                        return (t - this.position.top + (this.$container.scrollTop() || 0)) / i;
                    default:
                        return t
                }
            });
            z(this, "getWorkspaceBox", () => ({ ...this.position,
                ...this.getWorkspaceSize()
            }));
            z(this, "getOriginBox", () => {
                let t = this.viewport,
                    r = this.getWorkspaceBox(),
                    i = Wr.getViewportSetting("width", t),
                    n = {
                        left: (r.width - i) / 2,
                        top: 0,
                        width: i,
                        height: r.height
                    };
                return ct.relativeToAbsolute(n, this.position)
            });
            z(this, "getDocumentBox", () => {
                let t = this.viewport,
                    r = this.getCachedSizes(),
                    i = {
                        width: r.clientWidth,
                        height: r.height,
                        left: 0,
                        top: 0
                    },
                    n = this.mag.getViewportWidth(t),
                    s = this.page.getViewportParam(this.viewport, "height"),
                    l = window.RM.constructorRouter.zoom.getZoom(),
                    p = ct.mapFromViewportToDocument(i, 1, l);
                return {
                    left: 0,
                    top: 0,
                    width: Math.max(p.width, n),
                    height: Math.max(p.height, s)
                }
            });
            z(this, "getParameters", () => ({
                workspaceSize: this.getWorkspaceSize(),
                windowSize: this.getClientSize(),
                viewport: this.viewport,
                zoom: window.RM.constructorRouter.zoom.getZoom(),
                scroller: this.$scroller[0]
            }));
            z(this, "listenToGuides", () => {
                this.stopListeningToGuides(), window.RM.constructorRouter.gg.guides ? .models && window.RM.constructorRouter.gg.guides ? .model && (this.toggleBorder({
                    guidesOn: this.mag.edit_params.get("guides"),
                    columnCount: window.RM.constructorRouter.gg.guides.model.get("columns"),
                    margin: window.RM.constructorRouter.gg.guides.model.get("margin")
                }), this.listenTo(window.RM.constructorRouter.gg.guides.models, "change:columns", (t, r) => this.toggleBorder({
                    guidesOn: this.mag.edit_params.get("guides"),
                    columnCount: r,
                    margin: t.get("margin")
                })), this.listenTo(window.RM.constructorRouter.gg.guides.models, "change:margin", (t, r) => this.toggleBorder({
                    guidesOn: this.mag.edit_params.get("guides"),
                    columnCount: t.get("columns"),
                    margin: r
                })), this.listenTo(window.RM.constructorRouter.gg.guides, "modelLoaded", () => {
                    this.toggleBorder({
                        guidesOn: this.mag.edit_params.get("guides"),
                        columnCount: window.RM.constructorRouter.gg.guides.model.get("columns"),
                        margin: window.RM.constructorRouter.gg.guides.model.get("margin")
                    })
                }), this.listenTo(this.mag.edit_params, "change:guides", (t, r) => {
                    this.toggleBorder({
                        guidesOn: r,
                        columnCount: window.RM.constructorRouter.gg.guides.model.get("columns"),
                        margin: window.RM.constructorRouter.gg.guides.model.get("margin")
                    })
                }))
            });
            z(this, "stopListeningToGuides", () => {
                this.stopListening(window.RM.constructorRouter.gg.guides), this.stopListening(window.RM.constructorRouter.gg.guides ? .models), this.stopListening(this.mag.edit_params)
            });
            z(this, "show", (t = {}) => {
                this.$el.show().css({
                    opacity: "1"
                }).addClass("current"), this.onResize(), this.rendered || this.render(), this.visible = !0, t.switchToViewport && this.setViewport(t.switchToViewport, { ...t,
                    doNotSaveScroll: !0
                }), this.renderGlobalBlocks(), this.trigger("show"), this.controls ? .$el.show(), this.restoreViewportScroll(this.viewport), this.updateLockState(), this.$border.toggleClass("fullscreen", window.RM.constructorRouter.zoom.isFullScreenOrMore() && this.page.get("height") * window.RM.constructorRouter.zoom.getZoom() >= window.innerHeight), this.$border.toggleClass("ghost", this.viewport !== "default" && !this.mag.edit_params.get("guides")), Ve("constructor.borderAlwaysVisible") && this.updateBorder(), window.RM.constructorRouter.gg.guides ? .models ? .length ? this.listenToGuides() : window.RM.constructorRouter.gg ? .guides ? this.listenToOnce(window.RM.constructorRouter.gg.guides, "modelLoaded", () => {
                    this.listenToGuides()
                }) : (this.mag.edit_params.get("guides") || this.toggleBorder({
                    guidesOn: !1,
                    margin: {}
                }), this.listenToOnce(window.RM.constructorRouter.gg, "create", () => {
                    this.listenToOnce(window.RM.constructorRouter.gg.guides, "modelLoaded", () => {
                        this.listenToGuides()
                    })
                })), this.isActiveCommentMode && requestAnimationFrame(() => {
                    this._enableCommentMode({
                        force: !0
                    })
                }), this.workspaceContainer.addEventListener("mousemove", this.onMouseMove, {
                    passive: !0
                }), this.workspaceContainer.addEventListener("mouseleave", this.onMouseLeave), Ve("constructor.mobileBrokenChange") && rv.setWorkspace(this)
            });
            z(this, "hide", () => {
                this.isActiveCommentMode && this._disableCommentMode(), this.removeGlobalBlocks(), this.visible = !1, this.$el.css({
                    opacity: "0"
                }).hide().removeClass("current"), this.trigger("hide"), this.controls ? .$el.hide(), this.saveViewportScroll(this.viewport), this.trigger("deselect"), this.stopListeningToGuides(), this.workspaceContainer.removeEventListener("mousemove", this.onMouseMove), this.workspaceContainer.removeEventListener("mouseleave", this.onMouseLeave)
            });
            z(this, "render", () => {
                this.rendered = !0;
                let t = F1.extend({
                    $main: (0, gt.default)("#constructor")
                });
                if (this.controls = new t({
                        workspace: this
                    }), this.common_layer = new js.common_layer({
                        master: this.controls,
                        noInit: !0
                    }), V.default.each(this.blocks, function(i) {
                        try {
                            this.renderBlock(i)
                        } catch (n) {
                            console.error(n.message, n.stack)
                        }
                    }, this), this.page.from_template) {
                    let i = this.page.getUsedFonts({
                        includeCustom: !1
                    });
                    i && window.RM.constructorRouter.fonts.addFonts(i, "template")
                }
                let r = co.extend(W1);
                return this.pagesize = new r({
                    el: this.$el.find(".page-size-control").get(0),
                    propsData: {
                        workspace: this,
                        defaultSticky: window.RM.constructorRouter.zoom.isFullScreenOrMore(),
                        defaultZoom: window.RM.constructorRouter.zoom.getZoom()
                    }
                }), this.redrawPacksFrames(), setTimeout(() => {
                    this.$el.find(".page-size-control").css({
                        bottom: "22px"
                    })
                }, 100), this.page.on("change:viewport", () => {
                    setTimeout(() => {
                        this.$el.find(".page-size-control").css({
                            bottom: ""
                        }), setTimeout(() => {
                            this.$el.find(".page-size-control").css({
                                bottom: "22px"
                            })
                        }, 100)
                    }, 100)
                }), this.toggleBlocksEditParams(), this
            });
            z(this, "onGlobalAppear", t => {
                !this.visible || V.default.find(this.blocks, function(i) {
                    return i.model.id === t.id
                }) || this.renderGlobalBlock(t)
            });
            z(this, "onGlobalDisappear", t => {
                t.get("pid") !== this.page.id && this.removeGlobalBlock(t)
            });
            z(this, "renderGlobalBlock", t => {
                t.collection = window.RM.constructorRouter.workspace.page.widgets, t.setViewport(this.viewport), t.clearChanges(), this.createBlock(t, {
                    instant: !0
                })
            });
            z(this, "renderGlobalBlocks", () => {
                this.mag.globalWidgets.each(t => this.renderGlobalBlock(t))
            });
            z(this, "removeGlobalBlock", t => {
                this.removeBlock(t)
            });
            z(this, "removeGlobalBlocks", () => {
                this.mag.globalWidgets.each(t => this.removeGlobalBlock(t))
            });
            z(this, "switchOnAnimationMode", t => {
                this.animationMode = !0, this.animationSteps = t
            });
            z(this, "switchOffAnimationMode", () => {
                this.animationMode = !1, delete this.animationSteps
            });
            z(this, "onclick", t => {
                this.locked || this.visible && (window.suppressClick && window.suppressClick > +new Date || this.$el[0].contains(t.target) && !t.target ? .isSameNode(this.$el[0]) && !t.target ? .isSameNode(this.$origin[0]) || (0, gt.default)(t.target).hasClass("page-size-control") || (0, gt.default)(t.target).closest(".page-size-control").length || (0, gt.default)(t.target).hasClass("add-widget") || (0, gt.default)(t.target).closest(".add-widget").length || (window.RM.constructorRouter.trigger("notice:triggerEduTipClose", {
                    context: "clickOnWorkSpace"
                }), (!this.controls || this.controls.canControlsBeClosed()) && (this.widgets_in_widgets_deselected() && this.trigger("deselect"), V.default.defer(function() {
                    this.getSelectedBlocks().length === 0 && this.trigger("whitespace_click")
                }.bind(this)))))
            });
            z(this, "onBlockMouseEnter", t => {
                this.trigger("block:mouseenter", (0, gt.default)(t.currentTarget).data("id"))
            });
            z(this, "onBlockMouseLeave", t => {
                this.trigger("block:mouseleave", (0, gt.default)(t.currentTarget).data("id"))
            });
            z(this, "widgets_in_widgets_deselected", () => {
                let t = this.getSelectedBlocks(),
                    r = [];
                return t.forEach(function(i) {
                    i.child_workspace && (r = r.concat(i.child_workspace.getSelectedBlocks()))
                }), r.length ? (t.forEach(function(i) {
                    i.child_workspace && i.child_workspace.trigger("deselect")
                }), this.controls ? .onSelect(t), !1) : !0
            });
            z(this, "onDragStart", (t, r) => {
                if (!Qe.isPermissionAllowed("BaseWidgetCanSelectMultiple") || this.disabledSelectMultiple) return;
                let i = (0, gt.default)(t.target);
                if (i.closest(".controls").length > 0 || i.closest(".page-size-control").length > 0 || i.closest(".space-highlighter").length > 0) return !1;
                let n = (0, gt.default)(window).width() || 0;
                if (r.startX + 18 > n) return !1;
                this.$frame.show(), r.scrollTop = this.$container.scrollTop() || 0, this.isDragActive = !0
            });
            z(this, "onDrag", (t, r) => {
                if (!Qe.isPermissionAllowed("BaseWidgetCanSelectMultiple") || this.disabledSelectMultiple) return;
                let i = window.RM.constructorRouter.zoom.getZoom(),
                    n = r.drag,
                    s = r.startY / i + r.scrollTop / i,
                    l = t.pageY / i + (this.$container.scrollTop() || 0) / i,
                    p = {
                        top: Math.min(s, l) - this.position.top,
                        left: Math.min(t.pageX / i, r.startX / i) - this.position.left + n.scrollLeft / i,
                        height: Math.abs(s - l),
                        width: Math.abs(t.pageX / i - r.startX / i)
                    };
                Je.autoWindowScroll(t, this.$container, function() {
                    this.onDrag(t, r)
                }.bind(this)), this.$frame.css(p)
            });
            z(this, "onDragEnd", t => {
                if (!Qe.isPermissionAllowed("BaseWidgetCanSelectMultiple") || this.disabledSelectMultiple) return;
                Je.autoWindowScrollClear();
                let r = this.getFramePosition();
                this.selectBlocks(r, {
                    merge: t.shiftKey
                }), this.$frame.hide(), this.isDragActive = !1
            });
            z(this, "checkBundleDragMode", (t, r) => {
                let i = t.keyCode === gt.default.keycodes.v || t.keyCode === gt.default.keycodes.f || !!r;
                if (this.canEnterBundleDrag() && i && !t.metaKey) {
                    let n, s;
                    t.keyCode === gt.default.keycodes.v && (n = t.type === "keydown", s = this.bottomBlocksToMove ? this.bottomBlocksToMove.fPressed : !1), t.keyCode === gt.default.keycodes.f && (n = this.bottomBlocksToMove ? this.bottomBlocksToMove.vPressed : !1, s = t.type === "keydown");
                    let l = n || s;
                    r && (n = r === "bottom", s = r === "top");
                    let p = n || s;
                    this.bottomBlocksToMove ? (this.bottomBlocksToMove.vPressed !== n || this.bottomBlocksToMove.fPressed !== s || this.bottomBlocksToMove.kbActivate !== l || this.bottomBlocksToMove.mouseActivate !== r) && (this.bottomBlocksToMove.active = p, this.bottomBlocksToMove.vPressed = n, this.bottomBlocksToMove.fPressed = s, this.bottomBlocksToMove.kbActivate = l, this.bottomBlocksToMove.mouseActivate = r, delete this.bottomBlocksToMove.list, this.redrawBottomShiftLine({
                        tp: p ? "show" : "hide"
                    })) : (this.bottomBlocksToMove = {
                        active: p,
                        mouseActivate: r,
                        kbActivate: l,
                        vPressed: n,
                        fPressed: s
                    }, this.redrawBottomShiftLine({
                        tp: "show"
                    }))
                }
                this.bottomBlocksToMove && this.bottomBlocksToMove.active && i && t.metaKey && (clearTimeout(this.bundleDragTimeout), this.bundleDragTimeout = setTimeout(function() {
                    delete this.bottomBlocksToMove, this.redrawBottomShiftLine({
                        tp: "hide"
                    })
                }.bind(this), 250))
            });
            z(this, "canEnterBundleDrag", () => !this.animationMode && !this.spacesController && !this.getSelectedBlocks().find(t => t.cropmode));
            z(this, "onFileDrop", async t => {
                let r = !!t.target.closest(".can-drop"),
                    i = t.dataTransfer ? .files ? .[0];
                if (!(r || !i) && !/^image/.test(i.type) && /^video/.test(i.type)) try {
                    let n = await new Promise((l, p) => this.addWidget({ ...rk.defaults,
                        type: "video"
                    }, {
                        success: l,
                        error: p
                    }));
                    this.findBlock(n.id).uploadFile ? .(i)
                } catch {
                    alert(ae.VIDEO_WIDGET_GENERIC_ERROR_TEXT)
                }
            });
            z(this, "bindUploader", () => {
                if (this.el.addEventListener("drop", this.onFileDrop), !Qe.isPermissionAllowed("BaseWidgetCanAdd") || window.RM.constructorRouter.$uploader) return;
                let t, r, i;
                window.RM.constructorRouter.$uploader = (0, gt.default)("#workspaceUpload").fileupload({
                    dataType: "json",
                    dropZone: (0, gt.default)("#main"),
                    pasteZone: (0, gt.default)(document),
                    fileInput: (0, gt.default)("#workspaceUpload"),
                    replaceFileInput: !1,
                    singleFileUploads: !0,
                    sequentialUploads: !0
                }).bind("fileuploaddragover", function(n) {
                    t = window.RM.constructorRouter.workspace;
                    let s = n.delegatedEvent,
                        l = (0, gt.default)(s.target),
                        p = l.closest(".block.picture:not(.no-drag)"),
                        d = l.closest(".block.shots"),
                        c = !1;
                    if (p.length) {
                        if (clearTimeout(i), i = setTimeout(function() {
                                t.$(".picture.replace") && t.$(".picture.replace").removeClass("replace")
                            }, 500), p.hasClass("replace")) return;
                        t.$(".picture").removeClass("replace"), p.addClass("replace"), c = !0
                    } else if (d.length) {
                        if (clearTimeout(i), i = setTimeout(function() {
                                t.$(".shots.replace").removeClass("replace")
                            }, 500), d.hasClass("replace")) return;
                        t.$(".shots").removeClass("replace"), d.addClass("replace"), c = !0
                    } else {
                        if (!c) return;
                        t.$(".picture.replace") && t.$(".picture.replace").removeClass("replace"), c = !1
                    }
                }).bind("fileuploaddrop", function(n) {
                    if (t.$(".picture.replace") && t.$(".picture.replace").removeClass("replace"), (0, gt.default)(n.delegatedEvent.target).closest(".block.can-drop").length) return !1
                }).bind("fileuploadpaste", function() {
                    let n = window.RM.constructorRouter;
                    if (n.previewMode) return !1;
                    t = n.workspace
                }).bind("fileuploadadd", function(n, s) {
                    let l = s.files && s.files[0].size,
                        p = s.files && s.files[0].type;
                    if (s.allowUpload = !1, /^video/.test(p)) return;
                    let d = n.delegatedEvent,
                        c = (0, gt.default)(d.target),
                        m = c.closest(".block.picture:not(.no-drag)"),
                        u = c.closest(".block.shots");
                    if (s.files[0].$picture = m, m.length && (s.files[0].block = (0, V.default)(t.getAllBlocks("picture")).find(function(g) {
                            return g.id === m.data("id")
                        })), s.originalFiles.length > 1 && s.files[0].block) return alert(ae.MSG_UPLOAD_ONLY_SINGLE_FILE), !1;
                    if (!Ve("constructor.newUploadLimits")) {
                        if (u.length) return l > ae.UPLOAD_SHOTS_SIZE_LIMIT ? (alert(s.files[0].uploadError = ae.MSG_UPLOAD_SHOTS_SIZE_ERROR), !1) : !0
                    }
                    l > ae.UPLOAD_IMAGE_SIZE_LIMIT ? alert(s.files[0].uploadError = ae.MSG_UPLOAD_IMAGE_SIZE_ERROR) : Nn.MimeTypeRegExp.test(p) ? (s.files[0].name || (s.files[0].name = "pasteimage." + p.split("/")[1]), s.allowUpload = !0) : alert(s.files[0].uploadError = ae.MSG_UPLOAD_IMAGE_SUPPORTED_ERROR)
                }).bind("fileuploadsubmit", function(n, s) {
                    if (!s.allowUpload) return !1;
                    s.files[0].uploading = !0, r = !1, s.files[0].setPictureCallback = V.default.after(2, function() {
                        if (s.files[0].uploading = !1, r) t.page.removeWidgets([s.files[0].wid]);
                        else {
                            let p = t.findBlock(s.files[0].wid);
                            p && p.changePicture(s.files[0].result, {
                                skipHistory: !0
                            })
                        }
                        clearTimeout(s.files[0].loaderTimeout)
                    });
                    let l = s.files[0].block;
                    l && (l.showIconLoader(), t.$(".picture.replace") && t.$(".picture.replace").removeClass("replace")), s.formData = {
                        name: "Picture",
                        uploadType: "picture",
                        id: l ? l.model.id : "p" + t.page.id,
                        mid: t.mag.get("num_id"),
                        unique: !0
                    }
                }).bind("fileuploadsend", function(n, s) {
                    let l = s.files[0].block;
                    if (l) t.setTempPicture(s.files, l);
                    else {
                        let p = {
                            success: function(d) {
                                s.files[0].wid = d.id, s.files[0].setPictureCallback();
                                let c = t.findBlock(d.id);
                                c && (c.skipShowPanel = !0, t.setTempPicture(s.files, c))
                            },
                            error: function() {
                                r = !0, s.files[0].setPictureCallback()
                            }
                        };
                        if (t.spacesController) {
                            let d = t.$el,
                                c = d ? d.offset() : void 0,
                                m = n.delegatedEvent.pageY - (c ? c.top : 0);
                            t.spacesController.addWidgetAtOffset("picture", m, p)
                        } else {
                            let d = {
                                type: "picture",
                                hiddenBeforeUpload: !1
                            };
                            d.hiddenBeforeUpload = !0, t.addWidget(d, p)
                        }
                    }
                }).bind("fileuploaddone", function(n, s) {
                    if (!s || !s.result) {
                        console.error("error file upload!");
                        return
                    }
                    let l = s.files[0].block;
                    if (l) {
                        l.model.created = !0, l.changePicture(s.result, {
                            save: !1,
                            toHistory: !0
                        }), l = null;
                        let p = t.controls ? .findControl("picture_crop");
                        p ? .master.select(p)
                    } else s.files[0].result = s.result, s.files[0].setPictureCallback()
                }).bind("fileuploadfail", function(n, s) {
                    (s && s.jqXHR && s.jqXHR.status) === 500 && alert(ae.MSG_UPLOAD_IMAGE_SUPPORTED_ERROR), window.RM.constructorRouter.workspace.hideLoader(), r = !0, s.files[0].setPictureCallback()
                })
            });
            z(this, "getFramePosition", () => {
                let t = this.viewport,
                    r = this.mag.getViewportWidth(t),
                    i = De.dictionary[t].width;
                return {
                    x: this.$frame.position().left - (r - i) / 2,
                    y: this.$frame.position().top,
                    w: (this.$frame.width() || 0) + 2,
                    h: (this.$frame.height() || 0) + 2
                }
            });
            z(this, "getAllBlocks", t => {
                let r = V.default.filter(this.blocks, function(n) {
                        return !t || n.model.get("type") === t
                    }),
                    i = [];
                return V.default.each(this.blocks, function(n) {
                    V.default.isEmpty(n.child_workspace) || V.default.each(n.child_workspace ? .blocks, function(s) {
                        (!t || s.model.get("type") === t) && i.push(s)
                    })
                }), r.concat(i)
            });
            z(this, "getFirstSelectableBlock", t => this.getAllBlocks(t).filter(n => n.isSelectable())[0]);
            z(this, "getAllPacks", () => Object.entries(this.packs || {}).map(([t, r]) => r));
            z(this, "getPack", t => this.packs[t]);
            z(this, "onResize", () => {
                let t = window.RM.constructorRouter.zoom.getZoom(),
                    r = this.mag.getViewportWidth(this.viewport),
                    i = this.page.getViewportParam(this.viewport, "height") * t,
                    n = this.$window.height() || 0,
                    s = this.$window.width() || 0,
                    l = this.viewport,
                    p = Math.floor(Math.max(Math.ceil((s - r * t) / 2), 0) / t),
                    d = 0,
                    c = 0,
                    m = Qa();
                if (l === "default") c = Math.max(Math.ceil((n - i) / 2), 0) / t, this.$el.css({
                    top: c,
                    left: p,
                    "border-top": "",
                    "border-bottom": ""
                });
                else if (m) {
                    let {
                        height: u
                    } = yr.fitToDevice(r, this.viewport, m);
                    c = Math.max(Math.ceil((n - (t < 1 ? i : u)) / 2), 0) / t, d = Math.max(Math.floor((n - (t < 1 ? i : u)) / t) - c, 0), this.$el.css({
                        top: 0,
                        left: p,
                        "border-top": c + "px solid transparent",
                        "border-bottom": d + "px solid transparent"
                    }), document.documentElement.style.setProperty("--phone-viewport-height", `${u}px`)
                }
                if (this.position.left = p, this.position.top = c, this.position.bottom = d, this.cachedSizes = void 0, V.default.defer(function() {
                        this.trigger("workspace-resize", this.position)
                    }.bind(this)), V.default.any(this.blocks, function(u) {
                        return u.model.get("fixed_position")
                    })) {
                    this.redrawPacksFrames(), this.redrawBottomShiftLine();
                    let u = V.default.filter(this.blocks, g => g.model.get("fixed_position"));
                    this.viewport !== "default" && u.forEach(g => g.redrawPosition(void 0, {
                        skipTriggerRedraw: !0
                    })), V.default.invoke(u, "recalcFixedLine")
                }
            });
            z(this, "moveSelected", (t, r) => {
                if (this.animationMode) {
                    this.animationSteps.moveSelected(t, r);
                    return
                }
                let i = t.shiftKey,
                    n = V.default.filter(this.movingBlocks || this.getSelectedBlocks(), c => !c.isLocked());
                if (V.default.isEmpty(n)) return !1;
                if (V.default.any(n, function(c) {
                        return c.isFullWidth()
                    }) && (0, V.default)(["left", "right"]).contains(r) || V.default.any(n, function(c) {
                        return c.isFullHeight()
                    }) && (0, V.default)(["up", "down"]).contains(r)) return;
                let p = i ? 10 : 1,
                    d = {
                        deltaY: 0,
                        deltaX: 0,
                        isClone: !1,
                        isCloneByKeys: !1
                    };
                switch (r) {
                    case "up":
                        d.deltaY = -p;
                        break;
                    case "right":
                        d.deltaX = p;
                        break;
                    case "down":
                        d.deltaY = p;
                        break;
                    case "left":
                        d.deltaX = -p;
                        break
                }
                if (this.movingBlocks || (this.movingBlocks = t.altKey ? n : void 0, this.movingBlocks && V.default.each(n, function(c) {
                        c.clone()
                    })), this.movingBlocks && (d.isClone = !0, d.isCloneByKeys = !0, this.movingDelta ? (this.movingDelta.deltaX += d.deltaX, this.movingDelta.deltaY += d.deltaY) : this.movingDelta = V.default.clone(d), this.movingDelta && (this.movingDelta.deltaXOrig = d.deltaX, this.movingDelta.deltaYOrig = d.deltaY)), !this.movingBlocks && n.length && n[0].model.get("type") === "hotspot" && n[0].tip_workspace.workspaceEditMode) return n[0].moveTip(d);
                if (n.length === 1 && n[0] ? .model ? .get("type") === "picture" && n[0].cropmode) {
                    n[0].onCropResizeUsingKeyboard && n[0].onCropResizeUsingKeyboard(t, d), t.stopPropagation(), t.preventDefault();
                    return
                }
                if (t.metaKey || t.ctrlKey ? (yu.prototype.resizeBlocks(this, n, d, t, {
                        hideFrameMs: 500
                    }), t.stopPropagation(), t.preventDefault()) : yu.prototype.moveBlocks(this, n, this.movingDelta || d, t), this.movingBlocks) this.cloneBlocksDebounced(this.movingBlocks);
                else {
                    this.redrawPacksFrames({
                        tp: "move"
                    }), this.redrawBottomShiftLine({
                        tp: "move"
                    });
                    let c = this.bottomBlocksToMove;
                    n = [...n, ...c && c.tosave || []];
                    let m = V.default.map(n, function(u) {
                        return V.default.extend({
                            _id: u.id
                        }, u.getBoxData())
                    });
                    this.set_group(m), this.saveGroupDebounced(V.default.pluck(n, "model"))
                }
                return t.stopPropagation(), t.preventDefault(), this.clearBottomBlocksToMove(), !0
            });
            z(this, "changeBlocksOpacity", t => {
                let r = V.default.map(this.getSelectedBlocks(), i => i.model);
                t === 0 && (t = 10), V.default.each(r, i => {
                    switch (i.get("type")) {
                        case "button":
                            if (!Qe.isPermissionAllowed("ButtonCanChangeSettings")) break;
                            i.set("background-color-opacity", t * 10);
                            break;
                        case "shape":
                            if (!Qe.isPermissionAllowed("ShapeCanChangeSettings")) break;
                            i.set("bg_opacity", t * .1);
                            break;
                        case "picture":
                            if (!Qe.isPermissionAllowed("PictureCanChangeSettings")) break;
                            i.set("opacity", t * .1)
                    }
                }), this.save_group(r)
            });
            z(this, "setViewport", (t, r) => {
                if (t === this.viewport) return;
                this.locked && (t = "default");
                let i = this.page.get("viewport_" + t);
                i = i || {};
                let n = Oc[i.enabled || t === "default" ? t : this.viewport] || "Desktop";
                if (Gd(n), !i.enabled && t !== "default") {
                    window.sessionStorage && window.sessionStorage.removeItem("constructorViewport");
                    return
                }
                let s = this.getSelectedBlocks();
                this.trigger("deselect", {
                    deselectOnViewportChange: !0
                });
                let l = !!this.spacesController;
                this.spacesController && this.toggleBundleBlocks(!1), this.page.set("viewport", t, r), l && this.toggleBundleBlocks(!0), s.length > 0 && V.default.defer(() => {
                    s.map(p => p.select(!1, {
                        noFrame: s.length > 0
                    })), this.trigger("select", s)
                }), window.sessionStorage.setItem("constructorViewport", t)
            });
            z(this, "showUsedViewport", () => {
                let t = window.sessionStorage.getItem("constructorViewport") || "default",
                    r = t === "default" || this.page.get(`viewport_${t}`) ? .enabled;
                this.setViewport(r ? t : "default")
            });
            z(this, "isViewportEnabled", t => t === "default" || this.page.get(`viewport_${t}`) ? .enabled);
            z(this, "suspendAllBlocks", () => {
                for (let t of this.blocks) t.model.suspend()
            });
            z(this, "resumeAllBlocks", () => {
                for (let t of this.blocks) t.model.resume()
            });
            z(this, "onChangeViewport", (t, r) => {
                this.updateWorkspaceViewport(t), this.blocks.forEach(i => i.model.setViewport(r)), window.RM.constructorRouter.trigger("changeViewport", r), this.blocks.filter(i => i.isFixed()).forEach(i => i.onFixPosition()), this.blocks.filter(i => !!i.model.get("sticked")).forEach(i => i.setStickedDims()), this.checkOneWidgetPacks()
            });
            z(this, "saveViewportScroll", t => {
                t && (this.viewportScrolls["scroll-viewport-" + t] = this.$container.scrollTop() || 0)
            });
            z(this, "saveScroll", () => {
                this.viewportScroll = this.$container.scrollTop() || 0
            });
            z(this, "restoreViewportScroll", t => {
                t && this.$container.scrollTop(this.viewportScrolls["scroll-viewport-" + t] || 0)
            });
            z(this, "restoreScroll", () => {
                this.$container.scrollTop(this.viewportScroll)
            });
            z(this, "getScrollTop", () => this.$container.scrollTop());
            z(this, "updateWorkspaceViewport", t => {
                let r = {
                    width: this.mag.getViewportWidth(this.viewport),
                    height: this.page.getViewportParam(this.viewport, "height"),
                    min_height: Wr.getViewportSetting("min_height", this.viewport),
                    viewport: this.viewport,
                    device: Qa()
                };
                if (V.default.isEqual(r, this.oldParams)) return;
                this.$el.attr("data-viewport", r.viewport), r.viewport === "phone_portrait" && document.documentElement.style.setProperty("--phone-viewport-width", `${r.width}px`), this.$el.css({
                    width: r.width,
                    height: r.height
                }), this.$origin.css({
                    width: De.dictionary[this.viewport].width,
                    height: r.height
                }), this.onResize(), (!t || !t.hasChanged("viewport")) && window.RM.constructorRouter.trigger("updateWorkspaceViewport");
                let i = V.default.findWhere(this.blocks, {
                    name: "Background"
                });
                i && i.onViewportUpdate && i.onViewportUpdate(r), this.oldParams = r
            });
            z(this, "getTriggeredBlocks", t => t ? t.reduce((r, i) => {
                let n = this.blocks.filter(s => {
                    let l = s.getAllAnimationTriggers(),
                        p = s.model.get("triggers");
                    return l.includes(i) || p && p.includes(i)
                });
                return [...r, ...n]
            }, []) : []);
            z(this, "onWidgetsRemove", t => {
                let r = this.getTriggeredBlocks(t);
                V.default.each(r, i => {
                    t.indexOf(i.id) === -1 && i.blink(!0)
                })
            });
            z(this, "onWidgetsContextChange", t => {
                t = t || [];
                let r = V.default.map(t, "id"),
                    i = this.getTriggeredBlocks(r),
                    n = t.concat(i),
                    s = [];
                V.default.each(n, function(l) {
                    let p = l.getTriggerBlocks();
                    V.default.each(p, function(d) {
                        d && !Ay.canBeExternalTrigger(d) && (d.blink(!0), l.removeAllAnimationTriggers(), s.push(l))
                    })
                }.bind(this))
            });
            z(this, "createWidget", (t, r = {}) => {
                if (this.spacesController && r.y !== void 0) this.spacesController.addWidgetAtOffset(t, r.y);
                else if (this.spacesController) {
                    let i = Math.floor((this.$el.offsetParent() ? .height() || 0) / 2) - (this.$el ? .offset() ? .top || 0);
                    this.viewport !== "default" && (i -= 203), this.spacesController.addWidgetAtOffset(t, i)
                } else this.addWidget({
                    type: t
                }, {
                    useDefaults: !0
                })
            });
            z(this, "addWidget", (t, r) => {
                if (r = r || {}, r.group || this.trigger("deselect", {
                        fromAdd: !0
                    }), r.copy && !r.disableDeleteViewportAttributes && V.default.each(De.viewport_list, s => {
                        let l = this.page.get(s);
                        V.default.isEmpty(l) && delete t[s]
                    }), t || (t = {}), !t.type) {
                    console.error("creating widget with no type");
                    return
                }
                r.isMultiple || (window.RM.constructorRouter.trigger("notice:triggerMetrics", "countWidgetCreated"), t.type === "text" && window.RM.constructorRouter.trigger("notice:triggerMetrics", "countTextWidgetCreated"), V.default.isEmpty(this.packs) || window.RM.constructorRouter.trigger("notice:triggerMetrics", "widgetsGrouped"));
                let i = t.type.toLowerCase(),
                    n = zo[i];
                return r && r.useDefaults && V.default.defaults(t, V.default.mapObject(nt(n.defaults), function(s) {
                    return V.default.isFunction(s) ? s() : s
                })), De.types.forEach(s => {
                    let l = (r.cloningWidgetZIndex || this.getMaxZIndex(s)) + 1;
                    Object.assign(t, ty(t, {
                        z: l
                    }, s))
                }), t.y = t.y === void 0 ? this.getDefaultY(t) : t.y, t.x = t.x && t.x === "center" ? this.getCenterX(t) : t.x, t.y = n.yOffsetOnCreate && typeof n.yOffsetOnCreate == "number" && t.y !== void 0 ? t.y + n.yOffsetOnCreate : t.y, this.page.addWidget(t, r), this.mag.increaseWidgetAddCounter(), t
            });
            z(this, "getMaxZIndex", t => {
                let i = this.blocks.filter(n => !n.outofbox).map(n => {
                    if (t) {
                        let s = n.model.toJSON();
                        return t === "default" ? s.z : s[t] ? .z ? ? s.z
                    }
                    return parseInt(n.model.get("z"))
                }).reduce((n, s) => Math.max(s, n), -1 / 0);
                return i <= 0 && (i = 99), i
            });
            z(this, "getDefaultY", (t = {}) => {
                let r = t.h || ae.widget.defaults.h,
                    i = this.getCachedSizes(),
                    n = window.RM.constructorRouter.zoom.getZoom(),
                    s = i.windowClientHeight || 0;
                return Math.round(s / 2 / n - r / 2 + (this.$container.scrollTop() || 0) / n - this.position.top)
            });
            z(this, "getCenterX", t => {
                t = t || {};
                let r = t.w || ae.widget.defaults.w,
                    i = this.$el.width() || 0,
                    n = this.$window.width() || 0,
                    s = window.RM.constructorRouter.zoom.getZoom();
                return i * s <= n ? Math.round(i / 2 - r / 2) : Math.round(n / 2 / s - r / 2 + (this.$container.scrollLeft() || 0) / s)
            });
            z(this, "getViewportPosition", () => {
                let t = this.$el.offset() || {
                        left: 0,
                        top: 0
                    },
                    r = parseFloat(this.$el.css("border-top-width"));
                return {
                    top: t.top || r ? -t.top - r : 0,
                    left: t.left ? -t.left : 0,
                    height: this.$el.parent().height(),
                    width: this.$el.width(),
                    viewportWidth: this.$el.parent().width(),
                    pageHeight: this.page.get("height")
                }
            });
            z(this, "createBlock", (t, r) => {
                if (r = r || {}, !!V.default.find(this.blocks, function(l) {
                        return l.model.id === t.id
                    })) return;
                let n = this.addBlock(t, r),
                    s = this.blocksToClone && this.blocksToClone[t.id];
                this.renderBlock(n, s, {
                    isNew: !0,
                    invisible: r.invisible
                }), s && (delete s.$cloneEl, delete this.blocksToClone[t.id]), t._nestedWidgetsJSON && this.createNestedBlocks(n, t._nestedWidgetsJSON, function() {
                    delete t._nestedWidgetsJSON
                }), t.isGlobal() || this.trigger("redraw"), !r.undo && !r.redo && !r.group && (!t.isGlobal() || r.is_new_global) && !r.invisible && (n.select(!1, {
                    noFrame: r.isMultiple
                }), this.triggerSelectOnSelectedBlockDebounced()), n ? .model && n.model.get("type") === "picture" && r ? .copy && n.checkLambdaUrlSetCorrectly && n.checkLambdaUrlSetCorrectly({
                    func: "createBlock-pasteBlock"
                })
            });
            z(this, "triggerSelectOnSelectedBlock", () => {
                let t = this.getSelectedBlocks();
                !t || !t.length || this.trigger("select", t)
            });
            z(this, "renderMissedWidgets", () => {
                this.page.widgets.chain().reject(t => t.isGlobal() || !this.page.get("wids").includes(t.id)).map(t => {
                    let r = this.findBlock(t.get("_id"));
                    r || (r = this.addBlock(t), this.renderBlock(r))
                })
            });
            z(this, "addBlock", (t, r) => {
                let i = zo[t.get("type")],
                    n = ci({
                        target: t,
                        viewport: r ? .viewport || this.viewport,
                        pageId: this.page.id,
                        disposable: !1,
                        minimalViewports: Je.canUseMinimalViewport()
                    }),
                    s = new i(n, this);
                return r ? .invisible && s.$el.addClass("invisible"), this.blocks.push(s), this.trigger("block:create", s, r), s
            });
            z(this, "renderBlock", (t, r, i) => {
                if (t.render(i), i ? .invisible && t.$el.addClass("invisible"), t.model.get("sticked")) {
                    let n = t.getStickedDims();
                    t.model.set({
                        x: n.x,
                        y: n.y
                    })
                }
                t.outofbox || t.redrawPosition(t.model, {
                    forceRedraw: !0,
                    doNotRedrawPacksFrames: !0,
                    doNotRedrawBottomShiftLine: !0
                }), r && V.default.isObject(r) && (r.$cloneEl && r.$cloneEl.remove(), r.name === "Shape" && r.redrawShape(r.model.get("w"), r.model.get("h")))
            });
            z(this, "removeBlock", t => {
                let r = V.default.find(this.blocks, function(i) {
                    return i.model.id === t.id
                });
                r && (this.blocks = V.default.without(this.blocks, r), this.trigger("block:remove", r), r.destroy(), r.model.stopListening(), this.redrawPacksFrames({
                    tp: "remove"
                }), this.redrawBottomShiftLine({
                    tp: "remove"
                }))
            });
            z(this, "selectAllBlocks", () => {
                Qe.isPermissionAllowed("BaseWidgetCanSelectMultiple") && (this.disabledSelectMultiple || this.selectBlocks({
                    x: -5e4,
                    y: -5e4,
                    w: 1e5,
                    h: 201600
                }, {
                    merge: !1
                }))
            });
            z(this, "selectListBlocks", (t, r) => {
                if (!Qe.isPermissionAllowed("BaseWidgetCanSelectMultiple") || this.disabledSelectMultiple) return;
                let i = V.default.flatten(V.default.difference(V.default.intersection(t, r), r));
                V.default.each(i, function(n) {
                    n.deselect()
                }), V.default.each(t, function(n) {
                    n instanceof Array ? n[0].selectFromWidgetBar({
                        shiftKey: !0
                    }, !0) : n.select(!0)
                }), this.trigger("select", this.getSelectedBlocks(), V.default.flatten(i))
            });
            z(this, "selectBlocks", (t, r) => {
                r = r || {};
                let i = 6,
                    n = this.viewport,
                    s = V.default.filter(this.blocks, function(u) {
                        return u.isSelectable() && u.inArea(t)
                    });
                if (s = V.default.filter(s, function(u) {
                        return !!(!u.isLocked() || r ? .includeLocked)
                    }), n !== "default" && s.length > 1 && window.RM.constructorRouter.trigger("notice:triggerMetrics", "mobileGroupSelected"), r ? .selectOnlyFrontmostBlock && s.length > 0) {
                    let u = s.reduce((g, h) => h.currentZ > g.currentZ ? h : g);
                    u && (s = [u])
                }
                let l = ["Shape", "Picture", "Button", "Text"],
                    p = V.default.map(s, u => u.name),
                    d = V.default.uniq(p);
                p.length >= 2 && d.length === 1 && l.includes(d[0]) && n === "default" && window.RM.constructorRouter.trigger("notice:triggerMetrics", "multipleWidgetsOfSameTypeSelected");
                let c = V.default.filter(this.packs || {}, function(u) {
                    let g = u.getBoxData(),
                        h = g.y,
                        b = g.b;
                    if (u.isFixed()) {
                        let x = this.$container.scrollTop();
                        h += x, b += x
                    }
                    return Math.max(t.x, g.x) < Math.min(t.x + t.w, g.r) && Math.max(t.y, h) < Math.min(t.y + t.h, b)
                }.bind(this));
                if (r ? .selectOnlyFrontmostBlock && c.length > 0) {
                    let u = c.reduce((g, h) => {
                        let b = h.blocks.reduce((S, v) => v.currentZ > S.currentZ ? v : S),
                            x = {
                                pack: h,
                                maxZIndex: b.currentZ
                            };
                        return x.maxZIndex > g ? .maxZIndex ? x : g
                    }, {
                        pack: {},
                        maxZIndex: -1 / 0
                    });
                    Object.keys(u.pack).length > 0 && u.maxZIndex > -1 / 0 && (c = [u.pack], s = [])
                }
                V.default.each(c, V.default.bind(function(u) {
                    s = V.default.union(s, V.default.filter(this.getPackBlocks(u.id), function(g) {
                        return !!(!g.isLocked() || r ? .includeLocked)
                    }))
                }, this)), s = V.default.uniq(s);
                let m;
                r.merge || (V.default.isEmpty(s) ? this.getSelectedBlocks().length ? (m = this.controls ? .canControlsBeClosed(), (!this.controls || m) && this.trigger("deselect")) : t.w <= i && t.h <= i && this.trigger("whitespace_click") : this.trigger("deselect")), V.default.defer(function() {
                    let u = [],
                        g = r ? .merge ? s.length - V.default.filter(s, x => x.selected).length > 1 : s.length > 1;
                    V.default.each(s, function(x) {
                        r ? .merge && x.selected ? (x.deselect(), u.push(x)) : x.select(!1, {
                            noFrame: g
                        })
                    });
                    let h = r ? .merge ? this.getSelectedBlocks() : s,
                        b = this.redefineSelection(h, u);
                    V.default.isEmpty(b.selected) ? (!this.controls || m === null && this.controls.canControlsBeClosed() || m) && this.trigger("deselect") : this.trigger("select", b.selected, b.deselected)
                }.bind(this))
            });
            z(this, "onPackClick", t => {
                let r = window.RM.constructorRouter.zoom.getZoom(),
                    i = this.getCachedSizes(),
                    n = this.viewport,
                    s = De.dictionary[n].width;
                this.selectBlocks({
                    x: (t.pageX - ((i.width || 0) - s * r) / 2) / r,
                    y: (t.pageY + (this.$container.scrollTop() || 0) - this.position.top) / r,
                    w: 1,
                    h: 1
                }, {
                    merge: t.shiftKey,
                    includeLocked: !0,
                    selectOnlyFrontmostBlock: !0
                })
            });
            z(this, "redefineSelection", (t, r, {
                ignorePacks: i = !1
            } = {}) => {
                if (!Qe.isPermissionAllowed("BaseWidgetCanSelectMultiple")) return {
                    selected: [t[0]],
                    deselected: []
                };
                if (this.disabledSelectMultiple) return {
                    selected: [t[0]],
                    deselected: []
                };
                if (t && !V.default.isArray(t) && (t = [t]), r && !V.default.isArray(r) && (r = [r]), t = t || [], r = r || [], i) return {
                    selected: V.default.difference(t, r),
                    deselected: r
                };
                let n = V.default.uniq(V.default.compact(V.default.map(t, function(p) {
                        return p.model.get("pack_id")
                    }))),
                    s = [];
                V.default.each(n, V.default.bind(function(p) {
                    s = V.default.union(s, this.getPackBlocks(p))
                }, this)), s = V.default.difference(s, t), V.default.each(s, function(p) {
                    p.select(!1, {
                        noFrame: !0
                    })
                }), t = V.default.union(t, s);
                let l = V.default.uniq(V.default.compact(V.default.map(r, function(p) {
                    return p.model.get("pack_id")
                })));
                return s = [], V.default.each(l, V.default.bind(function(p) {
                    s = V.default.union(s, this.getPackBlocks(p))
                }, this)), V.default.each(s, function(p) {
                    p.deselect()
                }), r = V.default.union(r, s), t = V.default.difference(t, r), {
                    selected: t,
                    deselected: r
                }
            });
            z(this, "redrawPacksFrames", (t = {}) => {
                Qe.isPermissionAllowed("BaseWidgetCanSelectMultiple") && (this.disabledSelectMultiple || this.redrawPacksFramesHolded || (this.redrawPacksFramesHolded = !0, window.requestAnimationFrame(() => this._redrawPacksFrames(t))))
            });
            z(this, "_redrawPacksFrames", (t = {}) => {
                this.redrawPacksFramesHolded = !1;
                let r = this.getSelectableBlocks(),
                    i = {},
                    n = V.default.map(this.packs, function(m) {
                        return m.export()
                    }),
                    s = (m, u) => {
                        if (!i[m]) {
                            let h = this.packs[m];
                            h ? (h.reset(), i[m] = h) : i[m] = new Fc({
                                id: m,
                                workspace: this
                            })
                        }
                        i[m].addBlock(u, {
                            noSizeConstraints: t.tp && ["move", "select"].includes(t.tp)
                        })
                    };
                V.default.each(r, function(m) {
                    let u = m.model.get("pack_id");
                    m.selected && this.getSelectedBlocks().length > 1 && s("selected", m), u && s(u, m)
                }, this);
                let l = V.default.map(i, function(m) {
                        return m.export()
                    }),
                    p = V.default.any(this.blocks, function(m) {
                        return m.model.get("fixed_position")
                    });
                if (V.default.isEqual(n, l) && !p) return;
                let d = this.$el.children().first();
                V.default.each(this.packs, function(m) {
                    V.default.has(i, m.id) || m.destroy()
                }.bind(this));
                let c = m => m.blocks.every(u => i.selected ? .blocks.find(g => g === u));
                V.default.each(i, function(u) {
                    u.rendered || (d.append(u.render()), this.listenTo(u, "click", this.onPackClick.bind(this))), u.update({
                        isInSelectionWithOthers: u.id !== "selected" && c(u)
                    })
                }.bind(this)), this.packs = i, this.checkBundleDragAbility()
            });
            z(this, "getPackBlocks", t => V.default.filter(this.blocks, function(r) {
                return r.model.get("pack_id") === t
            }));
            z(this, "checkOneWidgetPacks", () => {
                let t = V.default.groupBy(this.getExistingWidgets(), function(r) {
                    return r.get("pack_id") ? r.get("pack_id") : 0
                });
                V.default.each(t, function(r, i) {
                    i !== "0" && r.length === 1 && r[0].save("pack_id", null, {
                        patch: !0
                    })
                })
            });
            z(this, "onSelect", () => {
                this.redrawPacksFrames({
                    tp: "select"
                }), this.redrawBottomShiftLine({
                    tp: "select"
                });
                let t = Zt();
                t.step ? .name === "MobileMenuVisible" && !this.getSelectedBlocks()[0].model.get("hidden") && Oe(["MobileMenuVisible"]), t.step ? .name === "FixMenuClickOutside" && Oe(["FixMenuClickOutside"]), t.step ? .name === "BeforeAddAnimations" && this.getSelectedBlocks().length === 2 && Oe(["BeforeAddAnimations"])
            });
            z(this, "onDeselect", t => {
                let r = Zt();
                V.default.chain(this.blocks).where({
                    selected: !0
                }).invoke("deselect", t), V.default.defer(function() {
                    this.redrawPacksFrames({
                        tp: "deselect"
                    }), this.redrawBottomShiftLine({
                        tp: "deselect"
                    }), r.started && r.step ? .name === "EverythingInItsRightPlace" && Oe(["EverythingInItsRightPlace"]), r.started && r.step ? .name === "DeselectAfterSetBlocksDistance" && Oe(["DeselectAfterSetBlocksDistance"]), this.restoreFocusForCopyPaste()
                }.bind(this))
            });
            z(this, "restoreFocusForCopyPaste", () => {
                (0, gt.default)(".copyhack").selectText()
            });
            z(this, "preloadBlocks", () => {
                this.blocks.forEach(t => t.preload ? .())
            });
            z(this, "getSelectedBlocks", () => V.default.filter(this.blocks, function(t) {
                return t.selected
            }));
            z(this, "deselectBlocksExcept", t => {
                this.getSelectedBlocks().filter(r => r !== t).forEach(r => r.deselect())
            });
            z(this, "getActiveBlocks", () => this.blocks.filter(function(t) {
                return !t.model.get("hidden")
            }));
            z(this, "getSelectableBlocks", () => this.blocks.filter(function(t) {
                return !t.model.get("hidden") && !t.outofbox
            }));
            z(this, "getExistingWidgets", () => (0, V.default)(this.blocks).chain().pluck("model").value());
            z(this, "save_group", (t, r) => {
                this.set_group(t, r, !0)
            });
            z(this, "set_group", (t, r, i) => {
                let n = this.viewport;
                if (Ve("constructor.saveMixedGroup")) {
                    let s = t;
                    if (Array.isArray(t)) {
                        let l = t.map(p => {
                            if (p ? .getWidget) return {
                                update: p.getWidget()
                            };
                            if (p instanceof cp.default.Model) return {
                                update: p
                            }; {
                                let d = p,
                                    c = d._id,
                                    m;
                                for (let u of this.blocks || [])
                                    if (u.model.id === c) {
                                        m = u ? .model;
                                        break
                                    } else if (u.child_workspace) {
                                    let g = u.child_workspace ? .blocks ? .find(h => h.model.id === c);
                                    if (g) {
                                        m = g ? .model;
                                        break
                                    }
                                }
                                return Ve("widget.anomalyMonitoring") && m && m.viewport === "default" && n !== m.viewport && Gc.sendEvent({
                                    type: "setInMismatchedViewport",
                                    widget: m.toJSON(),
                                    payload: d
                                }), m ? m.normalizeUpdate(d, r) : {
                                    update: d
                                }
                            }
                        });
                        s = l.map(({
                            update: p
                        }) => p), r = l[0] ? .options ? l[0].options : r
                    } else s = t;
                    i ? this.syncManager.saveGroup(s, r) : this.syncManager.setGroup(s, r)
                } else {
                    let s = t;
                    if (Array.isArray(t) && t[0] ? .getWidget) s = t.map(l => l.getWidget());
                    else if (Array.isArray(t) && t.length && !(t[0] instanceof cp.default.Model)) {
                        let l = t.map(p => {
                            let d = p._id,
                                c;
                            for (let m of this.blocks || []) {
                                let u = m.model.id === d;
                                if (u) {
                                    c = m ? .model;
                                    break
                                } else if (!u && m.child_workspace) {
                                    let h = m.child_workspace ? .blocks ? .find(b => b.model.id === d);
                                    if (h) {
                                        c = h ? .model;
                                        break
                                    }
                                }
                            }
                            return Ve("widget.anomalyMonitoring") && c && c.viewport === "default" && n !== c.viewport && Gc.sendEvent({
                                type: "setInMismatchedViewport",
                                widget: c.toJSON(),
                                payload: p
                            }), c ? c.normalizeUpdate(p, r) : {
                                update: p
                            }
                        });
                        s = l.map(p => p.update), r = l.length ? l[0].options : r
                    }
                    i ? this.syncManager.saveGroup(s, r) : this.syncManager.setGroup(s, r)
                }
            });
            z(this, "changeVisibilityForSelectedBlocks", () => {
                let t = this.getSelectedBlocks(),
                    r = [],
                    i = !1;
                t.forEach(n => {
                    let s = n.model.get("hidden");
                    s && (i = !0), r.push({
                        _id: n.model.get("_id"),
                        hidden: s
                    })
                }), i ? r.forEach(n => n.hidden = !1) : r.forEach(n => n.hidden = !0), this.save_group([...r]), this.selectListBlocks(t, [])
            });
            z(this, "changeLockForSelectedBlocks", () => {
                let t = this.getSelectedBlocks(),
                    r = [],
                    i = !1;
                for (let n of t) {
                    let s = n.model.get("is_locked"),
                        l = n.model.get("_id");
                    s && (i = !0), r.push({
                        _id: l,
                        is_locked: s
                    })
                }
                i ? r.forEach(n => n.is_locked = !1) : r.forEach(n => n.is_locked = !0), this.save_group(r)
            });
            z(this, "toggleWidgets", t => {
                t = t || {};
                let r = [],
                    i = [];
                V.default.each(t.wids || [], V.default.bind(function(s) {
                    let l = this.page.widgets.get(s) || this.mag.globalWidgets.get(s);
                    l && r.push({
                        _id: l.get("_id"),
                        hidden: !!t.hidden
                    })
                }, this));
                let n = this.getBlocksThatOnlyOnesInGroupByChangeset(r);
                n.length > 0 && (i = n.map(s => ({
                    _id: s.get("_id"),
                    pack_id: null
                }))), this.save_group([...r, ...i])
            });
            z(this, "deleteSelectedBlocks", () => {
                if (!Qe.isPermissionAllowed("BaseWidgetCanDelete")) return;
                if (this.animationMode) {
                    this.animationSteps.removeSelected();
                    return
                }
                let t = Zt(),
                    r = this.getSelectedBlocks();
                this.deleteBlocks(r), this.deletedWidgetsCount = this.deletedWidgetsCount + r.length, t.step ? .name === "SelectBlocksAndDelete" && this.deletedWidgetsCount >= 6 && Oe("SelectBlocksAndDelete"), Oe(["DeleteBlocks"]), r.forEach(n => {
                    this.deleteCommentsFromBlock(n.model.get("_id"))
                })
            });
            z(this, "getBlocksThatOnlyOnesInGroupByChangeset", t => {
                let r = [];
                return t.forEach(n => {
                    let s = this.blocks.findIndex(l => l.model.get("_id") === n._id);
                    s !== -1 && r.push(this.blocks[s])
                }), this.getBlocksThatOnlyOnesInGroup(r)
            });
            z(this, "getBlocksThatOnlyOnesInGroup", (t, r = !1) => {
                let i = [],
                    n = {};
                t ? .forEach(s => {
                    let l = s.model.get("_id"),
                        p = s.getPack();
                    s.model.isGlobal() || p && (n[p.model.cid] ? n[p.model.cid] = n[p.model.cid].filter(d => d.model.get("_id") !== l) : n[p.model.cid] = [...p.blocks.filter(d => d.model.get("_id") !== l)])
                });
                for (let s in n)
                    if (n[s].length === 1) {
                        let l = n[s][0];
                        l.model && r && l.model.set({
                            pack_id: null
                        }), i.push(l.model)
                    }
                return i
            });
            z(this, "deleteBlocks", (t, r = {}) => {
                if (!Qe.isPermissionAllowed("BaseWidgetCanDelete")) return;
                let i = this.viewport,
                    n = V.default.pluck(t, "model"),
                    s = {},
                    l = new cp.default.Collection,
                    p = !1;
                (0, V.default)(n).each(function(c) {
                    let m = !1;
                    r.forceRemove || (m = c.isGlobal() && i !== "default");
                    let u = m ? this.page : this.mag.getPage(c.get("pid"));
                    u && (l.add(u), s[u.id] = (s[u.id] || []).concat(c.id), c.get("type") === "ecommercecart" && !m && (p = !0))
                }, this), V.default.each(s, function(c, m) {
                    this.mag.getPage(m).removeWidgets(c, {
                        nosave: !0,
                        viewport: this.viewport,
                        ...r
                    })
                }, this), p && this.eCommerceManager.setCartWidgetExistState(!1);
                let d = i === "default" ? this.getBlocksThatOnlyOnesInGroup(t, !0) : [];
                l.isEmpty() || this.save_group([...l.models, ...d], {
                    page: this.page.id
                })
            });
            z(this, "pastePreset", (t, r = {}) => {
                let i = nt(t),
                    n = this.viewport;
                if (r.customLayersName) {
                    let d = r.customLayersName,
                        c = [...i.blocks.filter(m => !m.pack_id), ...i.packs ? ? []];
                    for (let m of c) m.name = d
                }
                let {
                    left: s,
                    top: l
                } = ct.mapFromViewportToElement({
                    top: window.innerHeight / 2,
                    left: window.innerWidth / 2
                }, this.$origin.get(0), 1, window.RM.constructorRouter.zoom.getZoom()), p = d => {
                    let c = {
                        t: Number.POSITIVE_INFINITY,
                        l: Number.POSITIVE_INFINITY,
                        b: Number.NEGATIVE_INFINITY,
                        r: Number.NEGATIVE_INFINITY
                    };
                    return d.forEach(m => {
                        c.t = Math.min(c.t, m.y), c.l = Math.min(c.l, m.x), c.b = Math.max(c.b, m.y + m.h), c.r = Math.max(c.r, m.x + m.w)
                    }), {
                        x: c.l,
                        y: c.t,
                        w: c.r - c.l,
                        h: c.b - c.t
                    }
                };
                De.viewport_listall.forEach(d => {
                    let c = i.blocks.filter(m => {
                        let u = d === "viewport_default" ? m : m[d] ? ? m;
                        return !u.hidden && !u.fixed_position
                    });
                    if (c.length) {
                        let m = p(c.map(b => {
                                let x = d === "viewport_default" ? b : b[d] ? ? b;
                                return {
                                    h: x.h ? ? b.h,
                                    w: x.w ? ? b.w,
                                    x: x.x ? ? b.x,
                                    y: x.y ? ? b.y
                                }
                            })),
                            u = m.x,
                            g = m.y;
                        d === `viewport_${n}` && (u -= s - m.w / 2, g -= l - m.h / 2), i.blocks.forEach(b => {
                            d !== "viewport_default" && !b[d] && (b[d] = {
                                x: b.x,
                                y: b.y,
                                pack_id: b.pack_id
                            });
                            let x = d === "viewport_default" ? b : b[d];
                            x.fixed_position || (x.y = Math.floor((x.y ? ? b.y) - g), x.x = Math.floor((x.x ? ? b.x) - u))
                        })
                    }
                }), this.pasteBlocks(i, {
                    disablePositionY: !0,
                    ...r
                })
            });
            z(this, "pasteBlocks", (t, r = {}) => {
                let i = t.object === "rm_figma_pastedata";
                if (!Qe.isPermissionAllowed("BaseWidgetCanAdd")) return;
                let n = [...t.blocks],
                    s = n && n.length && n.length > 1,
                    l = 10,
                    p = n[0].pid === this.page.get("_id"),
                    d = t.mag_num_id !== this.mag.get("num_id");
                if (this.trigger("deselect"), !n || !n.length) {
                    console.error("cannot paste empty array of blocks!");
                    return
                }
                let c = n.reduce((P, C) => (P.push(C.pack_id), P.push(C.viewport_phone_portrait ? .pack_id), P.push(C.viewport_tablet_portrait ? .pack_id), P), []).filter(Boolean),
                    u = V.default.unique(c).reduce((P, C) => (P[C] = Je.generateUUID(), P), {}),
                    g = {},
                    h = {},
                    b = {},
                    x = {
                        viewport_default: [],
                        viewport_phone_portrait: [],
                        viewport_tablet_portrait: []
                    };
                n = V.default.sortBy(n, function(P) {
                    return P.z
                }), n.forEach(P => {
                    P ? ._id || (P._id = On()), x.viewport_default.push(P._id)
                }), De.viewport_list.forEach(P => {
                    V.default.sortBy(t.blocks, k => k[P] ? .z ? ? k.z).forEach(k => {
                        x[P].push(k._id)
                    })
                }), d && (this.mag.mergeEditParams(t.mag_edit_params), t.mag_edit_params && pu({
                    newTextStyles: t.mag_edit_params.textStyles || [],
                    newLinkStyles: t.mag_edit_params.linkStyles || [],
                    newListStyles: t.mag_edit_params.listStyles || []
                }));
                let S = Zh(n),
                    v = V.default.bind(function(P) {
                        try {
                            let C = n[P];
                            C && C.type === "text" && C.version !== 3 && (C = Qy(C));
                            let k = C ? ._id,
                                T = nt(C);
                            if (!T) {
                                if (this.page.groupSaveWids(this.getExistingWidgets()), this.handleAnimationTriggerClone(S, b), this.handleRestoreViewportIndex(x), i) {
                                    let E = Object.values(b);
                                    this.blocks.filter(G => E.includes(G.id)).forEach(G => {
                                        G.$el.removeClass("invisible"), G.select()
                                    }), this.triggerSelectOnSelectedBlockDebounced()
                                }
                                r ? .onComplete ? .();
                                return
                            }
                            let I = this.getDefaultY(T);
                            delete T._id, delete T.id, delete T.__v, delete T.pid, r.disableDeleteGlobalAttributes || (delete T.is_global, delete T.is_above), T.pack_id && (T.pack_id = u[T.pack_id]), V.default.each(De.viewport_list, E => {
                                let $ = T[E];
                                if ($) {
                                    let G = $.pack_id;
                                    $.pack_id = u[G]
                                }
                            });
                            let B = T.hotspots_group_id;
                            B && (g[B] = g[B] || Je.generateUUID(), T.hotspots_group_id = g[B]), this.handleAnimationGroups(T, h), r.disablePositionY || (T._variationY !== void 0 && !T.fixed_position && (T.y = I + T._variationY, delete T._variationY), p && T.x !== void 0 && T.y !== void 0 && (T.x += l, T.y += l, V.default.each(De.viewport_list, E => {
                                let $ = T[E];
                                $ && ($.x += l, $.y += l)
                            })));
                            let L = nt(T._nestedWidgetsJSON);
                            delete T._nestedWidgetsJSON;
                            let D = function(E) {
                                L && (E._nestedWidgetsJSON = L, this.createNestedBlocks(this.findBlock(E.id), L, function() {
                                    delete E._nestedWidgetsJSON
                                })), b[k] = E.id, De.viewport_listall.forEach($ => {
                                    let G = x[$].indexOf(k);
                                    x[$][G] = E.id
                                }), v(P + 1)
                            }.bind(this);
                            this.addWidget(nt(T), {
                                copy: !0,
                                group: !0,
                                isMultiple: s,
                                success: D,
                                error: D,
                                ...r
                            }), r ? .onBlockAdded ? .()
                        } catch (C) {
                            throw r ? .onError ? .(), C
                        }
                    }, this);
                if (v(0), t.packs ? .length) {
                    let P = t.packs.map(C => ({ ...C,
                        pack_id: u[C.pack_id],
                        _id: void 0,
                        mid: this.mag.id
                    }));
                    P.filter(C => C.name || C.atomic).map(C => {
                        new ea(C).save()
                    }), this.mag.set("packs", this.mag.get("packs").concat(P))
                }
            });
            z(this, "handleRestoreViewportIndex", t => {
                let i = t.viewport_default.map(b => this.findBlock(b)).filter(Boolean).map(b => b.model),
                    n = this.page,
                    s = n.getViewportParam("tablet_portrait", "enabled"),
                    l = n.getViewportParam("phone_portrait", "enabled"),
                    p = [],
                    d = [];
                s && p.push("tablet_portrait"), l && p.push("phone_portrait");
                let c = t.viewport_default || [],
                    m = t.viewport_tablet_portrait || [],
                    u = t.viewport_phone_portrait || [];
                Bs(c, m) && d.push("tablet_portrait"), Bs(c, u) && d.push("phone_portrait"), [{
                    viewport: "phone_portrait",
                    key: "viewport_phone_portrait"
                }, {
                    viewport: "tablet_portrait",
                    key: "viewport_tablet_portrait"
                }].forEach(({
                    viewport: b,
                    key: x
                }) => {
                    let S = t[x],
                        v = p.includes(b);
                    d.includes(b) && !v || (v || window.RM.constructorRouter.indexController.addWidgetsToDisabledViewport(n.id, i, b), S.forEach((P, C) => {
                        let k = i.find(I => I.get("_id") === P),
                            T = k.toJSON(),
                            R = (T[x] ? .z ? ? T.z) + C;
                        window.RM.constructorRouter.indexController.moveWidget(n, [k], R, b)
                    }))
                });
                let h = window.RM.constructorRouter.indexController.getFullOrder()[n.id];
                h && n.save({
                    order: nt(h)
                }, {
                    silent: !0,
                    skipHistory: !0,
                    patch: !0
                })
            });
            z(this, "cloneBlocks", (t, r) => {
                if (!Qe.isPermissionAllowed("BaseWidgetCanAdd")) return;
                if (delete this.movingBlocks, delete this.movingDelta, !t || !t.length) return console.error("cannot clone empty array of blocks");
                V.default.each(t, d => {
                    let c = window.RM.constructorRouter.indexController.getZIndex(d.model.id, this.page.id, this.viewport);
                    d._z = c || d.model.get("z")
                }), t = V.default.sortBy(t, d => d._z), this.blocksToClone = this.blocksToClone || {};
                let i = {},
                    n = {},
                    s = {};
                r = r || {};
                let l = Zh(t),
                    p = V.default.bind(function(d) {
                        let c = t[d],
                            m = c && c.id;
                        if (!c) {
                            this.page.groupSaveWids(this.getExistingWidgets(), V.default.extend(V.default.clone(r), {
                                clone: !0
                            })), this.handleAnimationTriggerClone(l, s);
                            return
                        }
                        let u = c.model.cloneJSON();
                        u = V.default.omit(u, V.default.union(["_id", "id", "__v"])), c._z && (u.z = c._z, delete c._z), u.is_global && (u.is_global = !1), u.is_above && (u.is_above = !1), V.default.each(De.viewport_list, function(b) {
                            if (!u[b]) return;
                            let x = u[b].pack_id;
                            x && (i[x] = i[x] || Je.generateUUID(), u[b].pack_id = i[x])
                        });
                        let g = u.pack_id;
                        if (g && (i[g] = i[g] || Je.generateUUID(), u.pack_id = i[g]), this.handleAnimationGroups(u, n), c.$cloneEl || r ? .offset) {
                            let b = c.getBoxData({
                                    includeRotationData: !0
                                }),
                                x, S, v;
                            c.$cloneEl && (x = c.$el.offset(), S = c.$cloneEl.offset()), V.default.each(De.viewport_listall, function(P) {
                                if (P === "viewport_default") v = u;
                                else {
                                    if (!u[P]) return;
                                    v = u[P]
                                }
                                let C, k;
                                if (c.$cloneEl ? (C = (S.left - x.left) * (v.fixed_position && v.fixed_position.indexOf("e") > -1 ? -1 : 1), k = (S.top - x.top) * (v.fixed_position && v.fixed_position.indexOf("s") > -1 ? -1 : 1)) : (C = r ? .offset.x ? ? 0, k = r ? .offset.y ? ? 0), "x" in v || (v.x = b.x), "y" in v || (v.y = b.y), v.x += C, v.y += k, (v.type === "hotspot" && v.flags ? .tipFreePosition || !1) && (v.tip_x += C, v.tip_y += k), v.sticked) {
                                    let I = v.sticked === "left" || v.sticked === "right" ? S.left - x.left : S.top - x.top;
                                    (v.sticked === "right" || v.sticked === "bottom") && (I *= -1), v.sticked_margin = (v.sticked_margin || 0) + I
                                }
                            })
                        }
                        let h = function(b) {
                            c.getNestedWidgetsJSON && (b._nestedWidgetsJSON = c.getNestedWidgetsJSON(!0)), s[m] = b.id, p(d + 1)
                        }.bind(this);
                        this.addWidget(u, V.default.extend(V.default.clone(r), {
                            silent: !0,
                            clone: !0,
                            group: !0,
                            cloningWidgetZIndex: u.z || c.attributes.z,
                            success: V.default.bind(function(b) {
                                this.blocksToClone[b.id] = c, h(b)
                            }, this),
                            error(b) {
                                h(b), c.$cloneEl && c.$cloneEl.remove(), delete c.$cloneEl
                            }
                        }))
                    }, this);
                this.trigger("deselect"), p(0)
            });
            z(this, "handleAnimationGroups", (t, r) => {
                De.viewport_listall.forEach(i => {
                    let n = i === "viewport_default" ? t.animation : t[i] && t[i].animation;
                    if (n) {
                        let s = Za.normalizeAnimations(n).map(l => l.UUID ? (r[l.UUID] = r[l.UUID] || Je.generateUUID(), { ...l,
                            UUID: r[l.UUID]
                        }) : l);
                        i === "viewport_default" ? t.animation = s : t[i].animation = s
                    }
                })
            });
            z(this, "handleAnimationTriggerClone", (t, r, i) => {
                if (t.length) {
                    let n = Ey(t, r, i || this.blocks);
                    V.default.each(n, function(l) {
                        l.selected && l.model.trigger("animation:trigger:add")
                    });
                    let s = n.map(l => l.model);
                    Promise.all(s.map(l => this.syncManager.whenModelReady(l))).then(() => this.save_group(s, {
                        skipHistory: !0
                    }))
                }
            });
            z(this, "onReturnFromPreview", () => {
                this.$("svg").hide(), V.default.delay(V.default.bind(function() {
                    this.$("svg").show()
                }, this))
            });
            z(this, "clearBottomBlocksToMove", () => {
                this.bottomBlocksToMove && (delete this.bottomBlocksToMove.list, delete this.bottomBlocksToMove.tosave, delete this.bottomBlocksToMove.deltaYcorrection, delete this.bottomBlocksToMove.prevDeltaY)
            });
            z(this, "redrawBottomShiftLine", t => {
                let r = () => {
                        this.$bottomShiftLine && this.$bottomShiftLine.remove(), delete this.$bottomShiftLine
                    },
                    i = p => {
                        this.$bottomShiftLine || (this.$bottomShiftLine = (0, gt.default)('<div class="bottom-shift-line"></div>').appendTo(this.$el.children().first())), this.$bottomShiftLine.css("top", p)
                    };
                t = t || {};
                let n = this.bottomBlocksToMove;
                if (!n || !n.active || t.hide) {
                    r();
                    return
                }
                t.tp === "move-unselected-start" && (this._unselectedBlocksForBottomLine = t.blocks), t.tp === "move-unselected-end" && delete this._unselectedBlocksForBottomLine;
                let s = this._unselectedBlocksForBottomLine || V.default.filter(this.getSelectedBlocks(), function(p) {
                    return !p.isLocked()
                });
                if (s.length === 1 && (s[0].frame.rotationState || s[0].animationMode)) {
                    r();
                    return
                }
                let l = V.default.reduce(s, function(p, d) {
                    return !d.model.get("fixed_position") && !d.outofbox ? n.fPressed ? Math.min(p || 99999999, d.latestPosSizeAngle.bb_top) : Math.max(p || -99999999, d.latestPosSizeAngle.bb_top + d.latestPosSizeAngle.bb_height - 1) : p
                }, void 0);
                l === void 0 ? r() : i(l)
            });
            z(this, "checkBundleDragAbility", () => {
                if (this.spacesController) return;
                let t = this.blocks.filter(u => !u.model.get("pack_id")).concat(this.getAllPacks()),
                    r = this.getAllPacks().filter(u => u.isSelected()),
                    i = this.getSelectedBlocks().concat(r),
                    n, s, l = 999999,
                    p = 0,
                    d = V.default.map(i, function(u) {
                        return {
                            b: u,
                            bb: u.getBoxData({
                                includeBoundingBox: !0
                            })
                        }
                    });
                V.default.each(d, function(u) {
                    l > u.bb.bb_y && (l = u.bb.bb_y, n = u), p < u.bb.bb_y + u.bb.bb_h && (p = u.bb.bb_y + u.bb.bb_h, s = u)
                });
                let c = !1,
                    m = !1;
                V.default.each(t, function(u) {
                    if (u.model.get("fixed_position") || u.model.get("sticked") || u.outofbox || V.default.contains(i, u)) return;
                    let g = u.getBoxData({
                        includeBoundingBox: !0
                    });
                    g.bb_y > p && (m = !0), g.bb_y > l && (c = !0)
                }), V.default.each(d, function(u) {
                    u.b.$el.removeClass("bundle-allow-top"), u.b.$el.removeClass("bundle-allow-bottom"), c && n && Math.abs(n.bb.bb_y - u.bb.bb_y) < .1 && u.b.$el.addClass("bundle-allow-top"), m && s && Math.abs(s.bb.bb_y + s.bb.bb_h - (u.bb.bb_y + u.bb.bb_h)) < .1 && u.b.$el.addClass("bundle-allow-bottom")
                })
            });
            z(this, "calcBottomBlocksToMove", (t, r) => {
                let i = [],
                    n = [],
                    s = V.default.reduce(t, function(p, d) {
                        return !d.model.get("fixed_position") && !d.outofbox ? r.fPressed ? Math.min(p || 99999999, d.latestPosSizeAngle.bb_top) : Math.max(p || -99999999, d.latestPosSizeAngle.bb_top + d.latestPosSizeAngle.bb_height) : p
                    }, void 0),
                    l = Wr.getViewportSetting("min_height", this.viewport);
                if (s !== void 0) {
                    i = V.default.filter(this.blocks, function(c) {
                        return c.model.get("fixed_position") || c.model.get("sticked") || c.model.get("is_locked") || c.outofbox || V.default.contains(t, c) ? !1 : s > c.latestPosSizeAngle.bb_top ? (c.model.get("hidden") || (l = Math.max(c.latestPosSizeAngle.bb_top + c.latestPosSizeAngle.bb_height, l)), !1) : (n.push(c.getBoxData({
                            includeBoundingBox: !0
                        })), !0)
                    }), i = i.filter(c => {
                        let m = c.model.get("pack_id"),
                            u = this.packs[m];
                        return !u || u.blocks.length === i.filter(g => g.model.get("pack_id") === m).length
                    }), n = i.map(c => c.getBoxData({
                        includeBoundingBox: !0
                    })), l = Math.round(l);
                    let p = V.default.uniq(V.default.compact(V.default.map(i, function(c) {
                            return c.model.get("pack_id")
                        }))),
                        d = [];
                    V.default.each(p, V.default.bind(function(c) {
                        d = V.default.union(d, this.getPackBlocks(c))
                    }, this)), d = V.default.difference(d, i), d = V.default.filter(d, function(c) {
                        return c.model.get("fixed_position") || c.outofbox || c.model.get("sticked") || c.model.get("is_locked") ? !1 : (n.push(c.getBoxData({
                            includeBoundingBox: !0
                        })), !0)
                    }), i = V.default.union(i, d)
                }
                return {
                    list: i,
                    minPageHeight: l,
                    initPageHeight: this.page.getViewportParam(this.viewport, "height"),
                    initial: n
                }
            });
            z(this, "onSpecialKey", t => {
                this.checkBundleDragMode(t), !this.widgetResizingOrRotating && Qe.isPermissionAllowed("BaseWidgetCanAdd") && (t.type === "keydown" && t.altKey && (0, gt.default)("html").addClass("alt-key-pressed"), t.type === "keyup" && t.keyCode === gt.default.keycodes.alt && (0, gt.default)("html").removeClass("alt-key-pressed"))
            });
            z(this, "findBlock", t => V.default.find(this.blocks, function(r) {
                return r.model.id === t
            }));
            z(this, "getPageNum", () => this.mag.getPageNum(this.page.id));
            z(this, "getPageId", () => this.page.id);
            z(this, "findPage", t => {
                let r = this.getPageNum() ? ? 1;
                return t === "next" && (r += 1), t === "prev" && (r -= 1), this.mag.getPageId(r.toString(), {
                    onlyActive: !0
                })
            });
            z(this, "showLoader", t => {
                this.loader.css(t).fadeIn(100)
            });
            z(this, "insertLoaderToElem", (t, r) => this.loader.clone().css(V.default.extend({
                position: "absolute"
            }, r)).prependTo(t).fadeIn(100));
            z(this, "hideLoader", () => {
                this.loader.fadeOut(100), this.trigger("hideLoader")
            });
            z(this, "getTemplateJSON", (t = {}) => {
                let r = [],
                    i = [],
                    n = V.default.chain(this.page.toJSON()).omit("__v", "num_id", "hidden", "custom_shares", "seo").value();
                return t.withGlobalWidgets && (n.wids = n.wids ? V.default.uniq(n.wids.concat(this.mag.globalWidgets.map(l => l.get("_id")))) : []), t.withGlobalWidgets ? V.default.each(n.wids || [], l => {
                    let p = (0, V.default)(this.blocks).find(function(c) {
                        return c.id === l && !c.model.isGlobal()
                    });
                    p && r.push(s(p));
                    let d = (0, V.default)(this.blocks).find(function(c) {
                        return c.id === l && c.model.isGlobal()
                    });
                    d && !i.map(c => c.id).includes(d.id) && i.push(s(d))
                }) : V.default.each(n.wids || [], l => {
                    let p = (0, V.default)(this.blocks).find(function(d) {
                        return d.id === l && !d.model.isGlobal()
                    });
                    p && r.push(s(p))
                }), n.wids = r, n.globalWids = i, n.mag_num_id = this.mag.get("num_id"), n.has_globals = !this.mag.globalWidgets.isEmpty(), n.options = t, n;

                function s(l) {
                    let p = l.model,
                        d = V.default.chain(p.toJSON()).omit("__v", "pid").value();
                    return l.getNestedWidgetsJSON && (d.wids = l.getNestedWidgetsJSON(!0)), d
                }
            });
            z(this, "toggleBorder", ({
                guidesOn: t = !1,
                columnCount: r = 0,
                margin: i = {},
                willResize: n = !1
            }) => {
                this.$border.toggleClass("ghost", !t);
                let s = Ve("constructor.borderAlwaysVisible") ? !window.RM.constructorRouter.zoom.isScaledZoomEnabled() : !1;
                t ? this.$border.css({
                    opacity: "",
                    "border-top": r && !i.top ? "none" : "",
                    "border-right": r && !i.right ? "none" : "",
                    "border-bottom": r && !i.bottom ? "none" : "",
                    "border-left": r && !i.left ? "none" : ""
                }) : this.viewport !== "default" || n || s ? this.$border.css({
                    opacity: 1,
                    "border-top": "",
                    "border-right": "",
                    "border-bottom": "",
                    "border-left": ""
                }) : this.$border.css({
                    opacity: 0
                })
            });
            z(this, "toggleBlocksEditParams", () => {
                if (!this.rendered) return;
                this.triggerNextHelpTourStep();
                let t = !!this.mag.edit_params.get("blocks");
                t && re(fe.BlocksMode, {
                    settingsType: "on"
                }), this.toggleBundleBlocks(t)
            });
            z(this, "toggleBundleBlocks", t => {
                t = t === void 0 ? !this.spacesController : t, !t && this.spacesController ? (this.spacesController ? .destroy(), this.spacesController = void 0) : t && !this.spacesController && (this.spacesController = new U1(this))
            });
            z(this, "onGuidesChange", () => {
                this.triggerNextHelpTourStep()
            });
            z(this, "triggerNextHelpTourStep", () => {
                let t = Zt();
                t.started && t.step ? .name === "DisableBlocksAndGrid" && !(this.mag.edit_params.get("blocks") || this.mag.edit_params.get("guides")) && Oe("DisableBlocksAndGrid")
            });
            z(this, "updateLockState", () => {
                let t = this.page.get("_id");
                this.locked = !!window.RM.constructorRouter.isPageLocked(t), this.$origin.toggleClass("locked", this.locked), this.controls ? .$el.toggle(!this.locked)
            });
            z(this, "scrollToTop", () => {
                this.$container.scrollTop(0)
            });
            z(this, "scrollToBottom", () => {
                let t = this.page.getViewportParam(this.viewport, "height");
                this.$container.scrollTop(t)
            });
            z(this, "getViewports", () => V.default.map(De.viewports, function(r) {
                let i = r.name === "default" || this.page.get("viewport_" + r.name),
                    n = r.name !== "tablet_portrait" ? !1 : !(this.page.getViewportParam("tablet_portrait", "enabled") || this.page.getViewportParam("tablet_portrait", "isHidden") === !1);
                return {
                    name: r.name,
                    min_height: r.min_height,
                    max_height: r.max_height,
                    isCurrent: r.name === this.viewport,
                    enabled: !!(r.name === "default" || i && this.page.getViewportParam(r.name, "enabled")),
                    height: i ? this.page.getViewportParam(r.name, "height") : r.min_height,
                    noDisable: r.name === "default",
                    isHidden: n
                }
            }.bind(this)));
            z(this, "restoreDesktopComposition", (t = [], {
                resetAllKeys: r = !1,
                preserveFixedPosition: i = !1
            } = {}) => {
                let n = this.viewport,
                    s = 1024,
                    l = this.mag.getViewportWidth(n),
                    p = (s - l) / 2,
                    d = ["x", "y", "w", "h", "z", "angle", "pack_id", "sticked", "scale"];
                i || d.push("fixed_position"), t.forEach(c => {
                    let m = c.model,
                        u = ey(m.get("type"), m.get("version"), Je.canUseMinimalViewport()),
                        g = Object.keys(c.model.getOverrides(n)),
                        h = r ? Object.fromEntries(g.map(b => u.includes(b) ? [b, c.model.viewport_default[b]] : [b, void 0])) : {};
                    if (h = V.default.reduce(c.model.viewport_default, function(b, x, S) {
                            return d.indexOf(S) >= 0 && (b[S] = x), b
                        }, h), c.model.viewport_default.is_full_width) {
                        h.w = c.model.get("full_width_initial_w"), h.x = c.model.get("full_width_initial_x"), h.is_full_width = !1;
                        let b = c.model.get("originalH"),
                            x = c.model.get("originalW");
                        b && x && (h.h = Math.round(h.w / x * b))
                    }
                    if (c.model.viewport_default.is_full_height) {
                        h.h = c.model.get("full_height_initial_h"), h.y = c.model.get("full_height_initial_y"), h.is_full_height = !1;
                        let b = c.model.get("originalH"),
                            x = c.model.get("originalW");
                        b && x && (h.w = Math.round(h.h / b * x))
                    }
                    if (c.model.viewport_default.fixed_position || (h.x -= p), c.model.get("type") === "text" && c.model.get("version") === 3 && (h.blocksMeta = c.model.viewport_default.blocksMeta, h.styles = c.model.viewport_default.styles, h.entityMap = c.model.viewport_default.entityMap, h.bgColor = c.model.viewport_default.bgColor, c.model.viewport_default.columns && (h.columns = c.model.viewport_default.columns)), c.model.get("type") === "slideshow" && (h.captions_h = c.model.viewport_default.captions_h, h.images_h = c.model.viewport_default.images_h), c.model.get("type") === "picture" && (h.border_size = c.model.viewport_default.border_size), (c.model.get("type") === "shape" || c.model.get("type") === "hotspot") && (h.borders = c.model.viewport_default.borders), c.model.get("type") === "button" && (h["font-size"] = c.model.viewport_default["font-size"], h["letter-spacing"] = c.model.viewport_default["letter-spacing"], h.icon_h = c.model.viewport_default.icon_h, h.icon_w = c.model.viewport_default.icon_w, h["border-width"] = c.model.viewport_default["border-width"]), c.model.get("type") === "form") {
                        let b = `style-${c.model.viewport_default.style}`;
                        h.style = c.model.viewport_default.style, h.layout = c.model.viewport_default.layout, h[`${b}-fields`] = { ...c.model.viewport_default[`${b}-fields`]
                        }, h[`${b}-button-default`] = { ...c.model.viewport_default[`${b}-button-default`]
                        }, h[`${b}-button-hover`] = { ...c.model.viewport_default[`${b}-button-hover`]
                        }
                    }
                    if (c.model.get("type") === "addtocart" && (h.attributes_margin = c.model.viewport_default.attributes_margin, h.select_btn_margin = c.model.viewport_default.select_btn_margin, h["attrs-icon-h"] = c.model.viewport_default["attrs-icon-h"], h["attrs-icon-w"] = c.model.viewport_default["attrs-icon-w"], h["attrs-border-width"] = c.model.viewport_default["attrs-border-width"], h["border-width"] = c.model.viewport_default["border-width"], h["hover-border-width"] = c.model.viewport_default["hover-border-width"], h["attrs-font-size"] = c.model.viewport_default["attrs-font-size"], h["font-size"] = c.model.viewport_default["font-size"]), c.model.set(h), c.model.viewport_default.fixed_position) {
                        let {
                            x: b,
                            y: x
                        } = yu.getViewportDefaults(c.model, n);
                        c.model.set({
                            x: b,
                            y: x
                        })
                    }
                    c.model.get("type") === "text" && c.model.get("version") === 3 && c.onRestoreLayout()
                }), window.RM.constructorRouter.indexController.restoreViewportToDefault(this.page, this.viewport)
            });
            z(this, "eliminateBlockIntersections", (t = [], {
                excludeStickyBottom: r,
                space: i
            } = {
                space: W2
            }) => {
                let n = pt.getBoundingBoxOfBlocks(t),
                    s = {
                        up: [],
                        down: []
                    };
                this.blocks.forEach(d => {
                    if (d.model.get("type") === "background" || d.model.get("is_global") || d.model.get("hidden") || d.model.get("fixed_position") || !r || d.model.get("sticked") === "bottom" || t.find(m => m.model.get("_id") === d.model.get("_id"))) return;
                    let c = pt.calcBoundingBoxForBlock(d, !0, !1);
                    c.top < n.top && c.top + c.height > n.top && s.up.push(d), c.top >= n.top && s.down.push(d)
                });
                let l = n.top;
                if (s.up.length && s.up.forEach(d => {
                        let c = pt.calcBoundingBoxForBlock(d, !0);
                        c.top + c.height > l && (l = c.top + c.height + i)
                    }), l) {
                    let d = l - n.top;
                    t.forEach(c => c.model.set({
                        y: c.model.get("y") + d
                    })), n = pt.getBoundingBoxOfBlocks(t)
                }
                let p = 0;
                return s.down.length && (s.down.forEach(d => {
                    let c = pt.calcBoundingBoxForBlock(d, !0);
                    if (c.top <= n.bottom) {
                        let m = n.bottom + i - c.top;
                        m > p && (p = m)
                    }
                }), p && s.down.forEach(d => d.model.set({
                    y: d.model.get("y") + p
                }))), !!p
            });
            z(this, "collapseEmptySpace", (t = [], r = 20) => {
                let i = pt.getBoundingBoxOfBlocks(t),
                    n = V.default.chain(this.blocks).filter(s => s.model.get("type") === "background" || s.model.get("is_global") || s.model.get("hidden") || s.model.get("fixed_position") || s.model.get("sticked") || t.find(p => p.model.get("_id") === s.model.get("_id")) ? !1 : pt.calcBoundingBoxForBlock(s, !0).top > i.bottom).sortBy(s => s.getBoxData().y).value();
                if (n.length) {
                    let s = n[0],
                        l = pt.calcBoundingBoxForBlock(s, !0);
                    if (l.top - i.bottom > r) {
                        let p = l.top - i.bottom - r;
                        n.forEach(d => d.model.set({
                            y: d.model.get("y") - p
                        }))
                    }
                }
                return !!n.length
            });
            z(this, "shiftStickyBottom", (t = [], {
                space: r
            } = {
                space: W2
            }) => {
                let i = this.blocks.filter(c => c.model.get("sticked") === "bottom"),
                    n = pt.getBoundingBoxOfBlocks(t),
                    s = pt.getBoundingBoxOfBlocks(i);
                if (ct.intersection(n, s).height === 0) return;
                let p = this.page.getViewportParam(this.viewport, "height"),
                    d = n.top + n.height - s.top + r;
                d <= 0 || this.page.setViewportParam(this.viewport, "height", Math.ceil(p + d))
            });
            z(this, "singleColumnLayout", (t = [], {
                topMargin: r = 20,
                rightMargin: i = 20,
                bottomMargin: n,
                leftMargin: s = 20,
                verticalGap: l = 20,
                includeHidden: p = !1,
                includeGlobal: d = !1,
                includeFixed: c = !1,
                includeAboveAll: m = !1,
                preserveGroups: u = !0,
                includeAtomic: g = !1
            } = {}) => {
                let h = !!this.spacesController;
                this.toggleBundleBlocks(!1);
                let b = this.viewport,
                    x = Wr.getViewportSetting("width", b),
                    S = this.mag.getViewportWidth(b),
                    v = S - s - i,
                    P = (x - S) / 2 + s,
                    C = this,
                    k = V.default.isEqual(t.map(U => U.id).sort(), this.blocks.map(U => U.id).sort()),
                    T = this.mag.pages.filter(U => (U.get("viewport_" + b) || {}).enabled && U !== C.page).length > 0,
                    R = d || !T,
                    I = [],
                    B = this.filterAutolayoutBlocks(t, {
                        includeHidden: p,
                        includeGlobal: d,
                        includeFixed: c,
                        includeAboveAll: m,
                        includeAtomic: g
                    }),
                    L = pt.getBoundingBoxOfBlocks(B),
                    D = k ? r : L.top;
                this.restoreDesktopComposition(B, {
                    preserveFixedPosition: !0
                });
                let E = this.collectBlocks(B, {
                    fitText: !0,
                    preserveGroups: u
                });
                if (E.length === 0) {
                    h && this.toggleBundleBlocks(!0);
                    return
                }
                if (!R) {
                    let U = E.filter(Z => Z.model ? .get("is_global"));
                    E = V.default.difference(E, U), I = V.default.reduce(U, (Z, xe) => {
                        if (!Z.length) Z.push({
                            from: xe.box.bb_y,
                            to: xe.box.bb_y + xe.box.bb_h
                        });
                        else {
                            let ye = V.default.last(Z);
                            if (!ye) return Z;
                            ye.to > xe.box.bb_y ? Z.push({
                                from: xe.box.bb_y,
                                to: xe.box.bb_y + xe.box.bb_h
                            }) : ye.to = xe.box.bb_y + xe.box.bb_h
                        }
                        return Z
                    }, [])
                }
                let $ = function(U, Z) {
                        let xe = Z * Math.sqrt(U.height * U.height + U.width * U.width) / U.bb_width,
                            ye = U.height / U.width,
                            ve = xe / Math.sqrt(ye * ye + 1),
                            ee = Math.floor(ve * ye);
                        return V.default.extend(U, pt.calcBoundingBox(V.default.extend(U, {
                            width: ve,
                            height: ee
                        })))
                    },
                    G = function(U, Z, xe) {
                        let ye, ve;
                        return V.default.each(U, ee => {
                            ee.from < Z && ee.to > Z && (ye = ee), ee.from < Z + xe && ee.to > Z + xe && (ve = ee), ee.from > Z && ee.to < Z + xe && (ve = ee)
                        }), !ye && !ve ? Z : ve ? G(U, ve.to, xe) : ye ? G(U, ye.to, xe) : 0
                    },
                    de = U => {
                        U.get("fixed_position") && U.set("fixed_position", ""), U.get("is_full_width") && U.set("is_full_width", !1), U.get("is_full_height") && U.set("is_full_height", !1)
                    };
                V.default.each(E, (U, Z) => {
                    let xe = !!U.pack_id,
                        ye = U.model;
                    if (xe) {
                        let _e = U.w;
                        _e.forEach(O => de(O.block.model));
                        let Ce = {
                                width: v,
                                left: P,
                                top: D
                            },
                            We = this.scaleBlocksGroup(_e.map(O => O.block), Ce, {
                                widgetPackId: U.pack_id,
                                downsizeOnly: !0
                            }),
                            Ke = 0;
                        We.top !== D && (Ke = D - We.top, We.top = D), _e.forEach(O => {
                            let j = { ...O.block.getSaveBoxData({
                                    resizeContent: !0
                                })
                            };
                            j.y += Ke, O.model.set(j)
                        }), D += We.height, U.groupBox = We, D = Math.ceil(G(I, D, We.height)) + l;
                        return
                    }
                    let ve = U.block,
                        ee = U.box,
                        oe = {
                            width: ee.w,
                            height: ee.h
                        },
                        H = {
                            height: ee.h,
                            width: ee.w,
                            top: ee.y,
                            left: ee.x,
                            bb_width: ee.bb_w,
                            bb_height: ee.bb_h,
                            bb_top: ee.bb_y,
                            bb_left: ee.bb_x,
                            angle: ye.get("angle") || 0,
                            flip_v: !!ye.get("flip_v"),
                            flip_h: !!ye.get("flip_h"),
                            sinAngle: Math.sin(-(ye.get("angle") || 0) * Math.PI / 180),
                            cosAngle: Math.cos(-(ye.get("angle") || 0) * Math.PI / 180)
                        };
                    H.bb_width > v && (H = ve.frame.applyConstraints($(H, v))), de(ye);
                    let se = Math.round(H.width),
                        he = Math.round(H.height),
                        le = H.angle ? P - (H.bb_left - H.left) : P;
                    if (ye.set({
                            x: le,
                            w: se,
                            h: he
                        }), ve instanceof zo.text) {
                        ve.scaleContent ? .({
                            width: se,
                            height: he
                        }, oe, {
                            resizeText: !1,
                            resizePaddings: !0
                        });
                        let _e = ve.getRealContentHeight ? .(!0, se);
                        ye.set("h", _e)
                    }
                    let ue = Number(ye.get("ratio")),
                        ke = Number(ye.get("scale"));
                    if (ke && ue) {
                        let _e = ue < 1 ? ee.h / he : ee.w / se,
                            Ce = ke / _e;
                        if (ke !== Ce) ye.set({
                            scale: Ce
                        });
                        else {
                            let We = ye.viewport_default && Number(ye.viewport_default.scale),
                                Ke = ye.viewport_default && Number(ye.viewport_default.w),
                                O = ye.viewport_default && Number(ye.viewport_default.h);
                            if (We === Ce && (Ke !== se || O !== he)) {
                                let j = ue < 1 ? O / he : Ke / se,
                                    K = We / j;
                                ke !== K && ye.set({
                                    scale: K
                                })
                            }
                        }
                    }
                    ve instanceof zo.picture && ve.onSingleColumnLayout({
                        width: ye.get("w"),
                        height: ye.get("h")
                    }), ve instanceof zo.text && (ve.fitContentToBox(), H = V.default.extend(H, {
                        left: ye.get("x"),
                        top: ye.get("y"),
                        width: ye.get("w"),
                        height: ye.get("h"),
                        angle: ye.get("angle") || 0,
                        flip_v: !!ye.get("flip_v"),
                        flip_h: !!ye.get("flip_h"),
                        sinAngle: Math.sin(-(ye.get("angle") || 0) * Math.PI / 180),
                        cosAngle: Math.cos(-(ye.get("angle") || 0) * Math.PI / 180)
                    }), H = V.default.extend(H, pt.calcBoundingBox(H))), D = Math.ceil(G(I, D, H.bb_height)), H.angle ? ye.set({
                        y: D - (H.bb_top - H.top)
                    }) : ye.set({
                        y: D
                    });
                    let ie = ve.getSaveBoxData();
                    ye.set(ie), D += H.bb_height + (Z < E.length - 1 ? l : 0)
                }), this.page.set({
                    used_autolayout: !0
                });
                let Q = !1;
                if (!k) {
                    let U = [];
                    E.forEach(Z => {
                        if (Z.pack_id) {
                            let xe = Z.w.map(ye => ye.block);
                            U = U.concat(xe)
                        } else U.push(Z.block)
                    }), Q = this.eliminateBlockIntersections(U, {
                        excludeStickyBottom: !0,
                        space: l
                    }), this.shiftStickyBottom(U, {
                        space: l
                    }), Q || (Q = this.collapseEmptySpace(U, l))
                }
                this.redrawPacksFrames(), this.storeAutolayoutBlocks(E, {
                    updateHeight: k || Q,
                    considerStickedBottom: !k,
                    updateStickyBottomMargin: !0,
                    previousBoundingBox: L,
                    bottomMargin: n,
                    patch: !1
                }), h && this.toggleBundleBlocks(!0)
            });
            z(this, "restoreDesktopLayout", (t = [], {
                resetAllKeys: r = !1,
                includeHidden: i = !1,
                includeFixed: n = !1,
                includeGlobal: s = !1,
                includeAboveAll: l = !1,
                includeAtomic: p = !1
            } = {}) => {
                let c = V.default.isEqual(t.map(x => x.id).sort(), this.blocks.map(x => x.id).sort()),
                    m = this.filterAutolayoutBlocks(t, {
                        includeHidden: i,
                        includeGlobal: s,
                        includeFixed: n,
                        includeAboveAll: l,
                        includeAtomic: p
                    }),
                    u = pt.getBoundingBoxOfBlocks(m),
                    g = !!this.spacesController,
                    h = !1;
                if (this.toggleBundleBlocks(!1), this.restoreDesktopComposition(m, {
                        resetAllKeys: r
                    }), !c) {
                    let x = pt.getBoundingBoxOfBlocks(m),
                        {
                            top: S,
                            left: v
                        } = ct.absoluteToRelative(u, x),
                        P = ct.center(x, this.getWorkspaceBox()),
                        {
                            left: C
                        } = ct.absoluteToRelative(P, u);
                    m.forEach(k => {
                        k.model.set({
                            x: k.model.get("x") + v + C,
                            y: k.model.get("y") + S
                        })
                    })
                }
                c || (h = this.eliminateBlockIntersections(m, {
                    excludeStickyBottom: !0,
                    space: 20
                }), this.shiftStickyBottom(m, {
                    space: 20
                }), this.redrawPacksFrames(), h || (h = this.collapseEmptySpace(m, 20)));
                let b = m.map(x => ({
                    block: x,
                    model: x.model
                }));
                this.storeAutolayoutBlocks(b, {
                    updateHeight: c || h,
                    dontUseViewportMinimal: !0,
                    patch: !1
                }), g && this.toggleBundleBlocks(!0)
            });
            z(this, "desktopLayoutFitMobile", (t = [], {
                resetAllKeys: r = !1,
                includeHidden: i = !1,
                includeGlobal: n = !1,
                includeFixed: s = !1,
                includeAboveAll: l = !1,
                includeAtomic: p = !1
            } = {}) => {
                let m = this.viewport,
                    u = Wr.getViewportSetting("width", m),
                    g = this.mag.getViewportWidth(m),
                    h = g - 2 * 20,
                    b = (u - g) / 2 + 20,
                    x = V.default.isEqual(t.map(D => D.id).sort(), this.blocks.map(D => D.id).sort()),
                    S = this.filterAutolayoutBlocks(t, {
                        includeHidden: i,
                        includeGlobal: n,
                        includeFixed: s,
                        includeAboveAll: l,
                        includeAtomic: p
                    }),
                    v = this.getWorkspaceBox().top,
                    P = pt.getBoundingBoxOfBlocks(S),
                    C = Math.max(v > 0 ? -v : 0, x ? 20 : P.top),
                    k = {
                        considerStickedBottom: !0,
                        updateHeight: !1,
                        restoreFullHeight: !1
                    },
                    T = this.mag.getViewportWidth("default"),
                    R = !!this.spacesController;
                this.toggleBundleBlocks(!1), this.restoreDesktopComposition(S, {
                    resetAllKeys: r
                });
                let I = S.map(D => ({
                        block: D,
                        model: D.model
                    })),
                    B = I.map(D => D.block);
                if (x && B.length === 1) {
                    let D = pt.getBoundingBoxOfBlocks(B);
                    if (D.width > h) {
                        this.scaleBlocksGroup(B, {
                            width: h,
                            top: D.top,
                            left: b
                        });
                        let E = { ...B[0].getSaveBoxData({
                                resizeContent: !0
                            })
                        };
                        B[0].model.set(E)
                    } else B[0].model.set("x", 20);
                    this.storeAutolayoutBlocks(I, {
                        updateHeight: !1,
                        patch: !1
                    });
                    return
                }
                this.scaleBlocksGroup(B.filter(D => !D.model.get("fixed_position")), {
                    width: h,
                    top: C,
                    left: b
                }), B.filter(D => D.model.get("fixed_position")).forEach(D => {
                    let E = g / T,
                        $ = {
                            width: D.model.viewport_default.w * E,
                            top: D.model.viewport_default.y * E,
                            left: D.model.viewport_default.x * E
                        };
                    this.scaleBlocksGroup([D], $)
                }), I.forEach(D => {
                    let E = { ...D.block.getSaveBoxData({
                            resizeContent: !0
                        })
                    };
                    D.model.viewport_default ? .is_full_width && (E.w = g, E.x = 0, D.model.get("is_full_width") && (E.is_full_width = !1)), D.model.viewport_default ? .is_full_height && (k.restoreFullHeight = !0, D.model.get("is_full_height") && (E.is_full_height = !1));
                    let $ = D.model.viewport_default ? .sticked;
                    $ && ["top", "right", "left"].includes($) && (E.sticked = void 0), D.model.set(E)
                });
                let L = !1;
                x || (L = this.eliminateBlockIntersections(B, {
                    excludeStickyBottom: !0,
                    space: 20
                }), this.shiftStickyBottom(B, {
                    space: 20
                }), this.redrawPacksFrames(), L || (L = this.collapseEmptySpace(B, 20))), k.updateHeight = x || L, this.storeAutolayoutBlocks(I, { ...k,
                    patch: !1
                }), R && this.toggleBundleBlocks(!0)
            });
            z(this, "storeAutolayoutBlocks", (t, r = {
                updateHeight: !0,
                considerStickedBottom: !1,
                updateStickyBottomMargin: !1,
                patch: !0
            }) => {
                let i = this.blocks.filter(u => u.model.get("sticked") === "bottom"),
                    n = i.filter(u => {
                        let g = u.model;
                        return !r.previousBoundingBox || g.get("y") > r.previousBoundingBox.top + r.previousBoundingBox.height
                    }),
                    s = V.default.reduce(n, (u, g) => {
                        let h = g.model;
                        return Math.max(u, h.get("h") + h.get("sticked_margin"))
                    }, 0),
                    l = V.default.reduce(this.blocks, (u, g) => {
                        let h = g.model;
                        if (!h.get("fixed_position") && h.get("type") !== "background" && (!r.considerStickedBottom || !h.get("sticked"))) {
                            let b = g.getBoxData({
                                includeBoundingBox: !0
                            });
                            return Math.max(u, b.bb_y + b.bb_h)
                        } else return u
                    }, 0),
                    p = Wr.getViewportSetting("min_height", this.viewport),
                    d = Math.max(l + (r.bottomMargin ? ? 86) + (r.considerStickedBottom ? s : 0), p),
                    c = r.updateHeight ? d - this.page.getViewportParam(this.viewport, "height") : 0,
                    m = [];
                this.blocks.forEach(u => {
                    m.push(u.model), r.restoreFullHeight && u.model.viewport_default ? .is_full_height && (u.model.set("y", 0), u.model.set("h", d || this.page.get(`viewport_${this.viewport}`).height))
                }), r.updateStickyBottomMargin && i.filter(u => {
                    let g = u.model.get("sticked_margin");
                    u.model.set("sticked_margin", g + c)
                }), this.save_group(m, { ...V.default.pick(r, "dontUseViewportMinimal"),
                    byStoreAutolayoutBlocks: !0,
                    patch: r.patch ? ? !0
                }), t.forEach(u => {
                    let g = u.block;
                    g instanceof zo.picture && g.setScaledImage(null, {
                        skipHistory: !0,
                        isGroupResize: !0
                    }), g instanceof zo.text && g.refreshState && g.refreshState(g.model)
                }), (r.updateHeight && d || d > this.page.getViewportParam(this.viewport, "height")) && (this.page.setViewportParam(this.viewport, "height", Math.ceil(d)), this.page.setViewportParam(this.viewport, "type", "scroll"), this.page.saveHeight()), r.updateStickyBottomMargin && i.forEach(u => u.recalcStickedLine()), this.trigger("autoLayout")
            });
            z(this, "destroyAllBlocks", () => {
                this.blocks.forEach(t => {
                    t.destroy()
                })
            });
            z(this, "destroy", () => {
                this.el.removeEventListener("drop", this.onFileDrop), this.stopListening(this.page), this.stopListening(this.mag), this.stopListeningToGuides(), Me.off("zoom"), Me.off("global_appear:widget"), Me.off("global_disappear:widget"), this.off("widget:context:change", this.onWidgetsContextChange), this.mag.edit_params.off("change:blocks", this.toggleBlocksEditParams), this.mag.edit_params.off("change:guides", this.onGuidesChange), this.pagesize && this.pagesize.$destroy && this.pagesize.$destroy(), this.$el.off("mouseenter", ".block", this.onBlockMouseEnter), this.$el.off("mouseleave", ".block", this.onBlockMouseLeave), this.workspaceContainer.removeEventListener("mousemove", this.onMouseMove), this.workspaceContainer.removeEventListener("mouseleave", this.onMouseLeave), this.$window.off("resize", this.onResize), this.$container.off("click", this.onclick), this.commentsRoot.unmount(), this.unsubscribeCommentMode ? .(), this.destroyAllBlocks(), this.$el.remove()
            });
            this.$container = t.$container, this.mag = t.mag, this.setElement((0, gt.default)(t.template()).hide().appendTo(this.$container)), this.syncManager = t.syncManager, this.eCommerceManager = t.eCommerceManager, this.$container.on("click", this.onclick), this.$window = (0, gt.default)(window), this.$window.on("resize", this.onResize), this.$origin = this.$(".origin"), this.$scroller = t.$container, this.$frame = this.$(".selectframe").hide(), this.$border = this.$(".workspace-border"), this.page = this.mag.getPage(t.page_id), this.page.workspace = this, this.page.on("widget:create", this.createBlock), this.page.on("widget:remove", this.removeBlock), this.page.on("toggleWidgets", this.toggleWidgets);
            let r = t.viewport ? this.page.getViewportParam(t.viewport, "enabled") : !1,
                i = t.viewport && r ? t.viewport : "default";
            this.page.widgets.chain().reject(function(n) {
                return n.isGlobal()
            }).map(n => this.addBlock(n, {
                viewport: i
            })), this.onResize(), this.page.on("change", this.updateWorkspaceViewport), this.updateWorkspaceViewport(), this.page.on("change:viewport", this.onChangeViewport), this.listenTo(this.page, "widgets:remove", this.onWidgetsRemove), this.on("widget:context:change", this.onWidgetsContextChange), this.on("redraw", V.default.debounce((n = {}) => {
                window.RM.constructorRouter.trigger("redrawPage", n.is_global ? this.page.id : t.page_id)
            }, 500)), this.on("select", this.onSelect), this.on("deselect", this.onDeselect), this.saveGroupDebounced = V.default.debounce(this.save_group, 500), this.cloneBlocksDebounced = V.default.debounce(this.cloneBlocks, 500), this.restoreFocusForCopyPasteDebounced = V.default.debounce(this.restoreFocusForCopyPaste, 0), this.triggerSelectOnSelectedBlockDebounced = V.default.debounce(this.triggerSelectOnSelectedBlock, 50), this.viewportScrolls = {}, this.bindUploader(), this.loader = (0, gt.default)(".rm-loader").eq(0), this.locked = !1, this.on("specialKeydown specialKeyup", this.onSpecialKey), this.on("selectAll", this.selectAllBlocks), Me.on("global_appear:widget", this.onGlobalAppear), Me.on("global_disappear:widget", this.onGlobalDisappear), Me.on("zoom", (n, s) => {
                this.$border.toggleClass("fullscreen", s && this.page.get("height") * n >= window.innerHeight), Ve("constructor.borderAlwaysVisible") && this.updateBorder()
            }), this.listenTo(this.page, "change:height", (n, s) => {
                this.$border.toggleClass("fullscreen", window.RM.constructorRouter.zoom.isFullScreenOrMore() && s * window.RM.constructorRouter.zoom.getZoom() >= window.innerHeight)
            }), this.$el.on("mouseenter", ".block", this.onBlockMouseEnter), this.$el.on("mouseleave", ".block", this.onBlockMouseLeave), this.toggleBlocksEditParams(), this.mag.edit_params.on("change:blocks", this.toggleBlocksEditParams), this.mag.edit_params.on("change:guides", this.onGuidesChange), this.mag.on("change:desktopWidth", this.updateWorkspaceViewport), this.mag.on("change:phoneWidth", this.updateWorkspaceViewport), this.distance = new Ks(this), this.workspaceContainer = this.$el.get(0), this.unsubscribeCommentMode = hf(this.onChangeCommentMode.bind(this)), this.commentsRoot = N2(this.$el.get(0).querySelector("#comments"), {
                workspace: this,
                router: window.RM.constructorRouter
            })
        }
        get viewport() {
            return this.page.getCurrentViewport()
        }
        onChangeCommentMode(t) {
            this.visible && (t ? this._enableCommentMode() : this._disableCommentMode()), this.isActiveCommentMode = t
        }
        getClientSize() {
            return {
                width: this.$container[0].clientWidth,
                height: this.$container[0].clientHeight
            }
        }
        getWorkspaceSize() {
            let t = this.mag.getViewportWidth(this.viewport),
                r = this.page.getViewportParam(this.viewport, "height");
            return {
                width: t,
                height: r
            }
        }
        setTempPicture(t, r) {
            let i = t && t.length && t[0];
            i && mu(i).then(({
                content: n,
                width: s,
                height: l,
                ext: p
            }) => {
                t[0].uploading && r.setTempPicture({
                    content: n,
                    width: s,
                    height: l,
                    ext: p
                }, {
                    withoutResize: !0
                })
            }).catch(() => {})
        }
        createNestedBlocks(t, r, i) {
            if (i = i || V.default.noop, !t.child_workspace) return i();
            let n = function(s) {
                let l = r[s];
                if (!l) return i();
                t.child_workspace ? .add_widget(l, {
                    copy: !0,
                    success: function() {
                        n(s + 1)
                    },
                    error: function() {
                        n(s + 1)
                    }
                })
            };
            n(0)
        }
        deleteCommentsFromBlock(t) {
            h1(t)
        }
        updateBorder() {
            this.toggleBorder({
                guidesOn: this.mag.edit_params.get("guides"),
                columnCount: window.RM.constructorRouter.gg ? .guides ? .model ? .get("columns"),
                margin: window.RM.constructorRouter.gg ? .guides ? .model ? .get("margin")
            })
        }
        filterAutolayoutBlocks(t, r = {
            includeHidden: !1,
            includeFixed: !1,
            includeGlobal: !1,
            includeAboveAll: !1,
            includeAtomic: !1
        }) {
            let i = this.mag.get("packs").reduce((n, s) => (n[s.pack_id] = s, n), {});
            if (r.includeAboveAll && (!r.includeFixed || !r.includeGlobal)) throw "If you include above page widgets in the autolayout, please include fixed and global widgets as well.";
            return t.filter(n => {
                let s = n.model,
                    l = s.get("pack_id");
                return !(n instanceof zo.background) && (r.includeHidden || !s.get("hidden")) && (r.includeAtomic || !i[l] ? .atomic) && (r.includeGlobal || !s.get("is_global")) && (r.includeFixed || !s.get("fixed_position")) && (r.includeAboveAll || !s.get("is_above"))
            })
        }
        collectBlocks(t = [], r = {
            fitText: !1,
            preserveGroups: !1
        }) {
            let i = t.map(function(n) {
                return r.fitText && n instanceof zo.text && n.fitContentToBox(), {
                    block: n,
                    model: n.model,
                    box: n.getBoxData({
                        includeBoundingBox: !0,
                        checkFixedPosition: !0
                    })
                }
            });
            if (r.preserveGroups) {
                let n = {};
                i = i.reduce((s, l) => {
                    let p = l.model.get("pack_id");
                    return p ? (n[p] || (n[p] = {
                        pack_id: p,
                        y: l.box.bb_y,
                        x: l.box.bb_x,
                        w: [],
                        fixed: !!l.model.get("fixed_position")
                    }, s.push(n[p])), n[p].y = Math.min(n[p].y, l.box.bb_y), n[p].x = Math.min(n[p].x, l.box.bb_x), n[p].w.push(l)) : s.push(l), s
                }, []), i = V.default.sortBy(i, s => s.model && s.model.get("fixed_position") ? s.box.bb_y * 1e6 + s.box.bb_x : s.pack_id && s.fixed ? s.y * 1e6 + s.x : (s.pack_id ? s.y : s.box.bb_y) * 1e12 + (s.pack_id ? s.x : s.box.bb_x)), i = i.reduce((s, l) => !r.preserveGroups && l.pack_id ? [...s, ...V.default.sortBy(l.w, p => p.box.bb_y * 1e6 + p.box.bb_x)] : (s.push(l), s), [])
            } else i = V.default.sortBy(i, ({
                box: n,
                model: s
            }) => s.get("fixed_position") ? n.bb_y * 1e6 + n.bb_x : n.bb_y * 1e12 + n.bb_x);
            return i
        }
        scaleBlocksGroup(t, r, {
            downsizeOnly: i = !1,
            widgetPackId: n = On()
        } = {}) {
            let s = new Fc({
                id: n,
                workspace: this
            });
            t.forEach(c => {
                s.addBlock(c)
            }), s.render();
            let l = s.getModelBox(),
                p, d = l.width === r.width ? 1 : i ? Math.min(r.width / l.width, 1) : r.width / l.width;
            if (l.width !== r.width || l.top !== r.top || l.left !== r.left) {
                let c = { ...l,
                    left: r.left,
                    top: r.top,
                    width: Math.round(l.width * d),
                    height: Math.round(l.height * d)
                };
                p = s.frame.doResize(c, !1, "se", !1), s.destroy()
            }
            return p
        }
        findBlockByFunction(t) {
            return this.blocks.find(t)
        }
        getCachedSizes() {
            return this.cachedSizes || (this.cachedSizes = {
                width: this.$container.width() || 0,
                height: this.$container.height() || 0,
                clientWidth: this.$container[0].clientWidth,
                elHeight: this.$el.height() || 0,
                elWidth: this.$el.width() || 0,
                windowClientWidth: document.documentElement.clientWidth,
                windowClientHeight: document.documentElement.clientHeight
            }), this.cachedSizes
        }
    };
(0, gt.default)(function() {
    let e;
    (0, gt.default)("#main").drag("start", function(...o) {
        return e = window.RM.constructorRouter.workspace, !e || e.locked ? !1 : e.onDragStart(...o)
    }).drag(function(...o) {
        return e.onDrag(...o)
    }).drag("end", function(...o) {
        return e.onDragEnd(o[0])
    }), (0, gt.default)(window).on("contextmenu", function(o) {
        (0, gt.default)(o.target).hasClass("dot") && (o.stopPropagation(), o.preventDefault())
    })
});
var U2 = Lf;
var dn = M(Ht()),
    X2 = M(Mo()),
    ta = M(lt());
en();
var G2 = {
    "template-constructor-helpers-code-editor-container": Ot `
	<div class="code-editor-container">
		
		<% if (modal) { %>
		<div class="code-editor-modal-overlay"></div>
		<% } %>

		<div class="code-editor-block"  style="height:<%= height %>px;">
			<div class="code-editor-wrapper">

			</div>
			<div class="resize-handle"></div>			
		</div>
	</div>
`
};
Lr();
var Sl = M(Ht()),
    q2 = M(Mo()),
    ui = M(lt());
Ye();
en();
var j2 = {
    "template-constructor-helpers-code-editor": Ot `
	<div class="rm-code-editor">
		<div class="code-editor-upgrade-alert">
			<% if (is_subscription_paused) { %>
			<div class="alert-message">Please <a class="link upgrade-link" target="_blank" rel="noopener noreferrer" href="/settings#change-plan">unpause</a> your subscription to make custom code work after publishing. <a class="link" rel="noopener noreferrer" href="https://help.readymag.com/hc/en-us/articles/360020844171-Adding-custom-code" target="_blank">Learn more</a>.</div>
			<% } else if (!is_contributor) { %>
			<div class="alert-message">Please <a class="link upgrade-link" target="_blank" rel="noopener noreferrer" href="/settings#change-plan">upgrade</a> your account to make custom code work after publishing. <a class="link" rel="noopener noreferrer" href="https://help.readymag.com/hc/en-us/articles/360020844171-Adding-custom-code" target="_blank">Learn more</a>.</div>
			<% } else { %>
			<div class="alert-message">Please upgrade owner’s account to make custom code work after you publish the project. <a class="link" href="http://help.readymag.com/hc/en-us/articles/360020527012-Embed-Code" rel="noopener noreferrer" target="_blank">See exceptions</a>. <a href="mailto:<%= owner_email %>">Contact owner</a>.</div>
			<% } %>
			<div class="alert-close">Close</div>
		</div>

		<div class="rm-code-editor-toolbar">
			<table class="toolbar-table">
				<tr>
					<td class="item widget-code">
 						<div class="tb-button pane-button" data-type="widget"><span class="tb-bullet"></span><span class="tb-title">Widget Code</span></div>
 					</td>
 					<td class="item project-code">
 						<div class="tb-caption">Project Code:</div>
 						<div class="tb-button pane-button" data-type="head"><span class="tb-bullet"></span><span class="tb-title">&lt;HEAD&gt;</span></div>
 						<div class="tb-button pane-button" data-type="body_top"><span class="tb-bullet"></span><span class="tb-title">After &lt;BODY&gt;</span></div>
 						<div class="tb-button pane-button" data-type="body_bottom"><span class="tb-bullet"></span><span class="tb-title">Before &lt;/BODY&gt;</span></div>
 						<div class="tb-button pane-button" data-type="css"><span class="tb-bullet"></span><span class="tb-title">CSS</span></div>
					</td>
					<% if (showUpdateButton) { %>
						<td class="item update"><div class="tb-button update"><span class="tb-title">Apply (<%= Modernizr.mac ? '\u2318' : 'Ctrl' %>+U)</span></div></td>
					<% } %>
					<td class="item save"><div class="tb-button save"><span class="tb-close">Save & Close</span></div></td>
				</tr>
			</table>
		</div>
		<div class="rm-code-editor-panes">
			<div class="code-pane" data-type="widget">
				<div class="code-editor-area"></div>
				<div class="options-area">
					<table class="options-table">
						<tr>
							<td class="option links">
								<a class="code-editor-learn-link" href="https://help.readymag.com/hc/en-us/articles/360020844171-Adding-custom-code" rel="noopener noreferrer" target="_blank">Learn about custom code</a>
								<a class="code-editor-integrations-link" href="https://readymag.com/integrations" rel="noopener noreferrer" target="_blank">Find out integrations</a>
							</td>
							<td class="option clear"><div class="option-title">Clear widget contents when switching to another page</div><div class="switcher clear rmswitcher"></div>
							</td>
							<td class="option use-iframe"><div class="option-title">Use iFrame</div><div class="switcher use-iframe rmswitcher"></div>
							</td>
						</tr>
					</table>
				</div>
			</div>
			<div class="code-pane" data-type="head"><div class="code-editor-area"></div></div>
			<div class="code-pane" data-type="body_top"><div class="code-editor-area"></div></div>
			<div class="code-pane" data-type="body_bottom"><div class="code-editor-area"></div></div>
			<div class="code-pane" data-type="css"><div class="code-editor-area"></div></div>

			<div class="editor-preloader rmpreloader">
				<div class="arc"></div>
			</div>
		</div>
	</div>
`
};
vr();
var Z9 = q2.default.View.extend({
        template: j2["template-constructor-helpers-code-editor"],
        EDITOR_CONFIG: {
            lineNumbers: !0,
            lineWrapping: !0,
            mode: "htmlmixed",
            theme: "readymag",
            keyMap: "sublime",
            scrollbarStyle: "overlay",
            viewportMargin: 50
        },
        events: {
            "click .tb-button.pane-selector .tb-title": "onPaneSelectorButtonClick",
            "click .tb-button.update:not(.disabled)": "onUpdateButtonClick",
            "click .tb-button.save": "onSaveButtonClick",
            "click .pane-button:not(.selected)": "onPaneButtonClick",
            "click .alert-close": "onCloseAlertClick",
            "click .code-editor-learn-link": "onClickLearnLink",
            "click .code-editor-integrations-link": "onClickIntegrationsLink"
        },
        initialize: function(e) {
            ui.default.bindAll(this), this.codes = e.codes || [], this.defaultCode = e.defaultCode || "head", this.updateDelegate = e.updateDelegate, this.is_contributor = e.is_contributor, this.owner_email = e.owner_email, this.is_subscription_paused = e.is_subscription_paused, this.$container = e.$container, this.parent = e.parent, this.editors = {}, this.showUpgradeAlert = e.showUpgradeAlert, this.tabsNames = {
                widget: "widget",
                head: "head",
                body_top: "body_top",
                body_bottom: "body_bottom",
                css: "css"
            }, this.activePane = this.tabsNames.widget, this.refreshEditors_debounced = ui.default.debounce(this.refreshEditors, 100), this.onCodeChange_throttled = ui.default.throttle(this.onCodeChange, 400)
        },
        render: function() {
            this.setElement((0, Sl.default)(this.template({
                is_contributor: this.is_contributor,
                owner_email: this.owner_email,
                showUpdateButton: this.activePane === this.tabsNames.widget,
                is_subscription_paused: this.is_subscription_paused
            }))), this.showUpgradeAlert || (this.$(".code-editor-upgrade-alert").remove(), RM.constructorRouter.trigger("notice:triggerMetrics", "codePanelOpened")), this.$container.html(this.$el), this.setElement(this.$el), !!ui.default.findWhere(this.codes, {
                type: "widget"
            }) || (this.$(".rm-code-editor-toolbar .item.widget-code").remove(), this.$(".rm-code-editor-toolbar .item.update").remove(), this.$('.code-pane[data-type="widget"]').remove()), this.$paneSelectorPopup = this.$(".pane-selector-popup"), this.$codePanes = this.$(".code-pane"), this.initCodePanes(), this.parent && this.listenTo(this.parent, "resize", this.refreshEditors_debounced)
        },
        initCodePanes: function() {
            import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-MIIK5A3R.js").then(({
                default: e
            }) => {
                ui.default.each(this.$codePanes, function(o) {
                    let t = (0, Sl.default)(o),
                        r = t.attr("data-type"),
                        i = ui.default.findWhere(this.codes, {
                            type: r
                        }),
                        n, s;
                    r === "css" ? (n = ui.default.clone(this.EDITOR_CONFIG), n.mode = "css") : n = this.EDITOR_CONFIG, n.placeholder = J9[r], s = e(t.find(".code-editor-area")[0], n), this.editors[r] = s, s.rm_editor_type = r;
                    let l = Modernizr.mac ? "Cmd-U" : "Ctrl-U",
                        p = Modernizr.mac ? "Cmd-S" : "Ctrl-S",
                        d = {};
                    d[l] = this.onUpdateButtonClick, d[p] = this.onUpdateButtonClick, d.Esc = this.onSaveButtonClick, s.setOption("extraKeys", d);
                    let c = i && i.code || "";
                    s.setValue(c);
                    let m = i.positions || {};
                    m.cursor && s.setCursor(m.cursor), m.scroll && s.scrollTo(null, m.scroll), this.onCodeChange(s), s.on("change", this.onCodeChange_throttled), s.on("focus", this.onEditorFocusChange), s.on("blur", this.onEditorFocusChange), r === this.tabsNames.widget && (this.iframeSwitcher = (0, Sl.default)(this.$(".switcher.use-iframe")).RMSwitcher({
                        state: i.options.use_iframe,
                        height: 32,
                        "color-0": "#0078ff",
                        "color-1": "#c9c8c9"
                    }, function(u) {
                        this.updateOption("use-iframe", u)
                    }.bind(this)).data("switcher"), this.updateOption("use-iframe", i.options.use_iframe), this.clearSwitcher = (0, Sl.default)(this.$(".switcher.clear")).RMSwitcher({
                        state: i.options.clear_content,
                        height: 32,
                        "color-0": "#0078ff",
                        "color-1": "#c9c8c9"
                    }, function(u) {
                        this.updateOption("clear", u)
                    }.bind(this)).data("switcher"), this.updateOption("clear", i.options.clear_content))
                }.bind(this)), this.switchToPane(this.defaultCode), this.hidePreloader()
            })
        },
        updateOption: function(e, o) {
            this.$(".option." + e).toggleClass("active", !!o)
        },
        getCodePane: function(e) {
            return this.$('.code-pane[data-type="' + e + '"]')
        },
        hidePreloader: function() {
            this.$(".editor-preloader").remove()
        },
        onPaneButtonClick: function(e) {
            let o = (0, Sl.default)(e.currentTarget),
                t = o.attr("data-type");
            this.switchToPane(t), this.checkUpdateButtonVisibility(t)
        },
        switchToPane: function(e) {
            let o = this.getCodePane(e);
            this.$(".code-pane").removeClass("active"), o.addClass("active"), this.$(".pane-button").removeClass("selected"), this.$('.section-item[data-type="' + e + '"]').addClass("selected"), this.$('.pane-button[data-type="' + e + '"]').addClass("selected"), this.activePane = e
        },
        checkUpdateButtonVisibility: function(e) {
            let o = this.$(".item.update");
            e === this.tabsNames.widget ? o.show() : o.hide()
        },
        getAllCodes: function() {
            let e = {};
            return ui.default.each(this.editors, function(o, t) {
                let r = {
                    code: o.getValue().trim(),
                    cursor: o.getCursor(),
                    scroll: o.getScrollInfo().top
                };
                t === "widget" && (r.options = {
                    clear_content: this.clearSwitcher.settings.state,
                    use_iframe: this.iframeSwitcher.settings.state
                }), e[t] = r
            }.bind(this)), e
        },
        onUpdateButtonClick: function() {
            let e = this.$(".tb-button.update"),
                o = this.getAllCodes();
            e.hasClass("disabled") || (ui.default.isFunction(this.updateDelegate) ? (e.addClass("disabled"), this.updateDelegate(o, function() {
                e.removeClass("disabled")
            })) : this.trigger("update", o))
        },
        onSaveButtonClick: function() {
            this.trigger("save", this.getAllCodes())
        },
        refreshEditors: function() {
            ui.default.each(this.editors, function(e) {
                e.refresh()
            })
        },
        onCloseAlertClick: function() {
            this.$(".code-editor-upgrade-alert").remove(), this.trigger("alert-close"), this.refreshEditors()
        },
        onCodeChange: function(e) {
            let o = e.getValue().trim(),
                t = e.rm_editor_type,
                r = !!o;
            this.$('.pane-button[data-type="' + t + '"]').toggleClass("has-code", r)
        },
        onEditorFocusChange: function(e) {
            let o = e.hasFocus(),
                t = e.state.placeholder;
            t && (t.style.display = o ? "none" : "")
        },
        onClickLearnLink: function() {
            re(fe.WidgetMisc, {
                action: "learn about adding custom code",
                widgetType: "code"
            })
        },
        onClickIntegrationsLink: function() {
            re(fe.WidgetMisc, {
                action: "learn about intergrations",
                widgetType: "code"
            })
        }
    }),
    J9 = {
        widget: `<!-- 
Please note that custom code added to the
project is beyond of the scope of Readymag
support. Bend matter carefully.

 \\      oo
  \\____|\\mm
  //_//\\ \\_\\
 /K-9/  \\/_/
/___/_____\\
-----------
-->`,
        head: `<!-- 
Please note that custom code added to the
project is beyond of the scope of Readymag
support. Bend matter carefully.

 \\      oo
  \\____|\\mm
  //_//\\ \\_\\
 /K-9/  \\/_/
/___/_____\\
-----------
-->`,
        body_top: `<!-- 
Please note that custom code added to the
project is beyond of the scope of Readymag
support. Bend matter carefully.

 \\      oo
  \\____|\\mm
  //_//\\ \\_\\
 /K-9/  \\/_/
/___/_____\\
-----------
-->`,
        body_bottom: `<!-- 
Please note that custom code added to the
project is beyond of the scope of Readymag
support. Bend matter carefully.

 \\      oo
  \\____|\\mm
  //_//\\ \\_\\
 /K-9/  \\/_/
/___/_____\\
-----------
-->`,
        css: `/* 
Please note that custom code added to the
project is beyond of the scope of Readymag
support. Bend matter carefully.

 \\      oo
  \\____|\\mm
  //_//\\ \\_\\
 /K-9/  \\/_/
/___/_____\\
-----------
*/`
    },
    Y2 = Z9;
lh();
var Q9 = X2.default.View.extend({
        template: G2["template-constructor-helpers-code-editor-container"],
        events: {
            "click .code-editor-modal-overlay": "onOverlayClick"
        },
        MIN_HEIGHT: 47,
        INITIAL_HEIGHT_PERCENT: 40,
        MAX_HEIGHT_PERCENT: 80,
        initialize: function(e) {
            ta.default.bindAll(this), this.widgetModel = e.model, this.router = e.router, this.mag = e.mag
        },
        render: function() {
            let e = this.getSavedHeight(),
                o = (0, dn.default)(window).height(),
                t, r = RM.common.codeEditorPositions || {};
            e ? t = Math.min(e, Math.round(o * this.MAX_HEIGHT_PERCENT / 100)) : t = Math.max(Math.round((0, dn.default)(window).height() * this.INITIAL_HEIGHT_PERCENT / 100), this.MIN_HEIGHT), this.setElement((0, dn.default)(this.template({
                height: t,
                modal: !this.widgetModel
            }))), this.$el.insertAfter("#constructor"), this.setElement(this.$el), this.$editorBlock = this.$(".code-editor-block"), this.$overlay = this.$(".code-editor-modal-overlay"), (0, dn.default)(this.$(".resize-handle")).RMDrag({
                start: this.startHandleDrag,
                move: this.moveHandleDrag,
                end: this.endHandleDrag,
                silent: !0,
                preventDefault: !0
            });
            let i = !this.router.codeInjectionAlertAlreadyShown && !this.router.me.get("permissions").can_inject_code,
                n = [{
                    type: "head",
                    code: this.mag.get("ci_head") || "",
                    positions: r.head
                }, {
                    type: "body_top",
                    code: this.mag.get("ci_body_top") || "",
                    positions: r.body_top
                }, {
                    type: "body_bottom",
                    code: this.mag.get("ci_body_bottom") || "",
                    positions: r.body_bottom
                }, {
                    type: "css",
                    code: this.mag.get("ci_css") || "",
                    positions: r.css
                }];
            this.widgetModel && n.push({
                type: "widget",
                code: this.widgetModel.get("code") || "",
                options: {
                    use_iframe: this.widgetModel.get("use_iframe"),
                    clear_content: this.widgetModel.get("clear_content")
                },
                positions: r[this.widgetModel.get("_id")]
            }), this.codeEditor = new Y2({
                $container: this.$(".code-editor-wrapper"),
                parent: this,
                codes: n,
                defaultCode: this.widgetModel ? "widget" : "head",
                updateDelegate: function(s, l) {
                    this.widgetModel.save({
                        code: s.widget.code,
                        options: s.widget.options
                    }, {
                        success: l,
                        error: function() {
                            l()
                        }
                    }), ta.default.delay(function() {
                        l()
                    }, 5e3)
                }.bind(this),
                showUpgradeAlert: i,
                is_contributor: !this.router.isOwner,
                owner_email: this.router.mag.get("user").email,
                is_subscription_paused: Je.isSubscriptionPaused()
            }), this.listenTo(this.codeEditor, "save", function() {
                this.router.closeCodeEditor()
            }), this.listenToOnce(this.codeEditor, "alert-close", function() {
                this.router.codeInjectionAlertAlreadyShown = !0
            }.bind(this)), this.codeEditor.render()
        },
        saveCodes: function() {
            let e = this.codeEditor.getAllCodes(),
                o = e.widget || {},
                t = this.widgetModel,
                r = {},
                i;
            if (i = RM.common.codeEditorPositions || {}, RM.common.codeEditorPositions = i, ta.default.each(e, function(n, s) {
                    s !== "widget" && (r["ci_" + s] = n.code, i[s] = {
                        cursor: n.cursor,
                        scroll: n.scroll
                    })
                }.bind(this)), t) {
                let n = {
                    code: o.code
                };
                ta.default.extend(n, o.options), t.set(n), t.hasChanged() && this.widgetModel.save(n), i[t.get("_id")] = {
                    cursor: o.cursor,
                    scroll: o.scroll
                }
            }
            this.mag.set(r), this.mag.hasChanged() && this.mag.save(r, {
                patch: !0
            })
        },
        startHandleDrag: function(e) {
            let o = (0, dn.default)(e.currentTarget);
            this.resizeParams = {
                $handle: o,
                initial_h: this.$editorBlock.height()
            }
        },
        moveHandleDrag: function(e) {
            let o = this.resizeParams.initial_h - e.deltaY;
            this.updateHeight(o)
        },
        endHandleDrag: function() {
            this.changedHeight = this.height
        },
        updateHeight: function(o) {
            var o = o || this.$editorBlock.height(),
                t = Math.max(Math.round((0, dn.default)(window).height() * this.MAX_HEIGHT_PERCENT / 100), this.MIN_HEIGHT);
            o > t && (o = t), o < this.MIN_HEIGHT && (o = this.MIN_HEIGHT), this.height = o, this.$editorBlock.height(o), this.trigger("resize")
        },
        show: function() {
            this.render(), ta.default.delay(function() {
                this.$el.addClass("visible")
            }.bind(this), 20), (0, dn.default)(window).on("resize", this.onWindowResize), this.shown = !0
        },
        hide: function() {
            this.$el.removeClass("visible"), setTimeout(ta.default.bind(function() {
                this.remove()
            }, this), 200), (0, dn.default)(window).off("resize", this.onWindowResize), this.changedHeight && this.saveHeight(), Ts(), this.shown = !1
        },
        saveHeight: function() {
            window.localStorage && window.localStorage.setItem("RMCodeEditorHeight", this.height)
        },
        getSavedHeight: function() {
            return window.localStorage && window.localStorage.getItem("RMCodeEditorHeight")
        },
        onWindowResize: function() {
            this.updateHeight()
        },
        toggle: function() {
            this.shown ? this.hide() : this.show(), this.trigger("toggle")
        },
        onOverlayClick: function() {
            this.router.closeCodeEditor()
        }
    }),
    K2 = Q9;
var mi = M(Ht());
yd();
jd();
Mh();
$o();
Kh();
Lr();
var gi = M(lt()),
    Pl = M(Mo());
ut();
Hc();
Kt();
var eB = Pl.default.Router.prototype;
O0();
var Z2 = Tr.extend({
        setupEcommerceSidebar: async function() {
            if (this.eCommerceManager.getConnectedProvider() === "ecwid") {
                let {
                    default: e
                } = await
                import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-KI3STGVG.js");
                this.cartSidebar = new e(this)
            } else {
                let {
                    default: e
                } = await
                import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-TEUQRODP.js");
                this.cartSidebar = new e(this)
            }
        },
        getContainerSize() {
            if (["phone_portrait", "tablet_portrait"].includes(this.viewport)) {
                let {
                    width: e,
                    height: o
                } = yr.fitToDevice(this.viewport === "tablet_portrait" ? this.getViewportWidth(this.viewport) * .75 : this.getViewportWidth(this.viewport), this.viewport, Qa());
                return this.containerSize = {
                    width: e,
                    height: Math.min(o, this.$el.height())
                }, this.containerSize
            } else return Tr.prototype.getContainerSize.call(this)
        },
        switchToViewport(e, o) {
            Tr.prototype.switchToViewport.call(this, e), $c[Qa()] !== e && Gd(o || Oc[e]), this.currentPage && !this.aboveGlobalWidgetsRendered && this.viewOpts.viewertype === "horizontal" && this.renderAboveGlobalWidgets(this.currentPage), this.setViewerOptions(e), this.setViewerClasses(), this.onResize(), this.loadPages()
        }
    }),
    tB = Pl.default.Router.extend({
        routes: {},
        prefix: "edit/",
        isPreview: !0,
        deviceSwitch: void 0,
        initialize: function(e) {
            if (e.constructorViewport = window.sessionStorage.getItem("constructorViewport") || "default", gi.default.bindAll(this), this.environment = ae.environment.viewer, this.started = !1, window.RM.data.usersLoader.me && (this.me = window.RM.data.usersLoader.me), this.$mags_container = (0, mi.default)("#mags"), this.magsData = window.ServerData && window.ServerData.mags, Wn.init(window.ServerData && window.ServerData.userPermissions), this.internalHistory = [], this.magsData) {
                if (this.cachedMag = gi.default.clone(this.magsData.mag), !this.cachedMag || !this.cachedMag.user || !this.cachedMag.user._id) return;
                this.cachedMag.user.isMe = this.me && this.me.get("_id") == this.cachedMag.user._id
            }
            import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-23KOG56P.js").then(({
                default: o
            }) => {
                RM.analytics = RM.analytics || new o({
                    router: this
                }), this.analytics = RM.analytics;
                let t = window.RM ? .common ? .isDomainViewer === !0;
                ae.isProd && !t &&
                    import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-7JLYCPQG.js").then(({
                        getWebVitals: r
                    }) => {
                        r()
                    })
            }), this.environment = ae.environment.preview, e.title = e.title || "Project Title", this.$constructor = e.$constructor, this.mag = new Z2(e, this), this.cachedMag = this.mag, this.listenTo(this.mag, "menuShown", this.onViewerMenuShow), this.listenTo(this.mag, "menuHidden", this.onViewerMenuHide), this.listenTo(this.mag, "change:viewport", this.onChangeViewport, this), (0, mi.default)("body").on("keydown", this.onKeyDown), this.mag.user && (this.mag.user._id, RM.constructorRouter.me.get("_id")), Me.on("change:device", this.onChangeDevice, this)
        },
        navigate: function(e, o) {
            let t = e.indexOf("/" + this.prefix) !== 0 ? this.prefix + e : e;
            eB.navigate.call(this, t, o)
        },
        setTitle: function() {
            window.document.title = this.mag.title + " (Preview)"
        },
        onViewerMenuShow: function() {
            this.mag.viewOpts.viewertype === "vertical" && this.$constructor && this.$constructor.addClass("shift-toolbar-on-viewer-menu-open")
        },
        onViewerMenuHide: function() {
            this.mag.viewOpts.viewertype === "vertical" && this.$constructor && this.$constructor.removeClass("shift-toolbar-on-viewer-menu-open")
        },
        onKeyDown: function(e) {
            if (e.ctrlKey || e.metaKey) return !0;
            e.target.tagName.toLowerCase() === "input" || e.target.tagName.toLowerCase() === "textarea" || e.keyCode === mi.default.keycodes.esc && (RM.constructorRouter.togglePreview(), (0, mi.default)("body").off("keydown", this.onKeyDown))
        },
        destroy: function() {
            this.onViewerMenuHide(), (0, mi.default)("body").off("keydown", this.onKeyDown), this.deviceSwitch && (tv(this.deviceSwitch), this.deviceSwitch ? .parentNode ? .removeChild(this.deviceSwitch)), Me.off("change:device", this.onChangeDevice, this), this.mag && this.mag.destroy()
        },
        go: function(e, o) {
            if (e = e || 1, o.isPageNum) this.mag.showPage(e, o);
            else {
                let t = this.mag.getPageByPath(e) || {};
                this.mag.showPage(t.num || e, o)
            }
            if (this.scrollTop && (this.mag.setScrollPosition({
                    offset: this.scrollTop,
                    animate: !1
                }), delete this.scrollTop), !this.deviceSwitch) {
                this.deviceSwitch = document.createElement("div"), document.body.appendChild(this.deviceSwitch);
                let t = Oc[window.sessionStorage.getItem("constructorViewport")] || "Desktop";
                ev(this.deviceSwitch, {
                    defaultDevice: t,
                    router: this,
                    project: RM.constructorRouter.previewMag
                })
            }
        },
        getMagUri: function(e) {
            return "edit/" + e.num_id + "/preview/"
        },
        setScroll: function(e) {
            this.scrollTop = e
        },
        getScroll: function() {
            return this.mag.getScrollPosition()
        },
        onChangeViewport: function(e) {
            window.sessionStorage.setItem("constructorViewport", e.viewport || "default")
        },
        onChangeDevice(e) {
            if (!this.mag.active) return;
            let o = $c[e];
            o !== this.mag.viewport ? this.mag.switchToViewport(o, e) : this.mag.onResize()
        },
        startByPageNum: function(e, o, t) {
            this.start(e, o, null, t)
        },
        getPageUrlFromCodeExportLink: function(e) {
            if (!e) return e;
            if (window.RM.config ? .root) {
                let o = window.RM.config.root;
                return o[0] === "/" && (o = o.substr(1)), e.replace(o, "")
            }
            return e
        },
        start: function(e, o, t, r) {
            if (isNaN(parseInt(r)) && (r = void 0), !r) {
                if (parseInt(e, 10) == e || /^p\d+\/?$/i.test(e)) {
                    let n = o;
                    o = e, t = n, e = null
                }
                if (!o) return this.notFound()
            }
            this.latestFragment = Pl.default.history.getFragment(), t = t || 1, r && (t = r);
            let i = e + "_" + o;
            if (this.username = e, !(this.started == i && this.loaded != i)) {
                if (this.started = i, this.loaded == this.started) {
                    this.go(t, {
                        animation: !1,
                        isPageNum: !!r
                    });
                    return
                }
                if (this.cachedMag && !gi.default.isEmpty(this.cachedMag)) {
                    !(this.cachedMag instanceof Tr) && !this.cachedMag.forbidden && !this.cachedMag.is_suspended && (this.cachedMag = new Tr(this.cachedMag, this)), this.mag = this.cachedMag, this.onPreloadMag(t, !!r);
                    return
                }
                this._loadingMagDataXHR && this._loadingMagDataXHR.abort(), this._loadingMagDataXHR = this.fetchData(this.username, o, {
                    success: gi.default.bind(function(n) {
                        this.mag && this.mag.num_id && n && n.num_id != this.mag.num_id && window.location.reload(), this.mag = new Tr(n, this), this.cachedMag = this.mag, this.onPreloadMag(t, !!r)
                    }, this),
                    error: this.notFound
                })
            }
        },
        restartMag({
            currentPage: e,
            viewport: o
        } = {}) {
            let t = e || this.mag.currentPage.num,
                r = o || this.mag.viewport;
            this.stopListening(this.mag), this.mag.destroy();
            let i = this.mag.model.toJSON();
            this.mag = new Z2({ ...i,
                user: this.mag.user,
                constructorViewport: r,
                hasSummary: !0,
                globalWidgets: this.mag.staticGlobalWidgetsData,
                aboveAllWidgets: this.mag.aboveGlobalWidgetsData
            }, this), this.cachedMag = this.mag, this.mag.showPage(t), this.mag.toolbar.toggleToolbarVisibility(!0), this.listenTo(this.mag, "menuShown", this.onViewerMenuShow), this.listenTo(this.mag, "menuHidden", this.onViewerMenuHide), this.listenTo(this.mag, "change:viewport", this.onChangeViewport, this), window.sessionStorage.setItem("constructorViewport", r || "default"), Me.trigger("preview:mag:restart")
        },
        fetchMagPages: async function(e) {
            let o = Array.isArray(e) && e.length ? e.join(",") : void 0;
            return this._loadingPagesDataXHR && this._loadingPagesDataXHR.abort(), this._loadingPagesDataXHR = mi.default.ajax({
                url: `/api/magpages/${this.mag.num_id}`,
                method: "GET",
                data: o ? {
                    pages: o
                } : void 0,
                success: function(t) {
                    return t
                },
                error: function(t) {
                    return null
                },
                context: this
            }), this._loadingPagesDataXHR
        },
        onPreloadMag: function(e, o) {
            Tu(Je.usedWidgets(this.mag.pages || [], this.mag.aboveGlobalWidgetsData)).finally(() => {
                this.onLoadMag(e, o)
            })
        },
        onLoadMag: function(e, o) {
            let t;
            if (this.loaded = this.started || !0, this.mag.forbidden) {
                this.requestMagPassword(this.latestFragment, gi.default.clone(this.mag)), delete this.cachedMag, delete this.loaded, delete this.started;
                return
            }
            if (this.mag.is_suspended) {
                this.showSuspended();
                return
            }
            this.mag._requested_page && !o ? (t = this.mag._requested_page, delete this.mag._requested_page) : t = e, this.mag.render(), this.go(t, {
                animation: !1,
                isPageNum: o
            }), RM.common.mode = "mag"
        },
        fetchData: function(e, o, r) {
            var r = r || {};
            return e ? r.url = "/api/readymag/" + e + "/" + o : r.url = "/api/readymag/" + o, mi.default.ajax(r)
        },
        sendReadyEvent: function(e) {
            if (e = e || {}, e = gi.default.defaults(e, {
                    page: {}
                }), window.loadNotifier) {
                if (e.error) return window.loadNotifier({
                    error: e.error
                });
                window.loadNotifier({
                    width: e.page.width,
                    height: e.page.height
                })
            }
        },
        trackPage: function() {
            RM.screenshot || gi.default.defer(gi.default.bind(function() {
                this.analytics && this.analytics.trackPage()
            }, this))
        },
        goBack: function() {
            let e = this.internalHistory[this.internalHistory.length - 2];
            e && (e && this.go(e, {
                skipInternalHistory: !0
            }), this.internalHistory.pop())
        },
        setUrlString: function(e) {
            if (this.noUrlRewrite || (e = e || {}, RM.screenshot)) return;
            let o = this.mag.num_id + "/preview/",
                t = this.mag.currentPage;
            if (t && t.num != "1" && (o += (t.pagePath || t.uri || t.num.toString()) + "/"), e.skipInternalHistory || this.internalHistory.push(t.num.toString()), o === Pl.default.history.getFragment()) return;
            let i = (parseInt(gi.default.last(Pl.default.history.getFragment(), "/")) || 1) == t.num || e.replace;
            this.navigate(o, {
                replace: i
            })
        },
        getPreviousFragment: function() {
            return this.internalHistory[this.internalHistory.length - 2]
        },
        getUserPermissions() {
            return this.userPermissions || []
        },
        onError: function() {
            this.mag && this.go(1, {
                animation: !1
            })
        },
        createMagFromTemplate: async function(e, o) {
            let {
                default: t
            } = await
            import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-KNI56LJ4.js");
            new t({
                router: this,
                me: this.me,
                tp: e,
                templateID: o
            })
        },
        requestMagPassword: async function(e, o) {
            if (!this.magPasswordView) {
                let {
                    default: t
                } = await
                import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-6A6TFCNH.js");
                this.magPasswordView = new t({
                    router: this,
                    $parent: (0, mi.default)("#mags")
                })
            }
            this.magPasswordView.render({
                mag: o,
                mag_url: e
            })
        },
        showSuspended: async function() {
            let {
                default: e
            } = await
            import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-JCMOX5ZE.js");
            new e({
                type: "mag-suspended",
                $container: (0, mi.default)("#service-pages")
            }).render()
        },
        notFound: function() {
            gi.default.defer(async function() {
                let {
                    default: e
                } = await
                import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-JCMOX5ZE.js");
                new e({
                    type: "404",
                    $container: (0, mi.default)("#service-pages")
                }).render()
            })
        }
    }),
    J2 = tB;
var am = M(Mo()),
    Xe = M(lt());
$o();
Bo();
Lc();
Hd();
var Br = M(lt());
Fd();
$o();
rr();
var oB = nr.extend({
        id: "_groupSave",
        url: "/api/modelsGroup/",
        name: "GroupSave",
        skipResponse: !0,
        isNew: function() {
            return !1
        },
        toJSON: function(e) {
            e = e || {};
            let o = e.attrs || nr.prototype.toJSON.apply(this, arguments),
                t = [];
            return Br.default.each(o.changeset, function(r) {
                let i = r.model.name === "Widget",
                    n;
                !e.patch && (i || Ve("widget.putNotPatch")) ? n = r.model.toJSON() : n = Br.default.clone(r.attrs), n.modelType = r.model.name.toLowerCase(), t.push(n)
            }), t
        },
        set: function(e, o, t) {
            if (e == null) return this;
            let r;
            return typeof e == "object" ? (r = e, t = o) : (r = {})[e] = o, t || (t = {}), t.noSet || (Br.default.each(r.changeset, function(i) {
                let n = i.model,
                    s = Br.default.clone(i.attrs);
                t.reset && (s = n.getResetAttrs(n, s), s = n.parse(s)), t.groupsave = !0, i.model.set(s, t)
            }), r.changeset = Br.default.reject(r.changeset, function(i) {
                return i.model.fakeSave
            })), nr.prototype.set.apply(this, arguments)
        },
        save: function(e, o, t) {
            let r = this,
                i;
            Br.default.isObject(e) || e == null ? (i = e, t = o) : (i = {}, i[e] = o), !this.skipMagChanging && !t ? .skipMagChanging && RM.constructorRouter.mag && RM.constructorRouter.mag.set("changed", !0);
            let n = nr.prototype.save.apply(this, arguments);
            n && (n.error(function(s, l) {
                if (l !== "abort") {
                    if (Ve("constructor.limitGroupSaves")) {
                        if (s.status && s.status < 500 && s.status !== 429) return
                    } else if (s.status && s.status < 500) return;
                    r.wasNotSaved = !0, RM.constructorRouter.raiseConnectionError()
                }
            }), n.success(function() {
                r.wasNotSaved && r.trigger("re-saved"), r.wasNotSaved = !1
            })), e && e.changeset && Me.trigger("save:group", {
                changeset: e.changeset,
                options: Br.default.isObject(o) ? o : t
            })
        },
        sync: function(e, o, t) {
            if (t.attrs && t.attrs.changeset && e == "patch" && (t.attrs = this.toJSON(t)), !Br.default.isEmpty(t.attrs) || !Br.default.isEmpty(this.get("changeset"))) return nr.prototype.sync.apply(this, arguments)
        },
        triggerSocketUpdate: function(e, o) {
            let t = this.getViewport && this.getViewport() || o ? .viewport,
                r = Br.default.uniq(Br.default.map(e, function(i) {
                    return this.modelsList[i._id].model.getPageId()
                }, this));
            if (e = {
                    changes: o.patch && o.attrs ? [...o.attrs] : e,
                    pids: r
                }, Array.isArray(e.changes) && e.changes.length) {
                let i = {},
                    n = [];
                if (e.changes.forEach(s => {
                        if (s ? .modelType !== "widget") {
                            n.push(s);
                            return
                        }(t && t === "default" || s ? ._id && this.modelsList[s._id] ? .model ? .get("is_global")) && n.push(s), s.is_global && s._id && this.modelsList && this.modelsList[s._id] && this.modelsList[s._id].attrs && (i[s._id] = this.modelsList[s._id].attrs)
                    }), !n.length) {
                    RM.constructorRouter.trigger("update_from_server", "UpdateInMobileViewport");
                    return
                }
                n.length && (e.changes = n), Br.default.isEmpty(i) || (e.widgetsAttrs = i)
            }
            RM.constructorRouter.trigger("update_from_server", this.name, e, t), this.clear({
                silent: !0
            })
        }
    }),
    Q2 = oB;
Lc();
rr();
var e_ = function(e, o) {
    return this.router = e, this.mag = o, Me.on("set:model", this.onModelSet, this), Me.on("save:model", this.onModelSave, this), Me.on("ready:model", this.onModelReady, this), this.addHistoryStep.__debounced = Xe.default.debounce(this.addHistoryStep, 300), this.historyModelsList = {}, this.groupSave = new Q2, this.groupSave.modelsList = this.historyModelsList, this.lastSave = 0, this.prevChangedList = {}, this.lastChangedList = {}, this
};
Xe.default.extend(e_.prototype, am.default.Events, {
    MERGE_UNDO_DIFF: 500,
    onModelReady: function(e) {
        !e.tracked || this.historyModelsList[e.id] || (this.historyModelsList[e.id] = {
            model: e,
            attrs: e.cloneJSON()
        })
    },
    whenModelReady(e) {
        return new Promise(o => {
            let t = e.id,
                r = i => {
                    i.id === t && (Me.off("ready:model", r), o())
                };
            this.historyModelsList[t] ? o() : Me.on("ready:model", r)
        })
    },
    onModelSet: function(e) {
        let o = e.model,
            t = e.options || {};
        if (this.historyModelsList[o.id]) {
            if (An.isIncomingUpdate(t)) return this.historyModelsList[o.id] = {
                model: o,
                attrs: o.cloneJSON()
            }, this.historyModelsList[o.id];
            this.lastChangedList[o.id] = Xe.default.keys(o.changed)
        }
    },
    onModelSave: function(e) {
        let o = e.model,
            t = e.setAttrs;
        this.historyModelsList[o.id] && this.addHistoryStep({
            model: o,
            attrs: this.historyModelsList[o.id].attrs,
            setAttrs: t
        }, e.options)
    },
    setGroup: function(e, o) {
        o = o || {};
        let t = [];
        Xe.default.each(e, function(r) {
            let i = this.historyModelsList[r._id] && this.historyModelsList[r._id].model;
            if (!i && r instanceof An && (i = r, r = Xe.default.extend({
                    _id: r.get("_id")
                }, r.changed)), o.socketUpdate && i && r.modelType === "widget") {
                let n = !1;
                if (De.viewport_listall.forEach(s => {
                        r[s] && (n = !0, i[s] = { ...i[s] || {},
                            ...r[s]
                        })
                    }), n) return
            }
            if (!(!i && o.socketUpdate)) {
                if (!i) return console.error("SyncManager: model not found", r);
                t.push({
                    model: i,
                    attrs: r
                })
            }
        }, this), this.groupSave.set({
            changeset: t
        }, o), o.socketUpdate && Xe.default.each(t, function(r) {
            typeof r.attrs.is_global == "boolean" && !r.attrs.is_global ? this.historyModelsList[r.model.id] && delete this.historyModelsList[r.model.id] : this.historyModelsList[r.model.id] = {
                model: r.model,
                attrs: r.model.cloneJSON()
            }
        }, this)
    },
    saveGroup: function(e = [], o) {
        let t = e.reduce((n, s) => n === s.name ? n : "mixed", e ? .[0] ? .name);
        o = Xe.default.defaults(o || {}, {
            patch: !(t === "Widget" && Ve("widget.putNotPatch"))
        }), (o.undo || o.redo) && (o.reset = !0, o.patch = !1);
        let r = o.changeset || this.getChangeset(e, o);
        o = Xe.default.omit(o, "changeset"), this.groupSaveXHR = this.groupSave.save({
            changeset: r
        }, o);
        let i = this.getHistoryDict(r);
        o.applySnapshot && o.applySnapshot(), this.addHistoryStep(i, o)
    },
    getChangeset: function(e, o) {
        return e instanceof am.default.Collection && (e = e.models), Xe.default.isEmpty(e) && (e = Xe.default.map(this.historyModelsList, function(t) {
            return t.model
        })), e[0] instanceof am.default.Model && !Xe.default.isEmpty(e) ? (o && (o.noSet = !0), this.getChangedModelsData(e, o)) : Xe.default.map(e, function(t) {
            return {
                model: this.historyModelsList[t._id].model,
                attrs: t
            }
        }, this)
    },
    getHistoryDict: function(e) {
        return Xe.default.map(e, function(o) {
            return Xe.default.extend({}, this.historyModelsList[o.model.id], {
                setAttrs: o.attrs
            })
        }, this)
    },
    getChangedModelsData: function(e, o = {}) {
        let t = [];
        return Xe.default.each(e, function(r) {
            let i = r.toJSON(o),
                n = Xe.default.objectDifference(this.historyModelsList[r.id].attrs, i);
            o.byStoreAutolayoutBlocks && Xe.default.isObject(r ? .attributes) && r.attributes.type === "text" && r.attributes.version === 3 && (Xe.default.isArray(i ? .blocksMeta) && (n.blocksMeta = [...i.blocksMeta]), Xe.default.isArray(i ? .styles) && (n.styles = [...i.styles])), Xe.default.isEmpty(n) || t.push({
                model: r,
                attrs: Xe.default.extend(n, {
                    _id: r.get("_id")
                })
            })
        }, this), t
    },
    addHistoryStep: function(e, o) {
        if (Xe.default.isArray(e) || (e = [e]), o = o || {}, Xe.default.each(e, function(i) {
                i.model.undoKeys && (i.attrs = Xe.default.pick(i.attrs, Xe.default.union(i.model.undoKeys, ["_id"])))
            }), e = Xe.default.reject(e, function(i) {
                let n = i.model.toJSON();
                return i.model.undoKeys && (n = Xe.default.pick(n, Xe.default.keys(i.attrs))), Xe.default.isEqual(n, i.attrs)
            }, this), Xe.default.isEmpty(e)) return;
        let t = Xe.default.map(e, function(i) {
            return i.model.id
        });
        Date.now() - this.lastSave <= this.MERGE_UNDO_DIFF && !o.undo && !o.redo && Xe.default.all(Xe.default.pluck(e, "model"), function(n) {
            return n.mergeUndoSteps !== !1
        }) && Xe.default.isEqual(Xe.default.pick(this.lastChangedList, t), this.prevChangedList) && (o.replace = !0), o.undo || o.redo || o.skipHistory ? this.prevChangedList = {} : this.prevChangedList = Xe.default.clone(Xe.default.pick(this.lastChangedList, t)), this.lastChangedList = Xe.default.omit(this.lastChangedList, t), o.skipHistory || (this.lastSave = Date.now());
        let r = Xe.default.map(e, function(i) {
            return {
                model: i.model,
                attrs: i.attrs
            }
        });
        o.skipHistory || $t.add(r, o), Xe.default.each(e, function(i) {
            let n = i.model.cloneJSON();
            if (o.patch) {
                let s = i.setAttrs;
                n = Xe.default.deepExtend({}, this.historyModelsList[i.model.id].attrs, s)
            }
            this.historyModelsList[i.model.id] = {
                model: i.model,
                attrs: n
            }
        }, this)
    }
});
var Of = e_;
en();
var t_ = {
    "template-constructor-workspace": Ot `


	<div class="workspace" aria-label="Workspace">
		<div class="origin" >
		</div>
        <div class="selectframe">
            <div class="frameborder"></div>
        </div>
		<div class="workspace-border"></div>
		<div class="page-size-control"></div>
		<div id="comments"></div>
	</div>
`
};
n0();
rr();
Ph();
$o();
qh();
bI();
Hx();
vr();
G0();
var Gf = M(Ac()),
    h_ = M(F());
_c();
Fa();
var Gr = M(F());
var o_ = (e, o) => {
    let t = e.getFullYear().toString(),
        r = (e.getMonth() + 1).toString(),
        i = e.getDate().toString();
    switch (r = r.length === 1 ? "0" + r : r, i = i.length === 1 ? "0" + i : i, o) {
        case "YYYYMMDD":
            return t + r + i;
        case "MMDDYYYY":
            return r + i + t;
        case "DDMMYYYY":
            return i + r + t;
        default:
            throw new Error("Invalid date format pattern")
    }
};
var u_ = M(iy());
var r_ = M(x6()),
    lm = r_.default;
te();
Ue();
W();
He();
var i_ = M(F());
var n_ = e => {
    let [o, t] = (0, i_.useState)(e);
    return {
        isOpen: o,
        onToggle: () => t(!o),
        onOpen: () => t(!0),
        onClose: () => t(!1)
    }
};
Ai();
Ah();
te();
W();
NI();
be();
var cm = M(F()),
    s_ = e => {
        (0, cm.useEffect)(() => {
            if (!e) return;
            let o = document.createElement("script");
            return o.type = "text/javascript", o.innerHTML = `(function(){${e}})()`, document.body.appendChild(o), () => {
                window.onClearWhatsNewPopup && window.onClearWhatsNewPopup(), document.body.removeChild(o)
            }
        }, [e])
    },
    a_ = e => {
        (0, cm.useLayoutEffect)(() => {
            if (!e) return;
            let o = document.createElement("style");
            return o.innerHTML = e, document.head.appendChild(o), () => {
                document.head.removeChild(o)
            }
        }, [e])
    };
y();
var rB = e => e.hover ? {
        ":hover": e.hover
    } : {},
    l_ = N(f)
`
  z-index: 0;
  width: 336px;
  height: 496px;
  display: flex;
  color: #fff;
  border-radius: 8px;
  position: relative;
  user-select: none;
  background-size: cover;
  flex-direction: column;
  -webkit-font-smoothing: initial;
  ${tn("backgroundColor")}
  ${tn("backgroundImage",{transform:e=>()=>`url(${e})`})})}
`;
l_.defaultProps = {
    id: "popup-wrapper"
};
var $f = N(we)
`
  font-size: 16px;
  margin-top: 25px;
  text-align: center;
`;
$f.defaultProps = {
    id: "popup-caption"
};
var Hf = N(we)
`
  font-size: 24px;
  font-weight: 400;
  text-align: center;
  padding-bottom: 3px;
`;
Hf.defaultProps = {
    id: "popup-date-caption"
};
var Ff = N(we)
`
  text-align: center;
  ${tn("lineHeight",{transform:e=>()=>`${e}px`})};
  ${tn("marginTop")};
`;
Ff.defaultProps = {
    id: "popup-title"
};
var Nf = tk;
Nf.defaultProps = {
    id: "popup-image"
};
var Wf = N(we)
`
  text-align: center;
  ${tn("lineHeight",{transform:e=>()=>`${e}px`})};
  ${tn("marginTop")};
`;
Wf.defaultProps = {
    id: "popup-description"
};
var Vf = N(ze)
`
  display: block;
  cursor: pointer;
  font-size: 16px;
  text-decoration: none;
  user-select: none;
  text-align: center;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  transition: 0.1s color, 0.1s background-color, 0.1s border-radius, 0.1s width, 0.1s height, 0.1s line-height;
  ${tn("lineHeight",{transform:e=>()=>`${e}px`})};
  ${tn("backgroundColor")};
  ${rB}
`;
Vf.defaultProps = {
    id: "popup-button"
};

function c_({
    customJsCode: e,
    customCssCode: o,
    ...t
}) {
    return a_(o), s_(e), a(l_, { ...t
    })
}
ny();
y();
var [iB] = En, p_ = 5, es = (e => (e.prev = "prev", e.next = "next", e.show = "show", e.close = "close", e.outsideClose = "outsideClose", e.buttonClick = "buttonClick", e))(es || {});

function nB({
    defaultIsOpen: e = !1,
    getWhatsNew: o,
    onSeen: t,
    formatDate: r,
    lastUserSeen: i,
    userRegistrationDate: n,
    onClose: s,
    onAction: l
}) {
    let p = (0, Gr.useRef)(!0),
        [d, c] = (0, Gr.useState)({
            limit: 10,
            skip: 0
        }),
        [m, u] = (0, Gr.useState)(0),
        [g, h] = (0, Gr.useState)([]),
        {
            isOpen: b,
            onClose: x,
            onOpen: S
        } = n_(e),
        v = (0, Gr.useRef)("");
    (0, Gr.useEffect)(() => {
        function E($) {
            o(d).then(G => {
                $(G), G.length < d.limit && (p.current = !1), h(de => [...de, ...G])
            })
        }
        E($ => {
            if (!b && i !== void 0 && n !== void 0 && $.length) {
                let [G] = $, de = new Date(G.date);
                new Date(i) < de && new Date(n) < de && S()
            }
        })
    }, [d]), (0, Gr.useEffect)(() => {
        b ? (t && t(), l && l("show", v.current)) : u(0)
    }, [b]);
    let P = () => {
            let E = Math.min(g.length, m + 1);
            E % p_ === 0 && g[E + p_] === void 0 && p.current && c({
                limit: 10,
                skip: d.skip + 10
            }), u(E), l ? .("next", I(g[E]))
        },
        C = () => {
            let E = Math.max(0, m - 1);
            u(E), l ? .("prev", I(g[E]))
        },
        k = E => {
            T(E, !0)
        },
        T = (E, $ = !1) => {
            if (x(), s && s(E), l) {
                let {
                    close: G,
                    outsideClose: de
                } = es;
                l ? .($ ? de : G, v.current)
            }
        },
        R = () => {
            l ? .("buttonClick", v.current)
        },
        I = E => {
            if (!E) return "";
            let $ = E.name ? .value || `_${E._id}`;
            return `${E.date&&o_(new Date(E.date),"YYYYMMDD")}${$}`
        },
        B = (0, Gr.useMemo)(() => {
            let E = g[m];
            return v.current = I(E), E
        }, [m, g]),
        L = b && B !== void 0,
        [D] = su(L);
    return L ? a(u_.default, {
        onExit: k,
        verticallyCenter: !0,
        titleId: "#popup-caption",
        initialFocus: "#close-popup-button",
        dialogStyle: D,
        underlayStyle: { ...D,
            zIndex: 1e4
        },
        children: w(f, {
            position: "relative",
            children: [w(c_, {
                customJsCode: B.js,
                customCssCode: B.css,
                ...B.wrapper.cssProperties,
                children: [a($f, { ...B.caption.cssProperties,
                    children: "What's New"
                }), a(Hf, { ...B.caption.cssProperties,
                    children: r(B.date)
                }), B.title.text ? a(Ff, {
                    dangerouslySetInnerHTML: {
                        __html: lm.sanitize(B.title.text)
                    },
                    ...B.title.cssProperties
                }) : null, B.picture.url ? a(Nf, {
                    marginLeft: "auto",
                    marginRight: "auto",
                    display: "block",
                    srcSet: `${B.picture.url}, ${B.picture.url2x} 2x`,
                    ...B.picture.cssProperties
                }) : null, B.description.text ? a(Wf, {
                    dangerouslySetInnerHTML: {
                        __html: lm.sanitize(B.description.text)
                    },
                    ...B.description.cssProperties
                }) : null, a(Vf, {
                    href: B.button.href,
                    target: "blank",
                    onClick: R,
                    hover: B.button.hover,
                    ...B.button.cssProperties,
                    children: B.button.text
                })]
            }, B._id), a(sB, {
                id: "close-popup-button",
                variant: "unstyled",
                onClick: T,
                children: a(Lt, {
                    height: 14,
                    width: 14,
                    color: "white"
                })
            }), w(f, {
                position: "absolute",
                display: "flex",
                flexDirection: "column",
                bottom: 2,
                right: -64,
                children: [a(d_, {
                    disabled: m === 0,
                    onClick: C,
                    dir: "up",
                    variant: "unstyled",
                    children: a($s, {
                        height: 14,
                        width: 14,
                        color: "#424242"
                    })
                }), a(d_, {
                    dir: "down",
                    variant: "unstyled",
                    onClick: P,
                    disabled: m === g.length - 1,
                    children: a($s, {
                        height: 14,
                        width: 14,
                        color: "#424242"
                    })
                })]
            })]
        })
    }) : null
}
var sB = N(ge)
`
  top: 0;
  right: -56px;
  position: absolute;
  border-radius: 50%;
  opacity: 0.6;

  &:focus-within {
    outline-offset: 1px;
    outline: 1px auto rgb(153, 200, 255);
  }

  &:hover {
    opacity: 1;
  }

  @media (max-width: ${iB}) {
    top: -56px;
    right: 0;
  }
`, d_ = N(ge)
`
  width: 32px;
  height: 32px;
  display: flex;
  border-radius: 50%;
  margin-top: 8px;
  align-items: center;
  justify-content: center;
  background-color: ${({theme:e})=>e.colors.gray};

  &:focus-within {
    outline-offset: 1px;
    outline: 1px auto rgb(153, 200, 255);
  }

  &:hover {
    background-color: #fff;
  }

  ${e=>`transform: rotate(${e.dir==="up"?"90deg":"270deg"});`}
`, Uf = nB;
Ye();
$a();
var m_ = async e => {
        let {
            data: o
        } = await po.get("/api/whats-new", e);
        return o || []
    },
    g_ = async e => {
        await po.post("/api/whats-new/seen", {
            date: e,
            type: "popup"
        })
    };
y();

function aB(e) {
    let o = new Date().getFullYear(),
        t = new Date(e).getFullYear(),
        r = o === t ? "MMMM d" : "MMMM d, yyyy";
    return xr(new Date(e), r)
}

function pm(e) {
    let o = (0, h_.useCallback)((t, r) => {
        let i = n => {
            re(fe.WhatsNewPopup, {
                action: n,
                content: r
            })
        };
        switch (t) {
            case es.show:
                i("impression");
                break;
            case es.next:
            case es.prev:
                i(t === es.next ? "up" : "down"), i("impression");
                break;
            case es.buttonClick:
                i("click");
                break;
            default:
                i("close")
        }
    }, []);
    return a(Uf, {
        formatDate: aB,
        onSeen: () => g_(new Date().toISOString()),
        getWhatsNew: m_,
        onAction: o,
        ...e
    })
}
var jf = (e, {
    lastUserSeen: o,
    userRegistrationDate: t
}) => {
    let r = Gf.default.createRoot(e);

    function i() {
        r.unmount(), r = Gf.default.createRoot(e)
    }

    function n() {
        r.render(a($r, {
            withGlobalStyles: !1,
            children: a(pm, {
                lastUserSeen: o,
                userRegistrationDate: t
            })
        }))
    }
    return n(), {
        unmount: i
    }
};
Ye();
Mh();
Kh();
Dn();
ai();
No();
kt();
var E8 = M(ir());
Fa();
W();
Ee();
Jt();
Ut();
var hi = M(F());
Lr();
y();
var pr = (0, hi.createContext)({
    user: void 0,
    isFreePlan: !0,
    setUserOptions: () => {},
    setUserMetrics: () => {}
});

function dm({
    userModel: e,
    children: o
}) {
    let [t, r] = (0, hi.useState)(() => e ? { ...e.attributes
    } : void 0);
    (0, hi.useEffect)(() => {
        function l(p) {
            r(d => ({ ...d,
                ...p.attributes
            }))
        }
        return e ? .on("change", l), () => {
            e ? .off("change", l)
        }
    }, []);
    let i = (0, hi.useCallback)(l => {
            if (t) {
                let p = { ...t.opts,
                    ...l
                };
                r({ ...t,
                    opts: p
                }), e ? .save({
                    opts: p
                }, {
                    patch: !0,
                    silent: !0
                })
            }
        }, [e, t]),
        n = (0, hi.useCallback)(l => {
            e ? .save({
                behavior_metrics: { ...e.get("behavior_metrics") || {},
                    ...l
                }
            }, {
                patch: !0,
                silent: !0
            })
        }, [e]),
        s = !!(window ? .RM ? .constructorRouter ? .isOwner && Je.isFreePlan(t ? .plan));
    return a(pr.Provider, {
        value: {
            user: t,
            isFreePlan: s,
            setUserOptions: i,
            setUserMetrics: n
        },
        children: o
    })
}
var Tl = () => (0, hi.useContext)(pr);
te();
W();
Ro();
Q6();
var Ml = M(F());
G6();
j6();
W();
Ue();
No();
Tt();
te();
y();

function lB({
    id: e,
    targetSteps: o,
    hidden: t,
    width: r,
    height: i,
    borderRadius: n,
    onClick: s,
    onMouseEnter: l,
    onMouseLeave: p,
    className: d,
    children: c,
    backgroundColor: m,
    disableHover: u = !1,
    color: g,
    disabled: h,
    tooltip: b,
    tooltipPosition: x,
    tooltipDisabled: S,
    tooltipPadding: v,
    forceTooltip: P,
    "data-testid": C,
    tooltipPreventOverflow: k,
    cursor: T
}) {
    let R = a(f, {
            onMouseEnter: l,
            onMouseLeave: p,
            className: d,
            width: r || 56,
            height: i || 56,
            alignItems: "center",
            justifyContent: "center",
            borderRadius: n || 30,
            color: g || h ? "gray" : "white",
            backgroundColor: m || Ie(P ? "black" : "darkGray", .88),
            cursor: T || "pointer",
            backdropFilter: "blur(3px)",
            display: t ? "none" : "flex",
            css: ne `
        ${u?"":`
          &:hover {
            background: ${Be(.12,h?q.darkGray:q.black)};
          }
        `}
      `,
            children: c
        }),
        I = {
            key: b,
            placement: x || "top",
            indent: 4,
            open: S ? !1 : P,
            preventOverflow: k,
            componentProps: {
                tooltip: {
                    padding: v
                }
            }
        };
    return a(f, {
        display: "flex",
        id: e,
        "data-testid": C,
        onClick: s,
        children: b ? a(mt, { ...I,
            targetSteps: o,
            defaultText: b,
            children: R
        }) : R
    })
}
var Il = f.withComponent(lB);
Ee();
kt();
nn();
al();
y();

function cB({
    previewOnly: e,
    hidden: o
}) {
    let t = (0, Ml.useContext)(Le),
        {
            switchToPreview: r
        } = (0, Ml.useContext)(me),
        {
            switchToConstructor: i
        } = (0, Ml.useContext)(sr),
        [n, s] = (0, Ml.useState)(!1),
        l = e || t.inPreview;
    return lr("p", () => {
        l ? i() : r()
    }, [l, i, r], {
        ignoreSelector: window.RM.constructorRouter.workspaceTextInputSelectors
    }), a(Il, {
        id: "preview-toggle-button",
        targetSteps: ["PreviewAndPublish", "BackToConstructor", "CheckPreview", "GoBackToEditor"],
        tooltip: l ? "Edit (P)" : "Preview (P)",
        tooltipDisabled: n,
        hidden: o,
        onMouseEnter: () => n && s(!1),
        tooltipPreventOverflow: 16,
        onClick: () => {
            l ? i() : r(), s(!0), l ? Oe(["BackToConstructor", "GoBackToEditor"]) : (window.RM.constructorRouter.trigger("notice:triggerEduTipClose"), Oe(["PreviewAndPublish", "CheckPreview"]))
        },
        children: l ? a(kv, {
            preserveAspectRatio: "none",
            width: 38,
            height: 38
        }) : a(_v, {
            height: "26px",
            width: "38px"
        })
    })
}
var um = cB;
var un = M(F());
Ee();
nn();
W();
be();
ar();
Ue();
ut();
ut();
var fi = e => e.is_published ? e.changed ? "unpublishedChanges" : "sameAsPublished" : "unpublished",
    mm = (e, o = !1) => {
        let t = ae.readymag_viewer_host,
            r = t.split("//")[1],
            i = e.domain,
            n = e.user.domain,
            s = o ? `${t.split("//")[0]}//` : "",
            l = i || n || `${r}/${e.user.uri}`;
        return s + l
    },
    f_ = e => {
        let o = ae.readymag_viewer_host;
        return e.domain ? e.domain : `${o}/${e.uri}`
    },
    b_ = e => /[^\x00-\x7f]/.test(e) ? e.replace(/[^\x00-\x7f]/g, "") : e,
    w_ = e => /\s/.test(e) ? e.replace(/\s/g, "") : e,
    gm = e => {
        let o = e.trim();
        return o = o.replace(/^\/\//, ""), o = o.replace(/^[A-Za-z]+?:\/\//, ""), o = o.replace(/\/.*$/, ""), o = o.replace(/:\d*$/, ""), o = o.replace(/^.*?@/, ""), o = o.trim(), o
    },
    qf = e => {
        let o = "",
            t = "",
            r = "";
        return e && (e.arecord && (o = "A-record", t = e.usedArecord || t, r = e.validArecord || r), e.cname && (o = "CNAME-record", t = e.usedCname || t, r = e.validCname && e.validCname + "." || r)), {
            domain: e.domain,
            subdomain: e.subdomain,
            recordType: o,
            currentValue: t,
            neededValue: r
        }
    },
    Yf = (e, o = "") => e.replace(/(\r?\n|\r)+/g, o);
Kt();
Tt();
zd();
te();
vr();
kt();
Sr();
zd();
y();

function dB({
    textStyle: e,
    ...o
}) {
    let t = (0, un.useContext)(me),
        r = (0, un.useContext)(Le),
        {
            switchToConstructor: i
        } = (0, un.useContext)(sr),
        {
            showNotice: n
        } = Dd(),
        s = fi(t.project),
        l = (0, un.useCallback)(() => {
            let g = "Injected Code, Forms, Lottie and Shots will not work in Published project.",
                h = !t.hasPermission("can_inject_code") && t.hasCustomCode(),
                b = !t.hasPermission("can_use_shots") && t.hasShots(),
                x = !t.hasPermission("can_use_forms") && t.hasForms();
            (h || b || x) && n(g, {
                canBeClosed: !0,
                closeByTimer: !0
            })
        }, []),
        d = `${ae.readymag_viewer_host}/${t.project.user.uri}/${t.project.uri}/`,
        c = (0, un.useMemo)(() => {
            let g = t.pages.find(h => h._id === t.currentPageId);
            return g && g.num !== 1 ? `${d}num/${g.num_id}` : d
        }, [d, t.currentPageId]),
        m = !t.isPublishError && !t.publishInProgress && s === "sameAsPublished",
        u = (0, un.useCallback)(async () => {
            if (s !== "sameAsPublished" && !t.publishInProgress) try {
                await t.publishWithNotice({
                    fromPreview: r.inPreview,
                    isSharedAsTemplate: r.isCopyableSwitcherEnabled
                });
                let g = r.inPreview ? i : t.switchToPreview;
                Oe("BackToConstructor", {
                    cb: g
                })
            } catch (g) {
                if (g instanceof Ga && g.type === "warning") {
                    await t.publishWithNotice({
                        skipWarnings: !0,
                        alsoExport: r.exportAsTemlate,
                        dontRenewScreenshots: r.dontRenewScreenshots,
                        isSharedAsTemplate: r.isCopyableSwitcherEnabled
                    });
                    let h = ["type-widget-shots", "type-code-injection", "type-widget-shots", "type-widget-lottie"];
                    g.tag && h.includes(g.tag) ? tt("widgets") : tt("default")
                } else if (g instanceof Ga) {
                    let h = {
                        canBeClosed: !0,
                        closeByTimer: !0
                    };
                    g.tag === "type-publish-noemail" ? n(g.message, h) : g.tag === "type-publish-limit" ? tt("publish-limit") : g.tag === "type-publish-paused-subcription" ? n(g.message, h) : tt("default")
                } else throw g
            }
        }, [s, t.publishInProgress, r.isCopyableSwitcherEnabled, t.project.isCopyableTemplate, i, t.switchToPreview]);
    return a(f, {
        id: "publish-button",
        width: 128,
        height: 56,
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        borderRadius: 30,
        backgroundColor: Be(.12, q.darkGray),
        color: "white",
        position: "relative",
        cursor: "pointer",
        backdropFilter: "blur(3px)",
        css: ne `
        &:hover {
          background: ${Be(.12,q.black)};
        }
      `,
        onMouseEnter: m ? void 0 : l,
        onClick: u,
        ...o,
        children: a(A, {
            textStyle: e,
            textAlign: "center",
            as: m ? "a" : "span",
            href: m ? c : void 0,
            target: "_blank",
            display: "block",
            lineHeight: "52px",
            height: "56px",
            textDecoration: "none",
            color: "inherit",
            ...m ? {
                position: "absolute",
                top: 0,
                right: 0,
                bottom: 0,
                left: 0
            } : {},
            children: t.isPublishError ? "Error" : t.publishInProgress ? a(Rt, {
                bgColor: "transparent"
            }) : s === "unpublishedChanges" ? "Republish" : s === "sameAsPublished" ? "Open" : "Publish"
        })
    })
}
var x_ = dB;
var ts = M(F());
W();
be();
Gs();
te();
Kt();
Ue();
Tt();
Ye();
Jt();
var mo = M(F());
Lh();
te();
W();
Oh();
te();
Jt();
hI();
n0();
Ee();
y();
var dp = (0, mo.createContext)({});
dp.displayName = "ToolbarPopoverContext";
var uB = (0, mo.forwardRef)(({
        stroke: e
    }, o) => a("svg", {
        ref: o,
        width: "16",
        height: e ? "10" : "8",
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: e ? "0 0 16 10" : "0 0 16 8",
        children: e ? w(Y, {
            children: [a("path", {
                fill: "currentColor",
                d: "M16 0H0V2C2.20914 2 4 3.79086 4 6C4 8.20914 5.79086 10 8 10C10.2091 10 12 8.20914 12 6C12 3.79086 13.7909 2 16 2V0Z",
                fillRule: "evenodd"
            }), a(f, {
                as: "path",
                fillRule: "evenodd",
                fill: e,
                d: "M0 0.0059433V2.00594C2.20914 2.00594 4 3.79681 4 6.00594C4 8.21508 5.79086 10.0059 8 10.0059C10.2091 10.0059 12 8.21508 12 6.00594C12 3.79681 13.7909 2.00594 16 2.00594V0.0059433C16 0.0059433 14.8115 0.00594401 14 0.347355C12 1.18877 10 3.39351 10 6.00594C10 7.11051 9.10457 8.00594 8 8.00594C6.89543 8.00594 6 7.11051 6 6.00594C6 3.39351 4.33039 1.17103 2 0.347355C1.36768 0.129361 0.930277 0.0625123 0 0.0059433Z"
            })]
        }) : a("path", {
            fill: "currentColor",
            d: "M0 0C2.20914 0 4 1.79086 4 4C4 6.20914 5.79086 8 8 8C10.2091 8 12 6.20914 12 4C12 1.79086 13.7909 0 16 0H0Z",
            fillRule: "evenodd"
        })
    })),
    Yt = (0, mo.forwardRef)(({
        id: e,
        name: o,
        closeOnOutsideClick: t = !0,
        onWindowBlur: r,
        children: i,
        skidding: n,
        button: s,
        onToggle: l,
        isAutoHeight: p,
        panelPosition: d = {},
        ArrowProps: c = {},
        withArrow: m = !0,
        watchingClick: u = T => T,
        disabled: g = !1,
        disableInteractions: h = !1,
        disablePortal: b = !1,
        "data-testid": x,
        transform: S,
        onButtonClick: v,
        alwaysOpen: P,
        ...C
    }, k) => {
        let {
            currentPanel: T,
            openPanel: R,
            closePanels: I
        } = (0, mo.useContext)(_t), B = (0, mo.useContext)(Le), [L, D] = (0, mo.useState)(null), [E, $] = (0, mo.useState)(null), [G, de] = (0, mo.useState)(null), Q = (0, mo.useRef)(null), U = (0, mo.useRef)(null), Z = T ? T === o : !1, [xe, ye] = (0, mo.useState)({
            tooltipContainer: Q.current || void 0,
            dropdownContainer: U.current || void 0
        });
        (0, mo.useEffect)(() => {
            (xe.tooltipContainer !== Q.current || xe.dropdownContainer !== U.current) && ye(he => ({ ...he,
                tooltipContainer: Q.current || void 0,
                dropdownContainer: U.current || void 0
            }))
        }, [Q.current, U.current]), (0, mo.useEffect)(() => {
            function he() {
                r ? .(document.activeElement, I)
            }
            return Z && r && window.addEventListener("blur", he), () => {
                window.removeEventListener("blur", he)
            }
        }, [Z, r, I]);
        let ve = uy({
                watchingClick: u(Z && !B.isUserTemplatesModalShown && !B.isRmTemplatesModalShown),
                callback: he => {
                    let le = !document.body.contains(he.target),
                        ue = ke => Array.from(document.querySelectorAll("#settings-container, #react-aria-modal-dialog, .template-center, #my-templates-modal, .constructor-navigation-arrows, body > .popups, .code-editor-modal-overlay, .help-shortcuts, .code-editor-block")).find(_e => _e && _e.contains(ke));
                    t && L && !L.contains(he.target) && !le && !ue(he.target) && I()
                }
            }, [t]),
            {
                styles: ee,
                attributes: oe,
                update: H
            } = rl(L, E, {
                placement: "top",
                modifiers: [{
                    name: "offset",
                    options: {
                        offset: [n || 0, 16]
                    }
                }, {
                    name: "arrow",
                    options: {
                        element: G,
                        padding: c.popperPadding
                    }
                }]
            });
        (0, mo.useEffect)(() => {
            H && H(), l && l(Z)
        }, [Z]);

        function se(he) {
            v ? v(he) : g || (Z ? I() : R(o))
        }
        return w(Y, {
            children: [(Z || P) && a(nl, {
                disablePortal: b,
                ref: he => {
                    if (b) {
                        let le = he;
                        $(le), ve.current = le
                    }
                },
                children: a(f, {
                    ref: he => {
                        b || ($(he), ve.current = he, k && (k.current = he))
                    },
                    id: e,
                    display: "flex",
                    flexDirection: "column",
                    justifyContent: "flex-end",
                    width: "224px",
                    height: p ? "auto" : La.isTablet() ? `${window.innerHeight-108}px` : "calc(100vh - 108px)",
                    maxHeight: La.isTablet() ? `${window.innerHeight-108}px` : "calc(100vh - 108px)",
                    zIndex: "7100",
                    style: { ...ee.popper,
                        ...S ? {
                            transform: S
                        } : {}
                    },
                    "data-testid": x,
                    css: ne `
                ${h?`
                  pointer-events: none;
                  user-select: none;

                  * {
                    pointer-events: none !important;
                    user-select: none !important;
                  }
                `:""}
              `,
                    ...d,
                    ...oe.popper,
                    children: w(dp.Provider, {
                        value: xe,
                        children: [typeof i == "function" ? i({
                            popoverShown: Z
                        }) : i, m && a(f, {
                            zIndex: "1",
                            bottom: -10,
                            ref: de,
                            style: ee.arrow,
                            position: "absolute",
                            color: c.backgroundColor || Ie("lightGray", .96),
                            ...c.position,
                            children: a(uB, {
                                stroke: c.stroke
                            })
                        }), a(f, {
                            ref: Q
                        }), a(f, {
                            ref: U
                        })]
                    })
                })
            }), a(f, {
                ref: D,
                ...C,
                onClick: se,
                opacity: g ? .4 : 1,
                pointerEvents: g ? "none" : "all",
                children: s({
                    isPanelShown: Z
                })
            })]
        })
    });
y();
y();
Ee();
nn();
jd();
W();
y();

function zt({
    padding: e,
    margin: o,
    "data-testid": t,
    textAlign: r = "center",
    children: i
}) {
    return a(f, {
        width: "100%",
        padding: e || "12px 16px",
        margin: o || "0",
        borderRadius: "8px",
        backgroundColor: "white",
        textAlign: r,
        "data-testid": t || "common-error-message",
        children: i
    })
}
RI();
No();
kt();
y();
var mB = ({
    isActive: e,
    name: o,
    divider: t = !0,
    disabled: r
}) => a(f, {
    width: "100%",
    height: 48,
    display: "flex",
    cursor: "pointer",
    userSelect: "none",
    alignItems: "center",
    position: "relative",
    justifyContent: "left",
    "data-testid": "project-settings-viewer",
    "aria-label": `${o} viewer settings tab`,
    borderTop: "2px solid",
    borderTopColor: t ? "gray" : "transparent",
    css: ne `
        &:hover {
          & span {
            color: ${e&&r?q.gray:e?q.black:q.red};
          }
        }
      `,
    children: a(f, {
        position: "relative",
        bottom: "2px",
        children: a(A, {
            color: r ? "gray" : "black",
            textStyle: "subheading",
            children: o
        })
    })
});

function Zf({
    children: e,
    button: o,
    ...t
}) {
    let {
        desktopOptions: r,
        phoneOptions: i,
        tabletOptions: n,
        setProjectOptions: s,
        viewport: l,
        setViewport: p,
        currentPageId: d,
        iframeElement: c
    } = (0, ts.useContext)(sr), {
        getProjectPermissionsOverrides: m,
        pages: u
    } = Ya(), [g] = Ud(), h = u.find(k => k._id === d), b = h ? .viewport_phone_portrait ? .enabled, x = h ? .viewport_tablet_portrait ? .enabled, S = Zt(), v = (0, ts.useMemo)(() => ({
        default: {
            options: r,
            ...m(r),
            name: "Desktop"
        },
        tablet_portrait: {
            options: n,
            ...m(n),
            name: "Tablet"
        },
        phone_portrait: {
            options: i,
            ...m(i),
            name: "Mobile"
        }
    }), [i, n, r, m]), P = g === "iPhone SE horizontal" && !x ? "default" : g === "iPhone SE horizontal" && x ? "tablet_portrait" : l, C = (0, ts.useCallback)((k, T) => {
        k === c && T()
    }, [c]);
    return a(Yt, {
        disablePortal: !0,
        name: "viewer-settings",
        skidding: -28,
        button: o,
        onWindowBlur: C,
        ArrowProps: {
            stroke: Be(.84, q.gray)
        },
        onToggle: k => {
            k ? re(fe.SettingsPreviewViewer, {
                action: "viewer settings open"
            }) : S.started && S.tourType === "pro" && S ? .step ? .name === "PointerCursorUpload" && Oe("PointerCursorUpload")
        },
        ...t,
        children: a(f, {
            width: 224,
            height: "100%",
            color: "black",
            display: "flex",
            borderRadius: "2rm",
            flexDirection: "column",
            backgroundColor: "lightGray",
            border: "2px solid rgba(184, 184, 184, 0.16)",
            children: a(f, {
                height: "calc(100% - 100px)",
                flexGrow: 1,
                children: a(cr, {
                    transition: {
                        mass: 1,
                        stiffness: 210,
                        damping: 20
                    },
                    value: P,
                    onChange: k => {
                        l && p(k), k === "phone_portrait" && re(fe.SettingsPreviewViewer, {
                            action: "mobile tab open"
                        })
                    },
                    children: Object.keys(v).map((k, T) => {
                        let {
                            options: R,
                            disabled: I,
                            name: B
                        } = v[k], L = k === "phone_portrait", D = k === "tablet_portrait", E = D ? x : L ? b : !0, $ = (0, ts.useMemo)(() => D || L ? ["scalableviewer", "slidein", "projectinfo", "useCustomCursor", "controlsontop", "viewerNext"] : [], [D, L]), G = (0, ts.useCallback)(de => {
                            s(de, k)
                        }, [k, s]);
                        return a(Qt, {
                            value: k,
                            renderButton: ({
                                isActive: de
                            }) => w(f, {
                                padding: "0 16px",
                                children: [B === "Desktop" && a(f, {
                                    position: "relative",
                                    top: 24,
                                    children: a(mt, {
                                        targetSteps: ["SwitchToDesktop"],
                                        position: "left",
                                        indent: 24,
                                        children: a("div", {})
                                    })
                                }), a(mB, {
                                    isActive: de,
                                    name: B,
                                    divider: T > 0,
                                    disabled: !E
                                })]
                            }),
                            children: de => a(f, {
                                ref: de,
                                paddingLeft: 16,
                                paddingRight: 16,
                                paddingBottom: 16,
                                "aria-label": `${B} viewer`,
                                children: E ? a(Wy, {
                                    selectedViewport: P,
                                    options: R,
                                    exclude: $,
                                    disabled: I,
                                    setProjectOptions: G
                                }) : a(zt, {
                                    margin: "0 0 14px",
                                    children: a(A, {
                                        textStyle: "small",
                                        color: "black",
                                        children: "Desktop layout is used"
                                    })
                                })
                            })
                        }, k)
                    })
                })
            })
        })
    })
}
var Bl = M(F());
te();
Ho();
He();
Tt();
No();
y();
var v_ = (0, Bl.createContext)({
    isSomeHovered: !1,
    getButtonProps: () => ({})
});

function y_({
    children: e
}) {
    let {
        isHovered: o,
        ...t
    } = Ze(), r = (0, Bl.useCallback)(() => t, [t]);
    return a(v_.Provider, {
        value: {
            isSomeHovered: o,
            getButtonProps: r
        },
        children: e
    })
}
var gB = N(Ge)
`
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: ${({isActive:e,theme:o})=>e?Be(.25,o.colors.black):"initial"};

  &:hover {
    background-color: ${({theme:e})=>Be(.25,e.colors.black)};
  }
`;

function Jf({
    TooltipProps: e,
    tooltipTargetSteps: o,
    icon: t,
    isActive: r,
    ...i
}) {
    let {
        isSomeHovered: n,
        getButtonProps: s
    } = (0, Bl.useContext)(v_);
    return a(mt, {
        indent: 8,
        leaveDelay: 100,
        enterDelay: 1400,
        open: e.disabled ? !1 : void 0,
        ...e,
        defaultText: e.text,
        targetSteps: o,
        children: a("span", {
            children: a(gB, {
                variant: "unstyled",
                isActive: !n && r,
                "aria-label": e.text,
                ...i,
                ...s(),
                children: t
            })
        })
    })
}
y();
var k_ = () => w("svg", {
    width: "56",
    height: "56",
    viewBox: "0 0 56 56",
    fill: "currentColor",
    xmlns: "http://www.w3.org/2000/svg",
    children: [a("path", {
        d: "M36.0343 20.5346C36.4265 20.9248 36.4273 21.5593 36.0361 21.9505C35.6463 22.3404 35.0145 22.3412 34.6237 21.9523L28.9741 16.3309L29.0009 34.0111C29.0017 34.5569 28.5595 34.9998 28.0137 34.9998C27.4691 34.9998 27.0274 34.5587 27.0265 34.0141L26.9998 16.3903L21.4028 21.9817C21.0123 22.3719 20.3794 22.3718 19.989 21.9814C19.5983 21.5907 19.5985 20.9573 19.9893 20.5668L27.2331 13.3302C27.3191 13.2443 27.4169 13.1773 27.5213 13.1292C27.9048 12.8986 28.4098 12.948 28.7414 13.2779L36.0343 20.5346Z",
        fill: "currentColor"
    }), a("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M16 25.9999C16.5523 25.9999 17 26.4476 17 26.9999V36.9999C17 39.7613 19.2386 41.9999 22 41.9999H34C36.7614 41.9999 39 39.7613 39 36.9999V26.9999C39 26.4476 39.4477 25.9999 40 25.9999C40.5523 25.9999 41 26.4476 41 26.9999V36.9999C41 40.8659 37.866 43.9999 34 43.9999H22C18.134 43.9999 15 40.8659 15 36.9999V26.9999C15 26.4476 15.4477 25.9999 16 25.9999Z",
        fill: "currentColor"
    })]
});
var Pm = M(F());
W();
nn();
Jt();
var Sm = M(F());
W();
Gs();
var oa = M(F());
W();
He();
be();
Ye();
te();
te();
W();
y();
var hB = e => a("svg", {
        width: 44,
        height: 16,
        viewBox: "0 0 44 16",
        fill: "currentColor",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M8.6665 2H13.9998C17.3135 2 19.9998 4.68629 19.9998 8C19.9998 11.3137 17.3135 14 13.9998 14H8.66651C5.3528 14 2.6665 11.3137 2.6665 8C2.6665 4.68629 5.3528 2 8.6665 2ZM0.666504 8C0.666504 3.58172 4.24823 0 8.6665 0H13.9998C18.4181 0 21.9998 3.58172 21.9998 8C21.9998 12.4183 18.4181 16 13.9998 16H8.66651C4.24823 16 0.666504 12.4183 0.666504 8ZM21.9998 8C21.9998 12.4183 25.5816 16 29.9998 16H35.3332C39.7514 16 43.3332 12.4183 43.3332 8C43.3332 3.58172 39.7514 0 35.3332 0H29.9998C25.5816 0 21.9998 3.58172 21.9998 8ZM29.9998 2H35.3332C38.6469 2 41.3332 4.68629 41.3332 8C41.3332 11.3137 38.6469 14 35.3332 14H29.9998C26.6861 14 23.9998 11.3137 23.9998 8C23.9998 4.68629 26.6861 2 29.9998 2Z",
            fill: "currentColor"
        })
    }),
    fB = f.withComponent(N(hB)
        `
      display: block;
    `),
    __ = fB;
Ee();
ut();
y();

function C_({
    shareMode: e
}) {
    let [o, t] = (0, oa.useState)(!1), {
        project: r,
        currentPageId: i,
        pages: n
    } = (0, oa.useContext)(me), s = (0, oa.useMemo)(() => n.find(d => d._id === i), [i]), l = (0, oa.useMemo)(() => {
        let d = ae.readymag_viewer_host;
        return r.domain || new URL(d).hostname
    }, [r.domain]), p = () => {
        let d = e === "page" ? `${s?.num}` : r.num_id,
            c = RM.common.embedDomainName || window.location.protocol + "//" + l;
        navigator.clipboard.writeText(`${c}/${d}`), t(!0), re(fe.SettingsProject, {
            settingsType: "copy link"
        }), r.isPublishedAsTemplate && re("settingsProject", {
            settingsType: "copy link of user template"
        }), setTimeout(() => t(!1), 2500)
    };
    return w(f, {
        display: "flex",
        flexDirection: "column",
        gap: 16,
        paddingBottom: 16,
        children: [r.is_published ? null : a(vB, {}), a(f, {
            children: a(xB, {
                icon: a(__, {}),
                onClick: p,
                disabled: !r.is_published,
                label: o ? "Copied" : "Copy Link"
            })
        })]
    })
}
var bB = N(Ge)
`
  &:disabled {
    opacity: initial;
  }
`, wB = N(we)
`
  opacity: ${e=>e.disabled?"0.4":"initial"};
`;

function xB({
    label: e,
    icon: o,
    onClick: t,
    disabled: r
}) {
    return w(bB, {
        width: 88,
        display: "block",
        textAlign: "left",
        onClick: t,
        disabled: r,
        children: [a(f, {
            height: 88,
            display: "flex",
            borderRadius: 6,
            position: "relative",
            alignItems: "center",
            justifyContent: "center",
            backgroundColor: "white",
            children: o
        }), a(wB, {
            textStyle: "small",
            marginTop: "8px",
            color: "black",
            display: "block",
            disabled: r,
            children: e
        })]
    })
}
var vB = () => a(f, {
    children: a(zt, {
        children: a(we, {
            textStyle: "small",
            color: "black",
            children: "Invite collaborators or share your project openly once published."
        })
    })
});
var jr = M(F()),
    hm = M(ir());
He();
be();
W();
var os = M(F());
W();
He();
be();
kr();
Ye();
W();
jc();
var S_ = M(Ws());
al();
var go = {
        sidebarZindex: 7100,
        sidebarWidth: "240px",
        popupZindex: 9999,
        moveSpeed: "0.3s"
    },
    ra = {
        projectSettings: 1,
        pageItem: 1,
        footerButtons: 2,
        helpPanel: 3
    };
y();

function yB({
    children: e,
    onExit: o
}) {
    return lr(S_.Key.Escape, o, [o]), w(Y, {
        children: [a(Li, {
            zIndex: go.popupZindex - 1,
            backgroundColor: "#000",
            "data-testid": "export-modal-overlay",
            onClick: o
        }), a(f, {
            display: "flex",
            position: "fixed",
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            zIndex: go.popupZindex - 1,
            margin: "auto",
            padding: "16px 24px 28px 24px",
            borderRadius: "8px",
            flexDirection: "column",
            backgroundColor: "lightGray",
            width: 336,
            height: 584,
            role: "dialog",
            "aria-modal": "true",
            children: e
        })]
    })
}
var Rl = yB;
ja();
te();
y();

function kB({
    numId: e,
    onExit: o,
    totalPages: t,
    email: r = "your email"
}) {
    let [i, n] = (0, os.useState)(!1), [s, l] = (0, os.useState)(!1), [p, d] = (0, os.useState)(""), [c, m] = (0, os.useState)(!1), [u, g] = (0, os.useState)(), [h, b] = (0, os.useState)(!1), [x, S] = (0, os.useState)(""), v = R => {
        let I = [],
            B = R.split(",").map(L => L.trim());
        for (let L of B) {
            if (!/^\d+$/.test(L) && !/^\d+-\d+$/.test(L)) return S("Please enter valid numeric values and valid ranges (e.g., 1-5)"), [];
            if (/^\d+$/.test(L)) {
                let D = parseInt(L, 10);
                if (D === 0) return S("Pages amount can not be 0"), [];
                I.push(D)
            } else if (/^\d+-\d+$/.test(L)) {
                let [D, E] = L.split("-").map($ => parseInt($, 10));
                for (let $ = D; $ <= E; $++) I.push($)
            }
        }
        return Math.max(...I) > t ? (S("It\u2019s impossible to export more pages than the project includes"), []) : Array.from(new Set(I))
    };
    return w(Rl, {
        onExit: o,
        children: [a(A, {
            as: "div",
            textStyle: "subheading",
            marginBottom: 24,
            lineHeight: "30px",
            children: "Export to PDF"
        }), i ? w(Y, {
            children: [w(A, {
                as: "div",
                children: ["Your project is being converted.", a("br", {}), "We will send you the download link to ", r, " when it\u2019s ready."]
            }), a(ge, {
                width: "100%",
                height: 56,
                marginTop: "auto",
                variant: "bordered",
                onClick: o,
                children: "Done"
            })]
        }) : w(Y, {
            children: [w("form", {
                onSubmit: async R => {
                    if (s) return;
                    R.preventDefault();
                    let I;
                    try {
                        I = c ? v(p) : void 0
                    } catch (B) {
                        g(B);
                        return
                    }
                    try {
                        l(!0), await ax(e, I), l(!1), n(!0), re(fe.SettingsProject, {
                            settingsType: "export to pdf"
                        })
                    } catch (B) {
                        l(!1), b(!0), S(B), setTimeout(() => {
                            b(!1), S("")
                        }, 5e3)
                    }
                },
                children: [w(f, {
                    display: "flex",
                    children: [a(f, {
                        width: "50%",
                        children: a(ze, {
                            color: c ? "gray" : "black",
                            onClick: R => {
                                R.preventDefault(), m(!1), S("")
                            },
                            children: "All pages"
                        })
                    }), a(f, {
                        width: "50%",
                        children: a(St, {
                            name: "page-range",
                            value: p,
                            placeholder: "or select e.g. 2-8",
                            onChange: R => {
                                g(void 0), S("");
                                let {
                                    value: I
                                } = R.target;
                                m(!!I), d(I), v(I)
                            },
                            onFocus: () => {
                                m(!!p), g(void 0), v(p)
                            },
                            padding: 0,
                            color: c ? "black" : "gray",
                            css: ne `
                    &:focus {
                      border: none;
                    }
                  `
                        })
                    })]
                }), a(ge, {
                    disabled: h || !!x || s,
                    width: "100%",
                    height: 56,
                    marginTop: 20,
                    variant: "bordered",
                    children: h || x ? "Error" : "Create PDF"
                })]
            }), !!x && a(A, {
                as: "div",
                textStyle: "small",
                color: "tomato",
                marginTop: 14,
                children: x
            }), u && a(A, {
                as: "div",
                textStyle: "small",
                color: "tomato",
                marginTop: 14,
                children: u
            }), a(A, {
                as: "div",
                marginTop: "auto",
                textStyle: "small",
                color: "darkGray",
                children: "Please note: due to license restrictions, all Adobe Fonts or type.today fonts will be replaced with alternatives."
            })]
        })]
    })
}
var P_ = kB;
var zl = M(F());
Ye();
te();
ja();
be();
He();
kr();
W();
pi();
y();
var up = N(f)
`
  & + & {
    margin-top: 1.3em;
  }
`;

function _B({
    numId: e,
    defaultSearchEngineIndexing: o,
    email: t = "your email",
    onExit: r
}) {
    let [i, n] = (0, zl.useState)(!1), [s, l] = (0, zl.useState)(""), [p, d] = (0, zl.useState)(!1), [c, m] = (0, zl.useState)(!1), [u, g] = (0, zl.useState)(o);
    return w(Rl, {
        onExit: r,
        children: [a(A, {
            as: "div",
            textStyle: "subheading",
            marginBottom: 24,
            lineHeight: "30px",
            children: "Export to HTML"
        }), i ? w(Y, {
            children: [w(A, {
                as: "div",
                children: ["Your project is being converted. We will send you the download link to ", t, " when it\u2019s ready."]
            }), a(ge, {
                width: "100%",
                height: 56,
                marginTop: "auto",
                variant: "bordered",
                onClick: r,
                children: "Done"
            })]
        }) : w(Y, {
            children: [w("form", {
                onSubmit: async b => {
                    if (!(c || !s)) {
                        b.preventDefault();
                        try {
                            m(!0), re(fe.SettingsProject, {
                                settingsType: "export to html"
                            }), await lx(e, {
                                origin: s,
                                searchEngineIndexing: u
                            }), n(!0), m(!1)
                        } catch {
                            m(!1), d(!0), setTimeout(() => d(!1), 5e3)
                        }
                    }
                },
                children: [a(A, {
                    as: "div",
                    children: "Please provide the full path for your destination webpage. Typekit fonts will only work on the URL specified."
                }), a(St, {
                    name: "base-url",
                    placeholder: "domain.com or domain.com/page",
                    value: s,
                    onChange: b => l(b.target.value),
                    padding: 0,
                    marginTop: 12,
                    css: ne `
                &:focus {
                  border: none;
                }
              `
                }), a(ge, {
                    disabled: !s || p || c,
                    width: "100%",
                    height: 56,
                    marginTop: 20,
                    variant: "bordered",
                    children: p ? "Error" : "Create export"
                }), w(f, {
                    as: "label",
                    display: "flex",
                    alignItems: "center",
                    marginTop: 20,
                    justifyContent: "space-between",
                    children: [a(A, {
                        children: "Search engine indexing"
                    }), a(Nt, {
                        backgroundChecked: "green",
                        checked: u,
                        onChange: g
                    })]
                })]
            }), w(A, {
                as: "div",
                marginTop: "auto",
                textStyle: "small",
                color: "darkGray",
                children: [a(up, {
                    children: "Please note:"
                }), a(up, {
                    children: "Exported forms will not work with Google Docs or Mailchimp. The URL option will still be available."
                }), a(up, {
                    children: "Page-specific sharing settings will not be exported. Sharing settings from the first page will be applied to the whole project."
                }), a(up, {
                    children: "Exported projects cannot be password-protected."
                }), a(up, {
                    children: a(ze, {
                        textStyle: "small",
                        href: "https://help.readymag.com/hc/en-us/articles/360020647452-Code-export",
                        target: "_blank",
                        rel: "noopener noreferrer",
                        children: "Learn more"
                    })
                })]
            })]
        })]
    })
}
var T_ = _B;
var mn = M(F());
Ye();
W();
be();
wu();
He();
Hh();
dy();
pi();
y();

function CB({
    magUrl: e,
    projectNumId: o,
    onIframeEmbedAllowedChange: t,
    isIframeEmbedAllowed: r = !1,
    onExit: i
}) {
    let [n, s] = (0, mn.useState)("Copy code"), [l, p] = (0, mn.useState)(0), [d, c] = (0, mn.useState)(0), [m, u] = (0, mn.useState)(!1), g = [{
        title: "Pixels"
    }, {
        title: "Percentage"
    }], h = l === 0, b = d === 0, [x, S] = (0, mn.useState)(640), [v, P] = (0, mn.useState)(480), [C, k] = (0, mn.useState)(100), [T, R] = (0, mn.useState)(100), I = h ? `width: ${x}px` : `width: ${C}%`, B = b ? `height: ${v}px` : `height: ${T}%`, D = `<iframe src="${m?e:`${e}?link_target=parent`}" style="border: 0; ${I}; ${B};"></iframe>`, E = () => {
        navigator.clipboard.writeText(D), s("Copied"), re(fe.SettingsProject, {
            settingsType: "export to iframe"
        }), setTimeout(() => {
            s("Copy code")
        }, 2500)
    }, $ = () => {
        t(r ? "disallow" : "allow", o)
    }, G = h ? x : C, de = String(G).length, Q = de === 4 ? 42 : de === 5 ? 33.6 : 56, U = de === 4 ? 1.5 : de === 5 ? 1.835 : 1, Z = b ? v : T, xe = String(Z).length;
    return w(Rl, {
        onExit: i,
        children: [a(A, {
            as: "div",
            textStyle: "subheading",
            marginBottom: 26,
            lineHeight: "30px",
            children: "Embed as iframe"
        }), w(f, {
            display: "flex",
            marginBottom: "4px",
            children: [w(f, {
                width: 144,
                children: [a(A, {
                    display: "block",
                    children: "Width"
                }), a(f, {
                    marginLeft: -16,
                    marginTop: "-3px",
                    marginBottom: "1px",
                    width: 140,
                    children: a(Yc, {
                        items: g,
                        onChange: p,
                        activeIndex: l
                    })
                }), a(Ns, {
                    fontSize: Q,
                    value: G,
                    lineHeight: U,
                    height: 66,
                    min: 0,
                    max: h ? 99999 : 100,
                    maxLength: 5,
                    onChange: ({
                        value: ee
                    }) => h ? S(ee) : k(ee)
                })]
            }), w(f, {
                children: [a(A, {
                    display: "block",
                    children: "Height"
                }), a(f, {
                    marginLeft: -16,
                    marginTop: "-3px",
                    marginBottom: "1px",
                    width: 140,
                    children: a(Yc, {
                        items: g,
                        onChange: c,
                        activeIndex: d
                    })
                }), a(Ns, {
                    fontSize: xe === 4 ? 42 : xe === 5 ? 33.6 : 56,
                    value: Z,
                    lineHeight: xe === 4 ? 1.5 : xe === 5 ? 1.835 : 1,
                    height: 66,
                    min: 0,
                    max: b ? 99999 : 100,
                    maxLength: 5,
                    onChange: ({
                        value: ee
                    }) => b ? P(ee) : R(ee)
                })]
            })]
        }), w(f, {
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            marginBottom: "2rm",
            children: [a(A, {
                fontSize: 12,
                textStyle: "small",
                color: "black",
                children: "Open links within the same iframe"
            }), a(Nt, {
                checked: m,
                backgroundChecked: "black",
                onChange: () => {
                    u(!m)
                }
            })]
        }), a(Pr, {
            height: "104px",
            padding: "12px 15px",
            fontSize: "12px",
            fontWeight: "500",
            lineHeight: "16px",
            color: "darkGray",
            backgroundColor: "white",
            border: "1px solid rgba(64, 64, 64, 0.08)",
            borderRadius: "8px",
            rows: 5,
            readOnly: !0,
            value: D
        }), a(ge, {
            variant: "bordered",
            width: "100%",
            height: 56,
            marginTop: "2rm",
            marginBottom: 32,
            onClick: E,
            children: n
        }), w(f, {
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            paddingBottom: 15,
            borderBottom: "2px solid rgba(230, 230, 230)",
            marginBottom: 20,
            children: [a(A, {
                fontSize: 12,
                textStyle: "small",
                color: "black",
                children: "Allow third-party embeds"
            }), a(Nt, {
                checked: r,
                backgroundChecked: "black",
                onChange: $
            })]
        }), a(A, {
            fontSize: 12,
            marginBottom: 16,
            textStyle: "small",
            color: "darkGray",
            children: "With an iframe, a Readymag project can be inserted into any other web page in a few minutes."
        }), a(ze, {
            textStyle: "small",
            href: "https://help.readymag.com/hc/en-us/articles/4417292690587",
            target: "_blank",
            rel: "noopener noreferrer",
            children: "Learn more"
        })]
    })
}
var I_ = CB;
Ee();
Sr();
Kt();
ut();
M6();
y();

function fm() {
    let e = (0, jr.useContext)(me),
        o = e.hasPermission("can_export_pdf"),
        t = e.hasPermission("can_export_code"),
        r = e.hasPermission("can_use_iframe"),
        [i, n] = (0, jr.useState)(!1),
        [s, l] = (0, jr.useState)(!1),
        [p, d] = (0, jr.useState)(!1),
        [c, m] = (0, jr.useState)(!1),
        [u, g] = (0, jr.useState)(!1),
        [h, b] = (0, jr.useState)(!1),
        [x, S] = (0, jr.useState)(""),
        v = document.querySelector("body > .popups"),
        P = e.project,
        C = e.isSubscriptionPaused(),
        k = L => {
            let D = ae.readymag_viewer_host;
            return L || `${D}/${P.user.uri}/${P.uri}/`
        },
        T = async (L, D, E) => {
            let $ = k(P.domain);
            if (E) {
                let G = await cx("user", E);
                G.userdomain_data && G.userdomain_data.status === "on" && G.userdomain_data.type && G.userdomain_data.type.toLowerCase() === "user" && G.userdomain_data.user && G.userdomain_data.user._id === L && G.userdomain_data.mag && G.userdomain_data.mag.num_id && G.userdomain_data.mag.num_id === D ? S(k(E)) : S($)
            } else S($)
        };
    (0, jr.useEffect)(() => {
        T(P.user._id, P.num_id, P.user.domain)
    }, []);
    let R = () => {
            o ? l(!0) : tt("export-pdf")
        },
        I = () => {
            t ? n(!0) : tt("export-html")
        },
        B = () => {
            r ? d(!0) : tt("export-iframe")
        };
    return w(f, {
        display: "flex",
        flexDirection: "column",
        gap: 16,
        children: [C && P.is_published && a(zt, {
            children: a(A, {
                textStyle: "small",
                color: "black",
                children: "To activate export and embed options, the subscription has to be active."
            })
        }), !P.is_published && a(zt, {
            children: a(A, {
                textStyle: "small",
                color: "black",
                children: "To activate export and embed options, the project has to be published."
            })
        }), a(ge, {
            display: "block",
            disabled: !P.is_published,
            width: "100%",
            height: 40,
            variant: "bordered",
            textStyle: "small",
            onClick: C ? void 0 : R,
            "data-testid": "export-pdf-button",
            children: C ? a(ze, {
                textStyle: "small",
                display: "block",
                color: "inherit",
                href: "/settings#change-plan",
                lineHeight: "inherit",
                onMouseEnter: () => m(!0),
                onMouseLeave: () => m(!1),
                children: c ? "Unpause" : "PDF"
            }) : "PDF"
        }), a(ge, {
            display: "block",
            disabled: !P.is_published,
            width: "100%",
            height: 40,
            variant: "bordered",
            textStyle: "small",
            onClick: C ? void 0 : I,
            "data-testid": "export-html-button",
            children: C ? a(ze, {
                textStyle: "small",
                display: "block",
                color: "inherit",
                href: "/settings#change-plan",
                lineHeight: "inherit",
                onMouseEnter: () => g(!0),
                onMouseLeave: () => g(!1),
                children: u ? "Unpause" : "HTML"
            }) : "HTML"
        }), a(ge, {
            display: "block",
            disabled: !P.is_published,
            width: "100%",
            height: 40,
            variant: "bordered",
            textStyle: "small",
            onClick: C ? void 0 : B,
            "data-testid": "export-iframe-button",
            children: C ? a(ze, {
                textStyle: "small",
                display: "block",
                color: "inherit",
                href: "/settings#change-plan",
                lineHeight: "inherit",
                onMouseEnter: () => b(!0),
                onMouseLeave: () => b(!1),
                children: h ? "Unpause" : "iframe"
            }) : "iframe"
        }), i && v ? hm.default.createPortal(a(T_, {
            numId: e.project.num_id,
            email: e.project.user.email,
            onExit: () => n(!1),
            defaultSearchEngineIndexing: e.project.opts.allowindex
        }), v) : null, s && v ? hm.default.createPortal(a(P_, {
            numId: e.project.num_id,
            onExit: () => l(!1),
            totalPages: e.pages.length,
            email: e.project.user.email
        }), v) : null, p && v ? hm.default.createPortal(a(I_, {
            magUrl: x,
            projectNumId: P.num_id,
            isIframeEmbedAllowed: P.allow_iframe_embed,
            onIframeEmbedAllowedChange: (L, D) => {
                e.toggleAllowIframeEmbed(L, D)
            },
            onExit: () => d(!1)
        }), v) : null]
    })
}
var gn = M(F());
W();
Gs();
be();
Ue();
te();
var Wt = M(F());
Fr();
wu();
W();
be();
pi();
var Rr = M(F());
var El = M(F());
Tt();
He();
Ue();
W();
Ee();
Ye();
y();
var mp = (0, El.memo)(({
    link: e,
    margin: o,
    color: t,
    borderColor: r
}) => {
    let [i, n] = (0, El.useState)("Copy link"), {
        project: s
    } = (0, El.useContext)(me), l = () => {
        n("Copied"), s.isPublishedAsTemplate && re("settingsProject", {
            settingsType: "copy link of user template"
        }), setTimeout(() => {
            n("Copy link")
        }, 2500)
    }, p = async d => {
        d.preventDefault(), await navigator.clipboard.writeText(e), l()
    };
    return w(f, {
        display: "flex",
        width: "100%",
        height: 40,
        margin: o || 0,
        justifyContent: "space-between",
        children: [a(ge, {
            width: 92,
            height: 40,
            variant: "bordered",
            borderColor: r || Be(.92, q.black),
            textStyle: "small",
            color: t || "black",
            onClick: p,
            children: i
        }), a(ge, {
            boxSizing: "border-box",
            width: 92,
            height: 40,
            variant: "bordered",
            borderColor: r || Be(.92, q.black),
            as: "a",
            href: e,
            target: "_blank",
            textStyle: "small",
            color: t || "black",
            lineHeight: "38px",
            "data-testid": "open-project-by-link",
            children: "Open"
        })]
    })
});
mp.displayName = "OpenAndCopyLink";
var yo = M(F()),
    M_ = M(ir());
Oy();
kr();
W();
be();
Ue();
te();
y();
var SB = (e, o, t, r = "left") => ({
        top: Math.abs(e.top - o.top) - t.height / 2 + o.height / 2,
        left: r === "right" ? Math.abs(e.left - o.left) + o.width : Math.abs(e.left - o.left) - t.width
    }),
    B_ = e => {
        if (e) return e.scrollHeight > e.clientHeight ? e : e.parentNode ? B_(e.parentNode) : void 0
    };

function PB({
    link: e,
    disabled: o,
    id: t,
    name: r,
    placeholder: i,
    color: n,
    inactiveColor: s,
    textStyle: l = "regular",
    withSlash: p,
    validationMessageContainer: d = document.body,
    validationMessageAnchor: c,
    validationMessageZIndex: m,
    validationMessagePlacement: u = "left",
    validate: g,
    filter: h,
    onDone: b,
    setInputRef: x,
    ...S
}) {
    let [v, P] = (0, yo.useState)(e || ""), [C, k] = (0, yo.useState)(v), [T, R] = (0, yo.useState)(!1), [I, B] = (0, yo.useState)(), [L, D] = (0, yo.useState)(), [E, $] = (0, yo.useState)(!1), [G, de] = (0, yo.useState)(!1), Q = (0, yo.useCallback)(oe => {
        oe.keyCode === 13 && (oe.preventDefault(), oe.currentTarget.blur())
    }, []), U = oe => {
        let H = h ? h(oe.currentTarget.value) : oe.currentTarget.value,
            se = g(H);
        $(!1), P(H), B(se)
    }, Z = (0, yo.useCallback)(() => {
        R(!1), I ? (P(C), B(void 0)) : (k(v), b(v))
    }, [v, C, I]), xe = (0, yo.useCallback)(() => {
        k(v), R(!0), $(!1)
    }, [v]), ye = (0, yo.useCallback)(oe => {
        if (c && d && oe) {
            let H = oe.getBoundingClientRect();
            D(SB(d.getBoundingClientRect(), c.getBoundingClientRect(), H, u))
        }
    }, [c, d]);
    (0, yo.useEffect)(() => {
        P(e || ""), k(e || "")
    }, [e]);
    let ve = (0, yo.useRef)(null),
        ee = (0, yo.useCallback)(() => $(!0), []);
    return (0, yo.useEffect)(() => {
        let oe = G && ve.current ? B_(ve.current) : void 0;
        return oe && (I ? oe.addEventListener("scroll", ee) : oe.removeEventListener("scroll", ee)), () => {
            oe && oe.removeEventListener("scroll", ee)
        }
    }, [ve, G, I]), w(f, {
        display: "flex",
        ...S,
        ref: oe => {
            ve.current = oe, de(!0)
        },
        children: [p && a(A, {
            textStyle: l,
            color: (T || v) && !o ? n || q.black : s || q.gray,
            children: "/"
        }), a(St, {
            ref: oe => {
                x && x(oe)
            },
            type: "text",
            id: t,
            name: r,
            textStyle: l,
            color: I ? q.red : n || q.black,
            placeholder: i,
            spellCheck: !1,
            autoComplete: "off",
            autoCorrect: "off",
            value: v,
            disabled: o,
            onKeyDown: Q,
            onChange: U,
            onFocus: xe,
            onBlur: Z,
            height: "auto",
            padding: 0,
            textOverflow: "ellipsis",
            css: ne `
          &::placeholder {
            color: ${s||q.gray};
          }
          &:disabled {
            color: ${s||q.gray};
          }
          &:focus {
            border: none;
          }
        `
        }), T && I && d && !E && M_.default.createPortal(a(xu, {
            marginLeft: "-4px",
            visibility: L ? "visible" : "hidden",
            ref: ye,
            text: I || "",
            position: "absolute",
            arrowPosition: u === "right" ? {
                right: "100%",
                transform: "translateX(4px) rotate(90deg)"
            } : void 0,
            top: L && L.top,
            left: L && L.left,
            zIndex: 10
        }, I), d)]
    })
}
var Al = PB;
W();
be();
y();
var TB = e => {
    let o = [{
            regex: /(_)/gi,
            replacer: "-"
        }, {
            regex: /([^a-zA-Z0-9-])/gi,
            replacer: ""
        }, {
            regex: /(-{2,})/gi,
            replacer: "-"
        }],
        t = e;
    return o.forEach(r => {
        t.match(r.regex) && (t = t.replace(r.regex, r.replacer))
    }), t
};
var IB = (e, o, t) => {
        let r = e.toLowerCase();
        if (/(^-)|(-$)/.test(r)) return new Error("The link should not start or end with a hyphen");
        if (r === "info") return new Error("Sorry, info is not acceptable");
        if (r && r.length > 128) return new Error("The link should be less than 128 characters long");
        if (/^[0-9]+$/.test(r) && r !== o.toString()) return new Error("The link should not consist of digits only");
        if (!t.reduce((i, n) => i && r !== n.uri, !0)) return new Error("You already have a project with this link")
    },
    Qf = (0, Rr.memo)(({
        projectNumId: e,
        publishState: o,
        projectUri: t,
        fullProjectLink: r,
        urlDomainString: i,
        hideInput: n,
        loadUserProjectsLinks: s,
        saveProjectUri: l
    }) => {
        let [p, d] = (0, Rr.useState)([]), [c, m] = (0, Rr.useState)(!1);
        (0, Rr.useEffect)(() => {
            c || (m(!0), s().then(x => {
                d(x), m(!1)
            }).finally(() => {
                m(!1)
            }))
        }, []);
        let u = (0, Rr.useCallback)(x => {
                let S = IB(x, e, p);
                return S ? S.message : void 0
            }, [e, p]),
            g = (0, Rr.useCallback)(x => {
                l(x || e.toString())
            }, [e]),
            h = (0, Rr.useCallback)(x => TB(x), []),
            b = (0, Rr.useRef)(null);
        return w(Y, {
            children: [w(f, {
                width: "100%",
                marginTop: 22,
                whiteSpace: "nowrap",
                textOverflow: "ellipsis",
                overflow: "hidden",
                children: [a(A, {
                    as: "label",
                    textStyle: "small",
                    htmlFor: "project-link",
                    color: "black",
                    children: "URL"
                }), a(f, {
                    marginTop: "2px",
                    children: a(A, {
                        as: "label",
                        textStyle: "small",
                        htmlFor: "project-link",
                        title: i,
                        color: "black",
                        children: `${i}/`
                    })
                }), a(f, {
                    ref: b,
                    marginBottom: "10px",
                    children: !n && a(Al, {
                        validationMessageAnchor: b.current,
                        validationMessageContainer: document.getElementById("settings-popup-container"),
                        textStyle: "regular",
                        name: "project-link",
                        id: "project-link",
                        placeholder: e.toString(),
                        link: t,
                        disabled: c,
                        marginTop: "4px",
                        validate: u,
                        filter: h,
                        onDone: g
                    })
                })]
            }), o !== "unpublished" && a(mp, {
                link: r,
                margin: "2px 0 0 0"
            })]
        })
    });
Qf.displayName = "LinkSettings";
var ko = M(F());
W();
be();
pi();
Ue();
du();
Tt();
Ye();
Ee();
Sr();
Us();
ja();
Lr();
be();
W();
te();
var ia = M(F());
be();
W();
qc();
Ue();
Ai();
Nr();
Bv();
te();
ut();
Kc();
var R_ = "https://st-p.rmcdn1.net/ae5fa58f/dist/bg-JAKY5MEK.jpg";
y();
var BB = ({
        passwordBackground: e,
        saveBgImage: o
    }) => {
        let [t, r] = (0, ia.useState)(!1), [i, n] = (0, ia.useState)(!1), [s, l] = (0, ia.useState)(!1), [p, d] = (0, ia.useState)(() => e), c = (0, ia.useCallback)(async u => {
            if (n(!1), u.size > ae.UPLOAD_IMAGE_SIZE_LIMIT) {
                window.alert(ae.MSG_UPLOAD_IMAGE_SIZE_ERROR);
                return
            }
            if (!s) {
                l(!0);
                try {
                    let g = await Vn("password-bg", u);
                    g && g.picture && g.picture.url && (d(g.picture.url), o(g.picture.url).fail(() => {
                        d(e)
                    }).always(() => {
                        l(!1)
                    }))
                } catch {
                    l(!1)
                }
            }
        }, [s]), m = u => {
            u.preventDefault(), u.stopPropagation(), !s && (l(!0), d(void 0), o("").fail(() => {
                d(e)
            }).always(() => {
                l(!1)
            }))
        };
        return w(Y, {
            children: [a(A, {
                textStyle: "small",
                children: "Password page background"
            }), a(f, {
                width: 192,
                height: 125,
                marginTop: "4px",
                marginBottom: "8px",
                position: "relative",
                opacity: i ? .8 : 1,
                onDragEnter: () => {
                    i || n(!0)
                },
                onDragLeave: () => {
                    i && n(!1)
                },
                onMouseEnter: () => r(!0),
                onMouseLeave: () => r(!1),
                children: a(Oi, {
                    id: "privacy-bg-upload",
                    accept: "image/*",
                    dropFile: !0,
                    readFileData: !1,
                    onChange: c,
                    children: w(Y, {
                        children: [a(f, {
                            width: 192,
                            height: 125,
                            backgroundColor: "darkGrey",
                            borderRadius: "4px",
                            position: "relative",
                            cursor: "pointer",
                            boxShadow: "0 1px 1px rgba(64, 64, 64, 0.32)",
                            children: a(f, {
                                display: "flex",
                                width: "100%",
                                height: "100%",
                                borderRadius: "4px",
                                backgroundImage: p ? `url(${p})` : `url(${R_})`,
                                backgroundSize: "cover",
                                backgroundPosition: "center",
                                backgroundRepeat: "no-repeat"
                            })
                        }), (t || s) && !i && w(f, {
                            display: "flex",
                            width: 96,
                            height: 32,
                            position: "absolute",
                            left: 0,
                            right: 0,
                            bottom: 9,
                            margin: "auto",
                            justifyContent: "space-around",
                            children: [a(f, {
                                display: "flex",
                                width: 32,
                                height: 32,
                                justifyContent: "center",
                                alignItems: "center",
                                border: "1px solid rgba(128, 128, 128, 0.16)",
                                borderRadius: "50%",
                                backgroundColor: "white",
                                cursor: s ? "default" : "pointer",
                                css: ne `
                    &:hover {
                      & svg {
                        color: ${q.red};
                      }
                    }
                    &:active {
                      background-color: ${q.red};
                      & svg {
                        color: ${q.white};
                      }
                    }
                    animation: ${s?"loadingindicatoranimation":"none"} 2s infinite linear;
                    @keyframes loadingindicatoranimation {
                      from {
                        transform: rotateZ(0deg);
                      }
                      to {
                        transform: rotateZ(360deg);
                      }
                    }
                  `,
                                children: a(Zd, {
                                    color: "black"
                                })
                            }), p && !s && a(Ct, {
                                height: 32,
                                width: 32,
                                color: "white",
                                hoverColor: "white",
                                activeColor: "tomato",
                                outline: !0,
                                onClick: m,
                                css: ne `
                      &:hover {
                        & svg {
                          color: ${q.red};
                        }
                      }
                      &:active {
                        background-color: ${q.red};
                        & svg {
                          color: ${q.white};
                        }
                      }
                    `,
                                children: a(Lt, {
                                    color: "black"
                                })
                            })]
                        })]
                    })
                })
            })]
        })
    },
    bm = BB;
y();
var RB = ({
        passwordBackground: e,
        saveBgImage: o,
        isEmailWhiteListErrShown: t,
        combinedWhiteList: r
    }) => a(Y, {
        children: w(f, {
            width: "100%",
            children: [a(f, {
                margin: "5px 0 14px",
                children: t ? a(f, {
                    display: "flex",
                    justifyContent: "center",
                    alignItems: "center",
                    textAlign: "center",
                    padding: "14px 19px",
                    backgroundColor: "white",
                    borderRadius: 8,
                    children: w(A, {
                        color: "black",
                        textStyle: "small",
                        children: ["First, add trusted emails", a("br", {}), "in", " ", a(ze, {
                            as: "a",
                            color: "tomato",
                            href: "/settings",
                            target: "_blank",
                            css: ne `
                    &:hover {
                      opacity: 0.8;
                    }
                  `,
                            children: "Settings"
                        })]
                    })
                }) : w(f, {
                    display: "flex",
                    flexDirection: "column",
                    children: [a(A, {
                        lineHeight: "16px",
                        color: "darkGray",
                        textStyle: "small",
                        children: "Trusted emails"
                    }), r.map((i, n) => a(A, {
                        lineHeight: "20px",
                        color: "black",
                        children: i
                    }, n))]
                })
            }), a(bm, {
                passwordBackground: e,
                saveBgImage: o
            })]
        })
    }),
    z_ = RB;
W();
be();
kr();
te();
Ue();
zy();
y();
var zB = ({
        editPasswordMode: e,
        projectPassword: o,
        onPasswordChange: t,
        savePassword: r,
        setEditPasswordMode: i,
        privacyType: n,
        hasPrivatePages: s,
        onPrivacyTypeChange: l,
        passwordBackground: p,
        saveBgImage: d
    }) => {
        let c = u => {
                u.key === "Enter" && (u.preventDefault(), u.currentTarget.blur())
            },
            m = () => [s ? a(A, {
                textStyle: "small",
                color: "white",
                display: "block",
                userSelect: "none",
                paddingTop: "1px",
                children: "Pages"
            }, "pages") : a(A, {
                textStyle: "small",
                color: "white",
                display: "block",
                userSelect: "none",
                children: "Selected"
            }, "pages"), a(A, {
                textStyle: "small",
                color: "white",
                userSelect: "none",
                children: "All pages"
            }, "project")];
        return w(f, {
            width: "100%",
            marginTop: "16px",
            children: [a(f, {
                display: "flex",
                justifyContent: "space-between",
                children: e ? w(Y, {
                    children: [a(St, {
                        name: "project-password",
                        id: "project-password",
                        type: "text",
                        marginBottom: "4px",
                        color: "black",
                        fontSize: "16px",
                        spellCheck: !1,
                        autoComplete: "off",
                        autoCorrect: "off",
                        placeholder: "Set password",
                        value: o,
                        onKeyDown: c,
                        onChange: t,
                        css: ne `
                &:focus {
                  border: none;
                }
                &::placeholder {
                  color: ${q.gray};
                }
                &:disabled {
                  color: ${q.gray};
                }
              `
                    }), a(f, {
                        display: "flex",
                        height: 20,
                        justifyContent: "flex-start",
                        alignItems: "center",
                        children: a(ze, {
                            as: "a",
                            color: "tomato",
                            onClick: r,
                            css: ne `
                  &:hover {
                    opacity: 0.8;
                  }
                `,
                            children: "Save"
                        })
                    })]
                }) : w(Y, {
                    children: [a(A, {
                        textStyle: "regular",
                        marginBottom: "14px",
                        children: "Password"
                    }), a(f, {
                        display: "flex",
                        height: 20,
                        justifyContent: "flex-start",
                        alignItems: "center",
                        children: a(ze, {
                            as: "a",
                            color: "grey",
                            onClick: () => i(!0),
                            css: ne `
                  &:hover {
                    opacity: 0.8;
                  }
                `,
                            children: "Change"
                        })
                    })]
                })
            }), a(f, {
                marginBottom: "16px",
                children: a(fu, {
                    width: 192,
                    selected: n,
                    values: ["pages", "project"],
                    captions: m(),
                    onChange: l,
                    margin: "8px 0"
                })
            }), a(bm, {
                passwordBackground: p,
                saveBgImage: d
            })]
        })
    },
    E_ = zB;
zy();
y();
var A_ = (0, ko.memo)(({
    projectNumId: e,
    isPublished: o,
    disabled: t,
    canUseEmailProtection: r,
    isClosed: i,
    privacySwitchState: n,
    privateProjectSwitchState: s,
    privatePagesSwitchState: l,
    privateEmailProjectSwitchState: p,
    setPrivacySwitchState: d,
    setPrivateProjectSwitchState: c,
    setPrivatePagesSwitchState: m,
    setPrivateEmailProjectSwitchState: u,
    setPrivacy: g,
    saveBgImage: h,
    isProtected: b,
    passwordBackground: x
}) => {
    let S = (0, ko.useContext)(Le),
        v = (0, ko.useContext)(me),
        [P, C] = (0, ko.useState)(!1),
        [k, T] = (0, ko.useState)(!1),
        [R, I] = (0, ko.useState)(""),
        [B, L] = (0, ko.useState)(() => b),
        [D, E] = (0, ko.useState)(() => !b),
        [$, G] = (0, ko.useState)(r && p ? "email" : "password"),
        [de, Q] = (0, ko.useState)(l ? "pages" : "project"),
        U = (0, ko.useMemo)(() => window.RM.constructorRouter.me ? .get("magEmailWhitelist") || {
            allowedEmails: [],
            allowedDomains: []
        }, [window.RM.constructorRouter.me]),
        Z = (0, ko.useMemo)(() => [...U.allowedEmails, ...U.allowedDomains], [U.allowedEmails, U.allowedDomains]),
        xe = t && v.isSubscriptionPaused();
    (0, ko.useEffect)(() => {
        if (i) return;
        let le = v.pages.some(ue => ue.isPrivate);
        ($ === "email" && Z.length === 0 || $ === "password" && !B && !r || $ === "password" && r && de === "pages" && !le) && (d(!1), c(!1), m(!1), u(!1)), S.isPrivatePagesOpened && S.dispatch({
            type: "togglePrivatePages"
        })
    }, [i]), (0, ko.useEffect)(() => {
        if (S.isPrivatePagesOpened || !n) return;
        let le = v.pages.some(ue => ue.isPrivate);
        $ === "password" && !le && !r && ee("project")
    }, [S.isPrivatePagesOpened]);
    let ye = () => Ed(e).then(le => Je.facebookGraphRefresh(le)).catch(le => console.error(le)),
        ve = () => {
            if (t && !n) {
                tt("project-privacy");
                return
            }
            if (P) return;
            let le = !n;
            d(le), E(!B), S.isPrivatePagesOpened ? S.dispatch({
                type: "togglePrivatePages"
            }) : r && de === "pages" && S.dispatch({
                type: "togglePrivatePages"
            });
            let ue = {};
            if (le) {
                if (c(!0), m(!1), G(r ? "email" : "password"), Q("project"), r && (ue.isProjectEmailPrivate = {
                        isEnabled: !0,
                        ...U
                    }, Z.length === 0)) {
                    T(!0);
                    return
                }
            } else ue.isPrivate = !1, ue.isPrivatePages = !1, r && (ue.isProjectEmailPrivate = {
                isEnabled: !1,
                ...U
            });
            Object.keys(ue).length && (C(!0), g(ue).catch(() => {
                d(!le)
            }).finally(() => {
                C(!1), L(le), I("")
            })), o && ye()
        },
        ee = le => {
            let ue = le === "password" ? "project" : le;
            if (P) return;
            (ue === "pages" || ue === "project" && S.isPrivatePagesOpened || ue === "email" && S.isPrivatePagesOpened) && S.dispatch({
                type: "togglePrivatePages"
            });
            let ke = ue === "project",
                ie = ue === "pages",
                _e = ue === "email";
            if (c(ke), m(ie), u(_e), ue === "email" ? (G("email"), Q("project")) : (G("password"), Q(ue)), ue === "email" && Z.length === 0) {
                T(!0);
                return
            }
            let Ce = {};
            B && (Ce.isPrivate = ke, Ce.isPrivatePages = ie), r && (Ce.isProjectEmailPrivate = {
                isEnabled: ue === "email",
                ...U
            }), Object.keys(Ce).length && (C(!0), g(Ce).catch(() => {
                c(!ke), m(!ie), u(!_e)
            }).finally(() => {
                C(!1)
            }), o && ye()), k && T(!1)
        },
        oe = () => {
            R && (C(!0), g({
                isPrivate: !!R && s,
                isPrivatePages: !!R && l,
                password: R
            }).finally(() => {
                C(!1), ye(), L(!0), E(!1), I("")
            }), R && re(fe.SettingsProject, {
                settingsType: "protect with a password"
            }))
        },
        {
            callback: H
        } = Fn(oe, 500),
        se = le => {
            I(w_(b_(le.currentTarget.value)))
        },
        he = v.pages.some(le => le.isPrivate);
    return w(Y, {
        children: [w(f, {
            display: "flex",
            width: "100%",
            height: 24,
            marginBottom: n ? void 0 : "4px",
            justifyContent: "space-between",
            "data-testid": "password-protected-switcher",
            children: [a(A, {
                textStyle: "small",
                lineHeight: "24px",
                color: xe ? Be(.6, q.black) : "black",
                children: r ? "Protect project" : "Protect with a password"
            }), xe ? a(Yo, {
                width: 194,
                text: "Unpause your subscription to use password protection",
                boxPosition: {
                    marginLeft: "-169px"
                },
                arrowPosition: {
                    left: "auto",
                    right: 4
                },
                href: "https://help.readymag.com/hc/en-us/articles/360049959532-Protect-project-with-a-password"
            }) : a(Nt, {
                backgroundChecked: "green",
                checked: n,
                onChange: ve
            })]
        }), t && n && a(zt, {
            margin: "0 0 16px",
            children: a(A, {
                textStyle: "small",
                color: "black",
                children: "Please note that if you remove the password, you won\u2019t be able to set it back again as your current subscription plan doesn\u2019t support password protection."
            })
        }), n && w(Y, {
            children: [r && a(f, {
                children: a(fu, {
                    width: 192,
                    selected: $,
                    values: ["password", "email"],
                    captions: [a(A, {
                        textStyle: "small",
                        color: "white",
                        userSelect: "none",
                        children: "Password"
                    }, "password"), a(A, {
                        textStyle: "small",
                        color: "white",
                        display: "block",
                        userSelect: "none",
                        children: "Email"
                    }, "email")],
                    activeHoverColor: q.black,
                    onChange: ee,
                    margin: "8px 0"
                })
            }), $ === "email" ? a(z_, {
                passwordBackground: x,
                saveBgImage: h,
                isEmailWhiteListErrShown: k,
                combinedWhiteList: Z
            }) : a(E_, {
                editPasswordMode: D,
                projectPassword: R,
                onPasswordChange: se,
                savePassword: H,
                setEditPasswordMode: E,
                hasPrivatePages: he,
                privacyType: de,
                onPrivacyTypeChange: ee,
                saveBgImage: h,
                passwordBackground: x
            })]
        })]
    })
});
var wm = M(F());
W();
be();
pi();
y();
var eb = (0, wm.memo)(({
    projectHidden: e,
    profileUrl: o,
    saveProjectOptions: t
}) => {
    let [r, i] = (0, wm.useState)(() => e);
    return w(Y, {
        children: [w(f, {
            display: "flex",
            width: "100%",
            minHeight: 24,
            marginBottom: "4px",
            justifyContent: "space-between",
            alignItems: "center",
            children: [w(A, {
                textStyle: "small",
                color: "black",
                children: ["Add to my", " ", a(ze, {
                    href: o,
                    target: "_blank",
                    textStyle: "small",
                    children: "Public Profile"
                })]
            }), a(Nt, {
                backgroundChecked: "green",
                checked: !r,
                onChange: () => {
                    let s = !r;
                    i(s), t({
                        hidden: s
                    })
                }
            })]
        }), !r && w(A, {
            marginBottom: 4,
            textStyle: "small",
            lineHeight: "16px",
            color: "darkGray",
            letterSpacing: "-0.13px",
            children: ["Public Profile combines all your projects in one place.", " ", a(ze, {
                isUnderlined: !0,
                target: "_blank",
                href: "https://help.readymag.com/hc/en-us/articles/360026692531-Public-profile",
                color: "darkGray",
                children: "Learn more"
            })]
        })]
    })
});
eb.displayName = "VisibilitySettings";
var dr = M(F());
Ue();
te();
W();
pi();
be();
Ee();
Sr();
ut();
Ye();
y();
var tb = !1,
    ob = !1,
    rb = (0, dr.memo)(() => {
        let {
            isCopyableSwitcherEnabled: e,
            dispatch: o
        } = (0, dr.useContext)(Le), {
            isFreePlan: t
        } = (0, dr.useContext)(pr), r = (0, dr.useContext)(me), {
            project: i
        } = r, n = i.user ? .permissions || {}, s = !t && !n.can_publish_shared_template, [l, p] = (0, dr.useState)(() => tb ? ob : !1);
        (0, dr.useLayoutEffect)(() => {
            if (tb) return;
            sessionStorage.getItem("hasSeenTemplateShareDescription") ? (ob = !1, p(!1)) : (sessionStorage.setItem("hasSeenTemplateShareDescription", "true"), ob = !0, p(!0)), tb = !0
        }, []), (0, dr.useEffect)(() => {
            s && e && !i.is_published && (o({
                type: "toggleTemplateShareMode"
            }), r.projectSave({
                isCopyableTemplate: !1
            }, {
                patch: !0
            }))
        }, []);
        let d = (0, dr.useMemo)(() => e && !s && i.is_published ? i.isPublishedAsTemplate ? "match" : "republish-add" : i.is_published && i.isPublishedAsTemplate ? "republish-remove" : "", [i.is_published, i.isPublishedAsTemplate, e, s]),
            c = g => {
                if (i.is_published) {
                    if (g && !n.can_publish_shared_template) return tt("free-publish-template-limit");
                    if (!g && !n.can_publish) return tt("convert-template-to-published-limit")
                }
                o({
                    type: "toggleTemplateShareMode"
                }), r.projectSave({
                    isCopyableTemplate: g
                }, {
                    patch: !0
                }), re("settingsProject", {
                    settingsType: `template toggle ${g?"on":"off"}`
                })
            },
            m = s && a(f, {
                display: "flex",
                width: "100%",
                marginBottom: "4px",
                justifyContent: "space-between",
                alignItems: "center",
                backgroundColor: "white",
                padding: "14px 16px",
                borderRadius: 8,
                children: w(A, {
                    textStyle: "small",
                    lineHeight: "16px",
                    color: "black",
                    children: ["You've reached the limit of 20 templates. If you need more, please", " ", a(ze, {
                        target: "_blank",
                        href: `mailto:${ae.SUPPORT_MAIL}`,
                        color: "tomato",
                        css: ne `
            &:hover {
              color: ${q.black};
            }
          `,
                        children: "contact us"
                    })]
                })
            }),
            u = l && d && a(A, {
                textStyle: "small",
                lineHeight: "16px",
                color: "darkGray",
                letterSpacing: "-0.13px",
                marginBottom: 4,
                children: d === "match" ? w(Y, {
                    children: ["Now, all users can copy your project to their profiles.", " ", a(ze, {
                        textDecoration: "underline",
                        target: "_blank",
                        href: "https://readymag.notion.site/how-to-create-templates",
                        color: "darkGray",
                        children: "Details"
                    })]
                }) : `Click Republish to ${d.includes("add")?"convert your project to template":"change from a template to a published website"}.`
            });
        return w(Y, {
            children: [m, w(f, {
                display: "flex",
                width: "100%",
                minHeight: 24,
                justifyContent: "space-between",
                alignItems: "center",
                pointerEvents: s ? "none" : "auto",
                children: [a(A, {
                    textStyle: "small",
                    lineHeight: "24px",
                    opacity: s ? .4 : 1,
                    children: "\u0421onvert to template"
                }), a(Nt, {
                    disabled: s,
                    backgroundChecked: "green",
                    checked: e,
                    onChange: c
                })]
            }), u]
        })
    });
rb.displayName = "TemplateShareToggle";
Ee();
ut();
rr();
y();

function D_({
    isActive: e
}) {
    let o = (0, Wt.useContext)(Le),
        t = (0, Wt.useContext)(me),
        r = (Q, U) => `${ae.readymag_viewer_host}/${Q}/${U}/`,
        [i, n] = (0, Wt.useState)(() => t.project.title || ""),
        [s, l] = (0, Wt.useState)(!1),
        [p, d] = (0, Wt.useState)(() => t.project.description || ""),
        [c, m] = (0, Wt.useState)(!1),
        [u, g] = (0, Wt.useState)(r(t.project.user.uri, t.project.uri));
    (0, Wt.useEffect)(() => {
        s || n(t.project.title || "")
    }, [t.project.title]);
    let h = () => {
        l(!1);
        let Q = Yf(i, " ").trim();
        n(Q), t.projectSave({
            title: Q
        }, {
            patch: !0
        })
    };
    (0, Wt.useEffect)(() => {
        c || d(t.project.description || "")
    }, [t.project.description]);
    let b = () => {
            m(!1);
            let Q = p.trim();
            d(Q), t.projectSave({
                description: Q
            }, {
                patch: !0
            })
        },
        x = () => t.loadUserProjectsLinks(t.project.user._id),
        S = (0, Wt.useMemo)(() => mm(t.project), [t.project.domain, t.project.user.domain, t.project.user.uri]),
        v = (0, Wt.useMemo)(() => f_(t.project.user), [t.project.user]);
    (0, Wt.useEffect)(() => {
        g(r(t.project.user.uri, t.project.uri))
    }, [t.project.num_id, t.project.user.uri]);
    let P = (0, Wt.useCallback)(Q => {
            Q !== t.project.uri && t.projectSave({
                uri: Q
            }, {
                patch: !0
            }).then(() => {
                g(r(t.project.user.uri, Q))
            })
        }, []),
        [C, k] = (0, Wt.useState)(() => t.project.is_private || t.project.isPrivatePages || !!t.project.isProjectEmailPrivate ? .isEnabled),
        [T, R] = (0, Wt.useState)(() => t.project.is_private),
        [I, B] = (0, Wt.useState)(() => t.project.isPrivatePages),
        [L, D] = (0, Wt.useState)(() => !!t.project.isProjectEmailPrivate ? .isEnabled),
        E = (0, Wt.useCallback)(Q => t.projectSave({
            pass_bg: Q
        }, {
            patch: !0
        }), []),
        $ = (0, Wt.useMemo)(() => fi(t.project), [t.project.is_published, t.project.changed]),
        G = () => {
            o.dispatch({
                type: "toggleExportAsTemlate"
            })
        },
        de = ["free", "personal"].includes(t.me.plan ? .level || "free");
    return w(f, {
        marginTop: "10px",
        paddingBottom: 16,
        children: [a(A, {
            as: "label",
            textStyle: "small",
            htmlFor: "project-title-in-settings",
            children: "Title"
        }), a(Ft, {
            children: ({
                ref: Q
            }) => a(f, {
                width: "100%",
                maxHeight: 160,
                marginTop: "4px",
                ref: Q,
                children: a(Pr, {
                    name: "project-title-in-settings",
                    placeholder: "Give your project name",
                    translate: "no",
                    spellCheck: !1,
                    maxLength: 128,
                    rows: 1,
                    autoSize: !0,
                    textStyle: "regular",
                    color: "black",
                    value: i,
                    onChange: U => {
                        n(Yf(String(U.currentTarget.value)))
                    },
                    onFocus: () => {
                        l(!0)
                    },
                    onBlur: h
                })
            })
        }), a(f, {
            marginTop: 22,
            children: a(A, {
                as: "label",
                textStyle: "small",
                htmlFor: "project-description",
                children: "Description"
            })
        }), a(Ft, {
            children: ({
                ref: Q
            }) => a(f, {
                width: "100%",
                marginTop: "4px",
                ref: Q,
                children: a(Pr, {
                    name: "project-description",
                    placeholder: "What's it about...",
                    translate: "no",
                    spellCheck: !1,
                    maxLength: 6e3,
                    rows: 1,
                    autoSize: !0,
                    textStyle: "regular",
                    color: "black",
                    value: p,
                    onChange: U => {
                        d(U.currentTarget.value)
                    },
                    onFocus: () => {
                        m(!0)
                    },
                    onBlur: b
                })
            })
        }), a(Qf, {
            projectNumId: t.project.num_id,
            publishState: $,
            projectUri: t.project.uri,
            fullProjectLink: u,
            urlDomainString: S,
            hideInput: !!t.project.domain,
            loadUserProjectsLinks: x,
            saveProjectUri: P
        }), w(f, {
            display: "flex",
            width: "100%",
            marginTop: t.project.is_published ? 24 : "4px",
            flexDirection: "column",
            children: [a(A_, {
                projectNumId: t.project.num_id,
                isPublished: t.project.is_published,
                privacySwitchState: C,
                privateProjectSwitchState: T,
                privatePagesSwitchState: I,
                privateEmailProjectSwitchState: L,
                setPrivacySwitchState: k,
                setPrivateProjectSwitchState: R,
                setPrivatePagesSwitchState: B,
                setPrivateEmailProjectSwitchState: D,
                disabled: !t.project.user ? .permissions.can_make_mag_private,
                canUseEmailProtection: !!t.project.user ? .permissions.can_make_mag_private_by_email,
                isClosed: !e,
                setPrivacy: t.setPrivacy,
                saveBgImage: E,
                isProtected: t.project.isProtected,
                passwordBackground: t.project.pass_bg,
                ownerEmail: t.project.user.email
            }), !C && !de && a(eb, {
                projectHidden: t.project.opts.hidden,
                profileUrl: v,
                saveProjectOptions: t.setProjectOptions
            })]
        }), Ve("constructor.copyableProjects") && a(rb, {}), t.project.user.permissions.can_export_template && w(Y, {
            children: [w(f, {
                display: "flex",
                width: "100%",
                height: 24,
                justifyContent: "space-between",
                children: [a(A, {
                    textStyle: "small",
                    lineHeight: "24px",
                    children: "Export as template"
                }), a(Nt, {
                    backgroundChecked: "green",
                    checked: o.exportAsTemlate,
                    onChange: G
                })]
            }), o.exportAsTemlate && w(f, {
                display: "flex",
                width: "100%",
                height: 24,
                marginTop: 4,
                justifyContent: "space-between",
                children: [a(A, {
                    textStyle: "small",
                    lineHeight: "24px",
                    children: "Don't Renew Screenshots"
                }), a(Nt, {
                    backgroundChecked: "green",
                    checked: o.dontRenewScreenshots,
                    onChange: () => {
                        o.dispatch({
                            type: "toggleDontRenewScreenshots"
                        })
                    }
                })]
            })]
        })]
    })
}
var L_ = M(F());
He();
be();
W();
Ee();
y();

function O_({
    showUpgradeAlert: e,
    onOpenCodeEditorClick: o
}) {
    let r = (0, L_.useContext)(me).isSubscriptionPaused();
    return w(f, {
        paddingBottom: 16,
        children: [a(ge, {
            width: "100%",
            height: 40,
            marginTop: "5px",
            marginBottom: 16,
            variant: "bordered",
            textStyle: "small",
            onClick: o,
            children: "Open Code Editor"
        }), e && w(zt, {
            children: [w(A, {
                textStyle: "small",
                color: "tomato",
                children: ["Injected code works", a("br", {}), "for Preview only!"]
            }), a("br", {}), a("br", {}), r ? w(A, {
                textStyle: "small",
                color: "black",
                children: [a(ze, {
                    href: "/settings#change-plan",
                    target: "_blank",
                    textStyle: "small",
                    isActive: !0,
                    children: "Unpause"
                }), " ", "your subscription to have it work in Published project."]
            }) : w(A, {
                textStyle: "small",
                color: "black",
                children: [a(ze, {
                    href: "/settings#change-plan",
                    target: "_blank",
                    textStyle: "small",
                    isActive: !0,
                    children: "Upgrade"
                }), " ", "to have it work", a("br", {}), "in Published project."]
            })]
        })]
    })
}
var Wo = M(F());
be();
W();
var _m = M(F());
kr();
He();
Ue();
be();
te();
Ye();
var rs = M(F());
Ee();
$a();
var xm = ({
    domainForChecking: e,
    isMapedDomain: o = !1,
    domainSource: t = "other"
}) => {
    let r = (0, rs.useContext)(me),
        [i, n] = (0, rs.useState)(e),
        [s, l] = (0, rs.useState)(t),
        [p, d] = (0, rs.useState)(),
        [c, m] = (0, rs.useState)(!1),
        [u, g] = (0, rs.useState)(!1),
        h = (S, v, P) => {
            c && m(!1), d({
                errorType: S,
                dnsError: v,
                domainData: P
            })
        };
    return {
        testingDomain: i,
        domainError: p,
        domainCheckSuccess: c,
        isProcessingTest: u,
        setTestingDomain: n,
        setTestingDomainSource: l,
        checkDomain: (S, v) => {
            let P = S || i,
                C = v || s;
            if (!(!P || u)) {
                if (/:|@|\\|\//.test(P)) {
                    h("invalid");
                    return
                }
                g(!0), r.checkDomain(P, C).then(k => {
                    if (!k) {
                        h("server-error"), g(!1);
                        return
                    }
                    if (k.errors.notPublished) {
                        h("unpublished"), g(!1);
                        return
                    }
                    if (k.errors.noValidSubscription) {
                        h("subscription-expired"), g(!1);
                        return
                    }
                    if (k.errors.subscriptionPaused) {
                        h("subscription-paused"), g(!1);
                        return
                    }
                    if (!o && k.errors.badDomainName) {
                        h("invalid"), g(!1);
                        return
                    }
                    if (k.errors.setupButNeedMoreTime) {
                        h("setup-but-need-more-time"), g(!1);
                        return
                    }
                    if (o) {
                        if (k.errors.badDNSSettings) {
                            let T = qf(k.dnsSettings);
                            h("domain-set-dns-error", {
                                domainName: P,
                                recordType: T.recordType,
                                currentValue: T.currentValue,
                                neededValue: T.neededValue,
                                domain: T.domain,
                                subdomain: T.subdomain
                            }), g(!1);
                            return
                        }
                    } else {
                        if (k.errors.badDNSSettings || k.errors.ipv6Present || k.errors.invalidOwner) {
                            let G = qf(k.dnsSettings),
                                de = () => {
                                    h("test-dns-error", {
                                        domainName: P,
                                        recordType: G.recordType,
                                        currentValue: G.currentValue,
                                        neededValue: G.neededValue,
                                        badDNSSettings: !!k.errors.badDNSSettings,
                                        ipv6Present: !!k.errors.ipv6Present,
                                        invalidOwner: !!k.errors.invalidOwner,
                                        ownerKey: k.dnsSettings.ownerKey,
                                        domain: G.domain,
                                        subdomain: G.subdomain,
                                        unsetedCaaRecords: k.dnsSettings.caaRecords ? k.dnsSettings.unsetedCaaRecords : []
                                    })
                                };
                            po.get(`https://${P}/api/domainmaptest`).then(Q => {
                                Q && Q.domainOk ? de() : h("wait-our-dns-server")
                            }).catch(() => de()).finally(() => {
                                g(!1)
                            });
                            return
                        }
                        let T = k.domain_data || {},
                            R = T.mag || {},
                            I = T.user || R.user || {},
                            B = I.name || "UNKNOWN",
                            L = "/" + (I.uri || "UNKNOWN") + "/",
                            D = L + (R.uri || "UNKNOWN") + "/",
                            E = R.title || D,
                            $ = (k.domain_data || {}).type;
                        if (k.errors.domainUsed) {
                            k.errors.usedByOtherUser ? h("test-other-user", void 0, {
                                userName: B,
                                userUrl: L
                            }) : h("test-same-user", void 0, {
                                magName: E,
                                magUrl: D,
                                entityType: T.type,
                                userName: B,
                                userUrl: L,
                                domainType: $
                            }), g(!1);
                            return
                        }
                    }
                    if (k.errors.domainNotFound) {
                        h("notfound"), g(!1);
                        return
                    }
                    g(!1), d(void 0), m(!0)
                }).catch(() => {
                    h("server-error"), g(!1)
                })
            }
        },
        showDomainError: h,
        hideDomainError: () => {
            d(void 0)
        },
        setDomainCheckSuccess: m
    }
};
Ee();
ja();
Lr();
var ib = M(F());
te();
be();
W();
yv();
Ro();
ut();
var vm = M(F());
be();
y();

function $_({
    children: e,
    ...o
}) {
    let t = (0, vm.useRef)(null),
        r = (0, vm.useCallback)(i => {
            i.preventDefault();
            let n = t.current ? .innerText ? ? "";
            i.clipboardData ? .setData("text/plain", n)
        }, []);
    return a(we, {
        ref: t,
        onCopy: r,
        ...o,
        children: e
    })
}
y();
var EB = "https://www.youtube.com/watch?v=rOisaXwqbyk",
    AB = "https://help.readymag.com/hc/en-us/articles/4403970232091-Mapping-a-domain-to-a-project",
    DB = N("ol")
`
  margin: 6px 0 -8px 17px;
  list-style: decimal;
  font-size: 12px;
`, ym = N("li")
`
  padding: 4px 0;
  list-style: decimal;
`, LB = f.withComponent(N("div")
    `
  position: absolute;
  right: 45px;
  opacity: 1;
  &:hover {
    svg {
      color: ${e=>e.theme.colors.darkGray};
    }
  }
  &:active {
    svg {
      color: ${e=>e.theme.colors.black};
    }
  }
`);

function km({
    domainError: e,
    m: o,
    showUnmap: t,
    mapDomain: r,
    unmapDomain: i
}) {
    let n = e ? e.dnsError : void 0,
        s = e ? e.domainData : void 0,
        [l, p] = (0, ib.useState)(!1),
        [d, c] = (0, ib.useState)(!1),
        m = n ? .neededValue ? .replace(/\.$/, "") ? ? "",
        u = S => {
            if (S) try {
                navigator.clipboard.writeText(S)
            } catch {
                console.error("Could not copy to clipboard.")
            }
        },
        g = (S, v) => {
            let P = () => {
                    S === "domain" ? (u(m), p(!0), c(!1)) : (u(n ? .ownerKey), c(!0), p(!1))
                },
                C = () => {
                    setTimeout(() => {
                        p(!1), c(!1)
                    }, 200)
                };
            return a(Bt, {
                enterDelay: 150,
                text: l || d ? "Copied" : "Copy",
                indent: 10,
                placement: "top-end",
                componentsProps: {
                    tooltip: {
                        left: 5,
                        width: 40
                    },
                    arrow: {
                        left: "-4px !important"
                    }
                },
                children: a(LB, {
                    title: "Copy",
                    "data-testid": `domain-copy-button-${S}`,
                    children: a(Xd, {
                        width: 14,
                        height: 14,
                        color: v ? "darkGray" : "gray",
                        cursor: "pointer",
                        onMouseLeave: C,
                        onMouseDown: P
                    })
                })
            })
        },
        h = () => n ? a(Y, {
            children: w(A, {
                textStyle: "small",
                color: "black",
                children: ["This domain\u2019s ", n.recordType ? n.recordType : "", " ", n.currentValue === "UNKNOWN" ? "is not currently set" : "is currently set to", " ", n.currentValue !== "UNKNOWN" ? n.currentValue : "", ". Please change your", " ", n.recordType ? n.recordType : "", " to", " ", a(A, {
                    textStyle: "small",
                    color: "darkGray",
                    fontFamily: "monospace",
                    children: n.neededValue ? n.neededValue : ""
                }), " ", "at your registrar settings.", " "]
            })
        }) : null,
        b = () => n ? w(Y, {
            children: [a(A, {
                textStyle: "small",
                color: "black",
                children: "Go to your domain registrar\u2019s website. Open\xA0DNS settings and:"
            }), w(DB, {
                children: [n.badDNSSettings && n.recordType && w(ym, {
                    children: [a(A, {
                        textStyle: "small",
                        color: "black",
                        children: "Add an A-record:"
                    }), a("br", {}), w(A, {
                        textStyle: "small",
                        color: "black",
                        children: ["Hostname = ", n.subdomain ? ? "@"]
                    }), a("br", {}), w(f, {
                        display: "flex",
                        children: [a(f, {
                            display: "block",
                            overflow: "hidden",
                            textOverflow: "ellipsis",
                            whiteSpace: "nowrap",
                            maxWidth: "125px",
                            children: w(A, {
                                textStyle: "small",
                                color: "black",
                                children: ["Value =", " ", a(A, {
                                    textStyle: "small",
                                    color: "tomato",
                                    "data-testid": "domain-value",
                                    children: m
                                })]
                            })
                        }), g("domain", l)]
                    })]
                }, "dnsError"), w(Y, {
                    children: [n.invalidOwner && w(ym, {
                        children: [w(A, {
                            textStyle: "small",
                            color: "black",
                            children: ["Confirm domain ownership by adding a\xA0TXT-record:", a("br", {})]
                        }), a(A, {
                            textStyle: "small",
                            color: "black",
                            children: "Hostname = @"
                        }), a("br", {}), w(f, {
                            display: "flex",
                            children: [a(f, {
                                display: "block",
                                overflow: "hidden",
                                textOverflow: "ellipsis",
                                whiteSpace: "nowrap",
                                maxWidth: "125px",
                                children: w(A, {
                                    textStyle: "small",
                                    color: "black",
                                    children: ["Value =", " ", a($_, {
                                        textStyle: "small",
                                        color: "tomato",
                                        "data-testid": "domain-ownerkey",
                                        children: n.ownerKey
                                    })]
                                })
                            }), g("key", d)]
                        }), a("br", {}), n.subdomain && a(A, {
                            textStyle: "small",
                            color: "black",
                            children: "This record should be added to your root domain."
                        })]
                    }, "invalidOwner"), n.badDNSSettings && n.unsetedCaaRecords ? .length ? a(ym, {
                        children: w(A, {
                            textStyle: "small",
                            color: "black",
                            children: ["Looks like your DNS settings are missing some", " ", a(ze, {
                                href: "https://help.readymag.com/hc/en-us/articles/4403970242331-SSL",
                                target: "_blank",
                                textStyle: "small",
                                color: "tomato",
                                children: "CAA records"
                            }), ". Add these or leave it up to your techies:", a("br", {}), w(A, {
                                textStyle: "small",
                                color: "darkGray",
                                fontFamily: "monospace",
                                children: [n.unsetedCaaRecords.join(", "), "."]
                            })]
                        })
                    }, "dnsCaaError") : null]
                }), n.ipv6Present && a(ym, {
                    children: a(A, {
                        textStyle: "small",
                        color: "black",
                        children: "Remove the AAAA-record from your DNS settings to disable iPv6."
                    })
                }, "ipv6Present")]
            }), a(A, {
                textStyle: "small",
                color: "black",
                children: "Changes may take a few minutes to 72 hours to work. We\u2019ll notify you by email when you can map your domain."
            })]
        }) : null;
    return e ? w(zt, {
        margin: o || "0 0 14px",
        padding: "16px 23px 16px 14px",
        "data-testid": "domain-error-message",
        textAlign: "left",
        children: [(() => {
            if (!e) return null;
            switch (e.errorType) {
                case "server-error":
                    return w(A, {
                        textStyle: "small",
                        color: "black",
                        children: ["Oops! It\u2019s not you, it\u2019s an internal server error.", a("br", {}), "Please click the \u2018Test\u2019 button again."]
                    });
                case "unpublished":
                    return w(A, {
                        textStyle: "small",
                        color: "black",
                        children: ["You can", "'", "t use custom domain mapping on unpublished project. Please, publish it first."]
                    });
                case "subscription-expired":
                    return w(Y, {
                        children: [w(A, {
                            textStyle: "small",
                            color: "black",
                            children: ["Please", " ", a(ze, {
                                href: "/settings#change-plan",
                                target: "_blank",
                                textStyle: "small",
                                color: "tomato",
                                children: "upgrade"
                            }), " ", "to access custom domain mapping."]
                        }), a(ze, {
                            href: `${ae.readymag_host}/pricing/`,
                            target: "_blank",
                            textStyle: "small",
                            color: "tomato",
                            children: "See the pricing"
                        })]
                    });
                case "subscription-paused":
                    return a(Y, {
                        children: w(A, {
                            textStyle: "small",
                            color: "black",
                            children: ["Please", " ", a(ze, {
                                href: "/settings#change-plan",
                                target: "_blank",
                                textStyle: "small",
                                color: "tomato",
                                children: "unpause"
                            }), " ", "your subscription to access custom domain mapping."]
                        })
                    });
                case "invalid":
                    return w(Y, {
                        children: [w(A, {
                            textStyle: "small",
                            color: "black",
                            children: ["Domain name should not contain non-alphanumeric characters. No directories are allowed.", a("br", {}), a("br", {}), "Examples:"]
                        }), a("br", {}), w(A, {
                            textStyle: "small",
                            color: "gray",
                            children: ["mydomain.com", a("br", {}), "www.mydomain.com", a("br", {}), "readymag.mydomain.com"]
                        })]
                    });
                case "notfound":
                    return a(A, {
                        textStyle: "small",
                        color: "black",
                        children: "We can\u2019t find the info for this domain. Please check the name again. Note that it may take up to a few hours for a subdomain to get created."
                    });
                case "setup-but-need-more-time":
                    return a(f, {
                        textAlign: "center",
                        children: a(A, {
                            textStyle: "small",
                            color: "black",
                            children: w(Y, {
                                children: ["Your domain is being registered. It might take up to 48 hours. You", "'", "ll receive an email when", a("br", {}), "it", "'", "s ready to be connected to your Readymag project"]
                            })
                        })
                    });
                case "wait-our-dns-server":
                    return w(A, {
                        textStyle: "small",
                        color: "black",
                        children: ["Your domain settings are correct; It seems that our DNS servers haven", "'", "t updated yet, though.", a("br", {}), "It may take up to 72 hrs.", a("br", {}), "Please try again later."]
                    });
                case "test-dns-error":
                    return a(Y, {
                        children: b()
                    });
                case "test-other-user":
                    return w(A, {
                        textStyle: "small",
                        color: "black",
                        children: ["This domain is already used by", " ", a(ze, {
                            href: s && s.userUrl ? s.userUrl : "#",
                            target: "_blank",
                            textStyle: "small",
                            color: "tomato",
                            children: s && s.userName ? s.userName : "other user"
                        }), "."]
                    });
                case "test-same-user":
                    return w(A, {
                        textStyle: "small",
                        color: "black",
                        children: ["This domain is already mapped to", " ", a(ze, {
                            href: s ? s.domainType === "User" ? s.userUrl : s.magUrl : "#",
                            target: "_blank",
                            textStyle: "small",
                            color: "tomato",
                            children: s ? s.domainType === "User" ? s.userName : s.magName : "unknown"
                        }), ".", a("br", {}), a(ze, {
                            textStyle: "small",
                            color: "tomato",
                            onClick: () => r && r(),
                            children: "Switch it to current project"
                        })]
                    });
                case "domain-set-dns-error":
                    return w(Y, {
                        children: [a(A, {
                            textStyle: "small",
                            color: "black",
                            children: "Seems like your DNS settings have been changed."
                        }), " ", h()]
                    });
                case "domain-set-try-later":
                    return w(A, {
                        textStyle: "small",
                        color: "black",
                        children: ["Seems that some of the DNS servers haven", "'", "t updated yet.", a("br", {}), "It may take 72 hrs.", a("br", {}), "Please try again later."]
                    });
                default:
                    return null
            }
        })(), t && i && w(Y, {
            children: [a(A, {
                textStyle: "small",
                color: "black",
                children: "or"
            }), " ", a(ze, {
                textStyle: "small",
                color: "tomato",
                onClick: () => i(),
                children: "Unmap"
            })]
        }), (e.errorType === "test-dns-error" || e.errorType === "domain-set-dns-error" || e.errorType === "domain-set-try-later") && w(f, {
            marginTop: "12px",
            display: "flex",
            flexDirection: "column",
            gap: "12px",
            children: [a(ze, {
                href: EB,
                target: "_blank",
                textStyle: "small",
                color: "darkGrey",
                children: "Short video guide"
            }), a(ze, {
                href: AB,
                target: "_blank",
                textStyle: "small",
                color: "darkGrey",
                children: "Step-by-step guide"
            })]
        })]
    }) : null
}
te();
He();
W();
be();
tl();
Ye();
var gp = M(F());
hx();
var OB = () => !!window ? .entri;
async function $B() {
    return new Promise((e, o) => {
        if (OB()) return e();
        let t = document.getElementsByTagName("script")[0],
            r = document.createElement("script");
        r.type = "text/javascript", r.async = !0, r.src = "https://cdn.goentri.com/entri.js", r.onload = () => e(), r.onerror = () => o(), t ? .parentNode ? .insertBefore(r, t)
    })
}

function F_({
    userNumId: e,
    onClose: o
}) {
    let [t, r] = (0, gp.useState)(!1), [i, n] = (0, gp.useState)(null);
    (0, gp.useEffect)(() => {
        if (!o) return;
        let l = ({
            detail: p
        }) => o(p);
        return window.addEventListener("onEntriClose", l, !1), () => {
            window.removeEventListener("onEntriClose", l, !1)
        }
    }, []);
    async function s() {
        try {
            r(!0);
            let [l] = await Promise.all([gx(e), $B()]);
            window ? .entri ? .purchaseDomain(l)
        } catch (l) {
            n(l)
        } finally {
            r(!1)
        }
    }
    return {
        loading: t,
        error: i,
        onShow: s
    }
}
y();

function N_({
    onResellerDomainPurchase: e,
    ownerNumId: o
}) {
    let {
        user: t,
        setUserMetrics: r
    } = Tl();

    function i(d) {
        if (!d.success || d.setupType !== "purchase") return;
        e(d.domain);
        let c = t ? .behavior_metrics ? .entri_purchase_amount;
        r({
            entri_purchase_amount: c ? c + 1 : 1
        })
    }
    let {
        loading: n,
        onShow: s
    } = F_({
        userNumId: o,
        onClose: i
    });

    function l() {
        re("settingsProject", {
            settingsType: "domain ionos integration click"
        }), s()
    }

    function p() {
        re("settingsProject", {
            settingsType: "domain xyz integration click"
        })
    }
    return w(f, {
        display: "flex",
        flexDirection: "column",
        borderBottom: "2px solid",
        borderColor: Ie("#B8B8B8", .24),
        justifyContent: "space-between",
        gap: "4rm",
        paddingBottom: "4rm",
        alignItems: "flex-start",
        children: [a(Ge, {
            textStyle: "small",
            width: "100%",
            onClick: l,
            disabled: n,
            children: a(f, {
                display: "flex",
                alignItems: "center",
                justifyContent: "space-between",
                children: n ? a(we, {
                    textStyle: "small",
                    color: "inherit",
                    marginTop: "1rm",
                    marginBottom: "1rm",
                    children: "Loading..."
                }) : w(Y, {
                    children: [t ? .domainDiscountIsAvailable ? "Buy a domain with $12 off" : "Buy a domain", a(qo, {
                        color: "gray",
                        transform: "rotate(-90deg)"
                    })]
                })
            })
        }), w(ze, {
            href: "https://help.readymag.com/hc/en-us/articles/4405321039259",
            onClick: p,
            target: "_blank",
            textStyle: "small",
            display: "flex",
            alignItems: "center",
            justifyContent: "space-between",
            width: "100%",
            children: ["Get a free .XYZ domain", a(qo, {
                color: "gray",
                transform: "rotate(-90deg)"
            })]
        })]
    })
}
y();

function W_() {
    let e = (0, _m.useContext)(me),
        o = e.project.last_checked_domain || "",
        t = e.project.last_checked_domain_source,
        {
            testingDomain: r,
            domainError: i,
            domainCheckSuccess: n,
            isProcessingTest: s,
            setTestingDomain: l,
            setTestingDomainSource: p,
            checkDomain: d,
            showDomainError: c,
            hideDomainError: m,
            setDomainCheckSuccess: u
        } = xm({
            domainForChecking: o,
            domainSource: t
        }),
        [g, h] = (0, _m.useState)(!1),
        b = P => {
            i && m(), n && u(!1);
            let C = gm(P.currentTarget.value),
                T = C === o && t ? t : "other";
            l(C), p(T)
        },
        x = P => {
            P.keyCode === 13 && (P.preventDefault(), P.currentTarget.blur(), d())
        },
        S = () => {
            !r || g || (h(!0), i && m(), e.mapDomain(r).then(async () => {
                Ed(e.project.num_id).then(P => Je.facebookGraphRefresh(P)).catch(P => console.error(P)), re(fe.SettingsProject, {
                    settingsType: "map domain"
                })
            }).catch(P => {
                P && P.badDomainName ? c("domain-set-try-later") : c("server-error")
            }).finally(() => {
                h(!1)
            }))
        },
        v = P => {
            let C = gm(P);
            l(gm(C)), p("reseller"), m(), u(!1), d(C, "reseller"), re("settingsProject", {
                settingsType: "domain name purchased",
                domainProvider: "ionos"
            })
        };
    return w(Y, {
        children: [a(A, {
            as: "label",
            textStyle: "small",
            htmlFor: "project-domain",
            children: "Enter registered domain name"
        }), a(St, {
            name: "project-domain",
            id: "project-domain",
            type: "text",
            marginTop: "4px",
            spellCheck: !1,
            autoComplete: "off",
            autoCorrect: "off",
            placeholder: "yourdomainname.com",
            "data-testid": "test-domain-input",
            value: r,
            onKeyDown: x,
            onChange: b,
            css: ne `
          &:focus {
            border: none;
          }
          &::placeholder {
            color: ${q.gray};
          }
          &:disabled {
            color: ${q.gray};
          }
        `
        }), a(ge, {
            width: "100%",
            height: 40,
            marginTop: "2px",
            marginBottom: 14,
            variant: "bordered",
            textStyle: "small",
            disabled: !r || s || g,
            onClick: n ? S : () => d(),
            "data-testid": n ? "map-domain-button" : "test-domain-button",
            children: n ? g ? "Connecting" : "Connect" : s ? "Testing..." : "Test"
        }), a(km, {
            domainError: i,
            onHideError: m,
            mapDomain: S
        }), n && a(zt, {
            margin: "0 0 14px",
            children: w(A, {
                textStyle: "small",
                color: "green",
                children: ["Your domain is pointing to Readymag", a("br", {}), "and can be connected with this project \u2014 click ", a("br", {}), " Connect button."]
            })
        }), a(N_, {
            onResellerDomainPurchase: v,
            ownerNumId: e.owner.num_id
        })]
    })
}
var Fi = M(F());
W();
ar();
kr();
He();
be();
te();
Ee();
Us();
y();

function V_({
    isVisitingDomain: e,
    visitError: o,
    showVisitError: t
}) {
    let r = (0, Fi.useContext)(me),
        {
            domainError: i,
            domainCheckSuccess: n,
            isProcessingTest: s,
            checkDomain: l,
            hideDomainError: p
        } = xm({
            domainForChecking: r.project.domain || "",
            isMapedDomain: !0
        });
    (0, Fi.useEffect)(() => {
        l()
    }, []);
    let d = (0, Fi.useMemo)(() => !!r.project.domain && i && (i.errorType === "domain-set-dns-error" || i.errorType === "notfound" || i.errorType === "subscription-expired"), [r.project.domain, i]),
        [c, m] = (0, Fi.useState)(!1),
        [u, g] = (0, Fi.useState)(!1),
        [h, b] = (0, Fi.useState)(!1),
        x = () => {
            m(!0), h && b(!1)
        },
        S = () => {
            m(!1)
        },
        v = () => {
            g(!0), o && t(!1), r.unmapDomain().catch(() => {
                b(!0)
            }).finally(() => {
                g(!1)
            })
        };
    return a(Y, {
        children: s ? a(f, {
            display: "flex",
            justifyContent: "center",
            children: a(Rt, {
                bgColor: "transparent",
                color: "black"
            })
        }) : i && !n ? a(km, {
            domainError: i,
            onHideError: p,
            showUnmap: d,
            unmapDomain: v
        }) : w(Y, {
            children: [a(A, {
                as: "label",
                textStyle: "small",
                htmlFor: "project-mapped-domain",
                color: "black",
                children: "Name"
            }), a(St, {
                id: "project-mapped-domain",
                type: "text",
                spellCheck: !1,
                autoCorrect: "off",
                defaultValue: r.project.domain,
                marginTop: "4px",
                "data-testid": "mapped-domain",
                readOnly: !0,
                css: ne `
              padding: 0;
              &:focus {
                border: none;
              }
            `
            }), c ? w(f, {
                display: "flex",
                width: "100%",
                height: 40,
                marginTop: 12,
                marginBottom: 16,
                justifyContent: "space-between",
                alignItems: "center",
                children: [a(ge, {
                    width: 90,
                    height: 38,
                    variant: "bordered",
                    textStyle: "small",
                    lineHeight: "38px",
                    background: "white",
                    onClick: v,
                    "data-testid": "unmap-domain",
                    children: "Unmap"
                }), a(ge, {
                    width: 90,
                    height: 38,
                    variant: "bordered",
                    textStyle: "small",
                    lineHeight: "38px",
                    background: "white",
                    onClick: S,
                    children: "Cancel"
                })]
            }) : a(ge, {
                width: "100%",
                height: 40,
                marginTop: 12,
                marginBottom: 16,
                variant: "bordered",
                textStyle: "small",
                disabled: !r.project.domain || u,
                onClick: x,
                "data-testid": "open-unmap-dialog",
                children: u ? "Unmaping" : "Unmap"
            }), h && a(zt, {
                margin: "0 0 14px",
                children: w(A, {
                    textStyle: "small",
                    color: "black",
                    children: ["Something went wrong.", a("br", {}), "Please try again later."]
                })
            }), e && a(zt, {
                margin: "0 0 14px",
                children: w(A, {
                    textStyle: "small",
                    color: "black",
                    children: [a(ze, {
                        href: "https://help.readymag.com/hc/en-us/articles/4403970242331-SSL",
                        target: "_blank",
                        textStyle: "small",
                        isActive: !0,
                        children: "Your SSL certificate"
                    }), " ", "is being issued. It may take a few minutes, but feel free ", a("br", {}), "to keep working\u2014it", "'", "s a background process!"]
                })
            }), o && a(zt, {
                margin: "0 0 14px",
                children: w(A, {
                    textStyle: "small",
                    color: "black",
                    children: ["Your SSL certificate hasn\u2019t been installed, but the problem is on our end.", a("br", {}), a(ze, {
                        href: `//${r.project.domain}`,
                        target: "_blank",
                        textStyle: "small",
                        isActive: !0,
                        children: "Just open your website"
                    }), " ", "so that we can try to enable the certificate again."]
                })
            }), w(f, {
                display: "flex",
                width: "100%",
                height: 24,
                marginBottom: 16,
                justifyContent: "space-between",
                children: [a(A, {
                    textStyle: "small",
                    lineHeight: "24px",
                    color: "black",
                    children: "SSL is enabled"
                }), a(Yo, {
                    href: "https://help.readymag.com/hc/en-us/articles/4403970242331-SSL"
                })]
            })]
        })
    })
}
W();
be();
te();
Ue();
Us();
kr();
Ue();
var qr = M(F()),
    U_ = M(ir());
Mi();
Oy();
y();
var HB = (e, o, t) => ({
        top: Math.abs(e.top - o.top) - t.height / 2 + o.height / 2,
        left: Math.abs(e.left - o.left) - t.width
    }),
    G_ = e => {
        if (e) return e.scrollHeight > e.clientHeight ? e : e.parentNode ? G_(e.parentNode) : void 0
    };

function FB({
    initialValue: e = "",
    validate: o,
    onDone: t,
    ...r
}) {
    let [i, n] = (0, qr.useState)(e), [s, l] = (0, qr.useState)(e), [p, d] = (0, qr.useState)(!1), [c, m] = (0, qr.useState)(o(e)), [u, g] = (0, qr.useState)(), [h, b] = (0, qr.useState)(!1), [x, S] = (0, qr.useState)(!1), v = L => {
        L.key === "Enter" && (L.preventDefault(), L.currentTarget.blur())
    }, P = L => {
        let D = o(L.currentTarget.value);
        b(!1), n(L.currentTarget.value), m(D)
    }, C = () => {
        d(!1), c ? (n(s), m(null), t(s)) : (l(i), t(i))
    }, k = () => {
        l(i), d(!0), b(!1)
    }, T = (0, qr.useRef)(null), R = document.body, I = L => {
        if (L && !u) {
            let {
                getClientBox: D
            } = ct;
            if (T.current && R) {
                let E = D(L);
                g(HB(D(R), D(T.current), E))
            }
        } else !L && u && g(null)
    };
    (0, qr.useEffect)(() => {
        let L = x && T.current ? G_(T.current) : void 0,
            D = () => b(!0);
        return L && (c ? L.addEventListener("scroll", D) : L.removeEventListener("scroll", D)), () => {
            L && L.removeEventListener("scroll", D)
        }
    }, [x, c]);
    let B = p && c && R && !h;
    return w(Y, {
        children: [a(St, {
            value: i,
            onKeyDown: v,
            onChange: P,
            onFocus: k,
            onBlur: C,
            color: c ? q.red : q.black,
            ref: L => {
                T.current = L, x || S(!0)
            },
            ...r
        }), B && U_.default.createPortal(a(xu, {
            text: c || "",
            ref: I,
            marginLeft: "-4px",
            visibility: u ? "visible" : "hidden",
            position: "absolute",
            top: u && u.top,
            left: u && u.left,
            zIndex: go.popupZindex
        }, c), R)]
    })
}
var nb = FB;
y();

function j_({
    ga: e,
    gtm: o,
    canUseGtm: t,
    saveProjectOptions: r
}) {
    let i = d => {
            d !== e && r({
                ga_id: d.trim()
            })
        },
        n = d => {
            d !== o && t && r({
                gtm_id: d.trim()
            })
        },
        s = d => d.includes("<script>"),
        l = d => s(d) ? "Enter GA ID, not a script" : null,
        p = d => s(d) ? "Enter GTM ID, not a script" : null;
    return w(Y, {
        children: [w(f, {
            width: "100%",
            marginTop: "4px",
            children: [a(A, {
                as: "label",
                textStyle: "small",
                htmlFor: "google-analytics",
                children: "Google Analytics"
            }), w(f, {
                display: "flex",
                width: "100%",
                justifyContent: "space-between",
                css: ne `
            &:hover {
              & .help-link {
                opacity: 1;
              }
            }
          `,
                children: [a(nb, {
                    name: "google-analytics",
                    id: "google-analytics",
                    type: "text",
                    marginTop: "4px",
                    spellCheck: !1,
                    autoComplete: "off",
                    autoCorrect: "off",
                    placeholder: "GA-XXXXXX",
                    initialValue: e,
                    validate: l,
                    onDone: i,
                    css: ne `
              &:focus {
                border: none;
              }
              &::placeholder {
                color: ${q.gray};
              }
              &:disabled {
                color: ${q.gray};
              }
            `
                }), a(Yo, {
                    text: "Set a Google Analytics ID to send data to your GA account",
                    href: "https://help.readymag.com/hc/en-us/articles/360020844511-Google-Analytics",
                    width: 194,
                    boxPosition: {
                        marginLeft: "-169px"
                    },
                    arrowPosition: {
                        left: "auto",
                        right: 4
                    }
                })]
            })]
        }), w(f, {
            width: "100%",
            marginTop: "4px",
            children: [a(A, {
                as: "label",
                textStyle: "small",
                htmlFor: "google-tag-manager",
                children: "Google Tag Manager"
            }), w(f, {
                display: "flex",
                width: "100%",
                justifyContent: "space-between",
                css: ne `
            &:hover {
              & .help-link {
                opacity: 1;
              }
            }
          `,
                children: [a(nb, {
                    name: "google-tag-manager",
                    id: "google-tag-manager",
                    type: "text",
                    marginTop: "4px",
                    spellCheck: !1,
                    autoComplete: "off",
                    autoCorrect: "off",
                    placeholder: "GTM-XXXXXX",
                    initialValue: o,
                    validate: p,
                    onDone: n,
                    disabled: !t,
                    css: ne `
              &:focus {
                border: none;
              }
              &::placeholder {
                color: ${q.gray};
              }
              &:disabled {
                color: ${q.gray};
              }
            `
                }), a(Yo, {
                    text: "Set a Google Tag\xA0Manager\xA0ID",
                    href: "https://help.readymag.com/hc/en-us/articles/360025544812-Google-Tag-Manager",
                    width: 194,
                    boxPosition: {
                        marginLeft: "-169px"
                    },
                    arrowPosition: {
                        left: "auto",
                        right: 4
                    },
                    whiteSpace: "nowrap"
                })]
            })]
        })]
    })
}
Ee();
hx();
ut();
var Cm = M(F());
be();
Ue();
pi();
W();
Ye();
Tt();
Us();
y();

function q_({
    defaultValue: e,
    permissions: o,
    projectDomain: t,
    userDomain: r,
    setProjectOptions: i
}) {
    let [n, s] = (0, Cm.useState)(() => e), l = (0, Cm.useMemo)(() => !!(t || r) || o.allow_index, [o.allow_index, t, r]), p = () => {
        if (!l) return;
        let c = !n;
        s(c), i({
            allowindex: c
        }), c && re(fe.SettingsProject, {
            settingsType: "make searchable"
        })
    }, d = !l;
    return w(f, {
        display: "flex",
        width: "100%",
        justifyContent: "space-between",
        children: [a(A, {
            textStyle: "small",
            lineHeight: "24px",
            color: d ? Be(.6, q.black) : "black",
            children: "Search engine indexing"
        }), d ? a(Yo, {
            width: 194,
            text: "\u041Cap domain to make your project visible for search engines",
            boxPosition: {
                marginLeft: "-169px"
            },
            arrowPosition: {
                left: "auto",
                right: 4
            },
            href: "https://help.readymag.com/hc/en-us/articles/4403970232091-Mapping-a-domain",
            "data-testid": "map-domain-helptip"
        }) : a(Nt, {
            backgroundChecked: "green",
            checked: n,
            onChange: p,
            disabled: d,
            "data-testid": "make-searchable-checkbox"
        })]
    })
}
var is = M(F());
W();
be();
Ai();
qc();
Tv();
Ue();
te();
Tt();
Ee();
Kc();
ut();
Us();
mh();
y();

function NB({
    domain: e
}) {
    let o = (0, is.useContext)(me),
        [t, r] = (0, is.useState)(!1),
        i = (0, is.useMemo)(() => o.project.opts.favicon, [o.project.opts.favicon]),
        n = (0, is.useCallback)(async l => {
            if (l.size > ae.UPLOAD_IMAGE_SIZE_LIMIT) {
                window.alert(ae.MSG_UPLOAD_IMAGE_SIZE_ERROR);
                return
            }
            if (!t) {
                r(!0);
                try {
                    let p = await Vn("favicon", l);
                    p && p.baseUrl && (await o.setProjectOptions({
                        favicon: p.baseUrl
                    }), r(!1))
                } catch {
                    r(!1)
                }
            }
        }, [t]),
        s = async () => {
            i && await o.setProjectOptions({
                favicon: ""
            })
        };
    return w(f, {
        display: "flex",
        width: "100%",
        height: 24,
        marginBottom: 16,
        marginTop: 10,
        justifyContent: "space-between",
        children: [a(A, {
            textStyle: "small",
            lineHeight: "24px",
            color: e ? "black" : Be(.6, q.black),
            children: "Favicon"
        }), !e && a(Yo, {
            width: 194,
            boxPosition: {
                marginLeft: "-169px"
            },
            arrowPosition: {
                left: "auto",
                right: 4
            },
            text: "Map domain to add favicon to your project",
            href: "https://help.readymag.com/hc/en-us/articles/360038720292-Adding-a-favicon"
        }), e && w(Y, {
            children: [i && a(f, {
                display: "flex",
                width: 24,
                height: 24,
                borderRadius: "50%",
                justifyContent: "center",
                alignItems: "center",
                border: "1px solid rgba(64, 64, 64, 0.08)",
                cursor: "pointer",
                backgroundImage: `${o.project.opts.favicon?`url(${Oa(o.project.opts.favicon,57)})`:"none"}`,
                backgroundSize: "contain",
                backgroundPosition: "center",
                css: ne `
                & svg {
                  opacity: 0;
                }
                &:hover {
                  background-image: none;
                  & > div {
                    opacity: 1;
                  }
                  & svg {
                    color: ${q.red};
                    opacity: 1;
                  }
                }
              `,
                onClick: s,
                children: a(Lt, {
                    color: "black"
                })
            }), !i && a(Oi, {
                id: "favicon-upload",
                accept: "image/*",
                dropFile: !1,
                readFileData: !1,
                onChange: n,
                children: a(f, {
                    display: "flex",
                    width: 24,
                    height: 24,
                    borderRadius: "50%",
                    justifyContent: "center",
                    alignItems: "center",
                    border: "1px solid rgba(64, 64, 64, 0.08)",
                    cursor: "pointer",
                    css: ne `
                  &:hover {
                    & svg {
                      color: ${q.red};
                    }
                  }
                `,
                    children: a(Nc, {
                        color: "black"
                    })
                })
            })]
        })]
    })
}
var Y_ = NB;
tl();
y();

function X_() {
    let e = (0, Wo.useContext)(me),
        o = (0, Wo.useMemo)(() => !!e.project.domain, [e.project.domain]),
        t = (0, Wo.useMemo)(() => !!e.project.user.permissions.can_map_domain, [e.project.user.permissions.can_map_domain]),
        r = (0, Wo.useMemo)(() => e.project.is_published, [e.project.is_published]),
        i = (0, Wo.useMemo)(() => e.project.user.permissions.domain_limit, [e.project.user.permissions.domain_limit]),
        n = (0, Wo.useMemo)(() => e.me.plan ? .level, [e.me.plan ? .level]) || "free",
        s = e.isSubscriptionPaused(),
        [l, p] = (0, Wo.useState)(!1),
        [d, c] = (0, Wo.useState)(!1),
        [m, u] = (0, Wo.useState)(!1),
        g = e.project.user.projectDomains,
        h = !1;
    i && g && g >= i && (h = !0);
    let [b, x] = (0, Wo.useState)(!1), [S, v] = (0, Wo.useState)(!1), P = async R => {
        if (!b) {
            x(!0);
            try {
                await mx(R)
            } catch (I) {
                I && I.statusCode !== 504 && v(!0)
            } finally {
                x(!1)
            }
        }
    };
    (0, Wo.useEffect)(() => {
        e.project.domain && P(e.project.domain)
    }, [e.project.domain]);
    let C = () => {
            d || (c(!0), e.unmapDomain().catch(() => {
                u(!0)
            }).finally(() => {
                c(!1), l && p(!1)
            }))
        },
        k = () => n === "free" ? "Please upgrade your plan to access domain mapping." : n === "extra" ? "Please change your subscription conditions to map another domain." : "Please upgrade your plan to map another domain.",
        T = () => n === "extra" ? a(ze, {
            href: `mailto:${ae.SUPPORT_MAIL}`,
            textStyle: "small",
            color: "tomato",
            children: "Contact our support team to learn more."
        }) : a(ze, {
            href: `${ae.readymag_host}/pricing/}`,
            target: "_blank",
            textStyle: "small",
            color: "tomato",
            children: "Check out the pricing to learn more."
        });
    return w(f, {
        paddingBottom: 16,
        children: [r ? t ? o ? w(Y, {
            children: [a(f, {
                "data-testid": "mapping-status",
                "data-status": "mapped",
                display: "none"
            }), a(V_, {
                isVisitingDomain: b,
                visitError: S,
                showVisitError: v
            })]
        }) : h ? w(zt, {
            margin: "4px 0 14px",
            children: [e.isOwner && w(A, {
                textStyle: "small",
                color: "black",
                children: [k(), a("br", {}), T()]
            }), !e.isOwner && w(A, {
                textStyle: "small",
                color: "black",
                children: ["To access custom domain mapping project owner should upgrade.", a("br", {}), a(ze, {
                    href: `mailto:${e.project.user.email}`,
                    textStyle: "small",
                    isActive: !0,
                    children: "Contact the owner"
                })]
            })]
        }) : w(Y, {
            children: [a(f, {
                "data-testid": "mapping-status",
                "data-status": "not-mapped",
                display: "none"
            }), a(f, {
                paddingBottom: "3rm",
                children: w(ze, {
                    href: "https://help.readymag.com/hc/en-us/articles/4403970232091-Mapping-a-domain-to-a-project",
                    target: "_blank",
                    textStyle: "small",
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "space-between",
                    width: "100%",
                    color: "gray",
                    children: ["Help on connecting a domain", a(qo, {
                        marginLeft: "-1rm",
                        transform: "rotate(-90deg)"
                    })]
                })
            }), a(W_, {})]
        }) : a(zt, {
            margin: "0 0 14px",
            children: s ? w(A, {
                textStyle: "small",
                color: "black",
                children: ["You can", "'", "t map a custom domain.", a("br", {}), "Please", " ", a(ze, {
                    href: "/settings#change-plan",
                    target: "_blank",
                    textStyle: "small",
                    isActive: !0,
                    children: "unpause"
                }), " ", "your subscription first."]
            }) : e.isOwner ? w(A, {
                textStyle: "small",
                color: "black",
                children: ["Please", " ", a(ze, {
                    href: "/settings#change-plan",
                    target: "_blank",
                    textStyle: "small",
                    isActive: !0,
                    children: "upgrade"
                }), " ", "to access custom domain mapping.", a("br", {}), a(ze, {
                    href: `${ae.readymag_host}/pricing/`,
                    target: "_blank",
                    textStyle: "small",
                    isActive: !0,
                    children: "See the pricing"
                })]
            }) : w(A, {
                textStyle: "small",
                color: "black",
                children: ["To access custom domain mapping project owner should upgrade.", a("br", {}), a(ze, {
                    href: `mailto:${e.project.user.email}`,
                    textStyle: "small",
                    isActive: !0,
                    children: "Contact the owner"
                })]
            })
        }) : a(zt, {
            margin: "0 0 14px",
            children: w(A, {
                textStyle: "small",
                color: "black",
                children: ["You can", "'", "t map a domain to an unpublished project.", a("br", {}), "Please, publish your project first."]
            })
        }), a(Y_, {
            domain: e.project.domain
        }), a(f, {
            marginBottom: 16,
            marginTop: 10,
            children: a(q_, {
                projectDomain: e.project.domain,
                userDomain: e.project.user.domain,
                setProjectOptions: e.setProjectOptions,
                permissions: e.project.user.permissions,
                defaultValue: e.project.opts.allowindex
            })
        }), t && a(j_, {
            ga: e.project.opts.ga_id,
            gtm: e.project.opts.gtm_id,
            canUseGtm: !!e.project.user.permissions.can_use_gtm,
            saveProjectOptions: e.setProjectOptions
        }), e.project.domain && t && r && a(zt, {
            margin: "4px 0 14px",
            children: w(A, {
                textStyle: "small",
                color: "black",
                children: ["If you don\u2019t see your project or Readymag page when you visit", " ", a(ze, {
                    href: `//${e.project.domain}`,
                    target: "_blank",
                    textStyle: "small",
                    isActive: !0,
                    children: "your website"
                }), ", the DNS record might need more time to update. This can take up to 72 hours."]
            })
        }), e.project.domain && (!t || !r) && w(Y, {
            children: [a(zt, {
                margin: "4px 0 14px",
                children: w(A, {
                    textStyle: "small",
                    color: "black",
                    children: ["The name ", e.project.domain, " is already being used in this project.", a("br", {}), a(ze, {
                        textStyle: "small",
                        isActive: !0,
                        onClick: C,
                        children: d ? "Unmaping..." : "Unmap"
                    })]
                })
            }), m && a(zt, {
                margin: "0 0 14px",
                children: w(A, {
                    textStyle: "small",
                    color: "black",
                    children: ["Something went wrong.", a("br", {}), "Please try again later."]
                })
            })]
        })]
    })
}
var Ll = M(F());
W();
Ee();
var hp = M(F());
W();
pi();
be();
Kt();
du();
BI();
Hh();
W();
my();
be();
y();
var K_ = 16;

function WB({
    checked: e,
    maxWidth: o,
    onChange: t,
    onMaxWidthChange: r,
    height: i,
    margin: n
}) {
    return w(f, {
        display: "flex",
        margin: n,
        maxWidth: 216,
        cursor: "pointer",
        borderRadius: 52,
        position: "relative",
        height: i || 104,
        backgroundColor: e ? "green" : "gray",
        children: [a(f, {
            display: "flex",
            padding: K_,
            width: "100%",
            height: "100%",
            alignItems: "center",
            onClick: () => t(!e),
            children: a(cu, {
                as: "input",
                type: "checkbox",
                checked: e,
                onChange: () => t(e)
            })
        }), a(f, {
            left: K_,
            top: "calc(50% - 1px)",
            position: "absolute",
            transform: "translateY(-50%)",
            children: w(A, {
                color: "white",
                whiteSpace: "nowrap",
                textStyle: "small",
                userSelect: "none",
                children: [a(f, {
                    as: "span",
                    onClick: () => t(!e),
                    children: e ? "Scale layout up to " : "Scale layout"
                }), e ? a(f, {
                    display: "inline-block",
                    onClick: l => l.stopPropagation(),
                    children: a(Ns, {
                        min: 1024,
                        max: 9999,
                        autoWidth: !0,
                        color: "orange",
                        textStyle: "small",
                        padding: 0,
                        value: o,
                        onChange: ({
                            value: l
                        }) => r(l)
                    })
                }) : null, e ? a(f, {
                    as: "span",
                    onClick: () => t(!e),
                    children: "px"
                }) : null]
            })
        })]
    })
}
var Z_ = WB;
MI();
II();
Us();
y();
var VB = {
        width: 194,
        boxPosition: {
            marginLeft: "-125px"
        },
        arrowPosition: {
            left: "auto",
            right: 49
        }
    },
    Dl = ({
        checked: e,
        disabled: o,
        children: t,
        onChange: r,
        showSwitch: i = !0,
        HelptipProps: n,
        ...s
    }) => {
        let [l, p] = (0, hp.useState)(!1);
        return a(f, { ...s,
            onMouseEnter: () => p(!0),
            onMouseLeave: () => p(!1),
            children: w(f, {
                display: "flex",
                justifyContent: "space-between",
                alignItems: "center",
                children: [a(f, {
                    flex: "1",
                    children: a(A, {
                        textStyle: "small",
                        color: e ? "green" : o ? void 0 : "black",
                        opacity: o || !e ? .4 : 1,
                        children: t
                    })
                }), n && a(Yo, { ...VB,
                    marginRight: "4px",
                    ...n,
                    opacity: l ? 1 : 0
                }), i ? a(Nt, {
                    backgroundChecked: "green",
                    checked: e,
                    disabled: o,
                    onChange: r
                }) : null]
            })
        })
    },
    J_ = (0, hp.memo)(({
        options: e,
        disabled: o,
        exclude: t = [],
        setProjectOptions: r,
        permissionOverrides: i
    }) => {
        let [n, s] = (0, hp.useState)(e.scalewidth), {
            callback: l
        } = Fn(d => r({
            scalewidth: d
        }), 500), p = Object.keys(i).includes("arrows");
        return w(Y, {
            children: [!t.includes("scalableviewer") && a(Z_, {
                checked: e.scalableviewer,
                maxWidth: n,
                onChange: d => r({
                    scalableviewer: d
                }),
                onMaxWidthChange: d => {
                    s(d), l(d)
                },
                height: "52px"
            }), a(Fy, {
                checked: e.viewertype === "vertical",
                onChange: d => r(d ? {
                    viewertype: "vertical"
                } : {
                    viewertype: "horizontal"
                }),
                margin: "12px 0 4px 0"
            }), a(Ny, {
                direction: e.viewertype,
                arrowsOn: e.arrows,
                slideIn: e.slidein,
                slideInRequiresArrows: e.viewertype === "horizontal",
                excludeSlideIn: t.includes("slidein"),
                arrowsDisabled: o.includes("arrows"),
                onArrowsChange: d => r({
                    arrows: d
                }),
                onSlideInChange: d => r({
                    slidein: d
                }),
                margin: "12px 0"
            }), w(f, {
                paddingLeft: "4rm",
                paddingRight: "2rm",
                marginTop: "12px",
                children: [p && a(zt, {
                    margin: "16px 0",
                    padding: "12px 16px",
                    children: w(A, {
                        textStyle: "small",
                        children: ["Please", " ", a(ze, {
                            href: "/settings#change-plan",
                            target: "_blank",
                            textStyle: "small",
                            isActive: !0,
                            children: "upgrade"
                        }), " ", "your account to\xA0manage the\xA0white\xA0label settings."]
                    })
                }), w(f, {
                    backgroundColor: "white",
                    padding: "12px 8px 12px 16px",
                    marginLeft: "-16px",
                    borderRadius: "16px",
                    children: [a(Dl, {
                        marginBottom: "1rm",
                        checked: e.menubutton,
                        onChange: d => {
                            r(d ? {
                                menubutton: d
                            } : {
                                menubutton: d,
                                projectinfo: !1
                            })
                        },
                        HelptipProps: {
                            href: "https://help.readymag.com/hc/en-us/articles/360020588752-Viewer-navigation",
                            text: e.controlsontop ? "Show the menu button in the top right corner of a page" : "Show the menu button in the bottom right corner of a page"
                        },
                        children: "Project menu"
                    }), a(Dl, {
                        marginTop: "1rm",
                        marginBottom: "1rm",
                        checked: e.sharebutton,
                        disabled: o.includes("sharebutton"),
                        onChange: d => r({
                            sharebutton: d
                        }),
                        HelptipProps: {
                            text: "Show the share button to the user"
                        },
                        children: "Share button"
                    }), a(Dl, {
                        marginTop: "1rm",
                        marginBottom: "1rm",
                        checked: e.pagecounter,
                        disabled: o.includes("pagecounter"),
                        onChange: d => r({
                            pagecounter: d
                        }),
                        HelptipProps: {
                            text: "Show a number of a current page to the user"
                        },
                        children: "Page counter"
                    }), !t.includes("controlsontop") && a(Dl, {
                        marginTop: "1rm",
                        checked: e.controlsontop,
                        disabled: o.includes("controlsontop"),
                        onChange: d => r({
                            controlsontop: d
                        }),
                        HelptipProps: {
                            text: "Keep Project menu, Share button, and Page counter at the top of the screen"
                        },
                        children: "Buttons on top"
                    }), a(Dl, {
                        marginTop: "1rm",
                        checked: e.branding,
                        disabled: o.includes("branding"),
                        onChange: d => r({
                            branding: d
                        }),
                        showSwitch: !o.includes("branding"),
                        HelptipProps: o.includes("branding") ? {
                            text: "Upgrade to disable branding",
                            href: "/settings#change-plan"
                        } : void 0,
                        children: "Readymag branding"
                    })]
                }), a(Dl, {
                    margin: "12px 0 8px",
                    width: 192,
                    checked: e.lqip,
                    disabled: o.includes("lqip"),
                    onChange: d => r({
                        lqip: d
                    }),
                    HelptipProps: {
                        text: "Use blurred image previews while loading",
                        href: "https://help.readymag.com/hc/en-us/articles/360019989052-Picture"
                    },
                    children: "Progressive images"
                }), !t.includes("useCustomCursor") && a(f, {
                    margin: "8px 0",
                    width: 192,
                    children: a(Hy, {
                        useCustomCursor: !!e.useCustomCursor,
                        customCursorImage: e.customCursorImage,
                        customHoverCursorImage: e.customHoverCursorImage,
                        saveProjectOptions: r
                    })
                }), a(f, {
                    display: "flex",
                    marginTop: 16,
                    marginBottom: 16,
                    children: a(ze, {
                        href: "https://help.readymag.com/hc/en-us/articles/360020588752-Viewer-navigation",
                        target: "_blank",
                        textStyle: "small",
                        color: "darkGray",
                        children: "Need help?"
                    })
                })]
            })]
        })
    });
Ut();
y();

function UB({
    margin: e,
    width: o
}) {
    let t = Ya(),
        {
            viewport: r
        } = (0, Ll.useContext)(je),
        i = t.getProjectOptions(r),
        n = (0, Ll.useCallback)(d => {
            t.setProjectOptions(d, void 0, r)
        }, [r]),
        {
            disabled: s,
            permissionOverrides: l
        } = t.getProjectPermissionsOverrides(i),
        p = (0, Ll.useMemo)(() => r === "tablet_portrait" || r === "phone_portrait" ? ["scalableviewer", "slidein", "projectinfo", "useCustomCursor", "controlsontop"] : [], [r]);
    return a(f, {
        margin: e,
        width: o,
        children: a(J_, {
            options: i,
            disabled: s,
            exclude: p,
            permissionOverrides: l,
            setProjectOptions: n
        })
    })
}
var Q_ = UB;
Ee();
Ut();
Kt();
Sr();
y();

function eC({
    exclude: e = [],
    ButtonTextPosition: o,
    defaultAccordionValue: t = 0,
    renderButtonContainer: r = n => n,
    renderCollapseContainer: i = n => n
}) {
    let n = (0, gn.useContext)(me),
        {
            viewport: s
        } = (0, gn.useContext)(je),
        l = n.project.user.projectDomains,
        p = (0, gn.useMemo)(() => n.me.plan ? .level, [n.me.plan ? .level]) || "free",
        d = n.project.user.permissions.domain_limit,
        c = n.project.domain,
        m = !1;
    d && l && l >= d && !c && (m = !0);
    let u = n.hasPermission("can_export_pdf"),
        g = n.hasPermission("can_map_domain"),
        h = n.isSubscriptionPaused(),
        [b, x] = (0, gn.useState)(t),
        S = () => n.openCodeEditor(),
        v = (0, gn.useMemo)(() => n.hasProjectCode(), [n.project.ci_head, n.project.ci_css, n.project.ci_body_top, n.project.ci_body_bottom]),
        P = (0, gn.useMemo)(() => ({
            default: "Desktop",
            tablet_portrait: "Tablet",
            phone_portrait: "Mobile"
        })[s] ? ? "", [s]);
    return w(cr, {
        transition: {
            mass: 1,
            stiffness: 210,
            damping: 20
        },
        value: b,
        onChange: k => {
            k === 3 && !h ? g ? m ? p === "business" ? tt("map-domain-limit-business") : tt("map-domain-limit") : x(k) : tt("map-domain") : k === 4 && !h ? u ? x(k) : (x(t), tt("export-pdf")) : x(k)
        },
        children: [a(Qt, {
            value: 0,
            renderButton: ({
                isActive: k
            }) => r(a(ns, {
                isActive: k,
                label: "Project settings",
                "data-testid": "project-settings-general",
                TextPosition: o
            }), "project-settings"),
            children: (k, T) => a(f, {
                ref: k,
                children: i(a(D_, {
                    isActive: T
                }), "project-settings")
            })
        }), e.includes("viewer") ? null : a(Qt, {
            value: 1,
            renderButton: ({
                isActive: k
            }) => r(a(ns, {
                divider: !0,
                label: `${P} Viewer`,
                isActive: k,
                TextPosition: o
            }), "viewer"),
            children: k => a(f, {
                ref: k,
                children: i(a(Q_, {}), "viewer")
            })
        }), a(Qt, {
            value: 2,
            renderButton: ({
                isActive: k
            }) => r(a(ns, {
                divider: !0,
                label: "Code",
                isActive: k,
                withDot: v,
                TextPosition: o
            }), "code"),
            children: k => a(f, {
                ref: k,
                children: i(a(O_, {
                    hasProjectCode: v,
                    showUpgradeAlert: !n.me.permissions.can_inject_code,
                    onOpenCodeEditorClick: S
                }), "code")
            })
        }), a(Qt, {
            value: 3,
            renderButton: ({
                isActive: k
            }) => r(a(ns, {
                divider: !0,
                label: "Domain",
                isActive: k,
                withDot: !!n.project.domain,
                TextPosition: o
            }), "domain"),
            children: k => a(f, {
                ref: k,
                children: i(a(X_, {}), "domain")
            })
        }), e.includes("export") ? null : a(Qt, {
            value: 4,
            renderButton: ({
                isActive: k
            }) => r(a(ns, {
                label: "Export",
                isActive: k,
                divider: !0,
                TextPosition: o
            }), "export"),
            children: k => a(f, {
                ref: k,
                children: i(a(fm, {}), "export")
            })
        })]
    })
}

function ns({
    label: e,
    divider: o,
    isActive: t,
    withDot: r,
    "data-testid": i,
    TextPosition: n = {}
}) {
    return w(f, {
        width: "100%",
        height: 48,
        display: "flex",
        justifyContent: "left",
        alignItems: "center",
        cursor: "pointer",
        "data-testid": i,
        userSelect: "none",
        position: "relative",
        borderTop: "2px solid",
        borderTopColor: o ? "gray" : "transparent",
        css: ne `
        &:hover {
          & span {
            color: ${t?q.black:q.red};
          }
        }
      `,
        children: [a(f, {
            position: "relative",
            bottom: r ? "2px" : void 0,
            children: a(A, {
                color: "black",
                textStyle: "subheading",
                ...n,
                children: e
            })
        }), r ? a(f, {
            width: "6px",
            height: "6px",
            borderRadius: "50%",
            backgroundColor: "black",
            position: "absolute",
            right: 24,
            top: 21
        }) : null]
    })
}
Ee();
Sr();
Kt();
y();
var tC = () => {
    let [e, o] = (0, Sm.useState)(0), t = (0, Sm.useContext)(me), r = t.hasPermission("can_export_pdf"), i = t.isSubscriptionPaused();
    return w(cr, {
        dynamicHeight: !0,
        transition: {
            mass: 1,
            stiffness: 210,
            damping: 20
        },
        value: e,
        onChange: n => {
            n === 1 && !i ? r ? o(n) : (o(0), tt("export-pdf")) : o(n)
        },
        children: [a(Qt, {
            value: 0,
            renderButton: ({
                isActive: n
            }) => a(f, {
                padding: "0 16px",
                children: a(GB, {
                    label: "Share",
                    isActive: n
                })
            }),
            children: n => a(f, {
                ref: n,
                padding: "0 16px",
                children: a(C_, {
                    shareMode: "full"
                })
            })
        }), a(Qt, {
            value: 1,
            renderButton: ({
                isActive: n
            }) => a(f, {
                padding: "0 16px",
                children: a(ns, {
                    isActive: n,
                    label: "Export",
                    divider: !0
                })
            }),
            children: n => a(f, {
                ref: n,
                padding: "0 16px 16px 16px",
                children: a(fm, {})
            })
        })]
    })
};

function GB(e) {
    return a(f, {
        display: "flex",
        justifyContent: "space-between",
        alignItems: "baseline",
        children: a(f, {
            children: a(ns, { ...e
            })
        })
    })
}
te();
Tt();
Ue();
y();

function sb({
    children: e,
    button: o,
    ...t
}) {
    let {
        iframeElement: r
    } = (0, Pm.useContext)(sr), i = (0, Pm.useCallback)((n, s) => {
        n === r && s()
    }, [r]);
    return a(Yt, {
        disablePortal: !0,
        name: "preview-share",
        skidding: -84,
        button: o,
        ArrowProps: {
            stroke: Be(.84, q.gray)
        },
        panelPosition: {
            height: "auto"
        },
        onWindowBlur: i,
        ...t,
        children: a(f, {
            width: 224,
            color: "black",
            height: "100%",
            borderRadius: "2rm",
            backdropFilter: "blur(4px)",
            backgroundColor: Ie("lightGray", .96),
            border: "2px solid rgba(184, 184, 184, 0.16)",
            children: a(tC, {})
        })
    })
}
Yv();
hh();
var na = M(F());
Di();
nn();
Ee();
F6();
y();

function oC() {
    let {
        pages: e
    } = Ya(), {
        currentPageId: o,
        setViewport: t,
        viewport: r
    } = (0, na.useContext)(sr), [i] = (0, na.useState)(ov), n = e.find(b => b._id === o), s = n ? .viewport_tablet_portrait ? .enabled, l = n ? .viewport_phone_portrait ? .enabled, p = i.find(b => b.pageId === o), d = !!(s && p ? .tablet_portrait), c = !!(l && p ? .phone_portrait), m = (0, na.useMemo)(() => {
        let b = ["default"];
        return s && b.push("tablet_portrait"), l && b.push("phone_portrait"), b
    }, [s, l]), u = (0, na.useMemo)(() => {
        let b = (m.indexOf(r) + 1) % m.length;
        return m[b]
    }, [m, r]);

    function g() {
        t(u)
    }
    let h;
    return u === "tablet_portrait" ? h = a(Hi, {
        show: d,
        offset: [0, "calc(100% + 3px)"],
        children: a(tu, {})
    }) : u === "phone_portrait" ? h = a(Hi, {
        show: c,
        offset: [0, "calc(100% + 3px)"],
        children: a(eu, {})
    }) : h = a(Jd, {}), m.length > 1 ? a(Il, {
        onClick: g,
        children: h
    }) : null
}
rr();
y();

function jB(e) {
    return w(f, {
        "aria-label": "Preview toolbar",
        position: "fixed",
        right: 16,
        bottom: 16,
        gap: "2rm",
        display: "flex",
        ...e,
        children: [a(f, {
            position: "absolute",
            right: "102%",
            top: "0",
            children: a(ru, {})
        }), a(x_, {
            width: 104,
            textStyle: "small"
        }), a(y_, {
            children: a(il, {
                children: w(f, {
                    display: "flex",
                    width: 112,
                    height: 56,
                    backgroundColor: Ie("darkGray", .96),
                    borderRadius: 40,
                    children: [a(Zf, {
                        width: "50%",
                        height: "100%",
                        button: ({
                            isPanelShown: o
                        }) => a(Jf, {
                            width: 56,
                            icon: a(zv, {}),
                            isActive: o,
                            tooltipTargetSteps: ["ViewerSettings"],
                            "aria-label": "Viewer settings toggle",
                            TooltipProps: {
                                text: "Viewer settings",
                                disabled: o,
                                instance: !0,
                                closeOnTargetClick: !0
                            }
                        })
                    }), a(sb, {
                        width: "50%",
                        height: "100%",
                        button: ({
                            isPanelShown: o
                        }) => a(Jf, {
                            width: 56,
                            icon: a(k_, {}),
                            isActive: o,
                            TooltipProps: {
                                text: "Share",
                                disabled: o,
                                instance: !0,
                                closeOnTargetClick: !0
                            }
                        })
                    })]
                })
            })
        }), a(um, {
            previewOnly: !0
        })]
    })
}

function qB(e) {
    return a(f, {
        position: "fixed",
        left: 16,
        bottom: 16,
        gap: "2rm",
        display: "flex",
        ...e,
        children: a(oC, {})
    })
}

function Tm(e) {
    return w(Y, {
        children: [Ve("constructor.mobileBrokenChange") ? a(qB, { ...e
        }) : null, a(jB, { ...e
        })]
    })
}
var qg = M(F());
var d5 = M(F());
Ye();
W();
te();
Ro();
He();
Hn();
y();
var rC = ({
    id: e = "stackIcon",
    width: o,
    height: t,
    hoverBox: r
}) => {
    let i = Fo(o, t, r);
    return w("svg", {
        viewBox: "0 -3 26 31",
        xmlns: "http://www.w3.org/2000/svg",
        id: e,
        width: o,
        height: t,
        style: {
            padding: i
        },
        children: [w("path", {
            d: "M13.4 2.23764L22.5768 7.68364C23.8575 8.44363 23.8643 10.295 22.5893 11.0644L13.4085 16.6048C12.7836 16.9819 12.0014 16.9826 11.3758 16.6066L2.18583 11.0828C0.908554 10.3151 0.913273 8.46198 2.19444 7.70077L11.3884 2.23816C12.0083 1.86983 12.7799 1.86963 13.4 2.23764Z",
            stroke: "currentColor",
            strokeWidth: "2",
            fill: "none",
            children: [a("animateTransform", {
                attributeName: "transform",
                type: "translate",
                to: "0 -2",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animateTransform", {
                attributeName: "transform",
                type: "translate",
                from: "0 -2",
                to: "0 0",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        }), a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M0.170953 12.017C-0.275589 13.2786 0.154473 14.7905 1.43996 15.5631L10.8527 21.2208C11.7958 21.7877 12.9751 21.7866 13.9173 21.2181L23.3205 15.5434C24.6028 14.7696 25.0309 13.2599 24.585 12C24.3683 12.6133 23.946 13.1659 23.3205 13.5434L13.9173 19.2181C12.9751 19.7866 11.7958 19.7877 10.8527 19.2208L1.43996 13.5631C0.81201 13.1857 0.388184 12.6319 0.170953 12.017Z",
            fill: "currentColor"
        }), w("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M0.329156 15.932C-0.117386 17.1936 0.312676 18.7055 1.59817 19.4782L11.0109 25.1358C11.954 25.7027 13.1333 25.7017 14.0755 25.1331L23.4787 19.4585C24.761 18.6847 25.1891 17.175 24.7432 15.915C24.5265 16.5284 24.1042 17.081 23.4787 17.4585L14.0755 23.1331C13.1333 23.7017 11.954 23.7027 11.0109 23.1358L1.59817 17.4782C0.970213 17.1007 0.546387 16.5469 0.329156 15.932Z",
            fill: "currentColor",
            children: [a("animateTransform", {
                attributeName: "transform",
                type: "translate",
                to: "0 2",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animateTransform", {
                attributeName: "transform",
                type: "translate",
                from: "0 2",
                to: "0 0",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        })]
    })
};
No();
kt();
y();
var iC = ({
    disableTooltip: e,
    onClick: o,
    ...t
}) => a(mt, {
    targetSteps: ["OpenLayersPanel", "FindVisibleMobileMenu"],
    defaultText: "Layers (Q)",
    indent: 8,
    disabled: e,
    leaveDelay: 100,
    instance: !0,
    closeOnTargetClick: !0,
    children: a(ge, {
        "data-widgetbar-action": "stack-panel",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        onClick: o,
        variant: "unstyled",
        height: "100%",
        width: "100%",
        color: "white",
        "aria-label": "Widgets",
        "data-testid": "layer-button",
        ...t,
        children: a(rC, {
            width: "26px",
            height: "34px",
            hoverBox: {
                width: 56,
                height: 56
            }
        })
    })
});
He();
Hn();
y();
var nC = ({
    id: e = "plusIcon",
    width: o,
    height: t,
    hoverBox: r
}) => {
    let i = Fo(o, t, r);
    return w("svg", {
        id: e,
        viewBox: "0 0 32 32",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        width: o,
        height: t,
        style: {
            padding: i
        },
        children: [w("line", {
            x1: "5",
            y1: "16",
            x2: "27",
            y2: "16",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round",
            children: [a("animate", {
                attributeName: "x1",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x1",
                to: "5",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "31",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "27",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        }), w("line", {
            x1: "16",
            y1: "5",
            x2: "16",
            y2: "27",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round",
            children: [a("animate", {
                attributeName: "y1",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "y1",
                to: "5",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "y2",
                to: "31",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "y2",
                to: "27",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        })]
    })
};
ai();
vr();
No();
kt();
y();
var sC = ({
    onClick: e,
    tooltipPosition: o,
    disableTooltip: t,
    ...r
}) => {
    let [{
        message: i
    }] = Xa(), n = () => {
        e && e(), window.RM.constructorRouter.trigger("notice:triggerMetrics", "countWidgetPanelOpened")
    };
    return a(mt, {
        targetSteps: ["PictureWidget", "ButtonWidget"],
        eduTips: ["eduTipUsePlusIcon"],
        defaultText: "Add widget (W)",
        indent: 8,
        position: i === "eduTipUsePlusIcon" ? "right" : o,
        disabled: t,
        leaveDelay: 100,
        instance: !0,
        closeOnTargetClick: !0,
        children: a(ge, {
            "data-widgetbar-action": "add-widget",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            color: "white",
            onClick: n,
            variant: "unstyled",
            height: "100%",
            width: "100%",
            "aria-label": "Add widget",
            "data-testid": "widget-button",
            ...r,
            children: a(nC, {
                width: "32px",
                height: "32px",
                hoverBox: {
                    width: 56,
                    height: 56
                }
            })
        })
    })
};
Ut();
Nr();
var aC = M(F());
te();
Tt();
Ue();
W();
y();
var lC = ({
    children: e,
    onMouseEnter: o,
    onMouseLeave: t,
    onClick: r,
    ...i
}) => {
    let {
        user: n
    } = (0, aC.useContext)(pr);
    return a(Ct, {
        position: "relative",
        "data-testid": "open-profile",
        height: 56,
        width: 56,
        as: "a",
        margin: "0",
        textDecoration: "none",
        border: "none",
        backgroundColor: "transparent",
        css: ne `
        & > * {
          width: 56px !important;
          height: 56px !important;
          flex: none;
          background-color: transparent !important;
        }
        ${n?.pic?`& > *, & > * > * {
                  background-color: transparent !important;
                }`:""}
      `,
        onMouseEnter: o,
        onMouseLeave: t,
        onClick: r,
        ...i,
        children: n && w(Y, {
            children: [a(qt, {
                url: n.pic,
                name: n.name
            }), a(f, {
                boxShadow: `0 0 0 2px inset ${Be(.8,q.gray)}`,
                position: "absolute",
                top: "0",
                borderRadius: "50%",
                width: "100%",
                height: "100%"
            })]
        })
    })
};
var aa = M(F());
W();
Ee();
var wb = M(F());
Ye();
var Ni = M(F());
Uh();
Di();
Ue();
W();
He();
var cC = M(F());
X6();
W();
be();
Nr();
Ue();
te();
y();
var ab = [`inset 0 0 0 8px ${q.red}, inset 0 0 0 12px ${q.white}`, `inset 0 0 0 4px ${q.red}, inset 0 0 0 12px ${q.white}`],
    pC = 4,
    YB = 16 * 1.25,
    Ol = YB * 2 + pC,
    XB = f,
    KB = N(f)
`
  display: flex;
  overflow: hidden;
  @media (pointer: fine) {
    &:hover {
      overflow: visible;
    }
  }
`, ZB = N(qt)
`
  display: block;
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    border-radius: 50%;
    transition: box-shadow 100ms ease-out;
    ${e=>e.selected?`box-shadow: ${ab[0]}`:"box-shadow: none"};
  }
`, JB = N(Sv)
`
  display: block;
  g {
    fill: ${q.red};
    transition: fill 100ms ease-out;
  }
`;

function QB({
    name: e,
    url: o,
    isMultiple: t,
    isSelected: r,
    isCaptionVisible: i,
    isPending: n = !1,
    fullBox: s,
    projectsCount: l,
    showInitials: p = !0,
    showCaption: d = !0,
    className: c,
    email: m,
    overflowName: u = !0,
    onUnshare: g,
    showUnshareButton: h = !1,
    ...b
}) {
    let x = u && !n,
        [S, v] = (0, cC.useState)(!1),
        P = () => {
            g && g()
        };
    return w(KB, {
        onMouseEnter: () => v(!0),
        onMouseLeave: () => v(!1),
        position: "relative",
        flexDirection: "column",
        alignItems: "center",
        paddingBottom: s ? Ol : void 0,
        className: c,
        cursor: r ? "auto" : "pointer",
        children: [t ? a(JB, {
            "data-testid": "multiple-icon",
            selected: r,
            opacity: S || r ? 1 : .5
        }) : w(f, {
            children: [h && S && a(Ct, {
                position: "absolute",
                zIndex: 1,
                color: "gray",
                hoverTextColor: "white",
                width: xt.regular,
                height: xt.regular,
                onClick: P,
                marginRight: 0,
                children: "Delete"
            }), a(ZB, {
                name: typeof e == "string" ? e : "",
                url: o,
                showInitials: p,
                ...b,
                boxShadow: S ? r ? ab[0] : ab[1] : void 0,
                selected: S || r
            })]
        }), d ? w(XB, {
            position: "absolute",
            top: xt.regular + pC,
            width: "100%",
            color: i ? "black" : "tomato",
            opacity: S || r || i ? 1 : 0,
            transition: "opacity 100ms ease-out;",
            children: [a(we, {
                as: "div",
                textAlign: "center",
                textStyle: "regular",
                paddingLeft: "2rm",
                paddingRight: "2rm",
                overflow: x ? "hidden" : void 0,
                whiteSpace: x ? "nowrap" : void 0,
                maskImage: x ? "linear-gradient(to right, rgba(0, 0, 0, 1), rgba(0, 0, 0, 1) 65%, rgba(0, 0, 0, 0))" : void 0,
                children: n ? "Pending" : typeof e == "string" ? e.split(" ")[0] : e
            }), a(we, {
                as: "div",
                textAlign: "center",
                textStyle: "regular",
                children: l
            }), m ? a(we, {
                as: "div",
                textAlign: "center",
                textStyle: "regular",
                color: "tomato",
                marginLeft: "50%",
                transform: "translateX(-50%)",
                display: "inline-block",
                whiteSpace: "nowrap",
                children: m
            }) : null]
        }) : null]
    })
}
var ss = QB;
var dC = M(iy());
Tt();
Uh();
W();
be();
He();
Ue();
te();
ny();
y();
var [e7] = En;

function t7({
    title: e,
    children: o,
    show: t,
    error: r,
    closeTitle: i = "Cancel",
    bgColor: n = "white",
    zIndex: s,
    dialogPosition: l,
    ...p
}) {
    let [d] = su(t);
    return a(ll, {
        query: `(min-width: ${e7})`,
        children: c => t ? w(dC.default, {
            initialFocus: "#rm-close-modal",
            titleId: "#rm-modal-title",
            underlayStyle: { ...d,
                backgroundColor: Be(.04, q.black),
                paddingTop: c ? 72 : 0,
                paddingBottom: c ? 72 : 0,
                boxSizing: "border-box",
                overflow: "hidden",
                ...s ? {
                    zIndex: s
                } : {}
            },
            dialogStyle: { ...d,
                ...c ? {} : {
                    height: "100%",
                    minHeight: 250,
                    width: "100%"
                },
                display: "inline-flex",
                maxHeight: "100%",
                position: l
            },
            ...p,
            children: [!c && a(f, {
                top: 16,
                right: 24,
                position: "absolute",
                children: a(ge, {
                    color: "white",
                    onClick: p.onExit,
                    id: "rm-close-modal",
                    children: i
                })
            }), a(f, {
                display: "flex",
                flexDirection: "column",
                marginTop: [78, 0],
                marginLeft: "auto",
                marginRight: "auto",
                backgroundColor: n,
                borderRadius: ["8px 8px 0 0", "8px"],
                width: ["100%", 768],
                maxHeight: "100%",
                overflow: "hidden",
                children: w(f, {
                    display: "flex",
                    flex: 1,
                    overflowY: "auto",
                    flexDirection: "column",
                    children: [a(f, {
                        paddingLeft: [24, "16rm"],
                        paddingRight: [24, "16rm"],
                        paddingTop: [20, 40],
                        children: e ? w(f, {
                            display: "flex",
                            justifyContent: "space-between",
                            alignItems: "baseline",
                            children: [a(A, {
                                textStyle: "subheading",
                                as: "h2",
                                id: "rm-modal-title",
                                minHeight: ["auto", "2em"],
                                css: ne `
                          &::first-letter {
                            text-transform: uppercase;
                          }
                        `,
                                children: e
                            }), c ? a(ge, {
                                onClick: p.onExit,
                                variant: "tertiary",
                                id: "rm-close-modal",
                                children: i
                            }) : null]
                        }) : null
                    }), a(f, {
                        display: "flex",
                        paddingLeft: [24, 64],
                        paddingRight: [24, 64],
                        marginBottom: [16, r ? 0 : 40],
                        flex: 1,
                        flexDirection: "column",
                        children: o
                    }), c && r && a(f, {
                        height: 40,
                        backgroundColor: r ? "tomato" : "transparent",
                        color: "white",
                        paddingLeft: 64,
                        paddingRight: 64,
                        marginTop: "auto",
                        children: r ? a(A, {
                            color: "white",
                            lineHeight: 40 / 16,
                            children: r
                        }) : null
                    }), !c && r && a(f, {
                        height: 60,
                        position: "absolute",
                        bottom: 16,
                        paddingLeft: 24,
                        paddingRight: 16,
                        width: "100%",
                        children: a(A, {
                            as: "div",
                            color: "tomato",
                            textAlign: "center",
                            children: r
                        })
                    })]
                })
            })]
        }) : null
    })
}
var lb = t7;
be();
var $l = M(F());
dk();
var xC = M(hC());
var Ko = {
        CASE_SENSITIVE_EQUAL: 7,
        EQUAL: 6,
        STARTS_WITH: 5,
        WORD_STARTS_WITH: 4,
        CONTAINS: 3,
        ACRONYM: 2,
        MATCHES: 1,
        NO_MATCH: 0
    },
    s7 = (e, o) => String(e.rankedValue).localeCompare(String(o.rankedValue));

function cb(e, o, t) {
    t === void 0 && (t = {});
    let {
        keys: r,
        threshold: i = Ko.MATCHES,
        baseSort: n = s7,
        sorter: s = d => d.sort((c, m) => p7(c, m, n))
    } = t, l = e.reduce(p, []);
    return s(l).map(d => {
        let {
            item: c
        } = d;
        return c
    });

    function p(d, c, m) {
        let u = a7(c, r, o, t),
            {
                rank: g,
                keyThreshold: h = i
            } = u;
        return g >= h && d.push({ ...u,
            item: c,
            index: m
        }), d
    }
}
cb.rankings = Ko;

function a7(e, o, t, r) {
    if (!o) {
        let n = e;
        return {
            rankedValue: n,
            rank: fC(n, t, r),
            keyIndex: -1,
            keyThreshold: r.threshold
        }
    }
    return m7(e, o).reduce((n, s, l) => {
        let {
            rank: p,
            rankedValue: d,
            keyIndex: c,
            keyThreshold: m
        } = n, {
            itemValue: u,
            attributes: g
        } = s, h = fC(u, t, r), b = d, {
            minRanking: x,
            maxRanking: S,
            threshold: v
        } = g;
        return h < x && h >= Ko.MATCHES ? h = x : h > S && (h = S), h > p && (p = h, c = l, m = v, b = u), {
            rankedValue: b,
            rank: p,
            keyIndex: c,
            keyThreshold: m
        }
    }, {
        rankedValue: e,
        rank: Ko.NO_MATCH,
        keyIndex: -1,
        keyThreshold: r.threshold
    })
}

function fC(e, o, t) {
    return e = bC(e, t), o = bC(o, t), o.length > e.length ? Ko.NO_MATCH : e === o ? Ko.CASE_SENSITIVE_EQUAL : (e = e.toLowerCase(), o = o.toLowerCase(), e === o ? Ko.EQUAL : e.startsWith(o) ? Ko.STARTS_WITH : e.includes(` ${o}`) ? Ko.WORD_STARTS_WITH : e.includes(o) ? Ko.CONTAINS : o.length === 1 ? Ko.NO_MATCH : l7(e).includes(o) ? Ko.ACRONYM : c7(e, o))
}

function l7(e) {
    let o = "";
    return e.split(" ").forEach(r => {
        r.split("-").forEach(n => {
            o += n.substr(0, 1)
        })
    }), o
}

function c7(e, o) {
    let t = 0,
        r = 0;

    function i(p, d, c) {
        for (let m = c, u = d.length; m < u; m++)
            if (d[m] === p) return t += 1, m + 1;
        return -1
    }

    function n(p) {
        let d = 1 / p,
            c = t / o.length;
        return Ko.MATCHES + c * d
    }
    let s = i(o[0], e, 0);
    if (s < 0) return Ko.NO_MATCH;
    r = s;
    for (let p = 1, d = o.length; p < d; p++) {
        let c = o[p];
        if (r = i(c, e, r), !(r > -1)) return Ko.NO_MATCH
    }
    let l = r - s;
    return n(l)
}

function p7(e, o, t) {
    let {
        rank: n,
        keyIndex: s
    } = e, {
        rank: l,
        keyIndex: p
    } = o;
    return n === l ? s === p ? t(e, o) : s < p ? -1 : 1 : n > l ? -1 : 1
}

function bC(e, o) {
    let {
        keepDiacritics: t
    } = o;
    return e = `${e}`, t || (e = (0, xC.default)(e)), e
}

function d7(e, o) {
    typeof o == "object" && (o = o.key);
    let t;
    if (typeof o == "function") t = o(e);
    else if (e == null) t = null;
    else if (Object.hasOwnProperty.call(e, o)) t = e[o];
    else {
        if (o.includes(".")) return u7(o, e);
        t = null
    }
    return t == null ? [] : Array.isArray(t) ? t : [String(t)]
}

function u7(e, o) {
    let t = e.split("."),
        r = [o];
    for (let i = 0, n = t.length; i < n; i++) {
        let s = t[i],
            l = [];
        for (let p = 0, d = r.length; p < d; p++) {
            let c = r[p];
            if (c != null)
                if (Object.hasOwnProperty.call(c, s)) {
                    let m = c[s];
                    m != null && l.push(m)
                } else s === "*" && (l = l.concat(c))
        }
        r = l
    }
    return Array.isArray(r[0]) ? [].concat(...r) : r
}

function m7(e, o) {
    let t = [];
    for (let r = 0, i = o.length; r < i; r++) {
        let n = o[r],
            s = g7(n),
            l = d7(e, n);
        for (let p = 0, d = l.length; p < d; p++) t.push({
            itemValue: l[p],
            attributes: s
        })
    }
    return t
}
var wC = {
    maxRanking: 1 / 0,
    minRanking: -1 / 0
};

function g7(e) {
    return typeof e == "string" ? wC : { ...wC,
        ...e
    }
}
Uh();
be();
W();
Nr();
He();
my();
Ue();
Ai();
Jh();
kr();
te();
y();
var pb = e => e && /^\S+@\S+$/.test(e);

function bp(e, o) {
    return e || pb(o)
}
var [h7] = En, f7 = (e, {
    inputValue: o,
    ...t
}) => {
    switch (t.type) {
        case qs.stateChangeTypes.blurInput:
        case qs.stateChangeTypes.itemMouseEnter:
        case qs.stateChangeTypes.mouseUp:
            return t;
        default:
            return {
                inputValue: o,
                ...t
            }
    }
};

function b7({
    placeholder: e,
    submitText: o = "Submit",
    suggestions: t = [],
    suggestionsBoxStyle: r,
    renderWhenSelected: i,
    disabled: n = !1,
    focusOnMount: s,
    onChange: l,
    onFocus: p,
    onBlur: d,
    selectedUser: c,
    showInput: m = !0,
    preSubmitSlot: u
}) {
    let [g, h] = (0, $l.useState)(!1), b = (0, $l.useRef)(null);
    return (0, $l.useEffect)(() => {
        s && b.current && b.current.focus()
    }, [s]), a(qs, {
        stateReducer: f7,
        itemToString: x => x ? x.name : null,
        id: "rm-user-search",
        initialInputValue: typeof c == "string" ? c : void 0,
        initialSelectedItem: typeof c == "object" ? c : void 0,
        isOpen: !0,
        onStateChange: x => {
            l && (x.selectedItem !== void 0 ? l(x.selectedItem) : x.inputValue !== void 0 && l(x.inputValue))
        },
        children: ({
            getInputProps: x,
            getItemProps: S,
            getMenuProps: v,
            selectedItem: P,
            inputValue: C,
            clearSelection: k
        }) => a("div", {
            children: a(ll, {
                query: `(min-width: ${h7})`,
                children: T => {
                    let R = cb(t, C || "", {
                            keys: ["name"]
                        }),
                        I = C ? null : !!t.length && a(f, {
                            display: "flex",
                            marginRight: [0, 16],
                            marginBottom: [16, 0],
                            height: 72,
                            alignItems: "center",
                            children: a(we, {
                                textStyle: T ? "subheading" : "regular",
                                color: "gray",
                                children: "Suggestions"
                            })
                        });
                    return w(f, {
                        children: [w(f, {
                            display: "flex",
                            paddingLeft: P || !T ? 0 : 88,
                            flexDirection: ["row-reverse", "row"],
                            children: [P ? T ? a(qt, {
                                name: P.name,
                                url: P.pic,
                                marginRight: 16
                            }) : w(f, {
                                position: "relative",
                                children: [a(f, {
                                    position: "absolute",
                                    top: 0,
                                    left: 0,
                                    zIndex: 1,
                                    width: 72,
                                    height: 72,
                                    display: "flex",
                                    alignItems: "center",
                                    justifyContent: "center",
                                    children: a(dl, {
                                        zIndex: 1,
                                        inverted: !0,
                                        color: "tomato",
                                        "aria-label": "Clear selection",
                                        onClick: () => k(),
                                        icon: a(Lt, {})
                                    })
                                }), a(qt, {
                                    name: P.name,
                                    url: P.pic,
                                    display: "block"
                                })]
                            }) : null, w(f, {
                                flex: 1,
                                display: ["flex", "block"],
                                children: [w(f, {
                                    gap: "20px",
                                    display: "flex",
                                    justifyContent: "space-between",
                                    borderBottom: "2px solid",
                                    borderColor: g ? "black" : "lightGray",
                                    width: "100%",
                                    css: ne `
                          ${Ge}.clear {
                            visibility: hidden;
                          }

                          &:hover ${Ge}.clear {
                            visibility: visible;
                          }
                        `,
                                    children: [P ? a(f, {
                                        display: "flex",
                                        height: xt.regular - 2,
                                        alignItems: "center",
                                        children: a(f, {
                                            whiteSpace: T ? void 0 : "nowrap",
                                            width: T ? void 0 : "calc(100vw - 200px)",
                                            overflow: T ? void 0 : "hidden",
                                            textOverflow: T ? void 0 : "ellipsis",
                                            children: w(we, {
                                                textStyle: T ? "subheading" : "regular",
                                                children: [P.name, T && !n && a(Ge, {
                                                    className: "clear",
                                                    "aria-label": "Clear selection",
                                                    onClick: () => k(),
                                                    marginLeft: "2rm",
                                                    children: a(Lt, {
                                                        "aria-hidden": !0
                                                    })
                                                })]
                                            })
                                        })
                                    }) : m ? w(f, {
                                        as: "label",
                                        width: "100%",
                                        children: [a(cu, {
                                            as: "span",
                                            children: e
                                        }), a(St, {
                                            ref: b,
                                            textStyle: T ? "subheading" : "regular",
                                            padding: "0 !important",
                                            margin: "none !important",
                                            boxSizing: "border-box",
                                            height: `${xt.regular}px`,
                                            border: "none !important",
                                            ...x({
                                                placeholder: e,
                                                id: "rm-user-search-input",
                                                height: xt.regular,
                                                disabled: n,
                                                onFocus: () => {
                                                    p && (h(!0), p())
                                                },
                                                onBlur: () => {
                                                    d && (h(!1), d())
                                                }
                                            })
                                        })]
                                    }) : "", bp(P, C) && T ? w(f, {
                                        display: "flex",
                                        gap: "20px",
                                        children: [u, a(Ge, {
                                            variant: "primary",
                                            textStyle: "subheading",
                                            type: "submit",
                                            disabled: n,
                                            lineHeight: "72px",
                                            minWidth: 60,
                                            whiteSpace: "nowrap",
                                            children: o
                                        })]
                                    }) : null]
                                }), !T && C && !bp(P, C) && R.length ? R.slice(0, 1).map((B, L) => a(ss, {
                                    name: B.name || B.email,
                                    email: B.name ? B.email : "",
                                    url: B.pic,
                                    projectsCount: B.projectsCount,
                                    isCaptionVisible: !1,
                                    showInitials: !1,
                                    fullBox: !1,
                                    "data-testid": B._id,
                                    ...S({
                                        item: B,
                                        key: L
                                    }),
                                    opacity: .4
                                }, L)) : null, bp(P, C) && !T ? a(Ct, {
                                    type: "submit",
                                    width: xt.regular,
                                    height: xt.regular,
                                    color: "tomato",
                                    disabled: n,
                                    flexShrink: 0,
                                    marginRight: 0,
                                    whiteSpace: "nowrap",
                                    children: o
                                }) : null, bp(P, C) ? i : null]
                            })]
                        }), t.length ? a(f, {
                            marginTop: [22, 66],
                            marginLeft: [0, xt.regular + 16],
                            minHeight: xt.regular + (T ? Ol : 0),
                            ...r,
                            children: bp(P, C) ? null : w(f, {
                                display: ["block", "flex"],
                                children: [T ? null : I, w(f, {
                                    display: "flex",
                                    ...v(),
                                    flexWrap: ["nowrap", "wrap"],
                                    marginLeft: [-24, 0],
                                    paddingLeft: [24, 0],
                                    width: ["100vw", null],
                                    overflowX: "auto",
                                    css: ne `
                              -webkit-overflow-scrolling: touch;
                            `,
                                    children: [T ? I : null, T || !C ? R.map((B, L) => a(f, {
                                        height: 146,
                                        children: a(ss, {
                                            name: B.name || B.email,
                                            email: B.name ? B.email : "",
                                            url: B.pic,
                                            projectsCount: B.projectsCount,
                                            isCaptionVisible: !T,
                                            fullBox: !T,
                                            "data-testid": B._id,
                                            ...S({
                                                item: B,
                                                key: L
                                            })
                                        })
                                    }, B._id)) : null]
                                })]
                            })
                        }) : null]
                    })
                }
            })
        })
    })
}
var db = b7;
var Mm = M(F());
GI();
jc();
W();
He();
be();
y();

function w7({
    showUnshare: e,
    onUnshare: o,
    onChangeRole: t,
    roles: r,
    selectedRoleName: i,
    disabled: n = !1
}) {
    let [s, l] = (0, Mm.useState)(!1), p = (0, Mm.useMemo)(() => {
        let d = r.find(c => c.name === i);
        return w(ge, {
            variant: "tertiary",
            textStyle: "subheading",
            disabled: n,
            children: [d ? .description || i || "Select role", " ", a(A, {
                textStyle: "subheading",
                color: "gray",
                children: "v"
            })]
        })
    }, [r, i, n]);
    return w(Y, {
        children: [s && a(Li, {
            position: "absolute",
            borderRadius: ["8px 8px 0 0", "8px"]
        }), a(f, {
            display: "flex",
            alignItems: "center",
            whiteSpace: "nowrap",
            children: w(uk, {
                target: p,
                placement: "bottom-end",
                onStateChange: d => {
                    typeof d.isOpen == "boolean" && l(d.isOpen)
                },
                menuWrapper: d => a(f, {
                    textAlign: "right",
                    children: d
                }),
                children: [r.map((d, c) => a(tf, {
                    description: {
                        content: d.secondaryDescription,
                        marginTop: "9px"
                    },
                    onClick: () => t(d.name),
                    children: d.description
                }, c)), e && o && a(tf, {
                    onClick: () => o(),
                    children: "Unshare"
                })]
            })
        })]
    })
}
var ub = w7;
be();
te();
var mb = we.withComponent(N("input")
    `
  outline: none;
  height: 72px;
  width: 100%;
  padding-left: 0;
  padding-right: 0;
  border: none;

  transition: border-color 100ms ease-out;
  /* NOTE: Верхний прозрачный бордер у инпута выравнивает текст инпута вертикально по центру,
  например чтобы он был на одной линии с текстом кнопки, если она высотой с инпут */
  border-top: 2px solid transparent;
  border-bottom: 2px solid ${({theme:e})=>e.colors.lightGray};
  border-radius: 0;

  &::placeholder {
    color: ${({theme:e})=>e.colors.gray};
  }

  &:focus {
    border-bottom-color: ${({theme:e})=>e.colors.black};
  }
`);
mb.defaultProps = {
    textStyle: "subheading"
};
var Hl = M(F());
W();
_r();
te();
Wc();
W();
y();
var gb = 24,
    sa = gb + 2,
    vC = 2,
    x7 = 8,
    v7 = kd `
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
`,
    y7 = N("div")
`
  display: flex;
  justify-content: center;
  align-items: center;
  width: ${gb}px;
  height: ${gb}px;
  border: 1px solid transparent;
  border-radius: 50%;
  background: ${({theme:e})=>e.colors.tomato};
  background-clip: content-box;
`, k7 = f.withComponent(N("svg")
    `
  position: absolute;
  left: -1px;
  top: -1px;
`), _7 = N("circle")
`
  stroke: ${({theme:e})=>e.colors.white};
  stroke-width: ${vC}px;
  stroke-dasharray: 37;
  fill: none;
  transform-origin: center;
  animation: ${v7} ${x7}s linear infinite;
`;

function yC({
    className: e,
    spinning: o
}) {
    return w(y7, {
        className: e,
        children: [a(k7, {
            width: `${sa}px`,
            height: `${sa}px`,
            viewBox: `0 0 ${sa} ${sa}`,
            xmlns: "http://www.w3.org/2000/svg",
            children: o && a(_7, {
                cx: sa / 2,
                cy: sa / 2,
                r: (sa - vC) / 2
            })
        }), a(Cr, {})]
    })
}
yC.defaultProps = {
    spinning: !0
};
var kC = yC;
jc();
Nr();
Jh();
Ai();
Wc();
te();
y();
var hb = 1e3,
    C7 = N(Cr)
`
  & > g {
    fill: ${({theme:e})=>e.colors.tomato}!important;
  }
`, S7 = N(kC)
`
  position: absolute;
  left: 0;
  bottom: ${Ol}px;
  top: 0;
  right: 0;
  z-index: 1;
  margin: auto;
`;

function P7({
    teammate: e,
    projectCount: o,
    isSelected: t,
    showOverlay: r,
    showActionOnHover: i,
    showEllipsisIcon: n,
    showContextMenu: s = !0,
    onResend: l,
    onUnshare: p,
    onToggle: d,
    onAppear: c,
    onDisappear: m
}) {
    let [u, g] = (0, Hl.useState)(!1), [h, b] = (0, Hl.useState)(!1), [x, S] = (0, Hl.useState)(!1), v = (0, Hl.useRef)(null), P = B => {
        g(B), d && d(B), c && c()
    }, C = () => {
        !u && m && setTimeout(() => m(), 100)
    }, k = () => {
        P(!1), l && l()
    }, T = () => {
        P(!1), p && p()
    }, R = v.current && v.current.getBoundingClientRect(), I = () => !u && (e.isPending || n ? a(S7, {
        spinning: !n
    }) : a(f, {
        position: "absolute",
        left: 0,
        bottom: `${Ol}px`,
        top: 0,
        right: 0,
        zIndex: 1,
        margin: "auto",
        children: a(dl, {
            icon: a(Lt, {}),
            color: "tomato",
            inverted: !0,
            solid: !0
        })
    }));
    return w(f, {
        position: "relative",
        onMouseOver: () => b(!0),
        onMouseLeave: () => b(!1),
        children: [u && a(Li, {
            zIndex: hb,
            opacity: r ? void 0 : 0,
            onClick: () => P(!1)
        }), w(f, {
            position: "relative",
            onClick: () => P(!u),
            zIndex: u ? hb : void 0,
            ref: v,
            children: [e.isPending && (i ? h && I() : I()), a(ss, {
                name: e.name || "",
                email: e.email,
                isPending: e.isPending,
                url: e.pic,
                fullBox: !0,
                isCaptionVisible: !t && !u,
                projectsCount: o,
                isSelected: t,
                showInitials: !!(i || u),
                showCaption: !u
            }), s && u && a(f, {
                position: "absolute",
                left: 12,
                top: 12,
                width: 48,
                height: 48,
                borderRadius: "50%",
                children: a(Ct, {
                    width: 48,
                    height: 48,
                    color: "lightGray",
                    hoverColor: "lightGray",
                    children: a(C7, {})
                })
            }), x && a(f, {
                position: "absolute",
                left: 12,
                top: 12,
                backgroundColor: "black",
                width: 48,
                height: 48,
                opacity: .3,
                borderRadius: "50%"
            })]
        }), !e.isPending && h && a(f, {
            position: "absolute",
            top: -13,
            right: -13,
            onMouseOver: () => S(!0),
            onMouseLeave: () => S(!1),
            children: a(Ct, {
                color: "tomato",
                hoverColor: "black",
                width: 24,
                height: 24,
                onClick: () => T(),
                children: a(Lt, {
                    color: "white"
                })
            })
        }), e.isPending && u ? w(Mt.div, {
            initial: {
                opacity: 0
            },
            animate: {
                opacity: u ? 1 : 0
            },
            onAnimationComplete: B => {
                typeof B == "object" && "opacity" in B && B.opacity === 0 && C()
            },
            style: {
                position: "fixed",
                zIndex: hb,
                top: `${R&&R.top+xt.regular}px`,
                left: `${R&&R.left}px`
            },
            children: [a(Ct, {
                as: "div",
                color: "black",
                width: xt.regular,
                height: xt.regular,
                onClick: () => k(),
                marginRight: 0,
                css: B => ne `
              color: ${B.colors.white};
              &:hover {
                background-color: ${B.colors.tomato};
              }
            `,
                children: "Resend"
            }), a(Ct, {
                as: "div",
                color: "tomato",
                width: xt.regular,
                height: xt.regular,
                onClick: () => T(),
                marginRight: 0,
                css: B => ne `
              color: ${B.colors.white};
              &:hover {
                background-color: ${B.colors.black};
              }
            `,
                children: "Remove"
            })]
        }) : null]
    })
}
var fb = P7;
var _C = M(F());
te();
He();
be();
y();
var T7 = N("div")
`
  white-space: nowrap;
`;

function Bm({
    isTeammatePending: e,
    isSupportTeammate: o,
    isSharedViaFolder: t,
    isResend: r,
    onResend: i,
    onUnshare: n,
    onMouseOut: s
}) {
    let [l, p] = (0, _C.useState)(!1);
    return a(Y, {
        children: t ? a(ge, {
            variant: "tertiary",
            textStyle: "subheading",
            disabled: !0,
            children: "Shared within collection"
        }) : e ? w(T7, {
            onMouseEnter: () => p(!0),
            onMouseLeave: () => p(!1),
            children: [a(A, {
                as: "div",
                display: l ? "none" : void 0,
                textStyle: "subheading",
                lineHeight: `${xt.regular}px`,
                children: "Pending"
            }), !o && a(ge, {
                display: l ? "inline-block" : "none",
                variant: "tertiary",
                textStyle: "subheading",
                lineHeight: `${xt.regular}px`,
                onClick: i,
                onMouseOut: s,
                children: r ? "Sent" : "Resend"
            }), a(ge, {
                display: l ? "inline-block" : "none",
                variant: "tertiary",
                textStyle: "subheading",
                lineHeight: `${xt.regular}px`,
                marginLeft: 10,
                onClick: n,
                children: "Unshare"
            })]
        }) : a(ge, {
            variant: "tertiary",
            textStyle: "subheading",
            onClick: n,
            children: "Unshare"
        })
    })
}
te();
Dx();
y();
var [I7] = En, CC = 568;

function M7({
    projects: e,
    allProjects: o,
    myTeam: t,
    sharedTeam: r,
    user: i,
    onExit: n,
    show: s,
    zIndex: l,
    userRoles: p,
    initialRole: d,
    authHost: c,
    onTeammateAdd: m,
    onTeammateRemove: u,
    onTeammateUpdate: g,
    onResendInvitation: h,
    onUserSelect: b
}) {
    let x = t.filter(oe => oe.isSupport === !1),
        S = (0, Ni.useMemo)(() => i && i.plan && i.plan.level, [i]),
        v = (0, Ni.useMemo)(() => !!(i && i.stripe && i.stripe.subscription_pause_ends_at), [i]),
        P = (0, Ni.useMemo)(() => {
            let oe = zx(i) - Ex(x).length;
            return !v && oe > 0
        }, [i, x, v]),
        [C, k] = (0, Ni.useState)({
            projects: e ? .length ? e : [],
            selectedUser: null,
            copy: !1,
            isSubmitting: !1,
            didError: !1,
            userSearchKey: 1,
            lastInvinationTo: null,
            unsharedProjects: [],
            filteredProjects: [],
            selectedUserRole: d || (p ? .length ? p[0].name : "")
        }),
        T = (0, Ni.createRef)(),
        R = Ja(C.projects),
        I = Nd(C.projects),
        B = Ih({
            myTeam: t,
            sharedTeam: r,
            projectNumIds: R,
            folderIds: I
        }),
        L = (0, Ni.useMemo)(() => Rx({
            projects: C.projects,
            allTeammates: B,
            me: i
        }), [C.projects, B, i, R, I]),
        D = !L.length,
        E = e ? Bx({
            all: t,
            allProjects: o,
            excluded: L,
            selectedUser: C.selectedUser,
            me: i
        }) : [],
        $ = (0, Ni.useMemo)(() => v ? "You can't add collaborators. Your subscription has been paused." : S === "free" ? "Please upgrade your plan to add collaborators." : ["personal", "freelancer", "studio", "business"].includes(S) || S === "extra" ? "Please change your subscription conditions to add new collaborators." : `You can\u2019t ${E.length?"invite":"add"} more collaborators on your plan.`, [S, v]);

    function G(oe) {
        let {
            projects: H
        } = C;
        return H.every(se => Ds(se) && !!se.folder && oe.folderIds.includes(se.folder))
    }
    async function de(oe, H = !1) {
        let {
            selectedUser: se
        } = oe ? {
            selectedUser: oe
        } : C, he = i;
        if (se) {
            let le = typeof se == "string" ? se : se.email,
                ue = Ja(o),
                ke = Ja(C.projects),
                ie = Nd(C.projects);
            if (k(_e => ({ ..._e,
                    isSubmitting: !0,
                    didError: !1,
                    error: ""
                })), he ? .email === le) return k(_e => ({ ..._e,
                isSubmitting: !1,
                didError: !0,
                error: "You can\u2019t collaborate with yourself."
            }));
            try {
                let _e = Ih({
                        myTeam: t,
                        sharedTeam: r
                    }, {
                        excludeSupport: !0
                    }).find(Ke => Ke.email === le),
                    Ce = _e && t.some(Ke => Ke.email === le),
                    We = {};
                if (_e && Ce) {
                    let Ke = _e.sharesAll ? ue : new Set([..._e.projectNumIds, ...ke]),
                        O = new Set([..._e.folderIds, ...ie]),
                        j = Array.prototype.concat(...[...O].map(X => o.filter($e => Ds($e) && $e.folder === X))).map(X => X.num_id),
                        K = new Set([...Ke].filter(X => !j.includes(X)));
                    if (C.selectedUserRole) {
                        let X = on({
                                items: [...K],
                                roles: _e.projectRoles || {},
                                newItems: ke,
                                newRole: C.selectedUserRole
                            }),
                            $e = on({
                                items: [...O],
                                roles: _e.folderRoles || {},
                                newItems: ie,
                                newRole: C.selectedUserRole
                            });
                        We = await g({
                            email: le,
                            sharesAll: !1,
                            projectNumIds: X.items,
                            projectRoles: X.roles,
                            folderIds: $e.items,
                            folderRoles: $e.roles
                        })
                    }
                } else if (C.selectedUserRole) {
                    let Ke = on({
                            newItems: ke,
                            newRole: C.selectedUserRole
                        }),
                        O = on({
                            newItems: ie,
                            newRole: C.selectedUserRole
                        });
                    We = await m({
                        email: le,
                        sharesAll: !1,
                        projectNumIds: Ke.items,
                        projectRoles: Ke.roles,
                        folderIds: O.items,
                        folderRoles: O.roles
                    })
                }
                k(Ke => ({ ...Ke,
                    isSubmitting: !1,
                    didError: !1,
                    userSearchKey: C.userSearchKey + 1,
                    updatedTeammate: We,
                    ...H ? {} : {
                        selectedUser: ""
                    }
                }))
            } catch (_e) {
                k(Ce => ({ ...Ce,
                    isSubmitting: !1,
                    didError: !0,
                    collaboratorInvited: !1,
                    error: _e.error ? _e.error.message ? _e.error.message : _e.error.toString() : "Error adding collaborator. Please try again."
                }))
            }
        }
    }
    async function Q(oe) {
        if (oe) {
            k(H => ({ ...H,
                didError: !1,
                error: ""
            }));
            try {
                await h(oe.email), k(H => ({ ...H,
                    lastInvinationTo: oe._id
                }))
            } catch {
                k(H => ({ ...H,
                    didError: !0,
                    error: "Error sending invitation. Please try again."
                }))
            }
        }
    }
    async function U(oe) {
        if (!oe) return;
        let H = Ja(C.projects),
            se = Nd(C.projects),
            he = Ja(o),
            le = (oe.sharesAll ? he : oe.projectNumIds).filter(ke => !H.includes(ke)),
            ue = oe.folderIds.filter(ke => !se.includes(ke));
        k(ke => ({ ...ke,
            didError: !1,
            error: ""
        }));
        try {
            if (oe.isSupport || oe.isPending && !le.length && !ue.length) await u(oe);
            else {
                let ke = on({
                        items: le,
                        roles: oe.projectRoles
                    }),
                    ie = on({
                        items: ue,
                        roles: oe.folderRoles
                    });
                await g({
                    email: oe.email,
                    sharesAll: !1,
                    projectNumIds: ke.items,
                    projectRoles: ke.roles,
                    folderIds: ie.items,
                    folderRoles: ie.roles
                })
            }
            k(ke => ({ ...ke,
                updatedTeammate: void 0
            }))
        } catch {
            k(ke => ({ ...ke,
                didError: !0,
                error: "Error when unsharing. Please try again."
            }))
        }
    }

    function Z(oe) {
        return oe.preventDefault(), C.selectedUser && pb(typeof C.selectedUser == "string" ? C.selectedUser : C.selectedUser.email)
    }

    function xe() {
        k(oe => ({ ...oe,
            isInputInFocus: !1
        }))
    }

    function ye(oe) {
        k(H => ({ ...H,
            isInputInFocus: !0
        })), T.current && !oe && window.scroll({
            top: T.current.offsetTop,
            behavior: "smooth"
        })
    }

    function ve(oe) {
        k(H => ({ ...H,
            selectedUser: oe,
            selectedProject: void 0
        })), b && b()
    }
    async function ee() {
        if (C.projects.length) await de();
        else {
            let oe = t.find(se => typeof C.selectedUser == "object" ? se.email === C.selectedUser ? .email : se.email === C.selectedUser),
                H = oe ? o.filter(se => Ds(se) && !oe.projectNumIds.includes(se.num_id)) : o;
            k(se => ({ ...se,
                isSelectUserProjectVisible: !0,
                unsharedProjects: H,
                filteredProjects: H.slice(0, 2)
            }))
        }
    }
    return a(ll, {
        query: `(min-width: ${I7})`,
        children: oe => a(lb, {
            closeTitle: "Close",
            initialFocus: oe && D && P ? "#rm-user-search-input" : "",
            show: s,
            onExit: n,
            error: C.error,
            zIndex: l,
            dialogPosition: "relative",
            title: a(f, {
                as: "span",
                paddingLeft: oe ? xt.regular + 16 : 0,
                children: e ? C.projects.length ? L.length ? "Collaborators" : "Collaborate with" : "Add collaborator" : w(Y, {
                    children: [C.isSelectUserProjectVisible ? a(ge, {
                        as: "a",
                        textStyle: oe ? "subheading" : "regular",
                        onClick: () => {
                            k(H => ({ ...H,
                                isSelectUserProjectVisible: !1,
                                projects: []
                            }))
                        },
                        color: "gray",
                        children: "Add collaborator"
                    }) : a(A, {
                        textStyle: oe ? "subheading" : "regular",
                        children: "Add collaborator"
                    }), C.isSelectUserProjectVisible || C.selectedProject ? w(Y, {
                        children: [a(A, {
                            paddingLeft: "2rm",
                            paddingRight: "2rm",
                            textStyle: oe ? "subheading" : "regular",
                            color: "gray",
                            children: ">"
                        }), C.selectedProject && !C.isSelectUserProjectVisible ? a(ge, {
                            as: "a",
                            textStyle: oe ? "subheading" : "regular",
                            onClick: () => {
                                k(H => ({ ...H,
                                    isSelectUserProjectVisible: !0,
                                    projects: []
                                }))
                            },
                            color: "gray",
                            children: "Select project"
                        }) : a(A, {
                            textStyle: oe ? "subheading" : "regular",
                            children: "Select project"
                        })]
                    }) : null]
                })
            }),
            children: a(f, {
                height: ["auto", e ? "auto" : "326px"],
                children: C.isSelectUserProjectVisible ? w(f, {
                    display: "flex",
                    marginBottom: [0, C.selectedProject ? 28 : C.filteredProjects.length ? "15px" : 40],
                    flex: ["1", void 0],
                    paddingTop: 72,
                    paddingLeft: [0, 88],
                    flexDirection: "column",
                    justifyContent: "flex-start",
                    children: [a(f, {
                        children: C.selectedProject ? w(f, {
                            display: "flex",
                            height: xt.regular,
                            alignItems: "center",
                            position: "relative",
                            borderBottom: "2px solid",
                            borderBottomColor: C.collaboratorInvited ? "transparent" : "black",
                            justifyContent: "space-between",
                            children: [w(f, {
                                display: "flex",
                                whiteSpace: oe ? void 0 : "nowrap",
                                width: oe ? void 0 : "calc(100vw - 200px)",
                                overflow: oe ? void 0 : "hidden",
                                textOverflow: oe ? void 0 : "ellipsis",
                                children: [a(A, {
                                    textStyle: oe ? "subheading" : "regular",
                                    display: "inline-block",
                                    overflow: "hidden",
                                    textOverflow: "ellipsis",
                                    maxWidth: 330,
                                    verticalAlign: "bottom",
                                    lineHeight: 1.25,
                                    whiteSpace: "nowrap",
                                    children: Ls(C.selectedProject) ? C.selectedProject.name : C.selectedProject.title
                                }), C.collaboratorInvited ? null : a(ge, {
                                    className: "clear",
                                    "aria-label": "Clear selection",
                                    onClick: () => k(H => ({ ...H,
                                        selectedProject: void 0,
                                        filterProjects: "",
                                        filteredProjects: C.unsharedProjects.slice(0, 2)
                                    })),
                                    marginTop: "1rm",
                                    children: a(Lt, {
                                        "aria-hidden": !0
                                    })
                                })]
                            }), C.collaboratorInvited ? C.updatedTeammate && a(Bm, {
                                isTeammatePending: C.updatedTeammate.isPending,
                                isSupportTeammate: C.updatedTeammate.isSupport,
                                isResend: C.lastInvinationTo === C.updatedTeammate._id,
                                isSharedViaFolder: !1,
                                onResend: () => Q(C.updatedTeammate),
                                onMouseOut: () => k(H => ({ ...H,
                                    lastInvinationTo: null
                                })),
                                onUnshare: () => U(C.updatedTeammate)
                            }) : a(ge, {
                                variant: "primary",
                                textStyle: "subheading",
                                type: "submit",
                                position: "absolute",
                                right: 0,
                                lineHeight: "72px",
                                minWidth: 60,
                                onClick: async () => {
                                    k(H => ({ ...H,
                                        projects: [C.selectedProject],
                                        collaboratorInvited: !0
                                    })), await de(void 0, !0)
                                },
                                children: "Invite collaborator"
                            })]
                        }) : a(mb, {
                            textStyle: oe ? "subheading" : "regular",
                            paddingRight: 80,
                            placeholder: "Project name",
                            boxSizing: "border-box",
                            height: xt.regular,
                            onChange: H => {
                                let se = H.target.value,
                                    he = C.unsharedProjects.filter((le, ue) => se ? ((Ls(le) ? le.name : le.title) || "").toLowerCase().includes(se.toLowerCase()) : ue < 2);
                                se && he.length === 1 ? k(le => ({ ...le,
                                    filteredProjects: he,
                                    selectedProject: he[0],
                                    filterProjects: se
                                })) : k(le => ({ ...le,
                                    filteredProjects: he,
                                    filterProjects: se
                                }))
                            }
                        })
                    }), C.selectedProject ? a(f, {
                        width: 152,
                        paddingTop: 61,
                        children: a(f, {
                            display: "flex",
                            "data-testid": `project-card-${C.selectedProject._id}`,
                            paddingLeft: "2rm",
                            paddingRight: "2rm",
                            position: "relative",
                            flexDirection: "column",
                            borderRadius: "4px",
                            aspectRatio: 1.66,
                            borderColor: "lightGray",
                            border: "1px solid",
                            backgroundColor: "white",
                            backgroundPosition: "center",
                            backgroundSize: "cover",
                            backgroundImage: Ls(C.selectedProject) ? "" : C.selectedProject.cover
                        })
                    }) : w(f, {
                        display: "flex",
                        paddingTop: 65,
                        flexDirection: "row",
                        flexWrap: "wrap",
                        justifyContent: "flex-start",
                        marginRight: -20,
                        marginBottom: -11,
                        children: [C.filterProjects ? null : a(f, {
                            display: "flex",
                            marginBottom: [3, 0],
                            height: 72,
                            alignItems: "center",
                            paddingRight: [0, 18],
                            children: a(A, {
                                textStyle: oe ? "subheading" : "regular",
                                color: "gray",
                                children: "Suggestions"
                            })
                        }), C.filteredProjects.map(H => a(f, {
                            cursor: "pointer",
                            width: 152,
                            flex: "0 0 152px",
                            paddingBottom: 20,
                            overflow: "hidden",
                            marginRight: 20,
                            children: a(f, {
                                display: "flex",
                                "data-testid": `project-card-${H._id}`,
                                paddingLeft: "2rm",
                                paddingRight: "2rm",
                                position: "relative",
                                flexDirection: "column",
                                borderRadius: "4px",
                                aspectRatio: 1.66,
                                borderColor: "lightGray",
                                border: "1px solid",
                                backgroundColor: "white",
                                backgroundPosition: "center",
                                backgroundSize: "cover",
                                backgroundImage: Ls(H) ? "" : H.cover,
                                onClick: async () => {
                                    k(se => ({ ...se,
                                        selectedProject: H
                                    }))
                                }
                            })
                        }, H._id))]
                    })]
                }) : w(f, {
                    display: "flex",
                    marginBottom: [0, E.length ? 0 : 40],
                    flex: ["1", void 0],
                    flexDirection: "column",
                    justifyContent: ["space-between", void 0],
                    children: [w(f, {
                        marginTop: [0, 72],
                        marginBottom: [80, 0],
                        children: [e && (oe ? a(f, {
                            display: "flex",
                            flexDirection: "column",
                            children: L.map(H => {
                                let se = e.map(ie => Ax({
                                        teammate: H,
                                        projectNumId: Ds(ie) ? ie.num_id : void 0,
                                        projectFolderId: Ds(ie) && ie.folder || void 0,
                                        folderId: Ls(ie) ? ie._id : void 0
                                    })).filter(Boolean),
                                    he = [...new Set(se)],
                                    le = he.length ? he.length === 1 ? he[0] : "Multiple roles" : null,
                                    ue = e.filter(Ds).map(ie => ie.num_id),
                                    ke = e.filter(Ls).map(ie => ie._id);
                                return w(f, {
                                    display: "flex",
                                    justifyContent: "space-between",
                                    children: [a(f, {
                                        minWidth: 0,
                                        children: w(f, {
                                            display: "flex",
                                            alignItems: "center",
                                            children: [a(f, {
                                                minWidth: 72,
                                                children: a("a", {
                                                    href: `${c||"https://my.readymag.com"}/team/${H.uri}`,
                                                    target: "_blank",
                                                    rel: "noreferrer",
                                                    children: a(qt, {
                                                        name: H.name || "",
                                                        url: H.pic
                                                    })
                                                })
                                            }), a(f, {
                                                marginLeft: 16,
                                                overflow: "hidden",
                                                children: a(A, {
                                                    as: "div",
                                                    textStyle: "subheading",
                                                    overflow: "hidden",
                                                    whiteSpace: "nowrap",
                                                    textOverflow: "ellipsis",
                                                    lineHeight: 2,
                                                    paddingRight: 2,
                                                    children: H.name || H.email
                                                })
                                            })]
                                        })
                                    }), w(f, {
                                        display: "flex",
                                        gap: "20px",
                                        minWidth: 0,
                                        flexShrink: 0,
                                        children: [p ? .length ? a(ub, {
                                            roles: p,
                                            selectedRoleName: le,
                                            onChangeRole: async ie => {
                                                let _e = on({
                                                        items: H.projectNumIds,
                                                        roles: H.projectRoles || {},
                                                        newItems: ue,
                                                        newRole: ie
                                                    }),
                                                    Ce = on({
                                                        items: H.folderIds,
                                                        roles: H.folderRoles || {},
                                                        newItems: ke,
                                                        newRole: ie
                                                    }),
                                                    We = {
                                                        email: H.email,
                                                        sharesAll: H.sharesAll || !1,
                                                        projectNumIds: _e.items,
                                                        projectRoles: _e.roles,
                                                        folderIds: Ce.items,
                                                        folderRoles: Ce.roles
                                                    };
                                                await g(We)
                                            }
                                        }) : void 0, H.email !== i.email ? a(Bm, {
                                            isTeammatePending: H.isPending,
                                            isSupportTeammate: H.isSupport,
                                            isResend: C.lastInvinationTo === H._id,
                                            isSharedViaFolder: G(H),
                                            onResend: () => Q(H),
                                            onMouseOut: () => k(ie => ({ ...ie,
                                                lastInvinationTo: null
                                            })),
                                            onUnshare: () => U(H)
                                        }) : void 0]
                                    })]
                                }, H._id || H.email)
                            })
                        }) : a(f, {
                            display: "flex",
                            marginTop: 40,
                            marginLeft: -24,
                            paddingLeft: 24,
                            width: "100vw",
                            overflowX: "auto",
                            css: ne `
                          -webkit-overflow-scrolling: ${C.isTeammateDropdownVisible?"auto":"touch"};
                          @media (max-height: ${CC}px) {
                            margin-top: 20px;
                          }
                        `,
                            children: L.map(H => a(fb, {
                                teammate: H,
                                projectCount: Th(H, o),
                                onToggle: se => k(he => ({ ...he,
                                    isTeammateDropdownOpen: se
                                })),
                                onAppear: () => k(se => ({ ...se,
                                    isTeammateDropdownVisible: !0
                                })),
                                onDisappear: () => k(se => ({ ...se,
                                    isTeammateDropdownVisible: !1
                                })),
                                onUnshare: () => U(H),
                                onResend: () => Q(H)
                            }, H._id || H.email))
                        })), !e && C.selectedUser && C.updatedTeammate && (oe ? a(f, {
                            display: "flex",
                            flexDirection: "column",
                            marginBottom: P ? 143 : 0,
                            marginTop: "-1px",
                            children: w(f, {
                                display: "flex",
                                justifyContent: "space-between",
                                children: [w(f, {
                                    display: "flex",
                                    alignItems: "center",
                                    children: [a(qt, {
                                        name: C.updatedTeammate.name || "",
                                        url: C.updatedTeammate.pic
                                    }), a(f, {
                                        marginLeft: 16,
                                        children: a(A, {
                                            as: "div",
                                            textStyle: "subheading",
                                            children: C.updatedTeammate.name || C.updatedTeammate.email
                                        })
                                    })]
                                }), a(Bm, {
                                    isTeammatePending: C.updatedTeammate.isPending,
                                    isSupportTeammate: C.updatedTeammate.isSupport,
                                    isResend: C.lastInvinationTo === C.updatedTeammate._id,
                                    isSharedViaFolder: !1,
                                    onResend: () => Q(C.updatedTeammate),
                                    onMouseOut: () => k(H => ({ ...H,
                                        lastInvinationTo: null
                                    })),
                                    onUnshare: () => U(C.updatedTeammate)
                                })]
                            })
                        }) : a(f, {
                            display: "flex",
                            marginTop: 40,
                            marginLeft: -24,
                            paddingLeft: 24,
                            width: "100vw",
                            overflowX: "auto",
                            css: ne `
                          -webkit-overflow-scrolling: ${C.isTeammateDropdownVisible?"auto":"touch"};
                          @media (max-height: ${CC}px) {
                            margin-top: 20px;
                          }
                        `,
                            children: a(fb, {
                                teammate: C.updatedTeammate,
                                projectCount: Th(C.updatedTeammate, o),
                                onToggle: H => k(se => ({ ...se,
                                    isTeammateDropdownOpen: H
                                })),
                                onAppear: () => k(H => ({ ...H,
                                    isTeammateDropdownVisible: !0
                                })),
                                onDisappear: () => k(H => ({ ...H,
                                    isTeammateDropdownVisible: !1
                                })),
                                onUnshare: () => U(C.updatedTeammate),
                                onResend: () => Q(C.updatedTeammate)
                            }, C.updatedTeammate._id || C.updatedTeammate.email)
                        })), !C.isTeammateDropdownOpen && P && !C.collaboratorInvited ? a(f, {
                            position: "relative",
                            children: a(f, {
                                as: "form",
                                onSubmit: H => Z(H) && ee(),
                                marginTop: [26, 0],
                                marginBottom: [0, E.length || !P ? 0 : 80],
                                ref: T,
                                children: a(db, {
                                    placeholder: "Maria or maria@example",
                                    submitText: C.projects.length ? P ? "Invite" : "Add" : "Select project",
                                    disabled: C.collaboratorInvited || C.isSubmitting,
                                    suggestions: e ? !C.error && P ? E : [] : [],
                                    onChange: ve,
                                    onFocus: () => ye(oe),
                                    onBlur: () => xe(),
                                    "data-testid": "user-search",
                                    showInput: P,
                                    selectedUser: C.selectedUser,
                                    preSubmitSlot: p ? .length ? a(ub, {
                                        roles: p,
                                        selectedRoleName: C.selectedUserRole,
                                        onChangeRole: H => {
                                            k(se => ({ ...se,
                                                selectedUserRole: H
                                            }))
                                        }
                                    }) : void 0
                                }, C.userSearchKey)
                            })
                        }) : null, !P && !C.selectedUser && E.length ? w(f, {
                            paddingLeft: [0, 88],
                            marginTop: [0, 24],
                            minHeight: [60, 0],
                            textAlign: oe ? "left" : "center",
                            paddingBottom: 10,
                            children: [C.projects.length ? a(A, {
                                textStyle: oe ? "subheading" : "regular",
                                color: "gray",
                                children: "Add collaborator"
                            }) : null, a(f, {
                                display: "flex",
                                marginTop: [0, 12],
                                flexWrap: "wrap",
                                children: E.map(H => a(f, {
                                    height: 146,
                                    children: a(ss, {
                                        name: H.name || H.email,
                                        email: H.email,
                                        url: H.pic,
                                        projectsCount: H.projectsCount,
                                        isCaptionVisible: !oe,
                                        fullBox: !oe,
                                        "data-testid": H._id,
                                        onClick: async () => {
                                            C.projects.length ? await de(H) : k(se => ({ ...se,
                                                selectedUser: H
                                            }))
                                        }
                                    })
                                }, H._id || H.email))
                            })]
                        }) : null]
                    }), P ? null : a(Y, {
                        children: w(f, {
                            paddingLeft: [0, 88],
                            marginTop: [0, C.updatedTeammate ? 67 : C.selectedUser ? 106 : E.length ? 12 : 24],
                            marginBottom: [18, 56],
                            minHeight: [60, 0],
                            textAlign: oe ? "left" : "center",
                            children: [a(A, {
                                as: "p",
                                children: $
                            }), !v && a(A, {
                                as: "p",
                                children: S === "extra" ? a(ze, {
                                    as: "a",
                                    color: "gray",
                                    href: "mailto:support@readymag.com",
                                    children: "Contact our support team to learn more."
                                }) : a(ze, {
                                    as: "a",
                                    color: "gray",
                                    href: "https://my.readymag.com/settings/#change-plan",
                                    target: "_blank",
                                    children: "Upgrade your plan to add collaborators."
                                })
                            })]
                        })
                    })]
                })
            })
        })
    })
}
var bb = M7;
Dx();
Dn();
Ee();
B6();
ut();
y();
var SC = ({
    children: e,
    ...o
}) => {
    let t = (0, wb.useContext)(Le),
        r = (0, wb.useContext)(me);

    function i(n) {
        let l = [...Object.values(n.projectRoles || {}), ...Object.values(n.folderRoles || {})].filter(p => p)[0] || "member";
        re(fe.SettingsProject, {
            settingsType: "collaborate",
            collaborateType: l === "member" ? "design and content" : "content only"
        })
    }
    return a(bb, {
        projects: r.teamworkProjects,
        allProjects: r.allProjects,
        myTeam: r.team,
        sharedTeam: [],
        user: r.me,
        show: !0,
        userRoles: Qe.rolesList,
        initialRole: "member",
        authHost: ae.readymag_auth_host,
        ...o,
        onExit: () => {
            t.dispatch({
                type: "toggleTeamworkModal",
                payload: !1
            })
        },
        onResendInvitation: async n => {
            await xx(n)
        },
        onTeammateAdd: async n => {
            let s = await fx(n);
            return i(n), r.updateTeam([...r.team, s], r.project.num_id), s
        },
        onTeammateRemove: async n => {
            await wx(n.recordId), r.updateTeam([...r.team.filter(s => s.recordId !== n.recordId)], r.project.num_id), re(fe.SettingsProject, {
                settingsType: "collaborate unshare"
            })
        },
        onTeammateUpdate: async n => {
            let s = await bx(n);
            return i(n), r.updateTeam([...r.team.map(l => l._id === s._id ? s : l)], r.project.num_id), s
        }
    })
};
Ah();
Nr();
Dh();
te();
Tt();
Ue();
Ho();
Ro();
Ye();
y();
var B7 = 10,
    xb = .3,
    PC = ({
        children: e,
        ...o
    }) => {
        let {
            isHovered: t,
            ...r
        } = Ze(!1), {
            isHovered: i,
            ...n
        } = Ze(!1), [s, l] = (0, aa.useState)(void 0), p = (0, aa.useContext)(Le), d = (0, aa.useContext)(me), c = () => {
            let x = "";
            return d.isOwner ? x = `/${d.project.user.uri}` + (d.project.folder ? `/f/${d.project.folder.uri}` : "") : x = `/shared/${d.project.user.uri}`, x
        }, m = d.ownedProjectTeam.filter(x => x.email !== d.me.email), u = () => {
            p.dispatch({
                type: "toggleTeamworkModal",
                payload: !0
            })
        }, g = () => {
            re(fe.EditorActions, {
                action: "back to profile"
            }), window.location.href = c()
        }, h = (0, aa.useMemo)(() => m.slice(0, B7).reverse(), [m]), b = m.length - h.length;
        return w(f, {
            position: "relative",
            width: "56px",
            height: "56px",
            ...o,
            children: [p.isTeamworkModalOpened && a(SC, {
                zIndex: 10500
            }), w(f, {
                width: "100%",
                height: "100%",
                ...r,
                children: [w(f, { ...n,
                    children: [a(lC, {}), i && a(Ct, {
                        position: "absolute",
                        top: "0px",
                        left: "0px",
                        width: "56px",
                        height: "56px",
                        color: "darkGray",
                        hoverColor: "darkGray",
                        activeColor: "darkGray",
                        borderRadius: "50%",
                        onClick: g,
                        children: a($s, {
                            color: "white"
                        })
                    })]
                }), w(f, {
                    width: "56px",
                    height: "72px",
                    position: "absolute",
                    bottom: "100%",
                    visibility: t ? "visible" : "hidden",
                    opacity: t ? "1" : "0",
                    transform: t ? "translateY(0px)" : "translateY(4px)",
                    transition: `opacity ${xb}s ease, transform ${xb}s ease, visibility 0s ${t?"0s":xb+"s"} ease`,
                    children: [b > 0 && a(f, {
                        bottom: 48 * (h.length + 1) + 16,
                        position: "absolute",
                        width: "58px",
                        height: "58px",
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                        borderRadius: "50%",
                        color: "white",
                        backgroundColor: "darkGray",
                        cursor: "pointer",
                        onClick: u,
                        children: `+${b}`
                    }), h.map(({
                        email: x,
                        pic: S,
                        name: v
                    }, P) => w(f, {
                        position: "absolute",
                        width: "56px",
                        height: "56px",
                        bottom: 48 * (h.length - P) + 16,
                        zIndex: s === x ? h.length + 2 : void 0,
                        cursor: "pointer",
                        onMouseEnter: () => l(x),
                        onMouseLeave: () => l(void 0),
                        onClick: u,
                        css: ne `
                & > * {
                  width: 100% !important;
                  height: 100% !important;
                }
              `,
                        children: [a(qt, {
                            url: S,
                            name: v || x,
                            type: "settingsUser"
                        }), a(f, {
                            boxShadow: `0 0 0 2px inset ${Be(.6,q.gray)}`,
                            position: "absolute",
                            top: "0",
                            borderRadius: "50%",
                            width: "100%",
                            height: "100%"
                        })]
                    }, x)), d.isOwner ? a(Bt, {
                        text: "Add collaborator",
                        indent: 8,
                        preventOverflow: 16,
                        open: m.length > 0 ? !1 : void 0,
                        children: a(Ct, {
                            position: "absolute",
                            top: "0",
                            zIndex: m.length + 1,
                            width: "56px",
                            height: "56px",
                            color: "darkGray",
                            hoverColor: "black",
                            activeColor: "black",
                            onClick: u,
                            children: a(Hs, {
                                width: "24px",
                                height: "24px",
                                color: "white"
                            })
                        })
                    }) : null]
                })]
            })]
        })
    };
be();
var la = M(F());
He();
No();
Ee();
W();
Hn();
y();
var TC = ({
    id: e = "pageIcon",
    width: o,
    height: t,
    hoverBox: r
}) => {
    let i = Fo(o, t, r);
    return w("svg", {
        id: e,
        width: o,
        height: t,
        viewBox: "0 0 27 28",
        xmlns: "http://www.w3.org/2000/svg",
        style: {
            padding: i
        },
        children: [w("line", {
            x1: "1",
            y1: "25.5",
            x2: "26",
            y2: "25.5",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round",
            children: [a("animateTransform", {
                attributeName: "transform",
                type: "translate",
                to: "0 2",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animateTransform", {
                attributeName: "transform",
                type: "translate",
                from: "0 2",
                to: "0 0",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        }), w("line", {
            x1: "1",
            y1: "3.5",
            x2: "26",
            y2: "3.5",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round",
            children: [a("animateTransform", {
                attributeName: "transform",
                type: "translate",
                to: "0 -2",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animateTransform", {
                attributeName: "transform",
                type: "translate",
                from: "0 -2",
                to: "0 0",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        })]
    })
};
ai();
y();
var IC = ({
    onClick: e,
    disableTooltip: o
}) => {
    let t = (0, la.useContext)(me),
        [r, i] = (0, la.useState)(""),
        [n, s] = (0, la.useState)("");
    return (0, la.useEffect)(() => {
        let {
            currentPageId: l,
            pagesParams: p
        } = t;
        p[l] && (p[l].parentId ? (i(`${p[p[l].parentId].viewNum}`), s(`${p[l].viewNum}`)) : (i(`${p[l].viewNum}`), n && s("")))
    }, [t.currentPageNum, t.currentPageId, t.pagesParams]), a(mt, {
        instance: !0,
        closeOnTargetClick: !0,
        eduTips: "eduTipNewTemplate",
        defaultText: "Pages (M)",
        indent: 8,
        disabled: o,
        leaveDelay: 100,
        children: w(ge, {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            onClick: e,
            variant: "unstyled",
            height: "100%",
            width: "100%",
            position: "relative",
            color: "white",
            "aria-label": "Pages",
            "data-testid": "pages-button",
            children: [a(TC, {
                width: "26px",
                height: "28px",
                hoverBox: {
                    width: 56,
                    height: 56
                }
            }), w(f, {
                width: "100%",
                height: "100%",
                position: "absolute",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                pointerEvents: "none",
                children: [a(A, {
                    textStyle: "subheading",
                    fontSize: "20px",
                    color: "white",
                    children: r
                }), n ? w(A, {
                    textStyle: "small",
                    position: "relative",
                    top: 5,
                    fontWeight: "700",
                    color: "white",
                    marginBottom: "4px",
                    children: [".", n]
                }) : null]
            })]
        })
    })
};
He();
Hn();
y();
var MC = ({
    id: e = "desktopIcon",
    width: o,
    height: t,
    hoverBox: r
}) => {
    let i = Fo(o, t, r);
    return w("svg", {
        id: e,
        viewBox: "0 0 34 32",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        width: o,
        height: t,
        style: {
            padding: i
        },
        children: [w("rect", {
            x: "4",
            y: "5.5",
            width: "26",
            height: "18",
            rx: "2",
            stroke: "currentColor",
            strokeWidth: "2",
            children: [a("animate", {
                attributeName: "x",
                to: "10",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x",
                to: "4",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "y",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "y",
                to: "5.5",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "width",
                to: "14",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "width",
                to: "26",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "height",
                to: "30",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "height",
                to: "18",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "rx",
                to: "3",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "rx",
                to: "2",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        }), w("line", {
            x1: "1",
            y1: "27.5",
            x2: "33",
            y2: "27.5",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round",
            children: [a("animate", {
                attributeName: "x1",
                to: "14",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x1",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "20",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "33",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        })]
    })
};
Hn();
y();
var BC = ({
    id: e = "phoneIcon",
    width: o,
    height: t,
    hoverBox: r
}) => {
    let i = Fo(o, t, r);
    return w("svg", {
        id: e,
        viewBox: "0 0 34 32",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        width: o,
        height: t,
        style: {
            padding: i
        },
        children: [w("rect", {
            x: "10",
            y: "1",
            width: "14",
            height: "30",
            rx: "3",
            stroke: "currentColor",
            strokeWidth: "2",
            children: [a("animate", {
                attributeName: "x",
                to: "4",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x",
                to: "10",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "y",
                to: "5.5",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "y",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "width",
                to: "26",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "width",
                to: "14",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "height",
                to: "18",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "height",
                to: "30",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "rx",
                to: "2",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "rx",
                to: "3",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        }), w("line", {
            x1: "14",
            y1: "27.5",
            x2: "20",
            y2: "27.5",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round",
            children: [a("animate", {
                attributeName: "x1",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x1",
                to: "14",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "33",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "20",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        })]
    })
};
Hn();
y();
var RC = ({
    id: e = "tabletIcon",
    width: o,
    height: t,
    hoverBox: r
}) => {
    let i = Fo(o, t, r);
    return w("svg", {
        id: e,
        viewBox: "0 0 34 32",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        width: o,
        height: t,
        style: {
            padding: i
        },
        children: [w("rect", {
            x: "7",
            y: "1",
            width: "20",
            height: "30",
            rx: "3",
            stroke: "currentColor",
            strokeWidth: "2",
            children: [a("animate", {
                attributeName: "x",
                to: "4",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x",
                to: "7",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "y",
                to: "5.5",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "y",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "width",
                to: "26",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "width",
                to: "20",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "height",
                to: "18",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "height",
                to: "30",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "rx",
                to: "2",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "rx",
                to: "3",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        }), w("line", {
            x1: "17",
            y1: "27.5",
            x2: "17",
            y2: "27.5",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeOpacity: "0",
            strokeLinecap: "round",
            children: [a("animate", {
                attributeName: "x1",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x1",
                to: "17",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "33",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "17",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "stroke-opacity",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "discrete"
            }), a("animate", {
                attributeName: "stroke-opacity",
                to: "0",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "discrete"
            })]
        })]
    })
};
No();
kt();
y();

function zC({
    currentViewport: e,
    disableTooltip: o,
    onClick: t,
    ...r
}) {
    return a(mt, {
        targetSteps: ["CreateLayout", "OpenMobileLayout"],
        defaultText: "Devices (D)",
        indent: 8,
        disabled: o,
        leaveDelay: 100,
        instance: !0,
        closeOnTargetClick: !0,
        children: a(ge, {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            onClick: t,
            variant: "unstyled",
            height: "100%",
            width: "100%",
            color: "white",
            "aria-label": "Viewports",
            "data-testid": "viewport-button",
            ...r,
            children: e === "tablet_portrait" ? a(RC, {
                width: "34px",
                height: "32px",
                hoverBox: {
                    width: 56,
                    height: 56
                }
            }) : e === "phone_portrait" ? a(BC, {
                width: "34px",
                height: "32px",
                hoverBox: {
                    width: 56,
                    height: 56
                }
            }) : a(MC, {
                width: "34px",
                height: "32px",
                hoverBox: {
                    width: 56,
                    height: 56
                }
            })
        })
    })
}
var Bb = M(F());
var pa = M(F());
var Zo = M(F());
W();
var Vo = M(F());
W();
Ee();
jh();
var ho = M(F());
W();
tl();
Y6();
be();
kr();
ar();
var Em = M(F());
Dy();
W();
Wc();
W();
He();
y();

function AC({
    isPageSettingsOpened: e,
    hideDelete: o,
    actionCallback: t
}) {
    return w(f, {
        "aria-label": "Page action menu",
        paddingLeft: "4rm",
        paddingTop: 12,
        children: [a(f, {
            children: a(Ge, {
                "aria-label": "Duplicate page",
                "data-testid": "duplicate-page",
                textStyle: "subheading",
                color: "white",
                onClick: r => {
                    r.preventDefault(), r.stopPropagation(), t("duplicate")
                },
                children: "Duplicate"
            })
        }), a(f, {
            marginTop: 12,
            children: a(Ge, {
                "aria-label": "Toggle page settings",
                "data-testid": "toggle-page-settings",
                textStyle: "subheading",
                color: e ? "tomato" : "white",
                onClick: r => {
                    r.preventDefault(), r.stopPropagation(), t("settings")
                },
                children: "Settings"
            })
        }), !o && a(f, {
            marginTop: 12,
            children: a(Ge, {
                "aria-label": "Delete page",
                "data-testid": "delete-page",
                textStyle: "subheading",
                color: "white",
                onClick: r => {
                    r.preventDefault(), r.stopPropagation(), t("detele")
                },
                children: "Delete"
            })
        })]
    })
}
var Rm = M(F()),
    DC = M(ir());
W();
Tt();
Ro();
Ue();
te();
y();
var LC = (0, Rm.forwardRef)(({
    isShown: e,
    position: o = "absolute",
    zIndex: t = 8e3,
    transform: r,
    placement: i,
    placementStyles: n,
    rootElement: s,
    children: l,
    ...p
}, d) => {
    if (!e) return null;
    let c = (0, Rm.useMemo)(() => {
        let m = "";
        switch (i) {
            case "bottom":
                m = "bottom: -8px; left: 20px;";
                break;
            case "right":
                m = "bottom: calc(50% - 4px); right: -12px; transform: rotate(-90deg);";
                break;
            case "left":
                m = "bottom: calc(50% - 4px); left: -12px; transform: rotate(90deg);";
                break;
            default:
                break
        }
        return m
    }, [i]);
    return DC.default.createPortal(w(f, {
        ref: d,
        position: o,
        zIndex: t,
        borderRadius: "4px",
        backgroundColor: Be(.08, q.black),
        transform: r || "none",
        transition: "0.3s transform ease",
        ...p,
        children: [l, i && a(f, {
            display: "flex",
            height: 8,
            width: 16,
            position: "absolute",
            color: Be(.08, q.black),
            css: ne `
              ${n||c}
            `,
            children: a(Fv, {})
        })]
    }), s || document.body)
});
LC.displayName = "Popup";
var zm = LC;
te();
y();
var OC = f.withComponent(N("button")
    `
  width: 32px;
  height: 32px;
  color: ${e=>e.theme.colors.black};
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  transition: opacity 0.2s ease;
  padding: 0;
  margin: 0;
  border: none;
  box-shadow: rgb(128 128 128 / 16%) 0px 0px 0px 1px;
  cursor: pointer;
  &:hover {
    color: ${e=>e.theme.colors.tomato};
  }

  ${e=>_d({light:{backgroundColor:"white"},dark:{backgroundColor:e.theme.colors.lightGray}})}

  ${e=>e.isActive&&ne`
      background-color: ${e.theme.colors.tomato};
      color: white;
      &:hover {
        color: white;
      }
    `}
`);
OC.defaultProps = {
    variant: "light"
};
var vb = (0, Em.memo)(({
    isPopupOpened: e,
    isCurrentPage: o,
    popupContainer: t,
    hideDelete: r,
    onPageActionsButtonClick: i,
    isPageSettingsOpened: n,
    pageActionsHandler: s,
    collaboratorName: l,
    collaboratorAvatar: p,
    keepActionButtons: d,
    isHovered: c,
    buttonVariant: m = "light"
}) => {
    let [u, g] = (0, Em.useState)({
        left: 0,
        top: 0
    }), h = bu({
        watchingClick: e,
        callback: () => {
            i(!0)
        }
    });
    return w(f, {
        display: "flex",
        children: [a(OC, {
            marginRight: 0,
            "data-testid": "toggle-page-actions-popup",
            variant: m,
            isActive: e || n && o,
            opacity: c || d ? 1 : 0,
            onClick: b => {
                if (b.preventDefault(), b.stopPropagation(), t) {
                    let x = b.currentTarget.getBoundingClientRect(),
                        S = t.getBoundingClientRect();
                    g({
                        left: x.left - S.left + x.width + 12,
                        top: x.top - S.top - (r ? 28 : 46)
                    }), i()
                }
            },
            children: a(Cr, {
                color: "currentColor"
            })
        }), t && a(zm, {
            ref: h,
            rootElement: t,
            isShown: e,
            width: 148,
            height: r ? 88 : 124,
            top: `${u.top}px`,
            left: `${u.left}px`,
            placement: "left",
            children: a(AC, {
                isPageSettingsOpened: n && o,
                hideDelete: r,
                actionCallback: s
            })
        }), l && a(qt, {
            size: "small",
            marginLeft: "8px",
            url: p,
            name: l
        })]
    })
});
vb.displayName = "PageActionsSmallPanel";
W();
Ue();
Nr();
yv();
eI();
Ai();
te();
var $C = M(F());
y();
var z7 = N(f)
`
  display: flex;
  width: 128px;
  height: 32px;
  justify-content: center;
  transition: opacity 0.2s ease;
  & > * {
    margin-left: 16px;
    &:first-of-type {
      margin-left: 0;
    }
  }
`, E7 = N(f)
`
  display: flex;
  width: 32px;
  height: 128px;
  flex-direction: column;
  justify-content: center;
  transition: opacity 0.2s ease;
  & > * {
    margin: 3px 0;
  }
`, A7 = (0, $C.memo)(({
    isCurrentPage: e,
    isPageSettingsOpened: o,
    hideDelete: t,
    collaboratorName: r,
    collaboratorAvatar: i,
    vertical: n,
    pageActionsHandler: s,
    keepActionButtons: l,
    isHovered: p,
    ...d
}) => w(n ? E7 : z7, {
    "aria-label": "Page action buttons",
    ...d,
    children: [a(Ct, {
        "aria-label": "Duplicate page",
        "data-testid": "duplicate-page",
        height: 32,
        width: 32,
        color: "white",
        outline: !0,
        marginRight: 0,
        unstyledHover: !0,
        opacity: p ? 1 : o ? 0 : l ? 1 : 0,
        transition: "opacity 0.2s ease",
        css: ne `
            &:hover {
              background-color: ${q.white};

              & svg {
                color: ${q.red};
              }
            }

            &:active {
              background-color: ${q.red};

              & svg {
                color: ${q.white};
              }
            }
          `,
        onClick: m => {
            m.preventDefault(), m.stopPropagation(), s("duplicate")
        },
        children: a(Xd, {
            color: "black"
        })
    }), a(Ct, {
        "aria-label": "Toggle page settings",
        "data-testid": "toggle-page-settings",
        height: 32,
        width: 32,
        color: "white",
        outline: !0,
        "data-active": e && o,
        marginRight: 0,
        opacity: p || l ? 1 : 0,
        transition: "opacity 0.2s ease",
        css: ne `
            &:hover {
              background-color: ${q.white};

              & svg {
                color: ${q.red};
              }
            }

            &:active {
              background-color: ${q.red};

              & svg {
                color: ${q.white};
              }
            }
          `,
        onClick: m => {
            m.preventDefault(), e && m.stopPropagation(), (!o || o && !e || o && e) && s("settings")
        },
        children: a(Ev, {
            color: e && o ? "white" : "black"
        })
    }), t || r ? null : a(Ct, {
        "aria-label": "Delete page",
        "data-testid": "delete-page",
        height: 32,
        width: 32,
        color: "white",
        outline: !0,
        marginRight: 0,
        opacity: p ? 1 : o ? 0 : l ? 1 : 0,
        transition: "opacity 0.2s ease",
        css: ne `
              &:hover {
                background-color: ${q.white};

                & svg {
                  color: ${q.red};
                }
              }

              &:active {
                background-color: ${q.red};

                & svg {
                  color: ${q.white};
                }
              }
            `,
        onClick: m => {
            m.preventDefault(), m.stopPropagation(), s("detele")
        },
        children: a(Lt, {
            color: "black"
        })
    }), r && a(qt, {
        size: "small",
        url: i,
        name: r,
        transform: p ? "translateX(0)" : `${n?"translateY":"translateX"} (${l?0:"-48px"})`,
        transition: "opacity 0.2s ease, transform 0.2s ease-in-out"
    })]
})), yb = f.withComponent(A7);
yb.displayName = "PageActionsStandartPanel";
var as = M(F());
W();
Ee();
y();
var Dm = (0, as.memo)(({
    isCurrentPage: e,
    pageId: o,
    gridSize: t,
    hidden: r = !1,
    vertical: i,
    viewport: n,
    isHovered: s,
    actionButtonVariant: l,
    ...p
}) => {
    let d = (0, as.useContext)(Le),
        c = (0, as.useContext)(me),
        m = (0, as.useContext)(kb),
        u = () => {
            d.masterSharePidIsChanging || c.deletePage(o)
        },
        g = () => {
            let C = `pending-${Date.now()}`,
                k = c.pages.find(R => R._id === o),
                T = c.pagesParams[o];
            if (k) {
                let R = T.children.length && T.collapsed;
                m.addPendingPage({
                    _id: C,
                    uri: "",
                    screenshot: k.screenshot,
                    title: k.title,
                    num: T.children.length ? k.num : k.num + 1,
                    parentPage: R ? k._id : k.parentPage,
                    hidden: !1,
                    isPrivate: !1,
                    pending: !0
                })
            }
            c.duplicatePage(o).then(() => {}).catch(R => {
                console.warn("page dublicate", R)
            }).finally(() => {
                m.removePendingPage(C)
            })
        },
        h = () => {
            d.isPageSettingsOpened && !e ? window.RM.constructorRouter.showWorkspace({
                id: o
            }) : !d.isPageSettingsOpened && !e ? (window.RM.constructorRouter.showWorkspace({
                id: o
            }), d.dispatch({
                type: "togglePageSettings"
            })) : d.dispatch({
                type: "togglePageSettings"
            })
        },
        b = C => {
            let k = !1;
            if (C) {
                d.dispatch({
                    type: "setPageActionsPopup",
                    payload: k
                });
                return
            }
            d.isPageActionsPopupOpenedFor !== o && (k = o), d.dispatch({
                type: "setPageActionsPopup",
                payload: k
            })
        },
        x = C => {
            switch (C) {
                case "duplicate":
                    g();
                    break;
                case "detele":
                    u();
                    break;
                case "settings":
                    d.isPageActionsPopupOpenedFor && b(!0), h();
                    break;
                case "gotopage":
                    c.changeWorkspace({
                        id: o
                    });
                    break;
                default:
                    break
            }
        },
        S = (0, as.useMemo)(() => d.isPageActionsPopupOpenedFor === o, [d.isPageActionsPopupOpenedFor]),
        v = c.lockedPages[o],
        P = v && v !== window.RM.constructorRouter.me ? .get("uri") ? c.collaborators.find(C => C.uri === v) : void 0;
    return r ? null : t === 0 ? a(f, {
        children: a(yb, {
            isCurrentPage: e,
            keepActionButtons: e && !d.addingPage,
            isPageSettingsOpened: d.isPageSettingsOpened,
            hideDelete: c.pages.length === 1,
            collaboratorName: P && P.name,
            collaboratorAvatar: P && P.pic,
            vertical: i,
            position: "absolute",
            top: i ? 0 : "auto",
            right: i ? "auto" : 0,
            bottom: i ? "auto" : 8,
            left: i ? "100%" : 0,
            margin: i ? "0 0 0 8px" : "auto",
            pageActionsHandler: x,
            isHovered: s
        })
    }) : a(f, {
        display: "flex",
        alignItems: "center",
        position: "absolute",
        top: 0,
        bottom: 0,
        margin: "auto",
        left: 7,
        ...p,
        children: a(vb, {
            isPopupOpened: S,
            popupContainer: document.getElementById("settings-popup-container"),
            hideDelete: c.pages.length === 1,
            onPageActionsButtonClick: b,
            isPageSettingsOpened: d.isPageSettingsOpened,
            collaboratorName: P && P.name,
            collaboratorAvatar: P && P.pic,
            isCurrentPage: e,
            keepActionButtons: e && !d.addingPage,
            pageActionsHandler: x,
            isHovered: s,
            buttonVariant: l
        })
    })
});
Dm.displayName = "ActionsPanelWraper";
Ee();
Ut();
te();
Ho();
var ls = M(F());
y();
var HC = (0, ls.createContext)({
        addElementPageToMap: () => {}
    }),
    {
        Provider: D7
    } = HC;

function FC(e) {
    let {
        current: o
    } = (0, ls.useRef)(new Map);
    (0, ls.useEffect)(() => {
        if (e.currentPageID) {
            let r = o.get(e.currentPageID);
            r && r.scrollIntoView({
                block: "nearest"
            })
        }
    }, [e.currentPageID]);

    function t(r, i) {
        o.has(r) || i && o.set(r, i)
    }
    return a(D7, {
        value: {
            addElementPageToMap: t
        },
        children: e.children
    })
}
var NC = () => (0, ls.useContext)(HC);
rr();
y();
var _b = (0, ho.memo)(({
    page: e,
    gridSize: o,
    dragableRef: t,
    level: r = 0,
    head: i,
    childIndex: n,
    onCollapsed: s,
    isPageCollapsed: l = !0,
    viewNum: p,
    selectedPageIds: d = [],
    isCurrent: c,
    isPrivatePages: m,
    isSortableActive: u,
    sortableId: g,
    onSortableItemId: h,
    selectPage: b,
    selectPagesRange: x,
    deselectPages: S,
    changeWorkspace: v,
    pageSave: P,
    updatePageScreenshot: C,
    updateBrokenScreenshot: k,
    validatePageUri: T
}) => {
    let {
        isHovered: R,
        ...I
    } = Ze(!1), {
        addElementPageToMap: B
    } = NC(), L = r && r * 16, D = X => {
        X.defaultPrevented || (X.metaKey || X.ctrlKey ? b(e._id) : X.shiftKey ? x(e._id) : d.length ? S() : u || v({
            id: e._id
        }))
    }, E = () => s && s(), [$, G] = (0, ho.useState)(() => e.title ? e.title : ""), [de, Q] = (0, ho.useState)(!1), {
        viewport: U
    } = (0, ho.useContext)(je);
    (0, ho.useEffect)(() => {
        !de && e.title !== $ && G(e.title ? e.title : "")
    }, [e.title, $, de]);
    let Z = () => {
            Q(!1);
            let X = P(e._id, {
                title: $
            }, {
                patch: !0
            });
            X && !(X instanceof Error) && X.done($e => {}).fail(() => {})
        },
        [xe, ye] = (0, ho.useState)(null);
    (0, ho.useEffect)(() => {
        ye(e._id === h ? "gray" : d.includes(e._id) ? "tomato" : null)
    }, [h, e._id, d]), (0, ho.useEffect)(() => {
        Ve("screenshoter.optimizedRenewing") || !e.screenshot && C(e._id)
    }, [e._id, e.screenshot, C]);
    let ve = e.pending,
        ee = (0, ho.useRef)(null),
        oe = (0, ho.useCallback)(X => {
            X !== e.uri && P(e._id, {
                uri: X
            }, {
                patch: !0
            })
        }, [e._id, e.uri, P]),
        H = (0, ho.useCallback)(X => T(e._id, X), [e._id, T]),
        se = (0, ho.useCallback)(X => X.replace(/[^A-Za-z0-9_.+-]/g, ""), []),
        he = (0, ho.useCallback)(() => {
            Ve("screenshoter.optimizedRenewing") && k(e._id)
        }, []),
        le = e.viewport_phone_portrait ? .enabled,
        ue = e.viewport_tablet_portrait ? .enabled,
        ke = e.viewport_phone_portrait ? .screenshot,
        ie = e.viewport_tablet_portrait ? .screenshot,
        _e = !!(U === "phone_portrait" && ke) && le,
        Ce = !!(U === "tablet_portrait" && ie) && ue,
        We = o === 0 ? "standard" : "small",
        {
            width: Ke,
            height: O
        } = _e ? Mu.phone_portrait[We] : Ce ? Mu.tablet_portrait[We] : Mu[We],
        j = U === "phone_portrait",
        K = U === "tablet_portrait";
    return w(f, {
        width: "192px",
        paddingTop: "2px",
        paddingBottom: "2px",
        marginLeft: `${L}px`,
        position: "relative",
        display: o === 0 ? "block" : "flex",
        className: "page-list-item",
        ref: X => B(e._id, X),
        ...I,
        children: [m && e.isPrivate ? a($7, {
            color: c ? "tomato" : "black",
            level: r,
            gridSize: o,
            page: e,
            position: "absolute",
            zIndex: 1,
            top: o === 0 ? 64 : "25px",
            left: o === 0 ? r ? -6 : -4 : "-8px",
            transformOrigin: "left",
            transform: "scale(0.75)"
        }) : c ? a(O7, {
            position: "absolute",
            top: o === 0 ? 70 : "31px",
            left: o === 0 ? -3 : "-7px"
        }) : void 0, i && a(f, {
            width: 12,
            height: 12,
            position: "absolute",
            top: o === 0 ? 143 : 20,
            left: o === 0 ? 5 : j ? 41 : K ? 56 : 97,
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            cursor: "pointer",
            zIndex: ra.pageItem,
            transform: `rotate(${l?"0deg":"-90deg"})
              translateX(${l?"2px":"0px"})`,
            transition: "transform 200ms ease",
            onClick: E,
            children: a(qo, {
                color: "black"
            })
        }), a(f, {
            "aria-label": "Page thumbnail",
            width: Ke + (o === 0 ? 16 : 8),
            height: O + (o === 0 ? 16 : 8),
            className: "page-list-item-picture",
            marginBottom: r ? 1 : "0px",
            borderRadius: o === 0 ? "8px" : "6px",
            position: "relative",
            zIndex: ra.pageItem,
            padding: o === 0 ? "4px" : "2px",
            cursor: "pointer",
            transformOrigin: "left",
            overflow: !_e && !Ce ? "hidden" : "",
            flex: "0 0 auto",
            transform: `scale(${r&&o===0?"0.92":"1"})`,
            css: X => ne `
            border: ${o===0?"4px":"2px"} solid
              ${xe?X.colors[xe]:"transparent"};
          `,
            onClick: D,
            children: w(f, {
                className: "sortable-item-handle",
                height: o === 0 ? 124 : "56px",
                position: "relative",
                boxShadow: "0 1px 1px rgba(64, 64, 64, 0.32)",
                borderRadius: _e || Ce || o === 1 ? "4px" : "8px",
                backgroundColor: "white",
                ref: t,
                children: [ve && a(f, {
                    position: "absolute",
                    top: "0",
                    right: "0",
                    bottom: "0",
                    left: "0",
                    display: "flex",
                    justifyContent: "center",
                    alignItems: "center",
                    zIndex: ra.pageItem,
                    children: a(Rt, {
                        bgColor: "transparent"
                    })
                }), a(Un, {
                    desktopUrl: e.screenshot,
                    phonePortraitUrl: ke,
                    tabletPortraitUrl: ie,
                    phoneViewportEnabled: le,
                    tabletViewportEnabled: ue,
                    opacity: e.hidden ? .4 : 1,
                    imageSize: We,
                    viewport: U,
                    onLoadError: he
                }), !ve && (o !== 1 || !_e) && a(Dm, {
                    isCurrentPage: c,
                    pageId: e._id,
                    gridSize: o,
                    hidden: !!u,
                    vertical: _e || Ce,
                    viewport: U,
                    isHovered: R
                })]
            })
        }), w(f, {
            opacity: o === 0 && e._id === g && u ? 0 : 1,
            children: [w(f, {
                width: "100%",
                marginLeft: `${o===0?i?24:8:i?20:4}px`,
                marginTop: `${o===0?i?-1:0:16}px`,
                children: [w(A, {
                    textStyle: "small",
                    float: "left",
                    children: [p, n ? `.${n}` : "", ".\xA0"]
                }), a(St, {
                    type: "text",
                    textStyle: "small",
                    color: "black",
                    placeholder: "Page Title",
                    spellCheck: !1,
                    autoComplete: "off",
                    autoCorrect: "off",
                    maxLength: 128,
                    value: $,
                    disabled: ve,
                    onChange: X => {
                        G(X.target.value)
                    },
                    onBlur: Z,
                    onFocus: () => {
                        Q(!0)
                    },
                    width: `${o===0?i||r?156:170:i||r?62:82}px`,
                    height: "auto",
                    padding: "0",
                    textOverflow: "ellipsis",
                    css: ne `
                &:focus {
                  border: none;
                }
              `
                })]
            }), a(f, {
                width: "100%",
                marginLeft: `${o===0?i&&l?24:8:4}px`,
                marginTop: "-2px",
                display: "flex",
                justifyContent: "start",
                ref: ee,
                children: a(Al, {
                    validationMessageAnchor: ee.current,
                    validationMessageContainer: document.getElementById("settings-popup-container"),
                    name: "link",
                    placeholder: "custom url",
                    textStyle: "small",
                    link: e.uri,
                    disabled: ve,
                    width: o === 0 ? i || r ? 172 : 192 : i || r ? 80 : 96,
                    withSlash: !0,
                    validationMessageZIndex: 3,
                    validationMessagePlacement: "right",
                    validate: H,
                    filter: se,
                    onDone: oe
                })
            })]
        }), !ve && _e && o === 1 && a(Dm, {
            isCurrentPage: c,
            pageId: e._id,
            gridSize: o,
            hidden: !!u,
            vertical: _e || Ce,
            viewport: U,
            isHovered: R,
            position: "static",
            actionButtonVariant: "dark"
        })]
    })
});
_b.displayName = "PageListItem";
var O7 = e => a(f, {
    width: "6px",
    height: "6px",
    borderRadius: "50%",
    backgroundColor: "tomato",
    zIndex: ra.pageItem,
    ...e
});

function $7({
    color: e,
    level: o,
    gridSize: t,
    page: r,
    ...i
}) {
    let n = (0, ho.useContext)(Le);
    return a(f, {
        onClick: () => {
            n.dispatch({
                type: "togglePrivatePages",
                payload: r._id
            })
        },
        cursor: "pointer",
        ...i,
        children: a(Kd, {
            color: e
        })
    })
}
var Lm = M(F());
W();
Ee();
te();
y();
var Cb = (0, Lm.memo)(({
    topPageId: e,
    stackedPages: o,
    gridSize: t,
    level: r = 0
}) => {
    let i = (0, Lm.useContext)(me),
        n = r && r * 16,
        s = i.pagesTree.reduce((l, p) => p.children instanceof Array ? [...l, p, ...p.children] : [...l, p], []).filter(l => o.includes(l._id));
    if (e) {
        let l = s.findIndex(d => d._id === e),
            [p] = s.splice(l, 1);
        s.unshift(p)
    }
    return s = s.slice(0, 4).reverse(), w(f, {
        width: "192px",
        height: t === 0 ? "176px" : "68px",
        paddingTop: "2px",
        paddingBottom: "2px",
        marginLeft: `${n}px`,
        position: "relative",
        display: t === 0 ? "block" : "flex",
        userSelect: "none",
        children: [s.map((l, p) => a(f, {
            top: t === 0 ? (s.length - 1 - p) * 4 : 0,
            left: (s.length - 1 - p) * 4,
            width: t === 0 ? 208 : "96px",
            height: t === 0 ? 140 : "64px",
            className: "page-list-item-picture",
            marginBottom: r ? 1 : "0px",
            borderRadius: t === 0 ? "8px" : "4px",
            position: "absolute",
            zIndex: 1,
            padding: t === 0 ? "4px" : "2px",
            border: `${t===0?"4px":"2px"} solid transparent`,
            cursor: "pointer",
            transformOrigin: "left",
            overflow: "hidden",
            flex: "0 0 auto",
            transform: `scale(${r&&t===0?"0.92":"1"})`,
            css: ne `
            :hover {
              .page-actions-standart-panel > * {
                opacity: 1;
                display: block;
              }
              .page-actions-button {
                opacity: 1;
                display: block;
              }
            }
          `,
            children: a(f, {
                borderRadius: "4px",
                height: t === 0 ? 124 : "56px",
                backgroundColor: "#FFF",
                boxShadow: "0 1px 1px rgba(64, 64, 64, 0.32)",
                children: a(Un, {
                    desktopUrl: l.screenshot,
                    imageSize: t === 0 ? "standard" : "small"
                })
            })
        }, l._id)), a(f, {
            height: 32
        })]
    })
});
Cb.displayName = "StackedPages";
y();
var Zde = typeof window < "u" && (window.requestAnimationFrame || window.setImmediate) || (e => setTimeout(e, 0)),
    H7 = (e, o, t) => e[o] ? e[o].parentId ? e[e[o].parentId].viewNum : e[o].viewNum : t,
    Om = (0, Vo.memo)(({
        page: e,
        gridSize: o,
        level: t = 0,
        dropableId: r,
        childIndex: i
    }) => {
        let n = (0, Vo.useContext)(me),
            s = (0, Vo.useContext)(au),
            l = (0, Vo.useRef)(null),
            p = !!(e.children && e.children.length),
            d = n.pagesParams[e._id] ? n.pagesParams[e._id].collapsed : !0,
            [c, m] = (0, Vo.useState)(!1),
            [u, g] = (0, Vo.useState)(0),
            h = n.setPageCollapse,
            b = (0, Vo.useCallback)(() => {
                h(e._id, !d), m(!1), d ? g(setTimeout(() => {
                    m(!0)
                }, 800)) : u && (clearTimeout(u), g(0))
            }, [h, e._id, d, u]),
            [x, S] = (0, Vo.useState)(!1),
            [v, P] = (0, Vo.useState)(!1);
        return (0, Vo.useEffect)(() => {
            if (s.isActive && s.id) {
                if (n.selectedPages.includes(s.id))
                    if (s.id === e._id) {
                        S(!0), P(!1);
                        return
                    } else {
                        S(!1), P(n.selectedPages.includes(e._id));
                        return
                    }
                else if (s.id === e._id && e.children) {
                    S(!0);
                    return
                }
            }
            S(!1), P(!1)
        }, [e._id, e.children, n.selectedPages, s.id, s.isActive]), v ? null : a(py, {
            draggableId: e._id,
            dropableId: r,
            children: ({
                ref: C,
                mouseDownRef: k
            }) => a(f, {
                position: "relative",
                ref: C,
                children: x ? a(Cb, {
                    topPageId: e._id,
                    stackedPages: n.selectedPages.includes(e._id) ? n.selectedPages : [e._id, ...e.children.map(T => T._id)],
                    gridSize: o,
                    level: s.id === e._id ? s.parentId ? 1 : 0 : t
                }) : w(Y, {
                    children: [a(_b, {
                        page: e,
                        gridSize: o,
                        dragableRef: k,
                        level: s.id === e._id ? s.parentId ? 1 : 0 : t,
                        head: p,
                        onCollapsed: b,
                        isPageCollapsed: d,
                        childIndex: i,
                        viewNum: H7(n.pagesParams, e._id, e.num),
                        selectedPageIds: n.selectedPages,
                        isCurrent: e._id === n.currentPageId,
                        isPrivatePages: n.project.isPrivatePages,
                        sortableId: s.id,
                        onSortableItemId: s.onItemId,
                        isSortableActive: s.isActive,
                        selectPage: n.selectPage,
                        selectPagesRange: n.selectPagesRange,
                        deselectPages: n.deselectPages,
                        changeWorkspace: n.changeWorkspace,
                        pageSave: n.pageSave,
                        updatePageScreenshot: n.updatePageScreenshot,
                        updateBrokenScreenshot: n.updateBrokenScreenshot,
                        validatePageUri: n.validatePageUri
                    }), d && !c && e.children && p ? a(lu, {
                        parentId: e._id,
                        dropableId: e._id,
                        children: ({
                            dropElementRef: T,
                            dropableId: R
                        }) => a(f, {
                            className: "page-children-container",
                            ref: l,
                            "data-parent-id": e._id,
                            style: {
                                height: d ? "auto" : "0px",
                                overflow: d ? "visible" : "hidden",
                                transition: "height 200ms ease"
                            },
                            children: a(f, {
                                ref: T,
                                children: e.children.map((I, B) => a(Om, {
                                    page: I,
                                    gridSize: o,
                                    level: t + 1,
                                    dropableId: R,
                                    childIndex: B + 1
                                }, I._id))
                            })
                        })
                    }) : null]
                })
            })
        })
    });
Om.displayName = "Branch";
Ee();
jh();
y();
var kb = (0, Zo.createContext)({
        removePendingPage: () => {},
        addPendingPage: () => {}
    }),
    F7 = ({
        children: e,
        ...o
    }) => {
        let t = (0, Zo.useContext)(Le),
            r = (0, Zo.useContext)(me),
            i = (0, Zo.useContext)(au),
            [n, s] = (0, Zo.useState)(0),
            [l, p] = (0, Zo.useState)([]),
            d = (0, Zo.useCallback)(g => {
                p([...l, g])
            }, [l]),
            c = (0, Zo.useCallback)(g => {
                p(l.filter(h => h._id !== g))
            }, [l]);
        (0, Zo.useEffect)(() => {
            if (i.isActive && i.id && r.selectedPages.includes(i.id)) {
                let g = r.pagesTree.reduce((h, b) => (Array.isArray(b.children) ? h.push(b, ...b.children) : h.push(b), h), []).filter(h => r.selectedPages.includes(h._id)).findIndex(h => h._id === i.id);
                s(Math.max(0, g * (t.gridSize === 0 ? 176 : 68)));
                return
            }
            s(0)
        }, [i.isActive]);
        let m = (0, Zo.useCallback)(g => g.sort((h, b) => (h.pending ? h.num - 1 : h.num) - (b.pending ? b.num - 1 : b.num)), []),
            u = l.length ? m([...r.pagesTree.map(g => {
                let h = l.filter(b => b.parentPage === g._id);
                return h.length ? { ...g,
                    children: m([...g.children ? g.children : [], ...h])
                } : g
            }), ...l.filter(g => !g.parentPage)]) : r.pagesTree;
        return a(kb.Provider, {
            value: {
                addPendingPage: d,
                removePendingPage: c
            },
            children: w(f, {
                display: "flex",
                id: "page-list-container",
                flexDirection: "column",
                justifyContent: "left",
                flexWrap: "wrap",
                userSelect: "none",
                ...o,
                children: [i.isActive ? a(f, {
                    height: n
                }) : null, a(lu, {
                    dropableId: "0",
                    children: ({
                        dropElementRef: g,
                        dropableId: h
                    }) => a(f, {
                        ref: g,
                        children: u.map(b => a(Om, {
                            page: b,
                            gridSize: t.gridSize,
                            dropableId: h
                        }, b._id))
                    })
                })]
            })
        })
    },
    Sb = F7;
Ee();
W();
be();
oI();
tI();
var ur = M(F());
y6();
var $m = M(a0());
Ee();
jh();
y();
var WC = ({
    children: e
}) => {
    let o = (0, ur.useContext)(Le),
        t = (0, ur.useContext)(me),
        r = (0, ur.useRef)(!0),
        i = (0, ur.useRef)(null),
        n = (0, ur.useRef)(!1),
        s = (0, ur.useRef)(null),
        l = (0, ur.useRef)(!1),
        p = (0, ur.useRef)(null),
        d = (0, ur.useRef)(null);
    (0, ur.useEffect)(() => {
        d.current && (o.isPageActionsPopupOpenedFor ? d.current.style.overflowY = "hidden" : d.current.style.overflowY = "scroll")
    }, [o.isPageActionsPopupOpenedFor]);
    let c = m => {
        d.current = m;
        let u = m.scrollHeight,
            g = m.clientHeight,
            h = m.scrollTop,
            b = !!h,
            x = g < u && g + h < u;
        x !== l.current && (l.current = x, s.current && (x ? s.current.style.display = "block" : s.current.style.display = "none")), b !== n.current && (n.current = b, i.current && (b ? i.current.style.display = "block" : i.current.style.display = "none"))
    };
    return (0, ur.useEffect)(() => {
        d.current && c(d.current)
    }, [o.gridSize, t.pagesParams]), a(cy, {
        unionOn: !0,
        idList: fh(t.pagesTree),
        isDragOff: o.isPageSettingsOpened,
        onAfterDragEnd: () => {
            p.current && p.current.style.removeProperty("height");
            let m = document.getElementsByTagName("body")[0],
                u = m.className;
            m.className = u.split(" ").filter(g => g && g !== "user-select-none").join(" "), r.current = !0
        },
        onBeforeDragStart: m => {
            if (t.selectedPages.includes(m)) return (0, $m.without)(t.selectedPages, m);
            let u = t.pagesTree.find(g => g._id === m);
            return u && u.children && (t.pagesParams[u._id] ? t.pagesParams[u._id].collapsed : !0) ? u.children.map(h => h._id) : []
        },
        onDragStart: () => {
            let m = document.getElementsByTagName("body")[0];
            m.className += " user-select-none", p.current && (p.current.style.height = p.current.clientHeight + "px"), r.current = !1
        },
        onDragEnd: (m, u, g, h) => {
            let b = fh(t.pagesTree),
                x = t.pagesTree.reduce((k, T) => (k.push(T), T.children ? [...k, ...T.children] : k), []).find(k => k._id === m),
                S = t.selectedPages.includes(m) ? h.length ? [...h, m] : [m] : u && x && x.children ? [m, ...x.children.map(k => k._id)] : [m],
                v = (k, T) => {
                    let R = [];
                    for (let I = 0; I < k.length; I++)
                        if (T.includes(k[I].id) && R.push(k[I]), k[I].items) {
                            let B = v(k[I].items, T);
                            R = [...R, ...B]
                        }
                    for (let I = 0; I < T.length; I++) {
                        let B = (0, $m.findIndex)(k, L => L.id === T[I]);
                        B !== -1 && k.splice(B, 1)
                    }
                    return R
                },
                P = (k, T, R, I) => {
                    if (!I) {
                        k.splice(R, 0, ...T);
                        return
                    }
                    for (let B = 0; B < k.length; B++) {
                        if (k[B].id === I) {
                            k[B].items || (k[B].items = []), T.forEach(L => L.parentId = k[B].id), P(k[B].items, T, R);
                            return
                        }
                        k[B].items && P(k[B].items, T, R, I)
                    }
                },
                C = v(b, S);
            if (C.length) {
                C.forEach(I => I.parentId = void 0), P(b, C, g, u);
                let k = W0(b),
                    T = 1,
                    R = k.map(I => ({
                        id: I.id,
                        num: T++,
                        parentPage: I.parentId || null
                    }));
                t.saveOrder(R), setTimeout(() => {
                    t.updateUrl()
                }, 100)
            }
        },
        children: () => e
    })
};
W();
P6();
Ee();
Fr();
var mr = M(F());
y();

function Pb({
    children: e,
    bottomLine: o,
    ...t
}) {
    let r = (0, mr.useContext)(Le),
        i = (0, mr.useContext)(me),
        n = (0, mr.useRef)(!0),
        s = (0, mr.useRef)(null),
        l = (0, mr.useRef)(!1),
        p = (0, mr.useRef)(null),
        d = (0, mr.useRef)(null);
    (0, mr.useEffect)(() => {
        d.current && (r.isPageActionsPopupOpenedFor ? d.current.style.overflowY = "hidden" : d.current.style.overflowY = "scroll")
    }, [r.isPageActionsPopupOpenedFor]);
    let c = g => {
            d.current = g;
            let h = g.scrollHeight,
                b = g.clientHeight,
                x = g.scrollTop,
                S = b < h && b + x < h;
            S !== l.current && (l.current = S, s.current && (S ? s.current.style.display = "block" : s.current.style.display = "none"))
        },
        m = (0, mr.useCallback)(g => {
            if (!n.current) return;
            let h = g.target;
            h && c(h)
        }, [n]),
        u = g => {
            c(g)
        };
    return (0, mr.useEffect)(() => {
        d.current && c(d.current)
    }, [r.gridSize, i.pagesParams]), a(Ft, {
        onScroll: m,
        onFirstRender: u,
        children: ({
            ref: g
        }) => w(f, {
            ref: q0(g, p),
            overflow: "hidden",
            ...t,
            children: [e, o && o(s)]
        })
    })
}
var ca = M(F());
Ye();
Ee();
var gr = M(F());
W();
He();
Dy();
te();
var Tb = M(F());
W();
ar();
be();
var VC = "https://st-p.rmcdn1.net/ae5fa58f/dist/rm-templates-XWWYJF2Q.png";
y();

function W7({
    onMyTemplatesClick: e,
    onRmTemplatesClick: o,
    isUserTemplatesLoading: t,
    userTemplatesScreenshot: r
}) {
    let [i, n] = (0, Tb.useState)(!1), [s, l] = (0, Tb.useState)(!1), p = c => {
        c.preventDefault(), o()
    }, d = c => {
        c.preventDefault(), e()
    };
    return w(f, {
        display: "flex",
        flexDirection: "column",
        color: "white",
        paddingTop: "4rm",
        paddingLeft: "4rm",
        paddingBottom: "4rm",
        children: [w(f, {
            display: "flex",
            "data-testid": "show-rm-templates-modal",
            alignItems: "center",
            cursor: "pointer",
            onMouseEnter: () => n(!0),
            onMouseLeave: () => n(!1),
            onClick: p,
            children: [a(f, {
                width: 88,
                height: 60,
                borderRadius: "4px",
                backgroundColor: "grey",
                backgroundImage: `url('${VC}')`,
                backgroundPosition: "center",
                backgroundSize: "cover",
                backgroundRepeat: "no-repeat"
            }), a(A, {
                textStyle: "small",
                marginLeft: "4rm",
                color: i ? "tomato" : "white",
                children: "R/m templates"
            })]
        }), w(f, {
            display: "flex",
            "data-testid": "show-user-templates-modal",
            alignItems: "center",
            marginTop: "4rm",
            cursor: "pointer",
            onMouseEnter: () => l(!0),
            onMouseLeave: () => l(!1),
            onClick: c => d(c),
            children: [a(f, {
                display: "flex",
                width: 88,
                height: 60,
                borderRadius: "4px",
                justifyContent: "center",
                alignItems: "center",
                backgroundColor: "grey",
                backgroundImage: r ? `url(${r})` : "none",
                backgroundPosition: "center",
                backgroundRepeat: "no-repeat",
                backgroundSize: "cover",
                children: !r && t && a(Rt, {
                    bgColor: "transparent"
                })
            }), a(A, {
                textStyle: "small",
                marginLeft: "4rm",
                color: s ? "tomato" : "white",
                children: "My templates"
            })]
        })]
    })
}
var UC = W7;
var Hm = M(F()),
    GC = M(ir());
W();
ar();
jc();
y();
var jC = (0, Hm.memo)(({
    isShown: e,
    width: o,
    height: t,
    isLoading: r,
    children: i,
    onClose: n
}) => {
    let s = (0, Hm.useRef)(null);

    function l(p) {
        p.stopPropagation(), n && n()
    }
    return GC.default.createPortal(a(Y, {
        children: e ? w(Y, {
            children: [a(f, {
                id: "my-templates-modal",
                ref: s,
                width: `${o}px`,
                height: `${t}px`,
                position: "absolute",
                top: `calc(50% - ${t/2}px)`,
                left: `calc(50% - ${o/2}px)`,
                zIndex: 9999,
                borderRadius: "12px",
                backgroundColor: "black",
                overflowY: "auto",
                children: r ? a(f, {
                    display: "flex",
                    width: "100%",
                    height: "100%",
                    justifyContent: "center",
                    alignItems: "center",
                    children: a(Rt, {
                        bgColor: "transparent"
                    })
                }) : i
            }), a(Li, {
                "data-testid": "my-template-modal-overlay",
                zIndex: 7149,
                backgroundColor: "rgba(0, 0, 0, 0)",
                onClick: l
            })]
        }) : null
    }), document.body)
});
jC.displayName = "MyTemplatesModal";
var qC = jC;
var wi = M(F()),
    ZC = M(ir());
Ee();
$0();
var it = M(Ht()),
    XC = M(Mo()),
    et = M(lt());
en();
var Fl = {
    "template-constructor-helpers-template-center": Ot `
	<div class="template-center">
		<div class="template-center-wrapper">

			<div class="left-panel">
				<div class="search-icon"></div>
				<div class="back-icon"></div>
			</div>

			<div class="center-panel">

				<div class="search-wrapper">
					<div class="border"></div>
					<input class="search-string" type="text" placeholder="Search..."/>
					<div class="clear invisible"></div>
				</div>


				<div class="scroll-wrapper main">
					<div class="results-wrapper">
						<div class="results">
						</div>
					</div>
					<div class="scroll"></div>
				</div>

				<div class="scroll-wrapper info">
					<div class="results-wrapper">
						<div class="results">
						</div>
					</div>
					<div class="scroll"></div>
				</div>
			</div>


			<div class="right-panel">
				<div class="template-filter">
					<div class="categories">
						<div class="caption">Categories</div>
						<div class="category-switcher">
							<div class="category-item button active">All</div>
							<div class="category-item button" data-category="microsites">Portfolio</div>
							<div class="category-item button" data-category="presentations">Presentation</div>
							<div class="category-item button" data-category="longreads">Editorial</div>
							<div class="category-item button" data-category="photo_stories">Landing page</div>
							<div class="category-item button" data-category="e_commerce">E-commerce</div>
							<div class="category-item button" data-category="sandbox">Sandbox Tutorials</div>
						</div>
					</div>
					<div class="sort">
						<div class="caption">Sort</div>
						<div class="sort-switcher">
							<div class="sort-item button" data-criteria="popular">Popular</div>
							<div class="sort-item button active" data-criteria="newest">Newest</div>
						</div>

					</div>
					<div class="rm-logo"></div>
				</div>

				<div class="template-info">
				</div>
			</div>



			<div class="overlay">
				<div class="preloader rmpreloader"><div class="arc"></div></div>
			</div>

		</div>
	</div>
`,
    "template-constructor-helpers-template-center-templateset": Ot `
	<div class="templateset" data-id="<%=data._id%>">
		<div class="image-wrapper">
			<img src="<%-data.screenshot%>" alt="">
		</div>
		<div class="title"><%-data.title || 'Templateset'%></div>
		<div class="num-pages"><%=data.pages + ' page' + (data.pages == 1 ? '' : 's')%></div>
	</div>
`,
    "template-constructor-helpers-template-center-template": Ot `
<div class="template" data-id="<%=data.page_id%>" data-thumb="<%=data.thumb%>">
	<div class="title"><%-data.idx%>. <%-data.title || 'Page ' + data.num%></div>
	<div class="template-image-wrapper">
		<img src="">
	</div>
	<div class="add-page"><div class="plus"></div><div class="checkmark"></div></div>
</div>
`,
    "template-constructor-helpers-template-center-templateinfo": Ot `
<div class="title"><%-data.title || 'Templateset'%></div>
<div class="author">
	<span class="label">Designed by</span>
	<% if (data.author_url) { %>
		<a href="<%-data.author_url%>" target="_blank" class="name"><%-data.author_name%></a>
	<% } else { %>
		<span class="name"><%-data.author_name || 'Unknown'%></span>
	<% } %>
</div>
<div class="desc-scroll-wrapper">
	<div class="desc-wrapper">
		<div class="desc"><%-data.description || 'No description'%></div>
	</div>
	<div class="scroll"></div>
</div>
<div class="viewports">
	<div class="caption">Viewports</div>
	<div class="devices">
		<div class="device default" title="Desktop"></div>
		<% _.each(data.viewports, function(v) { %>
			<div class="device <%=v%>" title="<%=data.VIEWPORTS[v]%>"></div>
		<% }); %>
	</div>
</div>
<div class="categories">
	<div class="caption">Categories</div>
	<div class="list"><%-data.categories_string%></div>
</div>
<a href="<%=Constants.readymag_host%>/<%=data.mag_num_id%>" class="preview button" target="blank" data-id="<%=data._id%>">Preview</a>
<div class="add-pages button" data-id="<%=data._id%>">
	<div class="message">Add <%=data.templates.length%> page<%=data.templates.length == 1 ? '' : 's'%></div>
	<div class="plus"></div>
	<div class="checkmark"></div>
</div>
`,
    "template-constructor-helpers-template-center-animation": Ot `
<style id="template-center-page-animation">
	.animation-page-flyout-x {
	    -webkit-animation: flyout-x .8s linear forwards;
	    animation: flyout-x 1s linear forwards;
	}

	.animation-page-flyout-y {
	    -webkit-animation: flyout-y .8s linear forwards;
	    animation: flyout-y 1s linear forwards;
	}

	@-webkit-keyframes flyout-x {
	    0% {
	    	-webkit-animation-timing-function: ease-out;
	    }
	    30% {
	        -webkit-transform: translateX(-40px);
	        -webkit-animation-timing-function: ease-in;
	        // -webkit-animation-timing-function: linear;
	        opacity: 1;
	    }
	    80% {
	    	-webkit-transform: translateX(150px);
	    	// -webkit-animation-timing-function: ease-in-out;
	    	-webkit-animation-timing-function: linear;
	    	opacity: 0.5;
	    }
	    100% {
	        -webkit-transform: translateX(304px);
	        // -webkit-animation-timing-function: ease-in;
	        -webkit-animation-timing-function: linear;
	        opacity: 0;
	    }
	}

	@-webkit-keyframes flyout-y {
	    0% {
	    	// -webkit-animation-timing-function: linear;
	    	-webkit-animation-timing-function: ease-in;
	    }
	    30% {
	        -webkit-transform: translateY(<%=top1%>px) scale(0.8);
	        -webkit-animation-timing-function: linear;
	        // -webkit-animation-timing-function: ease-in-out;
	        -webkit-animation-timing-function: ease-out;
	    }
	    80% {
	    	-webkit-transform:translateY(<%=top2%>px) scale(0.5);
	    	-webkit-animation-timing-function: ease-in-out;
	    }
	    100% {
	        -webkit-transform:translateY(<%=top3%>px)  scale(0.37);
	        -webkit-animation-timing-function: ease-in;
	    }
	}

	@keyframes flyout-x {
	    0% {
	    	animation-timing-function: ease-out;
	    }
	    30% {
	        transform: translateX(-40px);
	        animation-timing-function: ease-in;
	        // -moz-animation-timing-function: linear;
	        opacity: 1;
	    }
	    80% {
	    	transform: translateX(150px);
	    	// -moz-animation-timing-function: ease-in-out;
	    	animation-timing-function: linear;
	    	opacity: 0.5;
	    }
	    100% {
	        transform: translateX(304px);
	        // -moz-animation-timing-function: ease-in;
	        animation-timing-function: linear;
	        opacity: 0;
	    }
	}

	@keyframes flyout-y {
	    0% {
	    	// -moz-animation-timing-function: linear;
	    	animation-timing-function: ease-in;
	    }
	    30% {
	        transform: translateY(<%=top1%>px) scale(0.8);
	        animation-timing-function: linear;
	        // -moz-animation-timing-function: ease-in-out;
	        animation-timing-function: ease-out;
	    }
	    80% {
	    	transform:translateY(<%=top2%>px) scale(0.5);
	    	animation-timing-function: ease-in-out;
	    }
	    100% {
	        transform:translateY(<%=top3%>px)  scale(0.37);
	        animation-timing-function: ease-in;
	    }
	}


</style>
`
};
Lr();
ut();
ai();
Ye();
mh();
lh();
var V7 = {
        microsites: "portfolio",
        presentations: "presentation",
        longreads: "editorial",
        photo_stories: "landing page",
        e_commerce: "ecommerce"
    },
    YC = e => V7[e] || e,
    U7 = XC.default.View.extend({
        events: {
            "click .scroll-wrapper.main .results .templateset": "onTemplatesetClick",
            "click .search-icon": "toggleSearch",
            "click .back-icon": "closeInfo",
            "input .search-wrapper .search-string": "onSearchStringChange",
            "keypress .search-wrapper .search-string": "onSearchStringKey",
            "keyup .search-wrapper .search-string": "onSearchStringKey",
            "keydown .search-wrapper .search-string": "onSearchStringKey",
            "click .search-wrapper .clear": "onClearSearchString",
            "click .category-switcher .category-item": "filterItemClick",
            "click .sort-switcher .sort-item": "filterItemClick",
            "click .template:not(.added)": "onAddPageClick",
            "click .right-panel .add-pages:not(.added)": "onAddMultimpleClick",
            "click .right-panel .preview.button": "onPreviewButtonClick"
        },
        CATEGORIES: {
            microsites: "Microsites",
            presentations: "Presentations",
            photo_stories: "Photo Stories",
            longreads: "Longreads",
            e_commerce: "E-commerce",
            sandbox: "Sandbox"
        },
        VIEWPORTS: {
            tablet_portrait: "Tablet Portrait",
            phone_portrait: "Phone Portrait"
        },
        initialize: function(e) {
            et.default.bindAll(this), this.template = Fl["template-constructor-helpers-template-center"], this.templatesetTemplate = Fl["template-constructor-helpers-template-center-templateset"], this.templateTemplate = Fl["template-constructor-helpers-template-center-template"], this.templateTemplateInfo = Fl["template-constructor-helpers-template-center-templateinfo"], this.templatePageAnimation = Fl["template-constructor-helpers-template-center-animation"], this.router = e.router, this.showPagesAlert = e.pagesAlert, this.animateAppearance = e.animateAppearance, this.onClose = e.onClose, this.overlayDarker = e.overlayDarker ? !!e.overlayDarker : !1, this.overlayTransparent = e.overlayTransparent ? !!e.overlayTransparent : !1, this.showBlockLayer = typeof e.showBlockLayer < "u" ? e.showBlockLayer : !0, this.analyticsZone = e.analyticsZone, this.applyFilter.__debounced = et.default.debounce(this.applyFilter, 150), RM.analytics = RM.analytics || new $d, this.analytics = RM.analytics
        },
        render: function() {
            this.setElement((0, it.default)(this.template({})).insertAfter("#constructor")), this.setElement(this.$el), this.$mainList = this.$(".scroll-wrapper.main .results-wrapper .results"), this.$infoList = this.$(".scroll-wrapper.info .results-wrapper .results"), this.filterCategory && this.$('.category-switcher .category-item[data-category="' + this.filterCategory + '"]').addClass("active").siblings().removeClass("active"), this.mainScroll = (0, it.default)(this.$mainList.closest(".scroll-wrapper")).RMScroll({
                $container: this.$mainList.closest(".results-wrapper"),
                $content: this.$mainList,
                $handle: this.$mainList.closest(".scroll-wrapper").find(".scroll"),
                gap_start: 8,
                gap_end: 8
            }).data("scroll"), this.infoScroll = (0, it.default)(this.$infoList.closest(".scroll-wrapper")).RMScroll({
                $container: this.$infoList.closest(".results-wrapper"),
                $content: this.$infoList,
                $handle: this.$infoList.closest(".scroll-wrapper").find(".scroll"),
                gap_start: 8,
                gap_end: 8
            }).data("scroll");
            let e = (0, it.default)(this.$(".size-wrapper .slider"));
            this.sizeSlider = e.slider({
                    min: 1,
                    max: 7,
                    value: 4,
                    orientation: "vertical",
                    start: function() {
                        (0, it.default)("body").addClass("ns-resize-cursor"), e.addClass("dragging")
                    },
                    stop: function() {
                        (0, it.default)("body").removeClass("ns-resize-cursor"), e.removeClass("dragging")
                    },
                    change: this.sizeChanged,
                    slide: this.sizeChanged
                }), this.loadTemplateData(),
                import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-R4BAKHY4.js").then(({
                    default: o
                }) => {
                    o("templatecenter")
                }), this.rendered = !0
        },
        loadTemplateData: function() {
            let e = this;
            if (!et.default.isEmpty(this.templatesets)) return e.$(".overlay").remove(), e.renderTemplatesetList();
            it.default.ajax({
                type: "GET",
                url: "/api/rm_templatesets/",
                contentType: "application/json",
                success: o => {
                    e.$(".overlay").remove(), et.default.each(o, function(t) {
                        t.templates = et.default.sortBy(t.templates, "num")
                    }), e.templatesets = e.filtered_templatesets = o, e.applyFilter(), e.filterCategories()
                },
                error: () => {
                    console.log(arguments)
                }
            })
        },
        filterCategories: function() {
            Object.keys(this.CATEGORIES).forEach(function(e) {
                this.templatesets.some(function(o) {
                    return o.categories.includes(e)
                }) || this.$('.category-switcher .category-item[data-category="' + e + '"]').remove()
            }.bind(this))
        },
        renderTemplatesetList: function() {
            let e = this.$(".scroll-wrapper.main .results");
            e.empty().scrollTop(0), et.default.each(this.filtered_templatesets, function(o) {
                e.append(this.renderTemplateset(o))
            }, this), this.templatesetRendered = !0, et.default.defer(function() {
                this.mainScroll.recalc()
            }.bind(this))
        },
        renderTemplateset: function(e) {
            return e.pages = e.templates.length, e.screenshot = e.templates[0].thumb, this.templatesetTemplate({
                data: e
            })
        },
        renderTemplateList: function(e) {
            let o = this.$(".scroll-wrapper.info .results"),
                t = e.templates;
            o.empty().scrollTop(0), et.default.each(t, function(r, i) {
                r.idx = i + 1, r.mag_num_id = e.mag_num_id, o.append(this.renderTemplate(r))
            }, this)
        },
        renderTemplate: function(e) {
            let o = (0, it.default)(this.templateTemplate({
                    data: e
                })),
                t = o.find("img"),
                r = "256",
                i = e.thumb,
                n = e.fullScreenshotBaseUrl ? Oa(e.fullScreenshotBaseUrl, r) : i;
            return t.one("load", function() {
                et.default.defer(function() {
                    this.infoScroll.recalc()
                }.bind(this))
            }.bind(this)), t.attr("src", n), o
        },
        renderTemplateInfo: function(e) {
            let o = [],
                t;
            et.default.each(e.categories, function(r) {
                o.push(this.CATEGORIES[r])
            }, this), e.categories_string = o.join(", "), e.VIEWPORTS = this.VIEWPORTS, this.$(".right-panel .template-info").html(this.templateTemplateInfo({
                data: e,
                Constants: ae,
                _: et.default
            })), et.default.defer(function() {
                t = (0, it.default)(this.$(".right-panel .desc-scroll-wrapper")), this.infoDescriptionScroll = t.RMScroll({
                    $container: t.find(".desc-wrapper"),
                    $content: t.find(".desc"),
                    $handle: t.find(".scroll"),
                    gap_start: 4,
                    gap_end: 4
                }).data("scroll")
            }.bind(this))
        },
        applyFilter: function() {
            let e = it.default.trim(this.$(".search-string").val()),
                o = this.$(".category-switcher .category-item.active").attr("data-category"),
                t = this.$(".sort-switcher .sort-item.active").attr("data-criteria");
            et.default.isEmpty(this.templatesets) || (e ? this.filtered_templatesets = et.default.filter(this.templatesets, function(r) {
                return new RegExp(e, "i").test(r.title)
            }) : this.filtered_templatesets = this.templatesets, o && (this.filtered_templatesets = et.default.filter(this.filtered_templatesets, function(r) {
                return et.default.contains(r.categories, o)
            })), this.filterCategory = o, et.default.isEmpty(this.filtered_templatesets) || (this.filtered_templatesets = et.default.sortBy(this.filtered_templatesets, function(r) {
                return t == "popular" ? -(r.usages || 0) : -new Date(r.created)
            })), this.renderTemplatesetList())
        },
        onSearchStringKey: function(e) {
            if (e.stopPropagation(), e.keyCode == it.default.keycodes.esc && e.preventDefault(), e.type == "keyup") {
                if (e.keyCode == it.default.keycodes.esc) {
                    this.$(".search-wrapper .search-string").val() != "" ? this.clearSearchString() : this.toggleSearch();
                    return
                }
                e.keyCode == it.default.keycodes.enter && (e.preventDefault(), this.applyFilter())
            }
        },
        onSearchStringChange: function() {
            let e = this.$(".search-wrapper .search-string").val();
            this.$(".search-wrapper .clear").toggleClass("invisible", e == ""), this.applyFilter.__debounced()
        },
        clearSearchString: function() {
            this.$(".search-wrapper .search-string").blur().val("").focus(), this.onSearchStringChange()
        },
        onClearSearchString: function() {
            this.clearSearchString(), this.toggleSearch()
        },
        toggleSearch: function() {
            clearTimeout(this.searchFocusTimeout), this.$(".search-icon").toggleClass("active"), this.$(".search-wrapper").toggleClass("shift-down"), this.$(".scroll-wrapper.main").toggleClass("shift-down"), this.$(".search-icon").hasClass("active") ? this.searchFocusTimeout = setTimeout(et.default.bind(function() {
                this.$(".search-wrapper .search-string").focus()
            }, this), 700) : (this.$(".search-wrapper .search-string").val(""), this.$(".search-wrapper .clear").addClass("invisible"), Ts()), this.applyFilter()
        },
        closeInfo: function() {
            this.$(".template-center-wrapper").removeClass("info-mode")
        },
        onTemplatesetClick: function(e) {
            let o = (0, it.default)(e.currentTarget),
                t = o.attr("data-id");
            this.openInfo(t)
        },
        openInfo: function(e) {
            let o = et.default.findWhere(this.templatesets, {
                _id: e
            });
            this.renderTemplateList(o), this.renderTemplateInfo(o), this.$(".template-center-wrapper").addClass("info-mode"), this.$(".template-center-wrapper").one("transitionend webkitTransitionEnd", function() {
                this.infoScroll.recalc()
            }.bind(this))
        },
        onBodyKey: function(e) {
            this.$(".search-input").is(":focus") || ((e.keyCode == it.default.keycodes.esc || e.keyCode == it.default.keycodes.backspace) && (e.preventDefault(), e.stopPropagation()), e.type == "keyup" && (e.keyCode == it.default.keycodes.esc && (this.$(".font-explorer-wrapper").hasClass("info-mode") ? this.closeInfo() : et.default.isFunction(this.onClose) ? this.onClose() : this.hide()), e.keyCode == it.default.keycodes.backspace && (this.$(".font-explorer-wrapper").hasClass("info-mode") ? this.closeInfo() : et.default.isFunction(this.onClose) ? this.onClose() : this.hide()), e.keyCode == it.default.keycodes.f && this.toggleSearch()))
        },
        filterItemClick: function(e) {
            (0, it.default)(e.currentTarget).addClass("active").siblings().removeClass("active"), this.applyFilter()
        },
        canCreatePage: function(e) {
            let t = this.router.me.get("permissions").pages_per_mag;
            return t && e + this.router.mag.pages.length > t ? (Je.isSubscriptionPaused() ? this.router.trigger("notice:show", "unpauseSubscriptionToCreatePage", {
                canBeClosed: !0
            }) : this.showPagesAlert(), !1) : !0
        },
        onAddPageClick: function(e) {
            let o = (0, it.default)(e.currentTarget),
                t = o.closest(".template"),
                r = t.attr("data-id"),
                i = t.attr("data-thumb");
            this.canCreatePage(1) && (et.default.delay(function() {
                this.trigger("add-page", {
                    template: r,
                    specialScreenshot: i
                })
            }.bind(this), 800), t.flashClass("added", 2e3), this.animateAdd(t))
        },
        onPreviewButtonClick: function(e) {
            let o = (0, it.default)(e.currentTarget).attr("data-id"),
                t = et.default.findWhere(this.templatesets, {
                    _id: o
                });
            re(fe.Template, {
                action: "preview",
                zone: this.analyticsZone,
                templateName: t.title,
                templateType: t.categories.map(YC).join(", ")
            })
        },
        onAddMultimpleClick: function(e) {
            let o = (0, it.default)(e.currentTarget),
                t = (0, it.default)(e.currentTarget).attr("data-id"),
                r = et.default.findWhere(this.templatesets, {
                    _id: t
                }),
                i = [];
            !r || !this.canCreatePage(r.templates.length) || (et.default.each(r.templates, function(n) {
                i.push({
                    template: n.page_id,
                    specialScreenshot: n.thumb
                })
            }), i.length === 1 ? this.animateAdd(this.$(".center-panel .template")) : this.animateAdd(), et.default.delay(function() {
                this.trigger("add-multiple", {
                    templates: i,
                    templateName: r.title,
                    templateType: r.categories.map(YC).join(", ")
                })
            }.bind(this), 1500), o.flashClass("added", 2e3))
        },
        onMouseWheel: function(e) {
            e && e.stopPropagation(), e && e.preventDefault()
        },
        animateAdd: function(e) {
            let o, t, r, i = (0, it.default)('<div class="animation-wrapper-v"></div>'),
                n = (0, it.default)('<div class="animation-wrapper-h"></div>').append(i),
                s = (0, it.default)('<div class="animation-wrapper-clip"></div>').append(n),
                l = this.$el.offset(),
                p = this.$el.height(),
                d = 200;
            if (e) o = e.find(".template-image-wrapper"), t = o.clone().detach().addClass("clipped"), r = o.offset(), r.top < l.top && (r.top = l.top + 20), t.css({
                margin: 0
            }), i.append(t), et.default.defer(function() {
                n.css({
                    position: "fixed"
                }), n.addClass("animation-page-flyout-x"), i.addClass("animation-page-flyout-y")
            });
            else {
                r = {
                    left: (0, it.default)(".center-panel .template").offset().left,
                    top: l.top + p / 2 - 87
                };
                let c = [];
                s.css({
                    overflow: "hidden"
                }), et.default.each((0, it.default)(".center-panel .template"), function(m) {
                    let u = (0, it.default)(m).find(".template-image-wrapper");
                    t = u.clone().detach().addClass("clipped stacking"), t.css({
                        margin: 0
                    }), i.prepend(t), Je.applyTransform(t, "translateY(" + (u.offset().top - r.top) + "px)"), c.push(t)
                }), et.default.delay(function() {
                    et.default.each(c, function(m, u) {
                        Je.applyTransform(m, "translateY(" + u * 5 + "px)translateX(-" + u * 5 + "px)")
                    })
                }, 100), et.default.delay(function() {
                    s.css({
                        overflow: "visible"
                    }), n.addClass("animation-page-flyout-x"), i.addClass("animation-page-flyout-y")
                }, 500 + d)
            }(0, it.default)("head").append((0, it.default)(this.templatePageAnimation({
                top1: (l.top - r.top) / 2,
                top2: l.top - r.top - 130,
                top3: l.top - r.top - 70
            }))), n.css({
                left: r.left,
                top: r.top
            }), s.css({
                top: l.top,
                height: p
            }), (0, it.default)("body").append(s), et.default.delay(function() {
                s.remove(), (0, it.default)("#template-center-page-animation").remove()
            }, 1500)
        },
        disableMouseWheel: function() {
            window.document.addEventListener("mousewheel", this.onMouseWheel, {
                passive: !1
            })
        },
        enableMouseWheel: function() {
            window.document.removeEventListener("mousewheel", this.onMouseWheel)
        },
        show: function() {
            this.render(), this.disableMouseWheel(), this.showBlockLayer && (this.$block_layer = RM.constructorRouter.showBlockLayer(et.default.isFunction(this.onClose) ? this.onClose : this.hide, {
                darker: this.overlayDarker,
                transparent: this.overlayTransparent
            })), this.animateAppearance ? (this.$el.removeClass("show-out").addClass("show-in").css("display", "block"), setTimeout(et.default.bind(function() {
                this.$el.removeClass("show-in")
            }, this), 20), setTimeout(et.default.bind(function() {
                this.$el.css("width", "+=1")
            }, this), 300), setTimeout(et.default.bind(function() {
                this.$el.css("width", "-=1")
            }, this), 300)) : this.$el.removeClass("show-out").css("display", "block"), (0, it.default)("body").on("keypress keyup keydown", this.onBodyKey), this.shown = !0
        },
        hide: function(e) {
            e && e.stopPropagation(), this.enableMouseWheel(), this.showBlockLayer && RM.constructorRouter.hideBlockLayer(this.$block_layer), (0, it.default)("body").off("keypress keyup keydown", this.onBodyKey), this.animateAppearance ? (this.$el.addClass("show-out"), setTimeout(et.default.bind(function() {
                this.remove()
            }, this), 200)) : (this.$el.css("display", "none"), this.remove()), Ts(), this.$(".language-wrapper").removeClass("active"), this.shown = !1
        },
        toggle: function() {
            this.shown ? this.hide() : this.show(), this.trigger("toggle")
        }
    }),
    KC = U7;
jc();
Ye();
y();

function G7({
    isShown: e,
    addPageFromTemplate: o,
    onClose: t,
    analyticsZone: r
}) {
    let i = (0, wi.useContext)(me),
        [n, s] = (0, wi.useState)(null),
        l = () => {
            n && n.remove();
            let h = new Sc({
                $parent: document.querySelector("body > .popups"),
                router: window.RM.constructorRouter,
                opts: {
                    type: "type-more-pages",
                    is_contributor: !window.RM.constructorRouter.isOwner,
                    owner_email: i.project.user ? i.project.user.email : ""
                },
                alert_source: "page from rm template"
            });
            h.render(), s(h)
        },
        [p, d] = (0, wi.useState)(null),
        c = (0, wi.useRef)(!1),
        m = h => {
            h.stopPropagation(), t && t()
        },
        u = h => {
            o(h)
        },
        g = h => {
            if (!h.templates || !h.templates.length || c.current) return;
            re(fe.Template, {
                action: "add",
                zone: r,
                templateName: h.templateName,
                templateType: h.templateType
            });
            let b = 0,
                x = () => {
                    o(h.templates[b], i.currentPageNum + b).then(() => {
                        if (++b === h.templates.length) {
                            c.current = !1;
                            return
                        }
                        x()
                    }).catch(() => {
                        c.current = !1
                    })
                };
            c.current = !0, x()
        };
    return (0, wi.useEffect)(() => {
        let h = new KC({
            router: window.RM.constructorRouter,
            pagesAlert: l,
            showBlockLayer: !1,
            analyticsZone: r
        });
        h.on("add-page", u), h.on("add-multiple", g), d(h)
    }, []), (0, wi.useEffect)(() => {
        p && (p.off("add-page"), p.off("add-multiple"), p.on("add-page", u), p.on("add-multiple", g))
    }, [i.currentPageNum, i.pagesParams]), (0, wi.useEffect)(() => {
        p && (e ? p.show() : p.hide())
    }, [e]), e ? ZC.default.createPortal(a(Li, {
        "data-testid": "rm-template-modal-overlay",
        zIndex: 7149,
        backgroundColor: "rgba(0, 0, 0, 0)",
        onClick: m
    }), document.body) : null
}
var JC = G7;
var xi = M(F());
W();
kr();
ar();
Nr();
Fr();
be();
Ai();
Dh();
yh();
He();
te();
Ye();
y();
var j7 = "Template title";

function q7({
    templates: e,
    newTemplateTitle: o,
    createNewUserTemplate: t,
    addPageFromTemplate: r,
    deleteUserTemplate: i,
    hasGlobalWidgets: n,
    analyticsZone: s
}) {
    let [l, p] = (0, xi.useState)(!1), [d, c] = (0, xi.useState)([]), [m, u] = (0, xi.useState)(!1), [g, h] = (0, xi.useState)(!1), [b, x] = (0, xi.useState)(!1), [S, v] = (0, xi.useState)(!1), [P, C] = (0, xi.useState)(!1), k = E => {
        E.preventDefault(), E.stopPropagation(), R()
    }, T = E => {
        E.preventDefault(), E.stopPropagation(), R({
            withGlobalWidgets: !0
        })
    }, R = (E = {}) => {
        if (l) return;
        re(fe.MyTemplates, {
            action: "create template",
            zone: s
        });
        let $ = `pending-${Date.now()}`;
        p(!0), c([{
            id: $,
            pending: !0,
            thumb: ""
        }, ...d]), t(E).then(() => {
            p(!1)
        }).catch(() => {
            p(!1)
        }).finally(() => {
            c(d.filter(G => G.id !== $))
        })
    }, I = (0, xi.useCallback)(E => {
        E.keyCode === 13 && (E.preventDefault(), E.currentTarget.blur())
    }, []), B = (0, xi.useCallback)((E, $) => $ && ux(E, $), []), L = (E, $) => {
        E.preventDefault(), E.stopPropagation(), i($)
    }, D = (E, $, G) => {
        E.preventDefault(), E.stopPropagation(), re(fe.MyTemplates, {
            action: "add template",
            zone: s
        }), r({
            template: $,
            custom: !0,
            specialScreenshot: G
        })
    };
    return a(f, {
        display: "flex",
        width: "100%",
        height: "100%",
        borderRadius: "12px",
        overflowY: "auto",
        children: a(Ft, {
            children: ({
                ref: E
            }) => w(f, {
                display: "flex",
                ref: E,
                width: "100%",
                height: "100%",
                paddingTop: "24px",
                paddingBottom: "24px",
                paddingLeft: "68px",
                paddingRight: "68px",
                flexWrap: "wrap",
                alignContent: "flexStart",
                children: [a(f, {
                    display: "flex",
                    flexDirection: "column",
                    "data-testid": "create-user-template",
                    children: n() ? w(Y, {
                        children: [a(f, {
                            display: "flex",
                            width: 216,
                            height: 141,
                            marginLeft: "12px",
                            marginRight: "12px",
                            position: "relative",
                            justifyContent: "center",
                            alignItems: "center",
                            backgroundColor: "darkGray",
                            borderRadius: "4px",
                            cursor: "pointer",
                            onMouseEnter: () => u(!0),
                            onMouseLeave: () => u(!1),
                            children: a(Y, {
                                children: m ? w(f, {
                                    textAlign: "center",
                                    children: [a(ge, {
                                        "data-testid": "create-user-template-with-global-widgets",
                                        variant: "clean",
                                        width: 184,
                                        borderRadius: 8,
                                        paddingLeft: "2rm",
                                        paddingRight: "2rm",
                                        paddingTop: "16px",
                                        paddingBottom: "16px",
                                        marginTop: "6px",
                                        marginBottom: "6px",
                                        color: "white",
                                        backgroundColor: g ? "blue" : "black",
                                        textStyle: "small",
                                        onMouseEnter: () => h(!0),
                                        onMouseLeave: () => h(!1),
                                        onClick: T,
                                        children: "Include 'On all pages'"
                                    }), a(ge, {
                                        "data-testid": "create-user-template-without-global-widgets",
                                        variant: "clean",
                                        width: 184,
                                        borderRadius: 8,
                                        paddingLeft: "2rm",
                                        paddingRight: "2rm",
                                        paddingTop: "16px",
                                        paddingBottom: "16px",
                                        marginTop: "6px",
                                        marginBottom: "6px",
                                        color: "white",
                                        backgroundColor: b ? "blue" : "black",
                                        textStyle: "small",
                                        onMouseEnter: () => x(!0),
                                        onMouseLeave: () => x(!1),
                                        onClick: k,
                                        children: "Without 'On all pages'"
                                    })]
                                }) : a(Hs, {
                                    color: "black"
                                })
                            })
                        }), a(f, {
                            width: 216,
                            marginLeft: "12px",
                            marginRight: "12px",
                            marginBottom: "8px",
                            marginTop: "6px",
                            padding: "0 0 10px 0",
                            textAlign: "center",
                            color: m ? "white" : "darkGray",
                            whiteSpace: "nowrap",
                            textOverflow: "ellipsis",
                            overflow: "hidden",
                            children: a(A, {
                                textStyle: "small",
                                color: m ? "white" : "darkGray",
                                children: o
                            })
                        })]
                    }) : w(Y, {
                        children: [a(f, {
                            display: "flex",
                            width: 216,
                            height: 141,
                            marginLeft: "12px",
                            marginRight: "12px",
                            position: "relative",
                            justifyContent: "center",
                            alignItems: "center",
                            backgroundColor: "darkGray",
                            borderRadius: "4px",
                            cursor: "pointer",
                            onClick: k,
                            onMouseEnter: () => u(!0),
                            onMouseLeave: () => u(!1),
                            children: a(Hs, {
                                color: m ? "white" : "black"
                            })
                        }), a(f, {
                            width: 216,
                            marginLeft: "12px",
                            marginRight: "12px",
                            marginBottom: "8px",
                            marginTop: "6px",
                            padding: "0 0 10px 0",
                            textAlign: "center",
                            color: m ? "white" : "darkGray",
                            whiteSpace: "nowrap",
                            textOverflow: "ellipsis",
                            overflow: "hidden",
                            children: a(A, {
                                textStyle: "small",
                                color: m ? "white" : "darkGray",
                                children: o
                            })
                        })]
                    })
                }), [...d, ...e].map($ => w(f, {
                    display: "flex",
                    flexDirection: "column",
                    children: [w(f, {
                        display: "flex",
                        "data-testid": "create-page-from-template",
                        width: 216,
                        height: 141,
                        marginLeft: "12px",
                        marginRight: "12px",
                        position: "relative",
                        backgroundColor: "darkGray",
                        borderRadius: "4px",
                        justifyContent: "center",
                        alignItems: "center",
                        cursor: "pointer",
                        backgroundImage: $.thumb ? `url(${$.thumb})` : "none",
                        backgroundPosition: "center center",
                        backgroundRepeat: "no-repeat",
                        backgroundSize: "cover",
                        css: ne `
                    &:hover {
                      .delete-template-button {
                        opacity: 1;
                      }
                    }
                  `,
                        onClick: G => !$.pending && D(G, $.id, $.thumb),
                        children: [$.pending && a(Rt, {
                            bgColor: "transparent"
                        }), !$.pending && a(Ct, {
                            height: 32,
                            width: 32,
                            className: "delete-template-button",
                            color: "white",
                            hoverColor: "white",
                            activeColor: "tomato",
                            outline: !0,
                            position: "absolute",
                            top: "8px",
                            right: "8px",
                            opacity: 0,
                            transition: "opacity 0.15s ease",
                            onMouseEnter: () => v($.id),
                            onMouseLeave: () => {
                                P && C(!1), v(!1)
                            },
                            onMouseDown: () => C($.id),
                            onMouseUp: () => C(!1),
                            onClick: G => L(G, $.id),
                            children: a(Lt, {
                                color: P && P === $.id ? "white" : S && S === $.id ? "tomato" : "black"
                            })
                        })]
                    }, $.id), a(St, {
                        "data-testid": "custom-template-name",
                        marginLeft: "12px",
                        marginRight: "12px",
                        marginBottom: "8px",
                        marginTop: "6px",
                        padding: "0 0 10px 0",
                        width: "auto",
                        type: "text",
                        textStyle: "small",
                        color: "white",
                        spellCheck: !1,
                        placeholder: j7,
                        defaultValue: $.title,
                        disabled: $.pending,
                        onBlur: G => B($.id, G.target.value),
                        onKeyDown: I,
                        textAlign: "center",
                        css: ne `
                    &:focus {
                      border-bottom: none;
                    }
                  `
                    })]
                }, $.id))]
            })
        })
    })
}
var QC = q7;
Ee();
kt();
Ro();
Jt();
y();
var eS = (0, gr.memo)(({
    isPopupShown: e,
    onChangePopupVisibility: o,
    placementStyles: t,
    margin: r,
    bottom: i,
    left: n,
    width: s,
    hoverColor: l,
    hasDeletedPages: p,
    children: d,
    analyticsZone: c
}) => {
    let m = (0, gr.useContext)(Le),
        u = (0, gr.useContext)(me),
        {
            currentPanel: g
        } = (0, gr.useContext)(_t),
        [h, b] = (0, gr.useState)(!1),
        x = (0, gr.useRef)(null),
        S = bu({
            watchingClick: e,
            preventDefault: !0,
            callback: () => {
                o(!1)
            }
        }),
        v = Zt(),
        P = g === "page";
    (0, gr.useEffect)(() => {
        e && (b(!0), u.getUserTemplates().then(() => {
            b(!1)
        }).catch(B => {
            b(!1), B && console.warn(B.message)
        })), (!P || e) && v.modalStatus === "unshowWithTooltip" && li("unshow")
    }, [e, P]);
    let C = (0, gr.useMemo)(() => {
            let B = u.pages.find(L => L._id === u.currentPageId);
            return B && B.title ? B.title : `page ${u.currentPageNum}`
        }, [u.currentPageNum]),
        k = B => {
            e || (B.preventDefault(), B.stopPropagation(), o(!e))
        },
        T = () => {
            o(!1), m.dispatch({
                type: "toggleUserTemplatesModal"
            })
        },
        R = () => {
            o(!1), m.dispatch({
                type: "toggleRmTemplatesModal"
            })
        },
        I = (B, L) => u.addNewPage(L || u.currentPageNum, B);
    return w(Y, {
        children: [a(Bt, {
            text: "Click here to choose a template",
            indent: 8,
            open: v.modalStatus === "unshowWithTooltip" && P && !e,
            componentsProps: {
                tooltip: {
                    backgroundColor: "blue",
                    right: "auto"
                },
                arrow: {
                    left: p ? "auto" : "0px !important",
                    color: "blue"
                }
            },
            disabled: !P,
            closeOnTargetClick: !0,
            children: a(f, {
                position: "relative",
                boxSizing: "border-box",
                zIndex: ra.footerButtons,
                ref: x,
                children: a(ge, {
                    display: "block",
                    "data-testid": "toggle-templates-popup",
                    color: e ? "tomato" : "black",
                    textStyle: "small",
                    onClick: k,
                    boxSizing: "border-box",
                    margin: r || 0,
                    css: ne `
                &:hover {
                  color: ${l||"tomato"};
                  path {
                    fill: ${l||"tomato"};
                  }
                  svg {
                    fill: ${l||"tomato"};
                  }
                }
              `,
                    children: d
                })
            })
        }), a(zm, {
            ref: S,
            width: s || 224,
            height: 168,
            bottom: i,
            left: n,
            isShown: e,
            placement: "bottom",
            placementStyles: t,
            rootElement: x.current,
            children: a(UC, {
                onRmTemplatesClick: R,
                onMyTemplatesClick: T,
                isUserTemplatesLoading: h,
                userTemplatesScreenshot: u.userTemplates.length ? u.userTemplates[0].thumb : void 0
            })
        }), a(qC, {
            width: 880,
            height: 580,
            isShown: m.isUserTemplatesModalShown,
            onClose: () => m.dispatch({
                type: "toggleUserTemplatesModal"
            }),
            isLoading: h,
            children: a(QC, {
                templates: u.userTemplates,
                newTemplateTitle: `Create template from ${C}`,
                createNewUserTemplate: u.createTemplateFromCurrentPage,
                addPageFromTemplate: I,
                deleteUserTemplate: u.deleteUserTemplate,
                hasGlobalWidgets: u.hasGlobalWidgets,
                analyticsZone: c
            })
        }), a(JC, {
            onClose: () => m.dispatch({
                type: "toggleRmTemplatesModal"
            }),
            isShown: m.isRmTemplatesModalShown,
            addPageFromTemplate: I,
            analyticsZone: c
        })]
    })
});
eS.displayName = "AddFromTemplatesButton";
var Nm = eS;
Sr();
W();
Dh();
He();
te();
te();
W();
y();
var Y7 = e => a("svg", {
        fill: "none",
        viewBox: "0 0 16 19",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: w("g", {
            fill: "currentColor",
            children: [a("path", {
                d: "M0 2.972a1 1 0 011-1h14a1 1 0 110 2H1a1 1 0 01-1-1z"
            }), a("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.999.5a.5.5 0 01.5-.5H9.5a.5.5 0 010 1H6.499a.5.5 0 01-.5-.5z"
            }), a("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.405 6.181a.8.8 0 01.912.67l1.58 10.321h6.206l1.58-10.32a.8.8 0 011.582.241l-1.58 10.321a1.6 1.6 0 01-1.582 1.358H4.897a1.6 1.6 0 01-1.581-1.358l-1.58-10.32a.8.8 0 01.67-.913z"
            })]
        })
    }),
    X7 = f.withComponent(N(Y7)
        `
      display: block;
    `),
    Wm = X7;
Ro();
$n();
Ho();
ai();
y();
var tS = ({
        children: e,
        binIcon: o,
        ...t
    }) => {
        let r = (0, ca.useContext)(Le),
            i = (0, ca.useContext)(me),
            {
                isHovered: n,
                ...s
            } = Ze(!1),
            l = () => {
                tt("more-pages")
            },
            p = v => {
                v.preventDefault(), (i.project.has_deleted_pages || r.isTrashOpened) && r.dispatch({
                    type: "toggleTrash"
                })
            },
            [d, c] = (0, ca.useState)(!1),
            [m, u] = (0, ca.useState)(!1),
            g = v => {
                re(fe.EditorActions, {
                    action: "add page"
                }), v.preventDefault(), c(!0), r.dispatch({
                    type: "setAddingPage",
                    inProgress: !0
                }), i.addNewPage(i.currentPageNum).finally(() => {
                    r.dispatch({
                        type: "setAddingPage",
                        inProgress: !1
                    })
                }).catch(P => {
                    P && P.err === "permission_denied" && (i.isSubscriptionPaused() ? window.RM.constructorRouter.trigger("notice:show", "unpauseSubscriptionToCreatePage", {
                        canBeClosed: !0
                    }) : l())
                })
            },
            h = () => {
                c(!1), u(!0)
            },
            [b, x] = (0, ca.useState)(!1),
            S = !i.project.has_deleted_pages && !r.isTrashOpened;
        return w(f, {
            width: "240px",
            height: 95,
            padding: "0 24px",
            position: "relative",
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            backgroundColor: "lightGray",
            ...t,
            children: [a(Bt, {
                indent: 15,
                text: "Add page",
                open: d || b ? !1 : void 0,
                children: a(f, {
                    zIndex: "1",
                    children: a(sn, {
                        permission: "PageCanAddBlank",
                        children: a(Hs, {
                            "data-testid": "add-blank-page",
                            color: m ? "tomato" : "black",
                            cursor: "pointer",
                            onClick: g,
                            onMouseEnter: h,
                            onMouseLeave: () => u(!1)
                        })
                    })
                })
            }, "add-page"), w(f, {
                display: "flex",
                alignItems: "center",
                children: [a(sn, {
                    permission: "PageCanAddFromTemplate",
                    children: a(Nm, {
                        isPopupShown: b,
                        onChangePopupVisibility: x,
                        bottom: "32px",
                        left: "-109px",
                        hasDeletedPages: i.project.has_deleted_pages,
                        placementStyles: "bottom: -8px; left: 129px;",
                        analyticsZone: fd.EditorPages,
                        children: "Templates"
                    })
                }), w(ge, {
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "flex-end",
                    marginTop: "2px",
                    marginLeft: "20px",
                    "data-testid": "toggle-pages-bin",
                    textStyle: "small",
                    position: "relative",
                    onClick: S ? void 0 : p,
                    variant: "unstyled",
                    cursor: S ? "auto" : "pointer",
                    color: S ? "gray" : n ? "tomato" : "black",
                    ...s,
                    children: [a(Wm, {
                        width: "16px",
                        height: "19px",
                        marginBottom: "4px"
                    }), a(K7, {
                        blink: i.pageRecentlyDeleted,
                        position: "absolute",
                        top: "12px",
                        left: "6px",
                        width: "4px",
                        height: "4px",
                        backgroundColor: S ? "gray" : n ? "tomato" : "black"
                    })]
                })]
            })]
        })
    },
    K7 = ({
        blink: e,
        backgroundColor: o,
        ...t
    }) => {
        let r = e ? ne `
        animation: 1.5s blinkAnimation infinite linear;
        @keyframes blinkAnimation {
          from {
            opacity: 1;
          }
          33% {
            opacity: 1;
          }
          34% {
            opacity: 0.8;
          }
          40% {
            opacity: 0;
          }
          60% {
            opacity: 0;
          }
          66% {
            opacity: 0.8;
          }
          67% {
            opacity: 1;
          }
          to {
            opacity: 1;
          }
        }
      ` : void 0;
        return a(f, {
            as: "span",
            width: "6px",
            height: "6px",
            borderRadius: "50%",
            backgroundColor: e ? "tomato" : o || "black",
            css: r,
            ...t
        })
    };
Tt();
te();
Ue();
W();
be();
y();
var Z7 = ({
        pages: e,
        maxPages: o
    }) => {
        if (!o) return null;
        let t = o - e === 1 ? "page" : "pages",
            r = o - e > 0 ? `${o-e} ${t} left on Free plan` : "No more pages left on Free plan";
        return a(f, {
            marginTop: "3rm",
            marginBottom: "10rm",
            children: a(A, {
                color: "gray",
                textStyle: "small",
                children: r
            })
        })
    },
    oS = Z7;
W();
te();
Ic();
y();
var J7 = f.withComponent(N("div")
        `
  display: flex;
  box-sizing: border-box;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 16px;
  height: 16px;
  border-radius: 2.62px;
  border: 1px solid;
  border-color: rgba(162, 162, 162, 0.32);
`),
    Q7 = ({
        direction: e
    }) => {
        let o = () => {
                switch (e) {
                    case "top":
                        return "rotate(-90deg)";
                    case "right":
                        return "rotate(0deg)";
                    case "bottom":
                        return "rotate(90deg)";
                    case "left":
                        return "rotate(180deg)";
                    default:
                        return "rotate(-90deg)"
                }
            },
            t = zi(() => ({
                transform: o(),
                paddingLeft: e === "left" ? "0" : e === "right" ? "1px" : 0,
                paddingBottom: e === "left" || e === "right" ? "1px" : 0,
                paddingTop: e === "left" ? "2px" : 0
            }), [e]);
        return a(J7, {
            marginRight: "1rm",
            children: a("svg", {
                style: t,
                width: "16",
                height: "16",
                viewBox: "0 0 16 16",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg",
                children: a("path", {
                    d: "M12.4165 7.99738C12.4165 8.16595 12.3399 8.32686 12.202 8.45712L9.24826 11.4032C9.11034 11.5334 8.9571 11.5947 8.79619 11.5947C8.45905 11.5947 8.19853 11.3419 8.19853 10.9971C8.19853 10.8362 8.25217 10.6753 8.3671 10.568L8.4245 10.4723L10.6082 8.51075L9.1141 8.61802H3.88093C3.5208 8.61802 3.26794 8.35751 3.26794 7.99738C3.26794 7.63725 3.5208 7.37674 3.88093 7.37674H9.1141L10.6006 7.48401L8.4245 5.52247L8.3671 5.42677C8.25217 5.3195 8.19853 5.15859 8.19853 4.99768C8.19853 4.65288 8.45905 4.40002 8.79619 4.40002C8.9571 4.40002 9.11034 4.46132 9.24826 4.59158L12.202 7.53764C12.3399 7.6679 12.4165 7.82881 12.4165 7.99738Z",
                    fill: "#A2A2A2"
                })
            })
        })
    },
    wp = Q7;
y();
var eR = (0, pa.forwardRef)((e, o) => a(f, {
        ref: o,
        width: "auto",
        height: "2px",
        position: "fixed",
        left: "8px",
        right: "8px",
        zIndex: "1",
        borderRadius: "2px",
        backgroundColor: "gray",
        display: "none",
        ...e
    })),
    rS = ({
        children: e,
        ...o
    }) => {
        let t = (0, pa.useContext)(Le),
            r = (0, pa.useContext)(me),
            i = () => {
                t.dispatch({
                    type: "toggleGridSize"
                })
            },
            {
                project: {
                    opts: {
                        viewertype: n
                    }
                }
            } = r;
        return (0, pa.useEffect)(() => {
            r.renewLastScreenshot()
        }, []), w(f, {
            "aria-label": "Pages menu",
            width: "100%",
            height: "100%",
            borderRadius: "2rm",
            backdropFilter: "blur(4px)",
            backgroundColor: Ie("lightGray", .96),
            boxShadow: `0 0 0 2px inset ${Be(.84,q.gray)}`,
            ...o,
            children: [a(FC, {
                currentPageID: r.currentPageId,
                children: a(WC, {
                    children: a(f, {
                        id: "project-settings-body",
                        position: "relative",
                        width: "100%",
                        backgroundColor: "transparent",
                        height: "calc(100% - 56px)",
                        zIndex: "auto",
                        children: w(Pb, {
                            padding: "16px 16px 0 16px",
                            bottomLine: s => a(eR, {
                                ref: s,
                                bottom: "55px",
                                backgroundColor: Ie("gray", .4)
                            }),
                            children: [w(f, {
                                display: "flex",
                                height: "16px",
                                justifyContent: "space-between",
                                alignItems: "center",
                                children: [w(f, {
                                    display: "flex",
                                    alignItems: "end",
                                    marginTop: -3,
                                    marginLeft: -1,
                                    children: [a(A, {
                                        color: "black",
                                        textStyle: "subheading",
                                        children: "Pages"
                                    }), a(f, {
                                        marginLeft: "2rm",
                                        children: n === "horizontal" ? w(f, {
                                            display: "flex",
                                            flexDirection: "row",
                                            children: [a(wp, {
                                                direction: "left"
                                            }), a(wp, {
                                                direction: "right"
                                            })]
                                        }) : w(f, {
                                            display: "flex",
                                            flexDirection: "row",
                                            children: [a(wp, {
                                                direction: "top"
                                            }), a(wp, {
                                                direction: "bottom"
                                            })]
                                        })
                                    })]
                                }), a(f, {
                                    position: "relative",
                                    marginTop: 3,
                                    children: w(f, {
                                        display: "flex",
                                        width: 28,
                                        onClick: i,
                                        cursor: "pointer",
                                        children: [a(f, {
                                            children: a(Dv, {
                                                color: t.gridSize === 0 ? "black" : "gray"
                                            })
                                        }), a(f, {
                                            marginLeft: "1rm",
                                            children: a(Av, {
                                                color: t.gridSize === 1 ? "black" : "gray"
                                            })
                                        })]
                                    })
                                })]
                            }), a(Sb, {
                                margin: t.gridSize === 0 ? "9px 0 6px -8px" : "10px 0 6px -4px"
                            }), r.isOwner && a(oS, {
                                pages: r.pages.length,
                                maxPages: r.me.plan_limits.pages_per_mag
                            })]
                        })
                    })
                })
            }), a(tS, {
                backgroundColor: "transparent",
                position: "relative",
                width: "100%",
                height: "56px",
                padding: "0 20px 0 16px",
                zIndex: "1",
                borderTop: "1px solid transparent",
                backgroundClip: "padding-box",
                binIcon: a(Wm, {
                    width: "16px",
                    height: "19px",
                    color: "darkGray",
                    marginBottom: "4px"
                })
            })]
        })
    };
var vp = M(F());
be();
W();
Fr();
Ee();
var hn = M(F());
W();
Ee();
te();
y();
var iS = (0, hn.memo)(({
    children: e,
    footerHeight: o,
    footer: t,
    ...r
}) => {
    let i = (0, hn.useContext)(Le),
        n = (0, hn.useContext)(me),
        [s, l] = (0, hn.useState)(!1);
    return (0, hn.useEffect)(() => {
        i.isTrashOpened ? ((i.isPageSettingsOpened || i.isPrivatePagesOpened) && (l(!0), setTimeout(() => {
            i.dispatch({
                type: i.isPageSettingsOpened ? "togglePageSettings" : "togglePrivatePages"
            }), l(!1)
        }, 0)), n.updateTrash()) : s && l(!1), i.isTrashOpened ? document.body.classList.add("trash-is-opened") : document.body.classList.remove("trash-is-opened")
    }, [i.isTrashOpened]), w(f, {
        id: "constructor-pages-bin",
        width: "240px",
        height: "100%",
        paddingTop: 0,
        backdropFilter: "blur(4px)",
        backgroundColor: Ie("black", .96),
        zIndex: s ? go.sidebarZindex + 1 : go.sidebarZindex,
        overflowX: "hidden",
        overflowY: "auto",
        ...r,
        children: [a(f, {
            height: `calc(100% - ${o+(typeof o=="number"?"px":"")})`,
            overflow: "auto",
            children: e
        }), t({
            height: o
        })]
    })
});
iS.displayName = "TrashPanel";
var Vm = iS;
var fn = M(F());
W();
Fr();
be();
Ue();
He();
te();
y();

function tR({
    children: e,
    "data-testid": o,
    width: t,
    onClick: r,
    background: i,
    color: n,
    danger: s,
    dangerOnHover: l,
    ...p
}) {
    let d = s ? q.red : i || q.white,
        c = s ? q.white : n || q.black;
    return a(ge, {
        "data-testid": o,
        width: t || 80,
        height: 32,
        lineHeight: "30px",
        textStyle: "small",
        backgroundColor: d,
        color: c,
        borderRadius: "16px",
        cursor: "pointer",
        border: "1px solid rgba(128, 128, 128, 0.16)",
        ...p,
        transition: "opacity 0.2s ease",
        css: ne `
        &:hover {
          opacity: 0.96;
          background: ${l?q.red:d};
          color: ${l?q.white:c};
        }
      `,
        onClick: r,
        children: e
    })
}
var xp = tR;
Ee();
Ut();
Ho();
var cs = M(F());
W();
te();
be();
Ue();
He();
Ee();
y();
var nS = (0, cs.memo)(({
    isTrashOpen: e,
    emptyTrash: o,
    isOwner: t,
    isEmpty: r,
    dividerColor: i,
    ...n
}) => {
    let s = (0, cs.useContext)(Le),
        [l, p] = (0, cs.useState)(!1),
        d = () => {
            t && !r && p(!0)
        },
        c = u => {
            u === 0 && t && !r && o(), p(!1)
        },
        m = () => {
            s.isTrashOpened && s.dispatch({
                type: "toggleTrash"
            })
        };
    return (0, cs.useEffect)(() => {
        e || p(!1)
    }, [e]), !r || e ? w(f, {
        height: 88,
        paddingLeft: 24,
        paddingRight: 24,
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        position: "relative",
        ...n,
        children: [a(f, {
            left: "2rm",
            right: "2rm",
            height: 2,
            position: "absolute",
            top: -1,
            borderRadius: "2px",
            backgroundColor: i || "gray"
        }), l ? w(f, {
            width: "100%",
            display: "flex",
            justifyContent: "space-between",
            children: [a(f, {
                "data-testid": "empty-bin-cancel",
                width: 80,
                height: 32,
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                backgroundColor: "white",
                borderRadius: "16px",
                cursor: "pointer",
                border: "1px solid rgba(128, 128, 128, 0.16)",
                css: ne `
                &:hover {
                  opacity: 0.96;
                }
              `,
                onClick: () => c(1),
                children: a(A, {
                    textStyle: "small",
                    color: "black",
                    children: "Cancel"
                })
            }), a(f, {
                "data-testid": "empty-bin-confirm",
                width: 80,
                height: 32,
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                backgroundColor: "white",
                borderRadius: "16px",
                cursor: "pointer",
                border: "1px solid rgba(128, 128, 128, 0.16)",
                css: ne `
                &:hover {
                  background-color: ${q.red};
                  opacity: 0.96;
                  & > span {
                    color: ${q.white};
                  }
                }
              `,
                onClick: () => c(0),
                children: a(A, {
                    textStyle: "small",
                    color: "black",
                    children: "Empty"
                })
            })]
        }) : a(oR, {
            isEmpty: r,
            isOwner: t,
            onClick: () => r ? m() : d()
        })]
    }) : null
});

function oR({
    isEmpty: e,
    onClick: o,
    isOwner: t
}) {
    return t ? a(ge, {
        "data-testid": "empty-bin",
        textStyle: "small",
        color: "white",
        onClick: o,
        cursor: "pointer",
        children: e ? "Close" : "Empty bin"
    }) : null
}
nS.displayName = "TrashFooter";
var Um = nS;
y();
var rR = (0, fn.memo)(({
    children: e,
    ...o
}) => {
    let t = (0, fn.useContext)(Le),
        r = (0, fn.useContext)(me),
        i = s => r.restorePage(s),
        n = s => r.deletePagesFromTrash([s]);
    return a(Vm, {
        footerHeight: "88px",
        ...o,
        footer: ({
            height: s
        }) => a(Um, {
            isTrashOpen: t.isTrashOpened,
            isOwner: r.isOwner,
            isEmpty: !r.trashPages.length,
            emptyTrash: r.emptyTrash,
            height: s
        }),
        children: a(Ft, {
            children: ({
                ref: s
            }) => w(f, {
                ref: s,
                paddingLeft: 22,
                paddingRight: 22,
                paddingTop: 28,
                children: [a(f, {
                    height: 48,
                    display: "flex",
                    alignItems: "center",
                    marginBottom: 16,
                    children: a(A, {
                        color: "white",
                        textStyle: "subheading",
                        textAlign: "left",
                        children: "Deleted pages"
                    })
                }), r.trashPages.map(l => a(Gm, {
                    page: l,
                    margin: "0 0 12px 2px",
                    isOwner: r.isOwner,
                    onRestorePage: i,
                    onDeletePage: n
                }, l._id))]
            })
        })
    })
});
rR.displayName = "Trash";
var Gm = (0, fn.memo)(({
    page: e,
    isOwner: o,
    onRestorePage: t,
    onDeletePage: r,
    ...i
}) => {
    let {
        isHovered: n,
        ...s
    } = Ze(!1), [l, p] = (0, fn.useState)(!1), {
        viewport: d
    } = (0, fn.useContext)(je), c = h => {
        h.preventDefault(), t(e._id)
    }, m = h => {
        h.preventDefault(), o && r(e._id)
    }, u = h => {
        h.preventDefault(), p(!0)
    }, g = h => {
        h.preventDefault(), p(!1)
    };
    return w(f, {
        "data-pageid": e._id,
        ...i,
        children: [w(f, {
            width: 192,
            height: 124,
            backgroundColor: "darkGray",
            borderRadius: "4px",
            position: "relative",
            ...s,
            children: [a(Un, {
                desktopUrl: e.screenshot,
                phonePortraitUrl: e.viewport_phone_portrait ? .screenshot,
                tabletPortraitUrl: e.viewport_tablet_portrait ? .screenshot,
                phoneViewportEnabled: e.viewport_phone_portrait ? .enabled,
                tabletViewportEnabled: e.viewport_tablet_portrait ? .enabled,
                viewport: d
            }), w(f, {
                width: 176,
                height: 32,
                display: "flex",
                justifyContent: o ? "space-between" : "center",
                position: "absolute",
                left: 8,
                bottom: 8,
                opacity: n ? 1 : 0,
                transition: "opacity 200ms ease",
                children: [l ? a(xp, {
                    "data-testid": "confirm-bin-action",
                    danger: !0,
                    onClick: m,
                    children: "Yes"
                }) : a(xp, {
                    "data-testid": "restore-page",
                    onClick: c,
                    children: "Restore"
                }), l ? a(xp, {
                    "data-testid": "deny-bin-action",
                    onClick: g,
                    children: "Cancel"
                }) : a(Y, {
                    children: o && a(xp, {
                        "data-testid": "delete-page-from-bin",
                        dangerOnHover: !0,
                        onClick: u,
                        children: "Delete"
                    })
                })]
            })]
        }), a(f, {
            marginTop: "7px",
            children: a(A, {
                textStyle: "small",
                color: "white",
                children: e.title ? e.title : "Page Title"
            })
        })]
    })
});
Gm.displayName = "TrashPage";
y();
var sS = (0, vp.memo)(({
    children: e,
    ...o
}) => {
    let t = (0, vp.useContext)(me),
        r = (0, vp.useContext)(Le),
        i = s => t.restorePage(s),
        n = s => t.deletePagesFromTrash([s]);
    return a(Vm, {
        footerHeight: "56px",
        borderRadius: "2rm",
        ...o,
        footer: ({
            height: s
        }) => a(Um, {
            isTrashOpen: r.isTrashOpened,
            isOwner: t.isOwner,
            isEmpty: !t.trashPages.length,
            emptyTrash: t.emptyTrash,
            dividerColor: "rgba(128, 128, 128, 0.4)",
            height: s
        }),
        children: a(Ft, {
            children: ({
                ref: s
            }) => w(f, {
                ref: s,
                padding: "16px 16px 0 16px",
                children: [a(f, {
                    display: "flex",
                    alignItems: "center",
                    height: "16px",
                    marginBottom: "16px",
                    children: a(A, {
                        display: "block",
                        color: "white",
                        textStyle: "subheading",
                        textAlign: "left",
                        children: "Deleted pages"
                    })
                }), t.trashPages.map(l => a(Gm, {
                    page: l,
                    margin: "0 0 12px 0",
                    isOwner: t.isOwner,
                    onRestorePage: i,
                    onDeletePage: n
                }, l._id))]
            })
        })
    })
});
sS.displayName = "Trash";
var aS = sS;
var ps = M(F());
W();
Ee();
te();
y();
var lS = (0, ps.memo)(({
    children: e,
    footerHeight: o,
    footer: t,
    backgroundColor: r,
    ...i
}) => {
    let n = (0, ps.useContext)(Le),
        [s, l] = (0, ps.useState)(!1);
    return (0, ps.useEffect)(() => {
        n.isPageSettingsOpened ? (n.isTrashOpened || n.isPrivatePagesOpened) && (l(!0), setTimeout(() => {
            n.dispatch({
                type: n.isTrashOpened ? "toggleTrash" : "togglePrivatePages"
            }), l(!1)
        }, 0)) : s && l(!1), n.isPageSettingsOpened ? document.body.classList.add("page-settings-is-opened") : document.body.classList.remove("page-settings-is-opened")
    }, [n.isPageSettingsOpened]), w(f, {
        id: "constructor-page-settings",
        height: "100%",
        width: 240,
        padding: 0,
        backdropFilter: "blur(4px)",
        backgroundColor: Ie("black", .96),
        overflow: "hidden",
        zIndex: s ? go.sidebarZindex + 1 : go.sidebarZindex,
        ...i,
        children: [a(f, {
            width: "100%",
            height: `calc(100% - ${o+(typeof o=="number"?"px":"")})`,
            children: e
        }), t({
            height: o
        })]
    })
});
lS.displayName = "PageSettingsPanel";
var cS = lS;
var bn = M(F());
Gs();
Cd();
var oo = M(F());
W();
be();
Ue();
W();
y();
var Nl = ({
    children: e,
    divider: o,
    dividerColor: t,
    "data-testid": r,
    onMouseEnter: i,
    onMouseLeave: n,
    onClick: s,
    ...l
}) => w(f, {
    position: "relative",
    width: "100%",
    display: "flex",
    alignItems: "center",
    height: 48,
    padding: "0 16px",
    borderBottom: "2px solid transparent",
    cursor: "pointer",
    "data-testid": r,
    userSelect: "none",
    onMouseEnter: i,
    onMouseLeave: n,
    onClick: s,
    ...l,
    children: [o && a(f, {
        height: "2px",
        position: "absolute",
        top: "-1px",
        left: "8px",
        right: "8px",
        borderRadius: "2px",
        backgroundColor: t || "gray"
    }), e]
});
Ee();
ut();
y();
var pS = ({
        isActive: e,
        onClick: o,
        children: t,
        ...r
    }) => {
        let [i, n] = (0, oo.useState)(!1);
        return a(Nl, {
            "data-testid": "page-main-settings",
            padding: "0 24px",
            onMouseEnter: () => n(!0),
            onMouseLeave: () => n(!1),
            onClick: o,
            ...r,
            children: a(A, {
                textStyle: "subheading",
                color: !e && i ? "tomato" : "white",
                children: "Page Settings"
            })
        })
    },
    dS = (0, oo.forwardRef)(({
        currentPage: e,
        ...o
    }, t) => {
        let r = (0, oo.useContext)(me),
            i = (0, oo.useMemo)(() => r.pagesParams[e._id] ? r.pagesParams[e._id].viewNum.toString() : "", [e._id, r.pagesParams[e._id]]),
            n = (0, oo.useRef)(null),
            s = (0, oo.useRef)(null),
            l = (0, oo.useCallback)(b => {
                b !== e.uri && e._id && r.pageSave(e._id, {
                    uri: b
                }, {
                    patch: !0
                })
            }, [e._id]),
            p = (0, oo.useCallback)(b => e._id && r.validatePageUri(e._id, b), [e._id]),
            d = (0, oo.useCallback)(b => {
                b && (n.current = b)
            }, [e._id]),
            c = (0, oo.useCallback)(b => b.replace(/[^A-Za-z0-9_.+-]/g, ""), []),
            m = (0, oo.useMemo)(() => `${ae.readymag_viewer_host}/${r.project.user.uri}/${r.project.uri}/`, [r.project.uri, r.project.user.uri]),
            u = (0, oo.useMemo)(() => `${m}num/${e.num_id}/`, [m, e.num_id]),
            g = (0, oo.useMemo)(() => fi(r.project), [r.project.is_published, r.project.changed]),
            h = (0, oo.useMemo)(() => mm(r.project), [r.project.domain, r.project.user.domain, r.project.user.uri]);
        return w(f, {
            ref: t,
            ...o,
            children: [w(f, {
                marginTop: "10px",
                children: [w(f, {
                    width: "100%",
                    color: "white",
                    whiteSpace: "nowrap",
                    textOverflow: "ellipsis",
                    overflow: "hidden",
                    children: [a(A, {
                        as: "label",
                        htmlFor: "page-seo-description",
                        textStyle: "small",
                        children: "URL"
                    }), a(f, {
                        marginTop: "2px",
                        children: a(A, {
                            as: "label",
                            htmlFor: "page-link",
                            title: h,
                            textStyle: "small",
                            children: h
                        })
                    })]
                }), w(f, {
                    display: "flex",
                    flexWrap: "nowrap",
                    marginTop: "4px",
                    ref: s,
                    children: [a(f, {
                        maxWidth: "50%",
                        color: "white",
                        whiteSpace: "nowrap",
                        textOverflow: "ellipsis",
                        overflow: "hidden",
                        children: w(A, {
                            fontSize: "16px",
                            children: [r.project.domain ? "" : r.project.uri, e.parentPage && r.pagesParams[e.parentPage] ? `/${r.pagesParams[e.parentPage].uri}` : null]
                        })
                    }), a(Al, {
                        setInputRef: d,
                        validationMessageAnchor: s.current,
                        validationMessageContainer: document.body,
                        name: "page-link",
                        color: "white",
                        textStyle: "regular",
                        placeholder: i,
                        inactiveColor: q.darkGray,
                        link: e && e.uri ? e.uri : "",
                        validationMessageZIndex: go.popupZindex,
                        validate: p,
                        filter: c,
                        onDone: l,
                        maxWidth: "50%",
                        withSlash: !0
                    }, e._id)]
                })]
            }), g !== "unpublished" && a(mp, {
                link: u,
                margin: "12px 0 0 0",
                color: "white",
                borderColor: "darkGray"
            })]
        })
    });
dS.displayName = "MainSettings";
var uS = (0, oo.memo)(dS);
var no = M(F());
W();
be();
wu();
Ue();
Nx();
te();
He();
var Wl = N(Ge)
`
  width: 100%;
  height: 40px;
  border: solid 1px ${({theme:e})=>e.colors.darkGray};
  border-radius: 8px;
`;
Ee();
Sr();
te();
ai();
He();
Kt();
Hx();
ar();
rr();
LI();
OI();
J6();
y();
var mS = 70,
    gS = ({
        isActive: e,
        dividerColor: o,
        onClick: t,
        children: r,
        ...i
    }) => {
        let [n, s] = (0, no.useState)(!1);
        return a(Nl, {
            divider: !0,
            dividerColor: o || "darkGray",
            "data-testid": "page-seo-settings",
            padding: "0 24px",
            onMouseEnter: () => s(!0),
            onMouseLeave: () => s(!1),
            onClick: t,
            ...i,
            children: a(A, {
                textStyle: "subheading",
                color: !e && n ? "tomato" : "white",
                children: "SEO"
            })
        })
    },
    hS = (0, no.forwardRef)(({
        currentPage: e,
        ...o
    }, t) => {
        let r = (0, no.useContext)(me),
            [i, n] = (0, no.useState)(e && e._id ? e._id : null),
            s = (0, no.useRef)({}),
            l = (0, no.useRef)(null),
            [p, d] = (0, no.useState)(!1),
            c = () => {
                tt("custom-seo")
            },
            m = (0, no.useMemo)(() => !!window.RM.constructorRouter.me && !!(window.RM.constructorRouter.me.get("permissions") || {}).custom_seo, [window.RM.constructorRouter.me]),
            u = () => {
                let $ = r.project.domain || r.project.user && r.project.user.domain;
                return Vd.getDefaultSEO(e, r.project, {
                    customDomain: !!$
                })
            },
            g = $ => {
                $.preventDefault(), r.isSubscriptionPaused() ? window ? .RM ? .constructorRouter ? .trigger("notice:show", "unpauseSubscriptionToCustomizeSeo", {
                    canBeClosed: !0
                }) : c()
            },
            h = () => {
                let $ = {
                    title: "",
                    description: "",
                    keywords: ""
                };
                return e.seo && ($ = { ...$,
                    ...e.seo
                }), $
            },
            b = () => {
                let $ = u();
                return {
                    title: r.project.title || $.title || "",
                    description: r.project.description || "What\u2019s it about\u2026",
                    keywords: "e.g. fashion, photo"
                }
            },
            [x, S] = (0, no.useState)(() => h()),
            [v, P] = (0, no.useState)(() => b()),
            [C, k] = (0, no.useState)();
        (0, no.useEffect)(() => {
            l.current && l.current === document.activeElement && l.current.blur(), Object.keys(s.current).forEach($ => {
                let G = s.current[$];
                G && G === document.activeElement && G.blur && G.blur()
            }), P(b()), S(h()), n(e && e._id ? e._id : null)
        }, [e._id]), (0, no.useEffect)(() => {
            P(b())
        }, [r.project.title, r.project.description]);
        let T = $ => {
                let G = $.target,
                    de = G.dataset.name;
                de && x[de] !== void 0 && S(Q => ({ ...Q,
                    [de]: G.value
                }))
            },
            R = () => {
                let $ = i && r.pageSave(i, {
                    seo: x
                }, {
                    patch: !0
                });
                $ && !($ instanceof Error) && $.done(() => {}).fail(() => {})
            };

        function I() {
            return r.projectMag.getPage(e._id).widgets.filter(U => U.attributes.type === "text").map(U => Ox(U)).map(U => `<p>${U}</p>`).reduce((U, Z) => U + Z, "")
        }
        async function B() {
            let $ = I();
            if (!($.length < mS)) {
                d(!0);
                try {
                    let G = await Yy($),
                        {
                            title: de,
                            description: Q,
                            keywords: U
                        } = G;
                    de && Q && U && (C || k(x), S({
                        title: de,
                        description: Q,
                        keywords: U
                    }), i && r.pageSave(i, {
                        seo: {
                            title: de,
                            description: Q,
                            keywords: U
                        }
                    }, {
                        patch: !0
                    }))
                } catch (G) {
                    console.error("Error generating SEO tags:", G)
                } finally {
                    d(!1)
                }
            }
        }

        function L() {
            C && (S(C), i && r.pageSave(i, {
                seo: C
            }, {
                patch: !0
            }), k(void 0))
        }
        let D = p,
            E = Ve("constructor.ai") && I() ? .length >= mS;
        return w(f, {
            ref: t,
            ...o,
            children: [E && w(f, {
                display: "flex",
                flexDirection: "row",
                gap: 4,
                children: [C && a(ge, {
                    variant: "clean",
                    as: "div",
                    minWidth: 34,
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    border: "1px white solid",
                    borderRadius: 8,
                    onClick: L,
                    children: a(Rv, {
                        color: "white",
                        width: 24,
                        height: 24
                    })
                }), a(ge, {
                    variant: "clean",
                    as: "div",
                    minHeight: 34,
                    width: "100%",
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    border: "1px white solid",
                    borderRadius: 8,
                    disabled: D,
                    opacity: D ? .7 : 1,
                    onClick: B,
                    children: p ? a(Rt, {
                        bgColor: "transparent",
                        size: 24
                    }) : w(Y, {
                        children: [a(A, {
                            color: "white",
                            children: "Fill with AI"
                        }), a(qy, {
                            color: "white"
                        })]
                    })
                })]
            }), w(f, {
                marginTop: "12px",
                children: [a(A, {
                    as: "label",
                    htmlFor: "page-seo-title",
                    color: m ? q.white : q.darkGray,
                    textStyle: "small",
                    children: "Title"
                }), a(Pr, {
                    ref: $ => s.current["page-seo-title"] = $,
                    name: "page-seo-title",
                    "data-name": "title",
                    color: "white",
                    placeholder: v.title,
                    translate: "no",
                    autoComplete: "off",
                    autoCorrect: "off",
                    maxLength: 128,
                    rows: 1,
                    autoSize: !0,
                    marginTop: "4px",
                    disabled: !m,
                    value: x.title,
                    onChange: T,
                    onBlur: R,
                    css: ne `
              &::placeholder {
                color: ${q.darkGray};
              }
              &:disabled {
                color: ${q.darkGray};
              }
            `
                })]
            }), w(f, {
                marginTop: "22px",
                children: [a(A, {
                    as: "label",
                    htmlFor: "page-seo-description",
                    color: m ? q.white : q.darkGray,
                    textStyle: "small",
                    children: "Description"
                }), a(Pr, {
                    ref: $ => s.current["page-seo-description"] = $,
                    name: "page-seo-description",
                    "data-name": "description",
                    color: "white",
                    placeholder: v.description,
                    translate: "no",
                    autoComplete: "off",
                    autoCorrect: "off",
                    maxLength: 2048,
                    rows: 1,
                    autoSize: !0,
                    marginTop: "4px",
                    disabled: !m,
                    value: x.description,
                    onChange: T,
                    onBlur: R,
                    css: ne `
              &::placeholder {
                color: ${q.darkGray};
              }
              &:disabled {
                color: ${q.darkGray};
              }
            `
                })]
            }), w(f, {
                marginTop: "22px",
                children: [a(A, {
                    as: "label",
                    htmlFor: "page-seo-keywords",
                    textStyle: "small",
                    color: m ? q.white : q.darkGray,
                    children: "Keywords"
                }), a(Pr, {
                    ref: $ => s.current["page-seo-keywords"] = $,
                    name: "page-seo-keywords",
                    "data-name": "keywords",
                    color: "white",
                    placeholder: v.keywords,
                    translate: "no",
                    spellCheck: !1,
                    autoComplete: "off",
                    autoCorrect: "off",
                    rows: 1,
                    autoSize: !0,
                    marginTop: "4px",
                    disabled: !m,
                    value: x.keywords,
                    onChange: T,
                    onBlur: R,
                    css: ne `
              &::placeholder {
                color: ${q.darkGray};
              }
              &:disabled {
                color: ${q.darkGray};
              }
            `
                })]
            }), a(Wl, {
                textStyle: "small",
                color: "white",
                marginTop: 24,
                display: m ? "none" : "block",
                onClick: g,
                children: "Customize"
            })]
        })
    });
hS.displayName = "SeoSettings";
var fS = (0, no.memo)(hS);
var Dt = M(F());
W();
be();
qc();
wu();
Z6();
Ue();
Bv();
Nr();
Ai();
pi();
Nx();
Ee();
Sr();
Kc();
ut();
te();
ai();
mh();
y();
var bS = ({
        isActive: e,
        dividerColor: o,
        onClick: t,
        children: r,
        ...i
    }) => {
        let [n, s] = (0, Dt.useState)(!1);
        return a(Nl, {
            divider: !0,
            "data-testid": "page-social-settings",
            dividerColor: o || "darkGray",
            padding: "0 24px",
            onMouseEnter: () => s(!0),
            onMouseLeave: () => s(!1),
            onClick: t,
            ...i,
            children: a(A, {
                textStyle: "subheading",
                color: !e && n ? "tomato" : "white",
                children: "Social sharing"
            })
        })
    },
    Mb = e => {
        if (e.custom_shares) {
            let o = { ...e.custom_shares
            };
            if (!o.image) {
                let t = D0(512),
                    r = e.screenshot ? Oa(e.screenshot, t) : "";
                o.image = r
            }
            return o
        }
        return {
            description: "",
            title: "",
            tweet: "",
            image: ""
        }
    },
    wS = (0, Dt.forwardRef)(({
        currentPage: e,
        ...o
    }, t) => {
        let r = (0, Dt.useContext)(me),
            i = (0, Dt.useContext)(Le),
            n = () => {
                tt("custom-sharing")
            },
            s = (0, Dt.useMemo)(() => !!window.RM.constructorRouter.me && !!(window.RM.constructorRouter.me.get("permissions") || {}).custom_sharing, [window.RM.constructorRouter.me]),
            [l, p] = (0, Dt.useState)(() => r.project.master_share_pid || null),
            d = () => l ? l === e._id ? "custom" : "inherited" : e.custom_shares ? "custom" : "default",
            [c, m] = (0, Dt.useState)(d()),
            u = (0, Dt.useMemo)(() => !s || c === "inherited", [c, s]),
            g = () => {
                let ue = r.project.domain || r.project.user && r.project.user.domain;
                return Vd.getDefaultShare(e, r.project, {
                    customDomain: !!ue
                })
            },
            h = () => {
                if (l) {
                    if (l === e._id) return Mb(e); {
                        let ue = r.pages.find(ke => ke._id === l);
                        if (ue) return Mb(ue)
                    }
                } else if (e.custom_shares) return Mb(e);
                return g()
            },
            [b, x] = (0, Dt.useState)(() => h());
        (0, Dt.useEffect)(() => (x(h()), m(d()), () => {
            x(null), m("default")
        }), [e._id]);
        let S = ue => r.pageSave(e._id, {
                custom_shares: ue || b
            }, {
                patch: !0
            }),
            [v, P] = (0, Dt.useState)(!1),
            [C, k] = (0, Dt.useState)(!1),
            [T, R] = (0, Dt.useState)(!1),
            I = (0, Dt.useMemo)(() => {
                if (b ? .image) {
                    let ue = A0(b.image);
                    return e.screenshot !== ue
                } else return !1
            }, [b, e.screenshot]),
            [B, L] = (0, Dt.useState)(!1),
            [D, E] = (0, Dt.useState)(!1),
            [$, G] = (0, Dt.useState)(!1),
            [de, Q] = (0, Dt.useState)(!1),
            U = async ue => {
                if (R(!1), ue.size > ae.UPLOAD_IMAGE_SIZE_LIMIT) {
                    window.alert(ae.MSG_UPLOAD_IMAGE_SIZE_ERROR);
                    return
                }
                if (!C) {
                    k(!0);
                    try {
                        let ke = await Vn("share-upload", ue);
                        if (ke && ke.picture && ke.picture.url && b) {
                            let ie = { ...b,
                                    image: ke.picture.url
                                },
                                _e = S(ie);
                            _e && !(_e instanceof Error) && _e.then(() => {
                                x(Ce => ({ ...Ce,
                                    ...ie
                                })), c === "default" && m("custom")
                            }).always(() => {
                                k(!1)
                            })
                        }
                    } catch {
                        k(!1)
                    }
                }
            },
            Z = async ue => {
                ue.preventDefault();
                let ke = g(),
                    ie = { ...b,
                        image: ke.image
                    },
                    _e = S(ie);
                _e && !(_e instanceof Error) && _e.done(() => x(Ce => ({ ...Ce,
                    ...ie
                })))
            },
            xe = ue => {
                let ke = ue.target,
                    ie = ke.getAttribute("name");
                ie && b && b[ie] !== void 0 && x(_e => ({ ..._e,
                    [ie]: ke.value
                }))
            },
            ye = () => {
                if (b && !u) {
                    let ue = S();
                    ue && !(ue instanceof Error) && ue.done(() => {
                        c === "default" && m("custom")
                    }).fail(() => {})
                }
            },
            ve = (0, Dt.useMemo)(() => !!(e && l && e._id === l), [e._id, l]),
            ee = () => (0, Dt.useMemo)(() => !l || ve, [ve, l]),
            oe = ue => {
                if (!i.masterSharePidIsChanging)
                    if (i.dispatch({
                            type: "toggleMasterSharePidChanging"
                        }), ue) {
                        p(e._id);
                        let ke = r.projectSave({
                            master_share_pid: e._id
                        }, {
                            patch: !0
                        });
                        if (ke && ke.always(() => {
                                i.dispatch({
                                    type: "toggleMasterSharePidChanging"
                                })
                            }), !e.custom_shares) {
                            let ie = g(),
                                _e = r.pageSave(e._id, {
                                    custom_shares: ie
                                }, {
                                    patch: !0
                                });
                            _e && !(_e instanceof Error) && _e.done(() => {
                                x(ie), m("custom")
                            })
                        }
                    } else {
                        p(null), r.projectUnset("master_share_pid");
                        let ke = r.projectSave({});
                        ke && ke.always(() => {
                            i.dispatch({
                                type: "toggleMasterSharePidChanging"
                            })
                        })
                    }
            },
            H = () => {
                r.pageSet(e._id, {
                    custom_shares: null
                });
                let ue = r.pageSave(e._id, {
                    custom_shares: null
                }, {
                    patch: !0
                });
                ue && !(ue instanceof Error) && ue.done(() => {
                    x(g()), m("default")
                }).fail(() => {})
            },
            se = ue => {
                if (ue.preventDefault(), !i.masterSharePidIsChanging)
                    if (l) {
                        i.dispatch({
                            type: "toggleMasterSharePidChanging"
                        }), r.projectUnset("master_share_pid");
                        let ke = r.projectSave({});
                        ke && !(ke instanceof Error) && ke.done(() => {
                            p(null), H()
                        }).always(() => {
                            i.dispatch({
                                type: "toggleMasterSharePidChanging"
                            })
                        })
                    } else H()
            },
            he = ue => {
                ue.preventDefault();
                let ke = l ? r.pages.find(ie => ie._id === l) : null;
                l && ke && window.RM.constructorRouter.showWorkspace({
                    id: l
                })
            },
            le = ue => {
                ue.preventDefault(), r.isSubscriptionPaused() ? window ? .RM ? .constructorRouter ? .trigger("notice:show", "unpauseSubscriptionToCustomizeSharing", {
                    canBeClosed: !0
                }) : n()
            };
        return w(f, {
            ref: t,
            ...o,
            paddingBottom: 24,
            children: [w(f, {
                marginTop: "10px",
                position: "relative",
                children: [a(A, {
                    color: "white",
                    textStyle: "small",
                    children: "OpenGraph"
                }), a(f, {
                    position: "absolute",
                    right: 0,
                    top: 5,
                    css: ne `
              &:hover {
                & svg {
                  color: ${q.red};
                }
              }
            `,
                    children: a("a", {
                        href: "https://help.readymag.com/hc/en-us/articles/360020844431-Sharing",
                        target: "_blank",
                        rel: "noopener noreferrer",
                        children: a(Mv, {
                            color: "darkGray"
                        })
                    })
                })]
            }), a(f, {
                width: 192,
                height: 104,
                marginTop: "12px",
                position: "relative",
                opacity: T ? .8 : 1,
                onDragEnter: () => {
                    T || R(!0)
                },
                onDragLeave: () => {
                    T && R(!1)
                },
                onMouseEnter: () => P(!0),
                onMouseLeave: () => P(!1),
                children: a(Oi, {
                    accept: "image/*",
                    dropFile: !0,
                    readFileData: !1,
                    onChange: U,
                    disabled: u,
                    children: w(Y, {
                        children: [a(f, {
                            width: 192,
                            height: 104,
                            backgroundColor: "darkGrey",
                            borderRadius: "4px",
                            position: "relative",
                            cursor: s && !u ? "pointer" : "default",
                            boxShadow: "0 1px 1px rgba(64, 64, 64, 0.32)",
                            children: a(f, {
                                display: "flex",
                                width: "100%",
                                height: "100%",
                                borderRadius: "4px",
                                backgroundImage: b && b.image ? `url(${b.image})` : "none",
                                backgroundSize: "cover",
                                backgroundPosition: "center",
                                backgroundRepeat: "no-repeat"
                            })
                        }), (v || C) && !T && a(f, {
                            display: "flex",
                            width: 96,
                            height: 32,
                            position: "absolute",
                            left: 0,
                            right: 0,
                            bottom: 8,
                            margin: "auto",
                            justifyContent: "space-around",
                            cursor: "default",
                            children: !u && w(Y, {
                                children: [a(f, {
                                    display: "flex",
                                    width: 32,
                                    height: 32,
                                    justifyContent: "center",
                                    alignItems: "center",
                                    onMouseEnter: () => L(!0),
                                    onMouseLeave: () => L(!1),
                                    onMouseDown: () => E(!0),
                                    onMouseUp: () => E(!1),
                                    backgroundColor: D ? "tomato" : "white",
                                    borderRadius: "50%",
                                    cursor: C ? "default" : "pointer",
                                    boxShadow: "0 0 0 1px rgba(128, 128, 128, 0.16)",
                                    css: ne `
                          animation: ${C?"loadingindicatoranimation":"none"} 2s infinite linear;
                          @keyframes loadingindicatoranimation {
                            from {
                              transform: rotateZ(0deg);
                            }
                            to {
                              transform: rotateZ(360deg);
                            }
                          }
                        `,
                                    children: a(Zd, {
                                        color: D ? "white" : B && !C ? "tomato" : "black"
                                    })
                                }), I && !C && a(Ct, {
                                    height: 32,
                                    width: 32,
                                    color: "white",
                                    hoverColor: "white",
                                    activeColor: "tomato",
                                    outline: !0,
                                    onMouseEnter: () => G(!0),
                                    onMouseLeave: () => G(!1),
                                    onMouseDown: () => Q(!0),
                                    onMouseUp: () => Q(!1),
                                    onClick: Z,
                                    disabled: C,
                                    children: a(Lt, {
                                        color: de ? "white" : $ ? "tomato" : "black"
                                    })
                                })]
                            })
                        })]
                    })
                })
            }), a(f, {
                marginTop: "4px",
                children: a(Pr, {
                    name: "title",
                    placeholder: "Title",
                    translate: "no",
                    autoComplete: "off",
                    autoCorrect: "off",
                    maxLength: 128,
                    rows: 1,
                    autoSize: !0,
                    color: "white",
                    textStyle: "regular",
                    disabled: u,
                    value: b ? .title,
                    onChange: xe,
                    onBlur: ye,
                    css: ne `
              &::placeholder {
                color: ${q.darkGray};
              }
              &:disabled {
                color: ${q.darkGray};
              }
            `
                })
            }), a(f, {
                children: a(Pr, {
                    name: "description",
                    placeholder: "Description",
                    translate: "no",
                    autoComplete: "off",
                    autoCorrect: "off",
                    maxLength: 2048,
                    autoSize: !0,
                    rows: 1,
                    color: "white",
                    textStyle: "small",
                    disabled: u,
                    value: b ? .description,
                    onChange: xe,
                    onBlur: ye,
                    css: ne `
              &::placeholder {
                color: ${q.darkGray};
              }
              &:disabled {
                color: ${q.darkGray};
              }
            `
                })
            }), w(f, {
                marginTop: "22px",
                children: [a(A, {
                    as: "label",
                    textStyle: "small",
                    htmlFor: "share-tweet",
                    color: "white",
                    children: "Tweet message"
                }), a(Pr, {
                    name: "tweet",
                    translate: "no",
                    autoComplete: "off",
                    autoCorrect: "off",
                    maxLength: 116,
                    rows: 1,
                    autoSize: !0,
                    marginTop: "4px",
                    color: "white",
                    textStyle: "regular",
                    disabled: u,
                    value: b ? .tweet,
                    onChange: xe,
                    onBlur: ye,
                    css: ne `
              &::placeholder {
                color: ${q.darkGray};
              }
              &:disabled {
                color: ${q.darkGray};
              }
            `
                })]
            }), w(f, {
                display: "flex",
                marginTop: "22px",
                alignItems: "center",
                justifyContent: "space-between",
                children: [a(f, {
                    width: "128px",
                    children: a(A, {
                        as: "label",
                        textStyle: "small",
                        htmlFor: "all-pages",
                        color: "white",
                        children: "Use these sharing settings for all pages"
                    })
                }), a(Nt, {
                    name: "all-pages",
                    disabled: u || !ee,
                    checked: ve,
                    onChange: oe
                })]
            }), w(f, {
                display: "flex",
                marginTop: "2px",
                children: [a(Wl, {
                    textStyle: "small",
                    color: "white",
                    marginTop: "24px",
                    display: s ? "none" : "block",
                    onClick: le,
                    children: "Customize"
                }), a(Wl, {
                    textStyle: "small",
                    color: "white",
                    marginTop: "24px",
                    display: s && c === "custom" ? "block" : "none",
                    onClick: se,
                    children: "Restore to defaults"
                }), a(Wl, {
                    textStyle: "small",
                    color: "white",
                    marginTop: "24px",
                    display: s && c === "inherited" ? "block" : "none",
                    onClick: he,
                    children: "Go to master page"
                })]
            })]
        })
    });
wS.displayName = "SocialSettings";
var xS = (0, Dt.memo)(wS);
Ee();
y();
var iR = ({
        padding: e,
        dividerColor: o
    }) => {
        let t = (0, bn.useContext)(Le),
            r = (0, bn.useContext)(me),
            [i, n] = (0, bn.useState)(0),
            [s, l] = (0, bn.useState)(null);
        return (0, bn.useEffect)(() => {
            let p = t.isPageSettingsOpened && r.pages.find(d => d._id === r.currentPageId) || null;
            return l(p), () => {
                l(null)
            }
        }, [t.isPageSettingsOpened, r.currentPageNum, r.currentPageId]), (0, bn.useEffect)(() => {
            if (!t.isPageSettingsOpened) return;
            let p = r.pages.find(d => d._id === r.currentPageId) || null;
            return l(p), () => {
                l(null)
            }
        }, [r.pages]), s ? w(cr, {
            transition: {
                ease: zs.easeInCubic
            },
            value: i,
            onChange: p => n(p),
            children: [a(Qt, {
                value: 0,
                renderButton: ({
                    isActive: p
                }) => a(pS, {
                    isActive: p,
                    padding: e
                }),
                children: p => a(uS, {
                    ref: p,
                    currentPage: s,
                    padding: e
                })
            }), a(Qt, {
                value: 1,
                renderButton: ({
                    isActive: p
                }) => a(gS, {
                    isActive: p,
                    dividerColor: o,
                    padding: e
                }),
                children: p => a(fS, {
                    ref: p,
                    currentPage: s,
                    padding: e
                })
            }), a(Qt, {
                value: 2,
                renderButton: ({
                    isActive: p
                }) => a(bS, {
                    isActive: p,
                    dividerColor: o,
                    padding: e
                }),
                children: p => a(xS, {
                    ref: p,
                    currentPage: s,
                    padding: e
                })
            })]
        }) : null
    },
    vS = iR;
var yS = M(F());
Ee();
W();
He();
y();
var kS = ({
    children: e,
    dividerColor: o,
    ...t
}) => {
    let r = (0, yS.useContext)(Le);
    return w(f, {
        display: "flex",
        position: "relative",
        width: "100%",
        height: 88,
        justifyContent: "center",
        alignItems: "center",
        ...t,
        children: [a(f, {
            height: 2,
            position: "absolute",
            top: -1,
            left: "2rm",
            right: "2rm",
            borderRadius: "2px",
            backgroundColor: o || "darkGray"
        }), a(ge, {
            textStyle: "small",
            "data-testid": "close-page-settings",
            onClick: () => {
                r.dispatch({
                    type: "togglePageSettings"
                })
            },
            color: "white",
            children: "Close page settings"
        })]
    })
};
te();
y();
var nR = ({
        children: e,
        ...o
    }) => a(cS, {
        footerHeight: "56px",
        backgroundColor: Ie("black", .96),
        backdropFilter: "blur(4px)",
        ...o,
        footer: ({
            height: t
        }) => a(kS, {
            height: t,
            dividerColor: "rgba(128, 128, 128, 0.4)"
        }),
        children: a(vS, {
            padding: "0 16px",
            dividerColor: "rgba(128, 128, 128, 0.4)"
        })
    }),
    _S = nR;
Ee();
Jt();
var CS = M(F());
_r();
Ue();
Tt();
y();
var sR = (e, o) => ({
    position: "absolute",
    boxSizing: "content-box",
    width: "100%",
    height: "100%",
    marginLeft: e ? o === "right" ? "16px" : "-32px" : 0,
    transform: `translateX(${e?o==="right"?"-100%":"100%":"0px"})`,
    transition: `transform ${go.moveSpeed} ease, padding 0.1s 0s ease, border-radius 0.1s 0s ease, margin 0.1s 0s ease`,
    zIndex: "auto",
    [o === "right" ? "paddingRight" : "paddingLeft"]: e ? "16px" : 0,
    borderRadius: e ? o === "right" ? "8px 0 0 8px" : "0 8px 8px 0" : "10px",
    boxShadow: `0 0 0 2px inset ${Be(.96,q.gray)}`
});

function ds({
    isOpen: e,
    direction: o = "left",
    children: t,
    ...r
}) {
    return a(So, {
        children: e ? a(Mt.div, {
            initial: {
                opacity: 0
            },
            animate: {
                opacity: 1
            },
            exit: {
                opacity: 0
            },
            transition: {
                duration: e ? .1 : .5
            },
            children: (0, CS.cloneElement)(t, { ...r,
                ...sR(e, o)
            })
        }) : null
    })
}
var da = M(F()),
    Wi = (e, o, t = []) => {
        let r = (0, da.useRef)(o),
            i = (0, da.useRef)(t);
        (0, da.useEffect)(() => {
            r.current = o
        }, [o]), (0, da.useEffect)(() => {
            i.current = t
        }, [t]), (0, da.useEffect)(() => {
            let {
                activeOnLock: n,
                optionKeys: s
            } = r.current, l = () => {
                i.current.includes(!0) || r.current.handler()
            };
            return window.RM.constructorRouter.bindGlobalKeyPress({
                key: e,
                handler: l,
                activeOnLock: n,
                optionKeys: s
            }), () => {
                window.RM.constructorRouter.unbindGlobalKeyPress(e, l)
            }
        }, [e])
    };
Tt();
Ue();
y();
var SS = ({
    children: e,
    button: o,
    ...t
}) => {
    let r = (0, Bb.useContext)(Le),
        {
            togglePanel: i
        } = (0, Bb.useContext)(_t);
    return Wi("m", {
        handler: () => {
            i("page", !1)
        }
    }), w(Yt, {
        name: "page",
        button: o,
        skidding: 84,
        ArrowProps: {
            stroke: Be(.84, q.gray),
            popperPadding: 21
        },
        ...t,
        children: [a(ds, {
            isOpen: r.isTrashOpened,
            children: a(aS, {})
        }), a(ds, {
            isOpen: r.isPageSettingsOpened,
            children: a(_S, {})
        }), a(rS, {
            position: "relative",
            width: "100%",
            height: "100%",
            zIndex: "1"
        })]
    })
};
var ft = M(F());
Gs();
W();
He();
te();
Ye();
kt();
Es();
Jt();
var Yr = M(F());
W();
Ro();
ut();
_u();
Es();
var Vl = M(F());
wd();
ut();
be();
W();
y();
var Rb = (0, Vl.memo)(({
    widget: e,
    onSelect: o,
    showBorder: t,
    highlightedWidget: r,
    onMouseEnter: i,
    onMouseLeave: n,
    forceHovered: s
}) => {
    let [l, p] = (0, Vl.useState)(!!s), {
        isFreePlan: d
    } = Tl(), c = () => {
        p(!r || e.blockName === r), i && i(e.blockName)
    }, m = () => {
        p(!1), n && n(e.blockName)
    };
    (0, Vl.useEffect)(() => {
        p(s ? !r || e.blockName === r : !1)
    }, [s, r, e.blockName]);
    let u = d && l && ae.paidWidgetsToShow.includes(e.blockName);
    return w(f, {
        "data-widget-type": e.blockName,
        "aria-label": e.blockName,
        width: 64,
        height: 92,
        cursor: !r || e.blockName === r ? "pointer" : "default",
        onMouseEnter: c,
        onMouseLeave: m,
        onClick: () => {
            (!r || e.blockName === r) && o(e.blockName)
        },
        position: "relative",
        opacity: !r || e.blockName === r ? 1 : .2,
        userSelect: !r || e.blockName === r ? "auto" : "none",
        children: [a(f, {
            border: "1px solid rgba(255, 255, 255, 0.8)",
            width: 64,
            height: 64,
            borderRadius: "8px",
            position: "absolute",
            left: 0,
            top: 0,
            opacity: t ? 1 : 0,
            transition: "all 0.1s"
        }), a(f, {
            width: 64,
            height: 64,
            backgroundRepeat: "no-repeat",
            backgroundPosition: "50% 50%",
            opacity: l && !t ? .8 : 1,
            transition: "all .05s",
            style: {
                backgroundImage: `url('${Bi(`./constructor/widgetbar/widget-selector/${e.thumb}.svg`)}')`
            }
        }), a(f, {
            opacity: l ? 1 : .6,
            textAlign: "center",
            marginTop: "6px",
            children: a(A, {
                color: u ? "tomato" : "white",
                textStyle: "small",
                fontWeight: 600,
                whiteSpace: "nowrap",
                children: u ? "Upgrade" : `${e.title}${e.titleShortcut?` (${e.titleShortcut})`:""}`
            })
        })]
    })
});
kt();
Kt();
Jt();
y();

function aR({
    children: e,
    backgroundColor: o,
    boxShadow: t,
    highlightedWidget: r,
    disableKeyboardNavigation: i = !1,
    ...n
}) {
    let {
        model: {
            workspace: s,
            onClose: l
        }
    } = (0, Yr.useContext)(Na), {
        panelPayload: p
    } = (0, Yr.useContext)(_t), [d, c] = (0, Yr.useState)(-1), [m, u] = (0, Yr.useState)(null), {
        isFreePlan: g
    } = Tl();

    function h(k) {
        if (g && ae.paidWidgetsToShow.includes(k.toLowerCase())) {
            window.open(`${ae.readymag_host}/pricing`, "_blank");
            return
        }
        k === "ecommercecart" && s.eCommerceManager && s.eCommerceManager.isCartWidgetExist || (Oe(["TextWidget", "PictureWidgetSelect", "ButtonWidgetSelect"]), setTimeout(() => {
            l(k)
        }, 50))
    }
    let b = (0, Yr.useMemo)(() => {
            let k = Object.keys(zo),
                T = [];
            for (let R of k) {
                let I = zo[R] ? .prototype;
                if (I && !I.excludedFromLib && (!I.restrictions || I.restrictions(s))) {
                    let B = {
                        blockName: R,
                        thumb: I.thumb,
                        title: I.name,
                        titleShortcut: I.titleShortcut,
                        iconColor: I.icon_color,
                        sortIndex: I.sort_index || 0
                    };
                    typeof I.getBlockCreateParams == "function" && (B = { ...B,
                        ...I.getBlockCreateParams(s)
                    }), T.push(B)
                }
            }
            return T.sort((R, I) => {
                if (R.sortIndex !== I.sortIndex) {
                    if (R.sortIndex > I.sortIndex || R.sortIndex === 0) return 1;
                    if (R.sortIndex < I.sortIndex || I.sortIndex === 0) return -1
                }
                return R.sortIndex - I.sortIndex
            })
        }, [s]),
        x = (0, Yr.useCallback)(k => {
            if (i) return;
            S(k);
            let T = d;
            switch (k.key) {
                case "ArrowLeft":
                    T = T - 1, T = Math.max(T, 0);
                    break;
                case "ArrowUp":
                    T = T - 3, T = Math.max(T, 0);
                    break;
                case "ArrowRight":
                    T = T + 1, T = Math.min(T, b.length - 1);
                    break;
                case "ArrowDown":
                    T = T + 3, T = Math.min(T, b.length - 1);
                    break;
                case "Enter":
                    if (T > -1 && b[T]) return h(b[T].blockName);
                    break;
                case "Escape":
                    return l();
                default:
                    break
            }
            T > -1 && T !== d && c(T)
        }, [b, d, i]);

    function S(k) {
        i || ["ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", "Enter", "Esc"].includes(k.key) && (k.preventDefault(), k.stopPropagation())
    }(0, Yr.useEffect)(() => (document.body.addEventListener("keyup", x), document.body.addEventListener("keydown", S), () => {
        document.body.removeEventListener("keyup", x), document.body.removeEventListener("keydown", S)
    }), [x]);

    function v(k) {
        u(k)
    }

    function P() {
        u(null)
    }
    let C = m && ae.paidWidgetsToShow.includes(m);
    return d >= 0 && (C = ae.paidWidgetsToShow.includes(b[d].blockName)), a(Bt, {
        indent: 16,
        arrow: !1,
        open: !!(g && C),
        componentsProps: {
            tooltip: {
                backgroundColor: "blue"
            }
        },
        text: "Upgrade your plan to publish a project with this widget",
        listenReferenceResize: !0,
        popperOptions: {
            modifiers: [{
                name: "offset",
                enabled: !0,
                options: {
                    offset: [0, 48]
                }
            }]
        },
        children: a(f, {
            width: 208,
            opacity: b.length ? 1 : 0,
            transition: "opacity .1s",
            ...n,
            children: a(f, {
                paddingBottom: 12,
                id: "widget-selector",
                backgroundColor: o,
                boxShadow: t,
                transition: "all 0.1s",
                children: a(f, {
                    display: "flex",
                    gap: "0px 8px",
                    flexWrap: "wrap",
                    children: b.map((k, T) => k.blockName === "presets" ? a(Bt, {
                        text: "Add your first one",
                        open: p ? .showPresetDemoTooltip ? ? !1,
                        componentsProps: {
                            tooltip: {
                                backgroundColor: "blue"
                            },
                            arrow: {
                                color: "blue",
                                left: "-1px !important"
                            }
                        },
                        children: a(f, {
                            as: "span",
                            children: a(Rb, {
                                widget: k,
                                onSelect: h,
                                showBorder: d === T,
                                forceHovered: d === T,
                                highlightedWidget: r,
                                onMouseEnter: v,
                                onMouseLeave: P
                            }, k.blockName)
                        })
                    }, T) : a(Rb, {
                        widget: k,
                        onSelect: h,
                        showBorder: d === T,
                        forceHovered: d === T,
                        highlightedWidget: r,
                        onMouseEnter: v,
                        onMouseLeave: P
                    }, k.blockName))
                })
            })
        })
    })
}
var PS = aR;
Ut();
var ht = M(F());
Ye();
Kt();
W();
He();
kr();
Vh();
Fr();
be();
Ho();
Di();
te();
Yd();
Ut();
var hr = M(F());
_r();
var IS = M(lt()),
    zb = M(Ht());
Bh();
Di();
_y();
Ut();
Bo();
pk();
_u();
W();
Mi();
te();
Pu();
rf();
Hc();
nu();
Jy();
DI();
Lc();
Ph();
Rs();
y();
var lR = N(f, {
    label: "workspace-scroller"
})
`
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  // Overflow hidden prevents scroll bar from showing when we scroll the scroller on hover to demo the scroll animation.
  overflow: hidden;
`, cR = N(f, {
    label: "workspace-container"
})
`
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 7px;
  cursor: pointer;
  transition: transform 0.1s ease;
  &:active {
    transform: scale(0.99);
  }
  * {
    // It's important to disable pointer events on widgets. For example, to avoid triggering mouseleave on preset popover
    // when hovering over the blocks which are rendered with react, such as text or shots.
    pointer-events: none !important;
  }
  & > * {
    position: relative;
    width: 100%;
    height: 100%;
    flex: none;
  }
  & .block {
    position: absolute;
    flex: none;
    &.lottie .content > *:first-child {
      background: transparent;
    }
  }
  &.has-cover > * > .block,
  & .steps-lines-wrapper {
    display: none;
  }
  & .animation-steps-container {
    // It's display and not visibility or opacity, because the animation does not play when not it's not displayed and starts anew when it is.
    // Visibility or opacity would show animation from the whatever frame it is currently in.
    display: none;
    z-index: 2510;
  }
  &:hover {
    .block.animation-mode {
      display: none;
    }
    .animation-steps-container {
      display: block;
    }
  }
`, pR = N(f, {
    label: "cover"
})
`
  position: absolute;
  width: 100%;
  height: 100%;
  background: center / contain no-repeat;
  pointer-events: none;
  ${e=>ne`
      background-image: url(${e.cover});
    `}
`, dR = N(f, {
    label: "preview"
})
`
  position: relative;
  border-radius: 8px;
  margin: 0 auto;
  overflow: hidden;
  cursor: pointer;
`, Eb = Su.extend({ ...Sh,
    tracked: !1
}), uR = Wr.extend({ ...Sh,
    tracked: !1
});

function mR(e, o, t, r) {
    let i = yr.getWorkspaceSize(t, r, o),
        n = {
            width: t.opts.scalableviewer ? i.width : window.innerWidth,
            height: window.innerHeight
        },
        s = {
            workspaceSize: i,
            windowSize: n,
            viewport: o,
            zoom: 1
        },
        l = e.map(c => ci({
            target: new Eb({ ...c,
                _id: `preset-${On()}-${c._id}`
            }),
            viewport: o,
            pageId: c.pid,
            disposable: !0
        })).filter(c => !c.attributes.hidden),
        p = l.length > 0 && l.every(c => c.attributes.is_full_width && c.attributes.is_full_height),
        d = {
            fixed_position: "",
            is_global: !1,
            is_above: !1
        };
    if (p) {
        let c = z0[o].width;
        return l.forEach(m => m.set({ ...d,
            x: 0,
            y: 0,
            w: c,
            h: c
        }, {
            silent: !0
        })), {
            models: l,
            union: {
                width: c,
                height: c
            }
        }
    } else {
        let c = l.map(u => {
                let {
                    x: g,
                    y: h,
                    w: b,
                    h: x,
                    fixed_position: S,
                    angle: v,
                    is_full_width: P,
                    is_full_height: C
                } = u.attributes;
                return {
                    x: g,
                    y: h,
                    w: P ? n.width : b,
                    h: C ? n.height : x,
                    fixed_position: S,
                    angle: v
                }
            }),
            m = yr.coordinatesToClientBoundingBox(c, s);
        return l.forEach(u => {
            let g = yr.mapWidgetToWindow([u.attributes], s),
                h = ct.absoluteToRelative(g, m);
            u.set(Object.assign({}, d, {
                x: h.left,
                y: h.top
            }, u.attributes.is_full_width ? {
                w: Math.max(m.width, n.width)
            } : {}, u.attributes.is_full_height ? {
                h: Math.max(m.height, n.height)
            } : {}), {
                silent: !0
            })
        }), {
            models: l,
            union: m
        }
    }
}
var gR = e => {
    let o = e.map(s => {
            let {
                x: l,
                y: p,
                w: d,
                h: c,
                angle: m = 0
            } = s, u = Math.cos(m * Math.PI / 180), g = Math.sin(m * Math.PI / 180), h = {
                left: l,
                top: p,
                width: d,
                height: c,
                cosAngle: u,
                sinAngle: g
            };
            return pt.calcBoundingBox(h, void 0, !0)
        }),
        {
            left: t,
            top: r,
            width: i,
            height: n
        } = pt.getBoundingBoxOfBoxes(o);
    return {
        left: t,
        top: r,
        width: i,
        height: n
    }
};

function hR({
    mag: e,
    union: o,
    backgroundColor: t,
    eCommerceManager: r,
    size: i,
    spacing: n = 16,
    viewport: s,
    container: l,
    scroller: p
}) {
    let d = new ku({
        page: new uR,
        mag: e,
        $container: (0, zb.default)(l),
        width: o.width,
        height: o.height,
        background: t,
        eCommerceManager: r,
        viewport: s
    });
    d.$scroller = (0, zb.default)(p);
    let c = d.$el[0],
        m = {
            width: i.width - n * 2,
            height: i.height - n * 2
        },
        g = ct.contain(o, m).width / o.width;
    return c.style.setProperty("transform", `scale(${g})`), c.style.setProperty("width", `${o.width}px`), c.style.setProperty("height", `${o.height}px`), d
}

function fR(e, o) {
    return e.map(t => {
        let r = new zo[t.attributes.type](t, o);
        r.isStandalone = !0, r.autoRasterize = !1, r.$standaloneContainer = o.$el, IS.default.extend(r, {}, Zy), r.render(), r.redrawPosition(t, {
            forceRedraw: !0
        });
        let i = r.$el[0],
            n = jm(t),
            s = i.querySelector(".frameborder"),
            l = i.querySelector(".content");
        if (s.style.setProperty("display", "none"), l.style.setProperty("z-index", t.attributes.z), n) {
            let p = wR(n, t, o.viewport);
            p.opacity !== void 0 && i.style.setProperty("opacity", p.opacity), p.transform !== void 0 && i.style.setProperty("transform", p.transform)
        }
        return r
    })
}
var TS = {
        hover: 3,
        load: 2,
        scroll: 1,
        click: 0,
        none: 0
    },
    bR = ({
        type: e
    }, {
        type: o
    }) => TS[o] - TS[e],
    jm = (e, o = !1) => {
        let t = [...e.get("animation") || []].sort(bR),
            r = o ? ["hover", "load", "scroll", "click"] : ["hover", "load", "scroll"];
        return t.find(({
            type: i,
            steps: n
        }) => r.includes(i) && n.length > 0)
    };

function wR(e, o, t) {
    let {
        steps: r,
        type: i
    } = Za.getNormalizedAnimation(e, !!o.get("fixed_position"), o.get("is_full_width"), o.get("is_full_height"), 1, t), n = r[0], {
        from_rotate: s = 0,
        from_scale: l = 100,
        from_opacity: p = 100
    } = n, d = {}, c = Mx.getTransformString({
        x: 0,
        y: 0,
        angle: s,
        scale: l / 100,
        hasRotation: Tx(r),
        hasScale: Ix(r),
        isKeyframe: i !== "scroll",
        force3d: !1,
        offsetPathEnabled: !1
    });
    return (s !== 0 || l !== 100) && (d.transform = c), p !== 100 && (d.opacity = (p / 100).toString()), d
}

function xR(e, o) {
    let t = e.map(d => d.id),
        i = (e[0] ? .model.get("animation") ? .filter(d => d.type !== "none") || [])[0] ? .UUID,
        n = !!i && e.every(d => {
            let c = d.model.get("animation") ? .filter(m => m.type !== "none") || [];
            return c.length === 1 && c[0].UUID === i
        }),
        s = e.reduce((d, c) => {
            let m = jm(c.model, n);
            if (!m) return d;
            let u = m.UUID;
            return d[u] ? d[u].push(c) : d[u] = [c], d
        }, {});
    if (!n && Object.keys(s).length > 0 && e.filter(d => jm(d.model)).length !== e.length) {
        let d = "animation-stub-" + On(),
            c = [{
                UUID: d,
                type: "hover",
                steps: [{}]
            }],
            m = e.filter(u => !jm(u.model));
        m.forEach(u => u.model.set("animation", c)), s[d] = m
    }
    return Object.keys(s).sort((d, c) => {
        let {
            z: m,
            _id: u
        } = s[d][0].model.attributes, {
            z: g,
            _id: h
        } = s[c][0].model.attributes;
        return m - g || t.indexOf(u) - t.indexOf(h)
    }).map(d => {
        let c = s[d],
            m = c[0].model,
            u = gR(c.map(b => b.model.attributes)),
            g = new jy({
                uuid: d,
                blocks: c,
                workspace: o,
                static: !0,
                isFixed: !!m.get("fixed_position"),
                isFullwidth: m.get("is_full_width"),
                isFullheight: m.get("is_full_height"),
                isSticked: !!m.get("sticked"),
                updateIndexes: !0,
                zoomView: {
                    getZoom: () => 1
                }
            }),
            h = g.$el[0];
        return h.style.setProperty("left", `${u.left}px`), h.style.setProperty("top", `${u.top}px`), h.querySelectorAll(".block").forEach(b => {
            b.style.removeProperty("opacity"), b.style.removeProperty("transform")
        }), g
    })
}
var vR = ({
        widgets: e,
        backgroundColor: o = "#ffffff",
        boxShadow: t,
        width: r,
        height: i,
        cover: n,
        viewport: s,
        onClick: l,
        hidden: p = !1
    }) => {
        let d = (0, hr.useRef)(null),
            c = (0, hr.useRef)(null),
            [m, u] = (0, hr.useState)(!0),
            {
                mag: g,
                page: h,
                eCommerceManager: b
            } = (0, hr.useContext)(je),
            x = (0, hr.useRef)(),
            S = (0, hr.useRef)(),
            v = (0, hr.useRef)();
        (0, hr.useEffect)(function() {
            if (!(!g || !h || p)) {
                try {
                    let {
                        models: T,
                        union: R
                    } = mR(e, s, g.toJSON(), h.toJSON()), I = hR({
                        viewport: s,
                        mag: g,
                        union: R,
                        size: {
                            width: r,
                            height: i
                        },
                        backgroundColor: o,
                        eCommerceManager: b,
                        container: d.current,
                        scroller: c.current
                    });
                    v.current = I, S.current = fR(T, I)
                } catch (T) {
                    console.error("Error rendering preset preview", T), S.current = []
                }
                return () => {
                    S.current ? .map(T => T.destroy()), x.current ? .map(T => T.destroy()), v.current ? .remove(), S.current = void 0, x.current = void 0, v.current = void 0
                }
            }
        }, [o, s, h, g, p]);

        function P() {
            x.current === void 0 && S.current && v.current && (x.current = xR(S.current, v.current)), !!x.current ? .length && u(!1), x.current ? .map(T => {
                if (T.startPreviewMode(), T.previewTimeline.type === "scroll") {
                    let R = v.current ? .$scroller[0];
                    if (!R) return;
                    let I = R.getBoundingClientRect().height,
                        B = T.previewTimeline.steps.reduce((L, D) => L + D.calcedDuration, T.getScrollStart(T.getAnimation()));
                    R.firstChild ? .style ? .setProperty("height", `${B+I}px`), R.scrollTo({
                        top: B,
                        behavior: "smooth"
                    })
                }
            })
        }

        function C() {
            u(!0), x.current ? .map(k => k.stopPreviewMode()), v.current ? .$scroller ? .[0].scrollTo({
                top: 0,
                behavior: "auto"
            })
        }
        return a(dR, {
            "aria-label": "Preset preview",
            role: "button",
            width: r,
            height: i,
            boxShadow: t,
            backgroundColor: o,
            onClick: l,
            onMouseEnter: P,
            onMouseLeave: C,
            children: a(yR, {
                viewport: s,
                children: p ? a(f, {
                    width: "100%",
                    height: "100%",
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    color: o === "#000000" ? "black" : "gray",
                    children: a(ol, {
                        fontSize: 48
                    })
                }) : w(hr.Fragment, {
                    children: [a(lR, {
                        ref: c,
                        children: a(f, {
                            width: "100%"
                        })
                    }), a(cR, {
                        overflow: "hidden",
                        className: n && m ? "has-cover" : void 0,
                        ref: d
                    }), a(So, {
                        children: n && m && a(Mt.div, {
                            exit: {
                                opacity: 0
                            },
                            transition: {
                                duration: .1
                            },
                            children: a(pR, {
                                cover: n
                            })
                        })
                    })]
                })
            })
        })
    },
    yR = ({
        children: e,
        viewport: o
    }) => {
        let [t, r] = nv();
        return ky(() => {
            (async () => {
                await r(t.current, {
                    opacity: .6
                }, {
                    duration: .2,
                    ease: "easeOut"
                }), await r(t.current, {
                    opacity: 1
                }, {
                    duration: .2,
                    ease: "easeIn"
                })
            })()
        }, [o]), a("div", {
            ref: t,
            style: {
                width: "100%",
                height: "100%",
                opacity: 1
            },
            children: e
        })
    },
    MS = vR;
var zr = M(F());
W();
kr();
be();
Di();
s0();
Yd();
var BS = M(F());
var ua = (0, BS.createContext)({
    editable: !1,
    scope: 2,
    setScope() {}
});
y();
var Ab = "collapsed-preset-folders";

function kR(e, o) {
    try {
        let t = JSON.parse(window.localStorage.getItem(Ab) || "{}");
        t[o] || (t[o] = []);
        let r = t[o].indexOf(e);
        r !== -1 ? t[o].splice(r, 1) : t[o].push(e), window.localStorage.setItem(Ab, JSON.stringify(t))
    } catch {}
}

function _R(e, o) {
    try {
        return !JSON.parse(window.localStorage.getItem(Ab) || "{}")[o] ? .includes ? .(e)
    } catch {
        return !0
    }
}

function RS(e) {
    return e === 1 ? window.RM.constructorRouter.mag.user.get("_id") : window.RM.constructorRouter.mag.get("_id")
}
var ES = (0, zr.memo)(({
    name: e,
    presets: o,
    children: t
}) => {
    let {
        scope: r,
        editable: i
    } = (0, zr.useContext)(ua), [n, s] = (0, zr.useState)(e), [l, p] = (0, zr.useState)(() => _R(n, RS(r))), d = (0, zr.useRef)(null), c = (0, zr.useRef)(() => u(n)), m = (0, zr.useRef)(!1);
    c.current = () => u(n), (0, zr.useEffect)(() => function() {
        m.current && c.current()
    }, []);

    function u(v) {
        if (!(v !== e) || !v) {
            s(e);
            return
        }
        let C = o[0].type,
            k = o.map(T => T._id);
        fv(C, k, gd.sanitize(v))
    }
    let g = () => {
            p(v => !v), kR(n, RS(r))
        },
        h = v => {
            v.key === "Enter" && (v.preventDefault(), d.current ? .blur ? .())
        };

    function b() {
        m.current = !0
    }

    function x() {
        m.current = !1, u(n)
    }
    let S = i ? a(St, {
        padding: 0,
        value: n,
        color: "white",
        height: "auto",
        onBlur: x,
        border: "none!important",
        onKeyDown: h,
        onFocus: b,
        onChange: v => s(v.target.value),
        onClick: v => v.stopPropagation(),
        ref: d
    }) : a(A, {
        children: n
    });
    return w(f, {
        width: "100%",
        display: "flex",
        gap: 16,
        flexDirection: "column",
        "aria-label": `${e} preset folder`,
        children: [w(f, {
            gap: 6,
            height: 20,
            role: "button",
            color: "white",
            display: "flex",
            cursor: "pointer",
            alignItems: "center",
            onClick: g,
            children: [a(f, {
                as: "span",
                transition: "transform 0.3s ease",
                transform: `rotate(${l?"0def":"-90deg"})`,
                children: a(qo, {
                    "data-testid": "ToggleFolderIcon",
                    fontSize: 20
                })
            }), S]
        }), l ? a(f, {
            display: "flex",
            gap: 16,
            flexWrap: "wrap",
            marginBottom: 24,
            children: t
        }) : null]
    })
});
nu();
$I();
y();
var Db = (e, o) => {
        let t = new Intl.Collator(void 0, {
            numeric: !1
        });
        return e.sort((r, i) => t.compare(String(r[o]), String(i[o])))
    },
    SR = (e, o) => {
        if (e.length === 0) return [];
        let t = {},
            r = [];
        for (let s of e) {
            if (!s.name.includes("/")) {
                r.push(s);
                continue
            }
            let [l] = s.name.split("/");
            t.hasOwnProperty(l) ? t[l].push(s) : t[l] = [s]
        }
        let i = Object.keys(t).map(s => {
                let l = t[s];
                return o !== 2 && Db(l, "name"), {
                    folderName: s,
                    type: "folder",
                    presets: l
                }
            }),
            n = Db(i, "folderName");
        return o !== 2 && Db(r, "name"), [...n, ...r]
    },
    PR = e => e.replace(/\s*\/\s*/, "/").trim(),
    TR = e => {
        let o = PR(e),
            [t, r] = o.split("/");
        return t ? o : r
    };

function IR(e) {
    return e.replace("/", " / ")
}

function Lb(e) {
    let [, ...o] = e.split("/");
    return o.length === 0 ? e : o.join("/")
}
var qm = (0, ht.memo)(({
        presets: e,
        editable: o = !1,
        isOwner: t = !0,
        scope: r = 2,
        setScope: i
    }) => {
        let n = (0, ht.useMemo)(() => ({
                editable: o,
                scope: r,
                setScope: i || (() => {})
            }), [o, r, i]),
            s = (0, ht.useMemo)(() => SR(e, r), [e, r]),
            l = s.length === 0,
            p = null;
        if (l) {
            let d = w(ht.Fragment, {
                children: ["Press", a(bv, {
                    marginBottom: -6,
                    display: "inline"
                }), "and save ", a("br", {}), " any widgets as a preset"]
            });
            r === 1 && (d = w(ht.Fragment, {
                children: ["Press ", a(Cr, {
                    marginBottom: 3,
                    display: "inline"
                }), " to make ", a("br", {}), " any preset global"]
            })), p = a(f, {
                display: "flex",
                height: "100%",
                alignItems: "center",
                justifyContent: "center",
                children: t ? a(A, {
                    color: "darkGray",
                    textAlign: "center",
                    children: d
                }) : w(A, {
                    color: "darkGray",
                    children: ["No $", r === 0 ? "project" : "global", " presets saved yet"]
                })
            })
        } else p = a(f, {
            display: "flex",
            gap: 16,
            flexWrap: "wrap",
            children: s.map(d => d.type === "folder" ? a(ES, {
                name: d.folderName,
                presets: d.presets,
                children: d.presets.map(c => a(AS, {
                    preset: c
                }, c._id))
            }, `${r}-${d.folderName}`) : a(AS, {
                preset: d
            }, d._id))
        });
        return a(ua.Provider, {
            value: n,
            children: a(Ft, {
                children: ({
                    ref: d
                }) => a(f, {
                    ref: d,
                    height: l ? "100%" : "auto",
                    padding: 16,
                    children: p
                })
            })
        })
    }),
    AS = (0, ht.memo)(({
        preset: e
    }) => {
        let {
            isHovered: o,
            ...t
        } = Ze(!1), {
            workspace: r
        } = (0, ht.useContext)(je), {
            editable: i
        } = (0, ht.useContext)(ua), [n, s] = (0, ht.useState)(r ? .viewport || "default"), l = (0, ht.useRef)(null), p = (0, ht.useMemo)(() => e.widgets.map(u => {
            let g = new Eb({ ...u,
                _id: `preset-item-${u._id}`
            });
            return ci({
                viewport: n,
                disposable: !0,
                pageId: u.pid,
                target: g
            })
        }), [e, n]), d = (0, ht.useMemo)(() => p.every(u => u.get("hidden")), [p]), c = o ? "0 0 0 4px rgba(162, 162, 162, 0.16)" : void 0;

        function m() {
            r ? .pastePreset({
                object: "rm_pastedata",
                mag_num_id: void 0,
                blocks: e.widgets,
                packs: e.packs,
                mag_edit_params: {
                    fonts: e.fonts,
                    textStyles: e.textStyles,
                    listStyles: e.listStyles,
                    linkStyles: e.linkStyles
                }
            }, {
                disableDeleteViewportAttributes: !0,
                disableDeleteGlobalAttributes: !0,
                customLayersName: e.name
            }), re(fe.PresetAdd, {
                presetCategory: e.category ? .name ? ? "saved",
                presetName: e.name
            })
        }
        return (0, ht.useEffect)(() => {
            l.current && Xy(e, l.current)
        }, []), w(f, {
            gap: 8,
            ref: l,
            width: 192,
            display: "flex",
            flexDirection: "column",
            "data-preset-id": e._id,
            "aria-label": `${e.name} preset`,
            ...t,
            children: [a(MS, {
                width: 192,
                height: 192,
                boxShadow: c,
                widgets: e.widgets,
                onClick: m,
                viewport: n,
                cover: e.cover,
                hidden: d,
                backgroundColor: e.backgroundColor || "#ffffff"
            }), w(f, {
                display: "flex",
                justifyContent: "space-between",
                alignItems: "center",
                gap: 8,
                children: [a(MR, {
                    preset: e
                }), w(f, {
                    display: "flex",
                    gap: 6,
                    alignItems: "center",
                    children: [i ? a(RR, {
                        preset: e
                    }) : null, a(zR, {
                        viewport: n,
                        setViewport: s
                    }), i ? a(BR, {
                        preset: e
                    }) : null]
                })]
            })]
        })
    }),
    MR = (0, ht.memo)(({
        preset: e
    }) => {
        let [o, t] = (0, ht.useState)(() => Lb(e.name)), {
            editable: r
        } = (0, ht.useContext)(ua), i = (0, ht.useRef)(() => p(o)), n = (0, ht.useRef)(null), s = (0, ht.useRef)(!1);
        i.current = () => p(o), (0, ht.useEffect)(() => function() {
            s.current && i.current()
        }, []);

        function l(m) {
            m.key === "Enter" && (m.preventDefault(), n.current ? .blur ? .())
        }

        function p(m, u = {}) {
            let g = TR(m);
            if (!(e.name !== g) || !g) {
                u.updateState && t(Lb(e.name));
                return
            }
            Eh({
                type: e.type,
                id: e._id
            }, {
                name: g
            }), u.updateState && t(Lb(g)), g.split("/")[1] && re(fe.PresetMisc, {
                action: "folder created by type in"
            })
        }

        function d() {
            s.current = !0, t(IR(e.name))
        }

        function c() {
            s.current = !1, p(o, {
                updateState: !0
            })
        }
        return r ? a(St, {
            padding: 0,
            value: o,
            color: "white",
            height: "auto",
            textStyle: "small",
            onBlur: c,
            ref: n,
            onFocus: d,
            border: "none!important",
            onKeyDown: l,
            onChange: m => t(m.target.value),
            textOverflow: "ellipsis"
        }) : a(A, {
            whiteSpace: "nowrap",
            overflow: "hidden",
            textOverflow: "ellipsis",
            color: "white",
            textStyle: "small",
            children: o
        })
    }),
    BR = (0, ht.memo)(({
        preset: e
    }) => {
        let [o, t] = (0, ht.useState)(!1), {
            setScope: r
        } = (0, ht.useContext)(ua), i = (0, ht.useMemo)(() => [{
            title: e.type === "global" ? "Move to Project" : "Move to Global",
            hidden: !window.RM.constructorRouter.mag.user.get("permissions") ? .can_use_global_presets,
            closeOnClick: !0,
            onClick() {
                let n = e.type === "global" ? "project" : "global";
                hv(e._id, e.type, n);
                let l = {
                    project: 0,
                    global: 1
                }[n];
                r(l), re(fe.PresetMisc, {
                    action: l === 0 ? "saved move to project" : "saved move to global"
                })
            }
        }, {
            title: "Delete",
            closeOnClick: !0,
            onClick() {
                gv({
                    type: e.type,
                    id: e._id
                })
            }
        }], [e]);
        return a("div", {
            onClick: n => n.stopPropagation(),
            children: a(sl, {
                width: 224,
                zIndex: 9999,
                border: "none",
                borderRadius: 8,
                listItems: i,
                popperOffset: [-85, -20],
                container: document.body,
                onToggleDropdown: t,
                boxShadow: "0px 2px 16px rgba(0, 0, 0, 0.16)",
                role: "menu",
                children: ({
                    toggleDropdown: n
                }) => a(DS, {
                    "aria-haspopup": !0,
                    onClick: n,
                    "aria-label": "preset context menu trigger",
                    "aria-expanded": o ? "true" : "false",
                    children: a(Cr, {})
                })
            })
        })
    }),
    RR = (0, ht.memo)(({
        preset: e
    }) => {
        let {
            isHovered: o,
            ...t
        } = Ze(!1), r = e.backgroundColor || "#ffffff", i = () => {
            let l = r === "#000000" ? "#ffffff" : "#000000";
            Eh({
                type: e.type,
                id: e._id
            }, {
                backgroundColor: l
            })
        }, n = "50%", s = "50%";
        return o && (r === "#000000" ? n = "100%" : (n = "0%", s = "100%")), w(f, {
            width: 10,
            height: 10,
            role: "button",
            borderWidth: 3,
            cursor: "pointer",
            overflow: "hidden",
            borderRadius: "50%",
            borderStyle: "solid",
            borderColor: "darkGray",
            boxSizing: "content-box",
            onClick: i,
            ...t,
            children: [a(f, {
                transition: "width 0.2s ease",
                width: n,
                height: "100%",
                backgroundColor: "#ffffff"
            }), a(f, {
                transition: "width 0.2s ease",
                width: s,
                height: "100%",
                backgroundColor: "#000000"
            })]
        })
    }),
    zR = (0, ht.memo)(({
        viewport: e,
        setViewport: o
    }) => {
        let {
            isHovered: t,
            ...r
        } = Ze(!1), i = ["default", "phone_portrait", "tablet_portrait"], n = () => {
            let p = (i.indexOf(e) + 1) % i.length;
            o(i[p])
        }, s = {
            default: a(Qd, {
                width: 20
            }),
            phone_portrait: a(Lv, {
                width: 8
            }),
            tablet_portrait: a(Ov, {
                width: 13
            })
        };
        return a(ge, {
            width: 24,
            height: 24,
            display: "flex",
            variant: "unstyled",
            justifyContent: "center",
            onClick: n,
            color: t ? "white" : "darkGray",
            ...r,
            children: s[e]
        })
    }),
    DS = N(ge)
`
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  padding: 0;
  color: ${e=>e.theme.colors.gray};

  &:hover {
    color: ${e=>e.theme.colors.white};
  }
`;
DS.defaultProps = {
    variant: "unstyled"
};
var Ul = M(F());
W();
be();
te();
Ho();
Fr();
Yd();
wd();
y();
var Ob = {
        _id: "my-presets",
        isArchived: !1,
        name: "Saved",
        position: 0,
        cover: Bi("./constructor/presets/my-preset.svg"),
        hoverCover: Bi("./constructor/presets/my-preset-hover.svg")
    },
    ER = (0, Ul.memo)(({
        onSelectCategory: e,
        onDeselectCategory: o,
        selectedCategory: t
    }) => {
        let [r] = uv(), i = [a(LS, {
            category: Ob,
            active: Ob._id === t,
            onMouseEnter: () => e(Ob),
            onMouseLeave: () => o()
        })], n = null;
        return r.forEach(s => {
            s.parent ? ._id !== n && i.push(a(AR, {
                title: s.parent.name
            })), i.push(a(LS, {
                category: s,
                active: s._id === t,
                onMouseEnter: () => e(s),
                onMouseLeave: () => o()
            })), n = s.parent._id
        }), a(Ft, {
            children: ({
                ref: s
            }) => a(f, {
                ref: s,
                id: "preset-panel",
                padding: "0 8px",
                children: i
            })
        })
    }),
    AR = (0, Ul.memo)(({
        title: e
    }) => a(f, {
        height: 40,
        marginLeft: 8,
        children: a(A, {
            textStyle: "regular",
            color: "white",
            lineHeight: "40px",
            cursor: "default",
            children: e
        })
    })),
    LS = (0, Ul.memo)(({
        category: e,
        onMouseEnter: o,
        onMouseLeave: t,
        active: r,
        ...i
    }) => {
        let {
            isHovered: n,
            onMouseEnter: s,
            ...l
        } = Ze(!1), p = (0, Ul.useRef)({
            x: null,
            y: null
        }), d = e.cover ? {
            backgroundImage: `url(${e.cover})`,
            backgroundSize: "contain",
            backgroundRepeat: "no-repeat"
        } : {
            backgroundColor: "red"
        };
        (n || r) && d.backgroundImage && e.hoverCover && (d.backgroundImage = `url(${e.hoverCover})`);

        function m(g) {
            l.onMouseLeave(g), t && t(g), p.current = {
                x: null,
                y: null
            }
        }

        function u(g) {
            let {
                clientX: h,
                clientY: b
            } = g, {
                current: x
            } = p;
            if (x.x !== null && x.y !== null) {
                let S = Math.abs(h - x.x),
                    v = Math.abs(b - x.y);
                (S <= 1 || S === 0 && v === 0) && (s(g), o && o(g))
            }
            p.current = {
                x: h,
                y: b
            }
        }
        return w(DR, { ...i,
            ...l,
            active: r,
            onMouseLeave: m,
            onMouseMove: u,
            backgroundColor: n ? "black" : void 0,
            children: [a(f, {
                width: 48,
                height: 48,
                ...d
            }), a(A, {
                color: "white",
                textStyle: "small",
                children: e.name
            })]
        })
    }),
    DR = N(f)
`
  gap: 8px;
  height: 64px;
  padding: 8px;
  display: flex;
  align-items: center;
  border-radius: 8px;
  cursor: default;

  ${e=>e.active&&ne`
      background-color: ${e.theme.colors.black};
    `}
`, OS = ER;
Yd();
Ua();
G0();
var Gl = M(F());
W();
dy();
be();
Sr();
$n();
y();
var $S = ({
        text: e
    }) => a(f, {
        margin: "16px 16px 0 16px",
        borderRadius: 4,
        padding: "8px 16px",
        backgroundColor: "blue",
        children: a(A, {
            color: "white",
            textStyle: "small",
            children: e
        })
    }),
    LR = "Upgrade your plan to save presets",
    OR = "Upgrade to the Team plan to add new global presets",
    HS = ({
        children: e,
        active: o
    }) => a(A, {
        textStyle: "small",
        color: o ? "white" : "gray",
        children: e
    }),
    FS = (0, Gl.memo)(({
        global: e,
        project: o,
        isOwner: t
    }) => {
        let [r, i] = (0, Gl.useState)(0), {
            isFreePlan: n
        } = (0, Gl.useContext)(pr), s = n && t, l = r === 0 && s, p = r === 1 && !window.RM.constructorRouter.mag.user.get("permissions") ? .can_use_global_presets, d = Ei("CanUsePresets"), c = u => {
            let g = u === 0 ? 0 : 1,
                h = window.RM.constructorRouter.mag.user.get("permissions") ? .can_use_global_presets;
            g === 1 && !e.length && !h ? tt("global-presets") : i(g)
        }, m = [{
            title: w(HS, {
                active: r === 0,
                children: ["Project", " ", a(A, {
                    textStyle: "small",
                    color: "darkGray",
                    children: o.length
                })]
            })
        }, {
            title: w(HS, {
                active: r === 1,
                children: ["Global", " ", a(A, {
                    textStyle: "small",
                    color: "darkGray",
                    children: e.length
                })]
            })
        }];
        return w(f, {
            paddingTop: 8,
            height: "100%",
            overflow: "hidden",
            display: "flex",
            flexDirection: "column",
            children: [a(Yc, {
                items: m,
                activeColor: "white",
                borderActiveColor: "white",
                onChange: c,
                activeIndex: r
            }), l ? a($S, {
                text: LR
            }) : null, p ? a($S, {
                text: OR
            }) : null, a(qm, {
                scope: r,
                setScope: i,
                editable: t || d,
                presets: r === 0 ? o : e
            })]
        })
    });
Kt();
Co();
var NS = e => e.transient,
    WS = e => !e.transient;

function $R(e) {
    return e.reduce((o, t) => {
        let {
            textStyles: r = [],
            listStyles: i = [],
            linkStyles: n = []
        } = t;
        return t.type === "project" ? (o.textStyles.project = o.textStyles.project.concat(r), o.listStyles.project = o.listStyles.project.concat(i), o.linkStyles.project = o.linkStyles.project.concat(n)) : (o.textStyles.global = o.textStyles.global.concat(r), o.listStyles.global = o.listStyles.global.concat(i), o.linkStyles.global = o.linkStyles.global.concat(n)), o
    }, {
        textStyles: {
            global: [],
            project: []
        },
        listStyles: {
            global: [],
            project: []
        },
        linkStyles: {
            global: [],
            project: []
        }
    })
}

function $b(e, o) {
    let t = e.global.reduce((l, p) => (l[p.name] = { ...p,
        transient: !0,
        scope: "global"
    }, l), {});
    t = e.project.reduce((l, p) => (l[p.name] = { ...p,
        transient: !0,
        scope: "project"
    }, l), t);
    let r = Object.keys(t),
        i = o.project.map(l => l.name).concat(o.global.map(l => l.name)),
        n = Ms(r, i),
        s = Object.values(u0(t, n)).map(l => ({ ...l,
            transient: !0
        }));
    return s.length > 0 ? {
        project: o.project.concat(s.filter(l => l.scope === "project")),
        global: o.global.concat(s.filter(l => l.scope === "global"))
    } : o
}

function Hb(e) {
    let {
        global: o,
        project: t
    } = e;
    return o.find(NS) || t.find(NS) ? {
        project: t.filter(WS),
        global: o.filter(WS)
    } : e
}

function VS(e, o) {
    let t = $R(e),
        {
            textStyles: r,
            listStyles: i,
            linkStyles: n
        } = o;
    return {
        textStyles: $b(t.textStyles, r),
        listStyles: $b(t.listStyles, i),
        linkStyles: $b(t.linkStyles, n)
    }
}

function US(e) {
    let {
        textStyles: o,
        listStyles: t,
        linkStyles: r
    } = e;
    return {
        textStyles: Hb(o),
        listStyles: Hb(t),
        linkStyles: Hb(r)
    }
}
Ee();
Ro();
sI();
Us();
ai();
y();
var HR = ({
        children: e,
        button: o,
        ...t
    }) => {
        let [r, i] = (0, ft.useState)("widgets"), {
            currentPanel: n,
            closePanels: s,
            panelPayload: l,
            togglePanel: p
        } = (0, ft.useContext)(_t), {
            workspace: d,
            isCurrentPageLocked: c
        } = (0, ft.useContext)(je), [m] = uo(), [u] = dv(), [g, h] = (0, ft.useState)(null), b = (0, ft.useRef)(), x = (0, ft.useRef)(!1), [S, v] = (0, ft.useState)(!1), P = (0, ft.useContext)(me), {
            isFreePlan: C
        } = (0, ft.useContext)(pr), [{
            step: k
        }] = Ka(), T = (0, ft.useRef)(), R = (0, ft.useRef)(), I = (0, ft.useRef)(), B = "widget-selector", L = n === B, D = L && r === "presets", E = (0, ft.useMemo)(() => {
            let ee = [...u.project, ...u.global],
                oe = P.isOwner && C;
            return ee.length === 0 && oe
        }, [u, P.isOwner, C]);
        Wi("w", {
            handler: () => {
                p("widget-selector", !1)
            }
        }, [c, m]), (0, ft.useEffect)(() => {
            L && l ? .nestedPanel === "presets" && (i("presets"), h("my-presets"))
        }, [L]), (0, ft.useEffect)(() => {
            k ? .name === "TextWidget" && n !== B && (p(B, !1), i("widgets"))
        }, [k]), (0, ft.useEffect)(() => {
            (!n || n !== "widget-selector") && (h(null), i("widgets"))
        }, [n]), (0, ft.useEffect)(() => {
            let ee = new AbortController;
            return mv({
                signal: ee.signal,
                projectId: P.project._id,
                ownerId: P.owner._id
            }), () => ee.abort()
        }, [P.project._id, P.owner._id]), (0, ft.useEffect)(function() {
            let oe = [...u.readymag, ...u.global, ...u.project];
            if (!oe.length) return;
            let H = oe.reduce((he, le) => [...he, ...le.widgets], []),
                se = It.getUsedFontsFromWidgetsModels({
                    models: H
                }, It.fontsShortList);
            It.appendFontsCssToDocument({
                fonts: se,
                version: "edit"
            })
        }, [u]), (0, ft.useEffect)(function() {
            let oe = [...u.readymag, ...u.global, ...u.project];
            if (oe.length === 0 || !D) return;
            let H = {
                    textStyles: Bc(),
                    listStyles: Ec(),
                    linkStyles: Ha()
                },
                se = VS(oe, H);
            return H.textStyles !== se.textStyles && Mc(se.textStyles), H.listStyles !== se.listStyles && zc(se.listStyles), H.linkStyles !== se.linkStyles && Rc(se.linkStyles),
                function() {
                    let le = {
                            textStyles: Bc(),
                            listStyles: Ec(),
                            linkStyles: Ha()
                        },
                        ue = US(le);
                    Mc(ue.textStyles), zc(ue.listStyles), Rc(ue.linkStyles)
                }
        }, [u, D]), (0, ft.useEffect)(() => {
            Hr(["TextWidget", "PictureWidgetSelect", "ButtonWidgetSelect"], {
                show: !L
            })
        }, [L]);

        function $(ee) {
            i(ee), h(null), ee === "presets" && re(fe.PresetClick)
        }
        let G = (0, ft.useCallback)(ee => {
                b.current && (clearTimeout(b.current), b.current = void 0), !S && h(ee)
            }, [S]),
            de = (0, ft.useCallback)(() => {
                b.current && (clearTimeout(b.current), b.current = void 0), b.current = setTimeout(() => {
                    x.current || h(null)
                }, 100)
            }, []),
            Q = (0, ft.useMemo)(() => new Backbone.Model({
                workspace: d,
                onClose: ee => {
                    s(), d ? .createWidget(ee, l)
                }
            }), [s, d]),
            U = (0, ft.useMemo)(() => g === "my-presets" ? [] : (u.readymag.filter(ee => ee.category ? ._id === g) ? ? []).sort((ee, oe) => ee.position - oe.position), [g, u.readymag]),
            Z = {
                buttonPadding: "0 16px",
                onAnimationStart: () => v(!0),
                onAnimationComplete: () => {
                    I.current ? .update ? .(), T.current ? .update ? .(), R.current ? .update ? .(), v(!1)
                }
            },
            xe = (0, ft.useMemo)(() => g === "my-presets" && E ? !1 : g !== null && r === "presets", [g, r, E]),
            ye = (0, ft.useCallback)(ee => {
                G(ee._id)
            }, [G]),
            ve = (0, ft.useMemo)(() => {
                let ee = Xv(k);
                return ee.modifiers.push({
                    name: "offset",
                    enabled: !0,
                    options: {
                        offset: [0, 48]
                    }
                }), ee
            }, [k]);
        return w(Yt, {
            name: "widget-selector",
            button: o,
            skidding: -84,
            panelPosition: {
                height: "auto"
            },
            ArrowProps: {
                backgroundColor: Ie("black", .96)
            },
            onToggle: () => {
                Ld(["PictureWidget", "ButtonWidget"]), Oe(["PictureWidget", "ButtonWidget"])
            },
            ...t,
            children: [a(ds, {
                isOpen: xe,
                children: a(f, {
                    backgroundColor: "black",
                    onMouseEnter: () => x.current = !0,
                    onMouseLeave: () => {
                        x.current = !1, de()
                    },
                    children: a(f, {
                        width: 432,
                        height: "100%",
                        backgroundColor: "black",
                        borderRadius: 8,
                        children: g === "my-presets" ? a(FS, {
                            global: u.global,
                            project: u.project,
                            isOwner: P.isOwner
                        }) : a(qm, {
                            presets: U
                        })
                    })
                })
            }), a(f, {
                zIndex: 1,
                maxHeight: "100%",
                borderRadius: 8,
                backgroundColor: "#313131",
                children: w(cr, {
                    dynamicHeight: !0,
                    value: r,
                    transition: {
                        mass: 1,
                        stiffness: 210,
                        damping: 20,
                        duration: .2
                    },
                    onChange: $,
                    children: [a(Qt, {
                        value: "widgets",
                        renderButton: () => a(mt, {
                            targetSteps: ["TextWidget", "PictureWidgetSelect", "ButtonWidgetSelect"],
                            stepContext: {
                                isPresetPanel: r === "presets"
                            },
                            listenReferenceResize: !0,
                            modifiers: [{
                                name: "offset",
                                enabled: !0,
                                options: {
                                    offset: [0, 24]
                                }
                            }],
                            show: r === "widgets" ? !1 : void 0,
                            position: "right",
                            popperRef: T,
                            children: a(Fb, {
                                children: "Widgets"
                            })
                        }),
                        ...Z,
                        children: ee => a(f, {
                            ref: ee,
                            paddingLeft: 8,
                            children: a(Td, {
                                model: Q,
                                context: Na,
                                children: a(mt, {
                                    targetSteps: ["TextWidget", "PictureWidgetSelect", "ButtonWidgetSelect"],
                                    indent: 8,
                                    listenReferenceResize: !0,
                                    modifiers: ve.modifiers,
                                    componentsProps: ve.componentProps,
                                    show: r !== "widgets" ? !1 : void 0,
                                    popperRef: R,
                                    children: a(f, {
                                        children: a(PS, {
                                            disableKeyboardNavigation: r === "presets",
                                            highlightedWidget: k ? .widgetSelectionType
                                        })
                                    })
                                })
                            })
                        })
                    }), a(Qt, {
                        value: "presets",
                        renderButton: () => w(f, {
                            position: "relative",
                            children: [a(mt, {
                                indent: 24,
                                eduTips: "eduTipUsePresets",
                                leaveDelay: 100,
                                instance: !0,
                                closeOnTargetClick: !0,
                                position: "right",
                                children: a(Fb, {
                                    divider: !0,
                                    children: "Presets"
                                })
                            }), r === "presets" ? a(f, {
                                as: "span",
                                position: "absolute",
                                top: 12,
                                right: 0,
                                onClick: ee => ee.stopPropagation(),
                                children: a(Yo, {
                                    href: "https://help.readymag.com/hc/en-us/articles/14645512799259-Presets"
                                })
                            }) : null]
                        }),
                        ...Z,
                        children: ee => a(f, {
                            ref: ee,
                            height: "calc(100vh - 210px)",
                            children: a(FR, {
                                open: E && g === "my-presets",
                                popperRef: I,
                                children: a(OS, {
                                    selectedCategory: g,
                                    onSelectCategory: ye,
                                    onDeselectCategory: de
                                })
                            })
                        })
                    })]
                })
            })]
        })
    },
    FR = ({
        children: e,
        open: o,
        popperRef: t
    }) => a(Bt, {
        indent: 8,
        open: o,
        skidding: 20,
        placement: "right-start",
        listenReferenceResize: !0,
        componentsProps: {
            arrow: {
                marginTop: "-10px",
                color: "blue"
            },
            tooltip: {
                backgroundColor: "blue"
            }
        },
        text: "Upgrade your plan to save new presets",
        popperRef: t,
        children: a("span", {
            children: e
        })
    }),
    Fb = N(ge)
`
  color: white;
  height: 48px;
  width: 100%;
  text-align: left;
  position: relative;
  padding-left: 0px;
  padding-right: 0px;
  box-sizing: border-box;
  position: relative;

  ${e=>e.divider&&ne`
      &:before {
        content: '';
        position: absolute;
        left: 0;
        top: -1px;
        width: 100%;
        height: 2px;
        background-color: rgba(162, 162, 162, 0.24);
      }
    `}
`;
Fb.defaultProps = {
    textStyle: "subheading"
};
var GS = HR;
var Xt = M(F());
Jt();
Ut();
Bo();
W();
be();
var jS = M(F());
W();
Tt();
Ue();
Gs();
be();
Ut();
Cd();
Di();
Ho();
y();
var NR = 208;

function Ym({
    children: e,
    title: o,
    expanded: t = !1,
    onToggle: r,
    hideArrows: i = !1,
    ...n
}) {
    let s = (0, jS.useContext)(je),
        {
            isHovered: l,
            ...p
        } = Ze();
    return s.viewport !== "default" ? a(f, {
        width: 224,
        borderRadius: "8px",
        color: "black",
        backgroundColor: Be(.04, q.lightGray),
        overflow: "hidden",
        backdropFilter: "blur(4px)",
        ...n,
        children: a(cr, {
            dynamicHeight: !0,
            value: t ? 1 : 0,
            onChange: () => r ? .(!t),
            transition: {
                duration: .2,
                ease: zs.easeOutQuint
            },
            children: a(Qt, {
                value: 1,
                renderButton: () => w(f, {
                    display: "flex",
                    justifyContent: "space-between",
                    alignItems: "center",
                    height: 46,
                    width: 192,
                    padding: "13px 0",
                    margin: "0 auto",
                    cursor: "pointer",
                    role: "button",
                    ...p,
                    children: [a(we, {
                        children: o
                    }), !i && a(f, {
                        color: l ? "black" : "gray",
                        transition: ".1s ease",
                        children: t ? a(wv, {}) : a(xv, {})
                    })]
                }),
                containerHeight: NR,
                children: d => a(f, {
                    ref: d,
                    children: e(t)
                })
            })
        })
    }) : null
}
var ma = M(F()),
    UR = M(ir());
Tt();
W();
be();
Ue();
rI();
te();
var QS = M(Ht());
_u();
Kt();
var qS = M(lt());
Bo();
Pu();
var YS = e => {
        let o = `mirror-${e.id}-${Date.now()}`,
            t = Object.create(e, {
                _listenId: {
                    value: qS.default.uniqueId("l")
                },
                _events: {
                    value: {},
                    writable: !0
                },
                id: {
                    value: o
                },
                mirroredId: {
                    value: e.id
                },
                viewport: {
                    value: "default",
                    writable: !0
                },
                widgets_collection: {
                    value: void 0,
                    writable: !0
                },
                mirror: {
                    value: !0
                },
                attributes: {
                    value: new Proxy(e.attributes, {
                        get(r, i) {
                            let n = `viewport_${t.viewport}`,
                                s = t.viewport === e.getViewport();
                            return i === "_id" || i === "hotspots_group_id" ? o : s ? r[i] : t.viewport !== "default" && i in e[n] || De.viewport_fields_common.includes(i) ? e[n][i] : i in e.viewport_default ? e.viewport_default[i] : r[i]
                        }
                    })
                },
                getViewport: {
                    value() {
                        return this.viewport
                    }
                },
                setViewport: {
                    value(r) {
                        this.viewport = r
                    }
                },
                get: {
                    value(r) {
                        return this.attributes[r]
                    }
                },
                set: {
                    value() {
                        return this
                    }
                },
                sync: {
                    value() {}
                },
                save: {
                    value() {}
                },
                destroy: {
                    value(r) {
                        t.stopListening(e), this.widgets_collection ? .models.forEach(i => i.destroy()), this.destroyed = !0, e.destroy.call(this, r)
                    }
                },
                triggerReady: {
                    value() {}
                }
            });
        return e.widgets_collection && (t.widgets_collection = new Cu(e.widgets_collection.models.map(r => YS(r)), {
            parent_widget: t,
            page: t.collection.page
        })), t.listenTo(e, "all", function(r, i, n, s) {
            /:/.test(r) && !s ? s = {
                socketUpdate: !0
            } : s && typeof s == "object" ? s = { ...s,
                socketUpdate: !0
            } : typeof n == "object" && (n = { ...n,
                socketUpdate: !0
            }), i ? .id === t.mirroredId && t.trigger(r, t, n, s)
        }), t
    },
    XS = YS;
Rs();
Ut();
pk();
te();
W();
y();
var WR = e => a("svg", {
        viewBox: "0 0 20 12",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            d: "M0 11h20v1H0v-1zM4 0h12a2 2 0 012 2v8H2V2a2 2 0 012-2z",
            fill: "currentColor",
            fillRule: "nonzero"
        })
    }),
    VR = f.withComponent(N(WR)
        `
      display: block;
    `),
    KS = VR;
var Nb = M(F());
Ut();
Cd();
y();
Jt();
y();
var yp = 206,
    Xm = 138,
    ZS = 16,
    JS = e => {
        let o = pt.calcBoundingBoxForBlock(e, !0, !1),
            t = pt.calcBoundingBoxForBlock(e, !0, !0),
            r = pt.getScaleToFit(t, {
                width: yp - ZS * 2,
                height: Xm - ZS * 2
            }),
            i = Math.min(r, 1),
            n = o.left + o.width / 2 - (t.left + t.width / 2),
            s = o.top + o.height / 2 - (t.top + t.height / 2);
        e.$el[0].style.setProperty("transform", `scale(${i}) translate(${n}px, ${s}px)`)
    },
    GR = N(f)
`
  & > * {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    width: ${yp}px;
    height: ${Xm}px;
    border-radius: 7px;
  }

  & > * > * {
    // position static и нулевые поля нужны чтобы сбрасывать позицию и смещение у fixed-виджетов внутри кихола.
    position: static !important;
    z-index: 0 !important;
    flex: none;
    margin: 0 !important;
  }
`, jR = () => {
    let e = (0, ma.useRef)(null),
        {
            workspace: o,
            selectedBlocks: t,
            viewport: r,
            blocks: i,
            page: n,
            mag: s,
            eCommerceManager: l
        } = (0, ma.useContext)(je),
        p = (0, ma.useContext)(_t),
        d = t.length === 1 ? t[0] : void 0,
        c = d ? .model.get("hidden"),
        m = d ? .model.viewport_default.hidden,
        u = () => {
            o ? .trigger("viewportShortcutPressed", "default"), d ? .scrollTo(), m ? (d ? .blink(), p ? .togglePanel("stackpanel")) : d && d.selectFromWidgetBar()
        };
    return (0, ma.useEffect)(() => {
        let g, h, b;
        if (r !== "default" && d && !c) {
            let x = i.find(v => v.model.attributes.type === "background") ? .model;
            h = XS(d.model), h.setViewport("default");
            let S = new ku({
                page: n,
                mag: s,
                $container: (0, QS.default)(e.current),
                width: h.attributes.w,
                height: h.attributes.h,
                background: ck({ ...x ? .viewport_default,
                    video : x ? .attributes.video
                }, {
                    width: yp,
                    height: Xm
                }),
                eCommerceManager: l,
                viewport: r
            });
            g = new zo[h.attributes.type](h, S), g.isStandalone = !0, g.autoRasterize = !1, g.$standaloneContainer = S.$el, g.render(), g.redrawPosition(g.model, {
                forceRedraw: !0
            }), JS(g), g.listenTo(h, "change change:w change:h change:angle change:blocks change:shadow", v => {
                let P = v.changedAttributes(),
                    C = () => {
                        g.redrawPosition(g.model, {
                            forceRedraw: !0
                        }), JS(g)
                    };
                if (P) {
                    if (typeof P == "object" && ("h" in P || "w" in P || "angle" in P)) C();
                    else if (typeof P == "object" && ("blocks" in P || "style" in P || "entityMap" in P)) {
                        C();
                        let k = g.model.attributes.h,
                            T = g.model.attributes.entityMap;
                        setTimeout(() => {
                            k !== g.model.attributes.h ? C() : g.model.attributes.type === "text" && T !== g.model.attributes.entityMap && g.refreshState()
                        }, 1e3)
                    }
                } else return
            }), (g.$el[0] ? .querySelector(".frameborder")).style.setProperty("display", "none")
        }
        return () => {
            g ? .stopListening(), g ? .destroy(), h ? .destroy(), b ? .remove()
        }
    }, [r, c, d, i, s, n]), w(Y, {
        children: [d && !c && w(f, {
            position: "relative",
            width: yp,
            height: Xm,
            boxShadow: "0 0 0 1px rgba(64, 64, 64, 0.08)",
            borderRadius: "8px",
            margin: "0 auto",
            children: [a(GR, {
                overflow: "hidden",
                ref: e
            }), m && w(Y, {
                children: [a(f, {
                    position: "absolute",
                    left: "0",
                    top: "0",
                    width: "100%",
                    height: "100%",
                    borderRadius: "8px",
                    backgroundColor: Be(.2, q.black)
                }), a(ol, {
                    position: "absolute",
                    top: 0,
                    bottom: 0,
                    right: 0,
                    left: 0,
                    margin: "auto",
                    color: "white"
                })]
            })]
        }), a(f, {
            boxSizing: "content-box",
            display: "flex",
            width: yp,
            height: 16,
            alignItems: "center",
            color: "darkGray",
            margin: "0 auto",
            padding: "12px 0 14px 0",
            children: d ? w(Y, {
                children: [a(KS, {
                    "aria-label": "Switch to desktop",
                    cursor: "pointer",
                    onClick: u,
                    width: 20,
                    height: 12,
                    css: ne `
                &:hover {
                  opacity: 0.8;
                }
              `
                }), a(we, {
                    textStyle: "small",
                    margin: "0 0 0 8px",
                    children: m ? "Hidden on desktop" : ""
                })]
            }) : null
        })]
    })
};
var e4 = jR;
Is();
var ga = (e, o, t = {}, r = {}) => {
        let i = co.extend(e),
            n = new i({
                propsData: t
            });
        n.$mount();
        for (let s of Object.keys(r)) n.$on(s, r[s]);
        return o.appendChild(n.$el), n
    },
    Xr = e => {
        e.$destroy(), e.$el.parentNode ? .removeChild(e.$el)
    };
AI();
Tt();
Ue();
Ye();
Tv();
te();
W();
y();
var qR = e => a("svg", {
        viewBox: "0 0 16 2",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            d: "M.536 1.95a1 1 0 011-1h12.828a1 1 0 010 2H1.536a1 1 0 01-1-1z",
            fill: "currentColor",
            fillRule: "evenodd"
        })
    }),
    YR = f.withComponent(N(qR)
        `
      display: block;
    `),
    t4 = YR;
He();
kt();
Di();
y();

function Km({
    type: e
}) {
    switch (e) {
        case "default":
            return a(Jd, {});
        case "phone_portrait":
            return a(eu, {});
        case "tablet_portrait":
            return a(tu, {});
        default:
            let o = e;
            throw new Error(`Unknown viewport type: ${o}`)
    }
}
Ee();
Ho();
No();
gh();
vr();
y();
var o4 = ["phone_portrait", "tablet_portrait", "default"],
    [XR] = Or({
        keyholeExpanded: sessionStorage.getItem("keyholeExpanded") === "true",
        autolayoutsExpanded: sessionStorage.getItem("autolayoutsExpanded") !== "false"
    });

function r4({
    viewport: e,
    viewportWidth: o,
    selectMode: t,
    isActive: r,
    isHovered: i,
    disableHover: n,
    onRemoveDevice: s,
    onViewportWidthClick: l,
    onAddDevice: p,
    onDeviceClick: d,
    onMouseEnter: c,
    onMouseLeave: m,
    dataTestid: u,
    disableRemoveDevice: g,
    disableViewportWidth: h
}) {
    let {
        isHovered: b,
        ...x
    } = Ze();

    function S(v) {
        v.stopPropagation()
    }
    return w(f, {
        "aria-label": Cc[e.name],
        position: "relative",
        height: 48,
        display: "flex",
        alignItems: "center",
        justifyContent: "flex-start",
        transition: ".1s ease-in",
        padding: t ? "0 16px" : "0 8px",
        backgroundColor: !n && (t || i || r) ? "#E1E1E1" : "transparent",
        borderRadius: 8,
        marginBottom: t ? 4 : 0,
        onClick: r ? void 0 : t ? p : d,
        cursor: !r || t ? "pointer" : void 0,
        role: "button",
        userSelect: "none",
        onMouseEnter: c,
        onMouseLeave: m,
        "data-testid": u,
        children: [a(f, {
            width: 38,
            children: a(Ge, {
                variant: "clean",
                textStyle: "small",
                color: "gray",
                disabled: h,
                onClick: v => {
                    S(v), typeof l < "u" && l(), typeof m < "u" && m()
                },
                children: o
            })
        }), a(f, {
            width: 61,
            display: "inline-flex",
            justifyContent: "center",
            children: a(Km, {
                type: e.name
            })
        }), a(f, {
            flexGrow: 1,
            display: "inline-flex",
            justifyContent: "flex-end",
            children: t ? a(mt, {
                targetSteps: e.name === "phone_portrait" ? "CreateLayoutSelect" : void 0,
                indent: 24,
                children: a(f, {
                    color: i ? "black" : "gray",
                    children: a(Nc, {
                        marginRight: -4
                    })
                })
            }) : e.name === "default" ? a(we, {
                textStyle: "small",
                color: "gray",
                children: "Primary"
            }) : a(Ge, {
                color: b ? "black" : "gray",
                ...x,
                disabled: g,
                variant: "unstyled",
                "aria-label": "remove-viewport",
                onClick: v => {
                    typeof s < "u" && (S(v), s())
                },
                children: a(t4, {
                    width: "16px",
                    height: "16px"
                })
            })
        })]
    })
}

function Wb({
    children: e,
    button: o,
    ...t
}) {
    let {
        viewport: r,
        viewports: i,
        setViewport: n,
        page: s,
        workspace: l,
        selectedBlocks: p
    } = (0, Xt.useContext)(je), {
        projectMag: d,
        currentPageNum: c
    } = (0, Xt.useContext)(me), {
        currentPanel: m,
        openPanel: u
    } = (0, Xt.useContext)(_t), [g, h] = (0, Xt.useState)(r), [b, x] = (0, Xt.useState)(!1), S = (0, Xt.useRef)(), [v, P] = (0, Xt.useState)(!1), [{
        step: C
    }] = Ka(), k = (0, Xt.useMemo)(() => i.sort((H, se) => o4.indexOf(H.name) - o4.indexOf(se.name)), [i]), T = k.every(H => H.enabled), {
        isHovered: R,
        ...I
    } = Ze(), [B, L] = (0, Xt.useState)(null), D = Od(), [E] = uo(), [$, G] = XR(), de = (0, Xt.useMemo)(() => p ? .length === 1 || !1, [p]), [Q, U] = (0, Xt.useState)(de);

    function Z(H) {
        L(null), (H === "default" || s ? .getViewportParam(H, "enabled")) && n(H), H === "phone_portrait" && Oe("SwitchToMobileLayout")
    }

    function xe(H, se) {
        L(null), se ? (s ? .setViewportParam(H, "enabled", !0), n(H)) : (s ? .setViewportParam(H, "enabled", !1), H === r && n("default"));
        let {
            viewport_phone_portrait: he,
            viewport_tablet_portrait: le
        } = s ? .attributes || {}, ue = H === "tablet_portrait" ? {
            viewport_tablet_portrait: le
        } : {
            viewport_phone_portrait: he
        };
        s ? .save(ue, {
            patch: !0
        }), H === "phone_portrait" && !D ? re(fe.ViewportFeature, {
            featureType: "mobile viewport"
        }) : H === "tablet_portrait" && !D && re(fe.ViewportFeature, {
            featureType: "tablet viewport"
        })
    }
    let ye = H => {
            G({ ...$,
                keyholeExpanded: H
            })
        },
        ve = H => {
            G({ ...$,
                autolayoutsExpanded: H
            }), sessionStorage.setItem("autolayoutsExpanded", H ? "true" : "false")
        };
    (0, Xt.useEffect)(() => {
        de ? (ye(!0), U(!0)) : (ye(!1), U(!1))
    }, [de]), (0, Xt.useEffect)(() => {
        let H = se => {
            k.find(le => le.name === se) ? .enabled && (u("viewports"), n(se))
        };
        return l ? .on("viewportShortcutPressed", H), () => {
            l ? .off("viewportShortcutPressed", H)
        }
    }, [l, k]), (0, Xt.useEffect)(() => {
        r !== g && h(r), r === "phone_portrait" && Oe("CreateLayoutSelect")
    }, [r]), (0, Xt.useEffect)(() => {
        r !== g && n(g)
    }, [g]), (0, Xt.useEffect)(() => {
        b || S.current && Xr(S.current)
    }, [b]), (0, Xt.useEffect)(() => {
        let H = k.filter(se => se.enabled === !0);
        D && m === "viewports" && r === "default" && C ? .name === "CreateLayout" && b && H.length === 1 && Oe("CreateLayout"), D && m === "viewports" && r === "default" && C ? .name === "OpenMobileLayout" && b && H.length === 2 && Oe("OpenMobileLayout")
    }, [b, m, r, k]), (0, Xt.useEffect)(() => {
        D && r === "default" && C ? .name === "CreateLayoutSelect" && Hr("CreateLayoutSelect", {
            show: !b
        })
    }, [b, r]);
    let ee = r === "phone_portrait" && (m === "viewports" || m === void 0),
        oe = `page-${c}-${r}`;
    return a(Yt, {
        name: "viewports",
        button: o,
        skidding: 28,
        alwaysOpen: ee,
        onToggle: H => {
            x(H)
        },
        panelPosition: {
            height: "auto"
        },
        "data-testid": "viewport-panel",
        ArrowProps: {
            stroke: Be(.84, q.gray)
        },
        ...t,
        children: ({
            popoverShown: H
        }) => (r === "phone_portrait" || H) && w(Y, {
            children: [r !== "default" && w(Y, {
                children: [Q && a(Ym, {
                    title: "This widget on desktop",
                    expanded: $.keyholeExpanded,
                    width: "100%",
                    marginBottom: 6,
                    hideArrows: !0,
                    boxShadow: `0 0 0 2px inset ${Be(.84,q.gray)}`,
                    children: se => se ? a(e4, {}) : void 0
                }, "collapsiblePanel"), a(Ym, {
                    title: "Arrange widgets",
                    expanded: $.autolayoutsExpanded,
                    onToggle: ve,
                    width: "100%",
                    boxShadow: `0 0 0 2px inset ${Be(.84,q.gray)}`,
                    children: se => se ? a(Gy, {}, oe) : void 0
                })]
            }), v ? a(f, {
                "aria-label": "New viewport select",
                children: k.map(se => se.enabled ? null : a(r4, {
                    selectMode: !0,
                    viewport: se,
                    viewportWidth: d.getViewportWidth(se.name),
                    dataTestid: `add-${se.name}-viewport-button`,
                    onAddDevice: () => {
                        xe(se.name, !0), P(!1), window.RM.constructorRouter.trigger("notice:triggerMetrics", "viewportAdded")
                    }
                }, Cc[se.name]))
            }) : null, w(f, {
                "aria-label": "Viewport panel",
                backgroundColor: "lightGray",
                borderRadius: "2rm",
                boxShadow: `0 0 0 2px inset ${Be(.84,q.gray)}`,
                display: H ? "block" : "none",
                marginTop: 6,
                children: [w(f, {
                    display: "flex",
                    justifyContent: "space-between",
                    padding: "11px 15px 13px 15px",
                    children: [w(f, {
                        display: "flex",
                        alignItems: "baseline",
                        children: [a(we, {
                            textStyle: "subheading",
                            children: "Devices"
                        }), a(f, {
                            marginLeft: "1rm",
                            children: a(we, {
                                color: "gray",
                                textStyle: "small",
                                children: "(D)"
                            })
                        })]
                    }), !T && !v && a(mt, {
                        targetSteps: ["CreateLayoutSelect"],
                        indent: 16,
                        children: a(Ge, {
                            "aria-label": "Add viewport",
                            color: R ? "black" : "gray",
                            ...I,
                            variant: "unstyled",
                            onClick: () => P(!v),
                            "data-testid": "add-viewport",
                            disabled: E,
                            children: a(Nc, {})
                        })
                    })]
                }), w(f, {
                    padding: "0 8px 8px",
                    children: [a(f, {
                        position: "relative",
                        top: 24,
                        children: a(mt, {
                            position: "right",
                            targetSteps: ["SwitchToMobileLayout"],
                            indent: 16,
                            children: a("div", {})
                        })
                    }), k.map(se => {
                        let he = r === se.name,
                            le = B === se.name;
                        return se.enabled ? a(r4, {
                            isActive: he,
                            isHovered: le,
                            disableHover: he && B !== null && !le,
                            viewport: se,
                            viewportWidth: d.getViewportWidth(se.name),
                            onDeviceClick: () => Z(se.name),
                            onRemoveDevice: () => xe(se.name, !1),
                            onMouseEnter: () => L(se.name),
                            onMouseLeave: () => L(null),
                            onViewportWidthClick: () => u("guides"),
                            dataTestid: `${se.name}-viewport-button`,
                            disableRemoveDevice: E,
                            disableViewportWidth: E
                        }, se.name) : null
                    })]
                })]
            })]
        })
    })
}
var Qr = M(F());
W();
Jt();
var vi = M(Ht()),
    Ne = M(lt());
Ye();
Is();
var iye = M(lt()),
    i4 = M(Vb());
Array.from || (Array.from = function(e) {
    return [].slice.call(e)
});

function KR() {
    function e(u) {
        u.parentElement.removeChild(u)
    }

    function o(u, g, h) {
        let b = h === 0 ? u.children[0] : u.children[h - 1].nextSibling;
        u.insertBefore(g, b)
    }

    function t(u, g) {
        return u.map(h => h.elm).indexOf(g)
    }

    function r(u, g, h) {
        if (!u) return [];
        let b = u.map(S => S.elm),
            x = [...g].map(S => b.indexOf(S));
        return h ? x.filter(S => S !== -1) : x
    }

    function i(u, g) {
        this.$nextTick(() => this.$emit(u.toLowerCase(), g))
    }

    function n(u) {
        return g => {
            this.realList !== null && this["onDrag" + u](g), i.call(this, u, g)
        }
    }
    let s = ["Start", "Add", "Remove", "Update", "End", "TouchMove"],
        l = ["Choose", "Sort", "Filter", "Clone"],
        p = ["Move", ...s, ...l].map(u => "on" + u);
    var d = null;
    return {
        name: "draggable",
        props: {
            options: Object,
            onList: {
                type: Array,
                required: !1,
                default: null
            },
            value: {
                type: Array,
                required: !1,
                default: null
            },
            noTransitionOnDrag: {
                type: Boolean,
                default: !1
            },
            clone: {
                type: Function,
                default: u => u
            },
            element: {
                type: String,
                default: "div"
            },
            move: {
                type: Function,
                default: null
            }
        },
        data() {
            return {
                transitionMode: !1,
                componentMode: !1
            }
        },
        render(u) {
            let g = this.$slots.default;
            if (g && g.length === 1) {
                let x = g[0];
                x.componentOptions && x.componentOptions.tag === "transition-group" && (this.transitionMode = !0)
            }
            let h = g,
                {
                    footer: b
                } = this.$slots;
            return b && (h = g ? [...g, ...b] : [...b]), u(this.element, null, h)
        },
        mounted() {
            if (this.componentMode = this.element.toLowerCase() !== this.$el.nodeName.toLowerCase(), this.componentMode && this.transitionMode) throw new Error(`Transition-group inside component is not supported. Please alter element value or remove transition-group. Current element value: ${this.element}`);
            var u = {};
            s.forEach(h => {
                u["on" + h] = n.call(this, h)
            }), l.forEach(h => {
                u["on" + h] = i.bind(this, h)
            });
            let g = Object.assign({}, this.options, u, {
                onMove: (h, b) => this.onDragMove(h, b)
            });
            !("draggable" in g) && (g.draggable = ">*"), this._sortable = new i4.default(this.rootContainer, g), this.computeIndexes(), this.$el._draggable = this
        },
        beforeDestroy() {
            this._sortable.destroy()
        },
        computed: {
            rootContainer() {
                return this.transitionMode ? this.$el.children[0] : this.$el
            },
            isCloning() {
                return !!this.options && !!this.options.group && this.options.group.pull === "clone"
            },
            realList() {
                return this.list ? this.list : this.value
            }
        },
        watch: {
            options: {
                handler(u) {
                    for (var g in u) p.indexOf(g) === -1 && this._sortable.option(g, u[g])
                },
                deep: !0
            },
            realList() {
                this.computeIndexes()
            }
        },
        methods: {
            doDrop(u, g) {
                this._sortable && this._sortable.forceDrop(u, g)
            },
            dropIntoGroup(u) {
                this._sortable && this._sortable.dropIntoGroup(u)
            },
            getChildrenNodes() {
                if (this.componentMode) return this.$children[0].$slots.default;
                let u = this.$slots.default;
                return this.transitionMode ? u[0].child.$slots.default : u
            },
            computeIndexes() {
                this.$nextTick(() => {
                    this.visibleIndexes = r(this.getChildrenNodes(), this.rootContainer.children, this.transitionMode)
                })
            },
            getUnderlyingVm(u) {
                let g = t(this.getChildrenNodes() || [], u);
                if (g === -1) return null;
                let h = this.realList[g];
                return {
                    index: g,
                    element: h
                }
            },
            getUnderlyingPotencialDraggableComponent({
                __vue__: u
            }) {
                return !u || !u.$options || u.$options._componentTag !== "transition-group" ? u : u.$parent
            },
            emitChanges(u) {
                this.$nextTick(() => {
                    this.$emit("change", u)
                })
            },
            alterList(u) {
                this.list ? u(this.list) : (this.alteredList || (this.alteredList = [...this.value]), u(this.alteredList), this.$nextTick(() => {
                    this.alteredList && (this.$emit("input", [...this.alteredList]), this.alteredList = null)
                }))
            },
            spliceList() {
                let u = g => g.splice(...arguments);
                this.alterList(u)
            },
            updatePosition(u, g) {
                let h = b => b.splice(g, 0, b.splice(u, 1)[0]);
                this.alterList(h)
            },
            getRelatedContextFromMoveEvent({
                to: u,
                related: g
            }) {
                let h = this.getUnderlyingPotencialDraggableComponent(u);
                if (!h) return {
                    component: h
                };
                let b = h.realList,
                    x = {
                        list: b,
                        component: h
                    };
                if (u !== g && b && h.getUnderlyingVm) {
                    let S = h.getUnderlyingVm(g);
                    if (S) return Object.assign(S, x)
                }
                return x
            },
            getVmIndex(u) {
                let g = this.visibleIndexes,
                    h = g.length;
                return u > h - 1 ? h : g[u]
            },
            getComponent() {
                return this.$slots.default[0].componentInstance
            },
            resetTransitionData(u) {
                if (!this.noTransitionOnDrag || !this.transitionMode) return;
                var g = this.getChildrenNodes();
                g[u].data = null;
                let h = this.getComponent();
                h.children = [], h.kept = void 0
            },
            onDragTouchMove(u) {
                u.data.draggedContext = this.getUnderlyingVm(u.data.dragEl), u.data.nextDraggedContext = this.getUnderlyingVm(u.data.next), u.data.prevDraggedContext = this.getUnderlyingVm(u.data.prev), u.data.sortable = this, this.$emit("touchMove", u, u.item)
            },
            onDragStart(u) {
                this.context = this.getUnderlyingVm(u.item), u.item._underlying_vm_ = this.clone(this.context.element), u.context = this.context, d = u.item
            },
            onDragAdd(u) {
                let g = u.item._underlying_vm_;
                if (u.data && u.data.context && (g = u.data.context.element), g === void 0) return;
                e(u.item);
                let h = this.getVmIndex(u.newIndex);
                this.alteredList && u.data && u.data.prevContext && (h = this.alteredList.indexOf(u.data.prevContext.element) + 1), this.spliceList(h, 0, g), this.computeIndexes();
                let b = {
                    element: g,
                    newIndex: h
                };
                this.emitChanges({
                    added: b
                })
            },
            onDragRemove(u) {
                if (o(this.rootContainer, u.item, u.oldIndex), this.isCloning) {
                    e(u.clone);
                    return
                }
                let g = this.context && this.context.index;
                u.data && u.data.context && (g = this.alteredList ? this.alteredList.indexOf(u.data.context.element) : this.value.indexOf(u.data.context.element));
                let h = this.context && this.context.element;
                u.data && u.data.context && (h = u.data.context.element), this.spliceList(g, 1);
                let b = {
                    element: h,
                    oldIndex: g
                };
                this.resetTransitionData(g), this.emitChanges({
                    removed: b
                })
            },
            onDragUpdate(u) {
                e(u.item), u.data.camebackTo ? u.data.camebackTo.before ? u.data.camebackTo.parent.insertBefore(u.item, u.data.camebackTo.before) : u.data.camebackTo.parent.appendChild(u.item) : o(u.from, u.item, u.oldIndex);
                let g = this.context.index;
                u.data && u.data.context && (g = this.alteredList ? this.alteredList.indexOf(u.data.context.element) : this.value.indexOf(u.data.context.element));
                let h = this.getVmIndex(u.newIndex);
                this.alteredList && u.data && u.data.prevContext && (h = this.alteredList.indexOf(u.data.prevContext.element), h < g && h++);
                let b = this.context.element;
                u.data && u.data.context && (b = u.data.context.element), this.updatePosition(g, h);
                let x = {
                    element: b,
                    oldIndex: g,
                    newIndex: h
                };
                this.emitChanges({
                    moved: x
                })
            },
            computeFutureIndex(u, g) {
                if (!u.element) return 0;
                let h = [...g.to.children].filter(v => v.style.display !== "none"),
                    b = h.indexOf(g.related),
                    x = u.component.getVmIndex(b);
                return h.indexOf(d) !== -1 || !g.willInsertAfter ? x : x + 1
            },
            onDragMove(u, g) {
                let h = this.move;
                if (!h || !this.realList) return !0;
                let b = this.getRelatedContextFromMoveEvent(u),
                    x = this.context,
                    S = this.computeFutureIndex(b, u);
                return Object.assign(x, {
                    futureIndex: S
                }), Object.assign(u, {
                    relatedContext: b,
                    draggedContext: x
                }), u.draggable = this, h(u, g)
            },
            onDragEnd(u) {
                this.computeIndexes(), d = null
            }
        }
    }
}
var jl = KR();
Is();
var jb = M(lt());
var Ub = M(Ht());
Is();
var Gb = M(lt());
uu();
Xh();
var ZR = {
        components: {
            PermissionController: pl
        },
        inject: ["layerList"],
        props: ["widget", "group", "fakeLayer", "isNotVisible"],
        data: function() {
            return Object.assign({
                w_name: "",
                tmpName: "",
                locked: !!this.widget.model.get("is_locked"),
                viewportIcon: "no",
                noHoverButtons: !1,
                editable: !1,
                isDragOver: !1,
                isGlobal: !1
            }, {
                hidden: this.widget.model.get("hidden")
            })
        },
        computed: Object.assign({
            selected: function() {
                return this.widget.selected
            },
            customName: function() {
                return this.widget.model.get("name")
            },
            _id: function() {
                return this.widget.model && this.widget.model.get("_id") || ""
            },
            stdName: function() {
                return this.widget.getStandardName()
            },
            icon_style: function() {
                return this.widget.getIconStyle()
            },
            isLoading: function() {
                return this.widget.isLoading
            },
            rawSvg: function() {
                let e = "",
                    o = this.widget.getIconData && this.widget.getIconData() || this.iconData;
                return o && o.$svg && (e = '<div class="container">' + o.$svg.clone().get(0).outerHTML + "</div>"), e
            }
        }, {}),
        watch: Object.assign({
            locked: function(e) {
                this.widget.model.get("is_locked") != e && this.widget.model.save("is_locked", e)
            }
        }, {
            hidden: function(e) {
                this.widget.model.get("hidden") != e && this.widget.workspace.save_group([{
                    _id: this.widget.model.get("_id"),
                    hidden: e
                }])
            }
        }),
        created: function() {
            co.set(this.widget, "iconData", this.widget.iconData || null), co.set(this.widget, "selected", this.widget.selected || !1), co.set(this.widget, "$svg", this.widget.$svg || null), co.set(this.widget.model.attributes, "type", this.widget.model.attributes.type || ""), co.set(this.widget.model.attributes, "name", this.widget.model.attributes.name || ""), this.layerList && !this.fakeLayer && (this.layerList[this.widget.model.attributes._id] = this), this.widget.model.attributes.type == "shape" && co.set(this.widget.model.attributes, "tp", this.widget.model.attributes.tp || ""), this.widget.model.attributes.type == "text" && co.set(this.widget.model.attributes, "text", this.widget.model.attributes.text || "")
        },
        mounted: function() {
            this.$s = this.$refs.editable, this.$s.onkeydown = this.onkeydown, this.locked = !!this.widget.model.get("is_locked"), this.isGlobal = !!this.widget.model.get("is_global"), this.widget.model.on("change:hidden", this.onHiddenChanged), this.widget.model.on("change:is_locked", this.onLockedChanged), this.widget.model.on("change:is_global", this.onGlobalChanged), this.widget.bindUploader instanceof Function && (this._uploader = new Nn(this.widget, {
                fileInput: (0, Ub.default)(this.$refs.fileinput),
                dropZone: (0, Ub.default)(this.$el),
                unique: !0
            }), this._uploader.on("drop dragleave", () => {
                this.isDragOver = !1
            }), this._uploader.on("dragover", () => {
                this.isDragOver = !0
            }), this.widget.bindUploader(this._uploader)), this.widget.workspace.page.on("change:viewport", this.onChangeViewport), this.onChangeViewport()
        },
        destroyed: function() {
            this._uploader && this._uploader.destroy(), this.widget.model.off("change:hidden", this.onHiddenChanged), this.widget.model.off("change:is_locked", this.onLockedChanged)
        },
        updated: function() {
            this.layerList && !this.fakeLayer && (this.layerList[this.widget.model.attributes._id] = this)
        },
        methods: {
            onChangeViewport: function() {
                let e = this.widget.workspace.viewport,
                    o = this.widget.workspace.page.getViewportParam("phone_portrait", "enabled");
                return e === "default" && o && !(this.widget.model.viewport_phone_portrait && this.widget.model.viewport_phone_portrait.hidden) ? this.viewportIcon = "phone_portrait" : e === "phone_portrait" && !(this.widget.model.viewport_default && this.widget.model.viewport_default.hidden) ? this.viewportIcon = "default" : e === "tablet_portrait" && !(this.widget.model.viewport_default && this.widget.model.viewport_default.hidden) ? this.viewportIcon = "default" : this.viewportIcon = "no", this.viewportIcon
            },
            switchToViewport: function(e) {
                this.viewportIcon !== "no" && (this.widget.workspace.trigger("viewportShortcutPressed", this.viewportIcon), this.widget.selected ? this.$emit("onWidgetSelect", this.widget, e) : this.widget.scrollTo())
            },
            layerDblClick: function() {
                this.$emit("onWidgetDblClick")
            },
            layerClick: function(e) {
                e.target == this.$refs.lock || e.target == this.$refs.hide || e.target == this.$refs.vp_icon || e.target == this.$refs.editable && this.editable || this.$el.cooldown && this.$el.cooldown > +new Date || this.$emit("onWidgetSelect", this.widget, e)
            },
            onHiddenChanged: function(e) {
                this.hidden = e.get("hidden")
            },
            onLockedChanged: function(e) {
                this.locked = e.get("is_locked")
            },
            onGlobalChanged: function(e) {
                this.isGlobal = e.get("is_global")
            },
            rename: function(e) {
                if (this.editable) {
                    e.preventDefault(), e.stopPropagation();
                    return
                }
                if (this.$emit("changeEditState", !0), this.widget.model.get("type") == "background") return !1;
                this.editable = !0, Gb.default.delay(() => {
                    this.$refs.editable.focus()
                }, 50)
            },
            onkeydown: function(e) {
                if (e.keyCode == 13) return e.preventDefault(), this.$s.blur(), !1;
                if (e.keyCode == 27) return this.$s.innerText = this.stdName || this.customName, this.editable = !1, e.preventDefault(), !1
            },
            onblur: function() {
                this.widget.model.save("name", this.$refs.editable.innerText.trim()), this.editable = !1, this.$emit("changeEditState", !1)
            },
            editableFocus: () => {
                Gb.default.defer(() => {
                    document.execCommand("selectAll", !1, null)
                })
            }
        }
    },
    JR = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "layer",
            class: {
                selected: e.widget.selected, hidden: e.hidden, locked: e.locked, "is-global": e.isGlobal, "not-visible": e.isNotVisible
            },
            attrs: {
                "aria-label": "Layer",
                "data-id": e._id,
                "layer-id": e._id
            },
            on: {
                dblclick: e.layerDblClick,
                click: function(r) {
                    return r.stopPropagation(), e.layerClick(r)
                }
            }
        }, [t("div", {
            ref: "icon",
            staticClass: "icon",
            class: {
                preloader: e.isLoading, replace: e.isDragOver
            },
            style: e.icon_style,
            domProps: {
                innerHTML: e._s(e.rawSvg)
            }
        }), e._v(" "), t("div", {
            staticClass: "w_name"
        }, [t("span", {
            ref: "editable",
            class: {
                editable: e.editable
            },
            attrs: {
                contenteditable: e.editable
            },
            on: {
                focus: e.editableFocus,
                dblclick: e.rename,
                click: function(r) {
                    e.widget.selected && e.rename(r)
                },
                blur: e.onblur
            }
        }, [e._v(e._s(e.customName || e.stdName))])]), e._v(" "), t("input", {
            ref: "fileinput",
            attrs: {
                name: "upload",
                type: "file",
                "data-url": "/api/upload/lambda/"
            }
        }), e._v(" "), t("i", {
            ref: "vp_icon",
            staticClass: "viewport_icon",
            class: [e.viewportIcon + "_icon", {
                "no-hover": e.noHoverButtons
            }],
            attrs: {
                "aria-label": "Viewport"
            },
            on: {
                click: function(r) {
                    return e.switchToViewport(r)
                },
                mouseleave: function(r) {
                    e.noHoverButtons = !1
                }
            }
        }), e._v(" "), t("permission-controller", {
            attrs: {
                permission: "BaseWidgetCanHide"
            }
        }, [t("div", {
            ref: "hide",
            staticClass: "hide",
            class: {
                active: e.hidden, "no-hover": e.noHoverButtons
            },
            attrs: {
                "aria-label": "Visibility toggle"
            },
            on: {
                click: function(r) {
                    e.noHoverButtons = !0, e.hidden = !e.hidden
                },
                mouseleave: function(r) {
                    e.noHoverButtons = !1
                }
            }
        })]), e._v(" "), t("permission-controller", {
            attrs: {
                permission: "BaseWidgetCanLock"
            }
        }, [t("div", {
            ref: "lock",
            staticClass: "lock",
            class: {
                active: e.locked, "no-hover": e.noHoverButtons
            },
            attrs: {
                "aria-label": "Lock"
            },
            on: {
                click: function(r) {
                    e.noHoverButtons = !0, e.locked = !e.locked
                },
                mouseleave: function(r) {
                    e.noHoverButtons = !1
                }
            }
        })]), e._v(" "), t("div", {
            staticClass: "ph"
        })], 1)
    },
    QR = [],
    ez = void 0,
    tz = void 0,
    oz = void 0,
    rz = !1;

function iz(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "layer.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var nz = iz({
        render: JR,
        staticRenderFns: QR
    }, ez, ZR, tz, rz, oz, !1, void 0, void 0, void 0),
    Jm = nz;
var sz = {
        props: ["group", "expanded", "noArrow"],
        methods: {
            iconstyle: function(e) {
                return this.group[e].getIconStyle && this.group[e].getIconStyle({
                    small: !0
                }) || ""
            },
            toggleExpand: function() {
                this.$emit("click")
            },
            rawSvg: function(e) {
                let o = "",
                    t = this.group[e].iconData || this.group[e].getIconData && this.group[e].getIconData();
                return t && t.$svg && (o = '<div class="container">' + t.$svg.clone().get(0).outerHTML + "</div>"), o
            }
        }
    },
    az = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "groupicon",
            class: {
                "no-arrow": e.noArrow
            },
            on: {
                click: e.toggleExpand
            }
        }, [t("div", {
            staticClass: "icon-wrapper"
        }, [e.group.length == 2 ? t("div", {
            staticClass: "tilegrid two"
        }, [t("div", {
            staticClass: "tile",
            style: e.iconstyle(0),
            domProps: {
                innerHTML: e._s(e.rawSvg(0))
            }
        }), e._v(" "), t("div", {
            staticClass: "tile",
            style: e.iconstyle(1),
            domProps: {
                innerHTML: e._s(e.rawSvg(1))
            }
        })]) : e.group.length == 3 ? t("div", {
            staticClass: "tilegrid three"
        }, [t("div", {
            staticClass: "tile",
            style: e.iconstyle(0),
            domProps: {
                innerHTML: e._s(e.rawSvg(0))
            }
        }), e._v(" "), t("div", {
            staticClass: "tilegrid"
        }, [t("div", {
            staticClass: "tile",
            style: e.iconstyle(1),
            domProps: {
                innerHTML: e._s(e.rawSvg(1))
            }
        }), e._v(" "), t("div", {
            staticClass: "tile",
            style: e.iconstyle(2),
            domProps: {
                innerHTML: e._s(e.rawSvg(2))
            }
        })])]) : e.group.length >= 4 ? t("div", {
            staticClass: "tilegrid four"
        }, [t("div", {
            staticClass: "tile",
            style: e.iconstyle(0),
            domProps: {
                innerHTML: e._s(e.rawSvg(0))
            }
        }), e._v(" "), t("div", {
            staticClass: "tile",
            style: e.iconstyle(1),
            domProps: {
                innerHTML: e._s(e.rawSvg(1))
            }
        }), e._v(" "), t("div", {
            staticClass: "tile",
            style: e.iconstyle(2),
            domProps: {
                innerHTML: e._s(e.rawSvg(2))
            }
        }), e._v(" "), t("div", {
            staticClass: "tile",
            style: e.iconstyle(3),
            domProps: {
                innerHTML: e._s(e.rawSvg(3))
            }
        })]) : e._e()]), e._v(" "), e.noArrow ? e._e() : t("svg", {
            ref: "expand",
            staticClass: "grouptriangle",
            class: {
                expanded: e.expanded
            },
            attrs: {
                width: "9px",
                height: "6px",
                viewBox: "0 0 9 6",
                version: "1.1",
                xmlns: "http://www.w3.org/2000/svg",
                "xmlns:xlink": "http://www.w3.org/1999/xlink"
            },
            on: {
                click: function(r) {
                    e.$emit("expand", r)
                }
            }
        }, [t("g", {
            attrs: {
                id: "Page-1",
                stroke: "none",
                "stroke-width": "1",
                fill: "none",
                "fill-rule": "evenodd"
            }
        }, [t("path", {
            attrs: {
                id: "expand-icon",
                d: "M6.70324633,2.40243474 C7.14328123,2.73246092 7.14264107,3.2680192 6.70324633,3.59756526 L2.29675367,6.90243474 C1.85671877,7.23246092 1.5,7.0536886 1.5,6.50245535 L1.5,-0.502455354 C1.5,-1.05338405 1.85735893,-1.2319808 2.29675367,-0.902434744 L6.70324633,2.40243474 Z",
                fill: "#FFFFFF",
                transform: "translate(4.500000, 3.000000) rotate(-270.000000) translate(-4.500000, -3.000000) "
            }
        })])])])
    },
    lz = [],
    cz = void 0,
    pz = void 0,
    dz = void 0,
    uz = !1;

function mz(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "group_icon.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var gz = mz({
        render: az,
        staticRenderFns: lz
    }, cz, sz, pz, uz, dz, !1, void 0, void 0, void 0),
    n4 = gz;
Xh();
kt();
var s4 = (e = []) => e.filter(o => o.selected).length === 1 && e.length > 1,
    hz = {
        components: {
            Layer: Jm,
            GroupIcon: n4,
            Draggable: jl,
            PermissionController: pl
        },
        inject: ["layerList"],
        props: {
            widget: {},
            group: null,
            onTouchMove: null,
            onMoveGhost: null,
            noArrow: !1,
            fakeGroup: !1,
            noDragndrop: !1,
            isNotVisible: Boolean,
            filterPredicate: {
                type: Function,
                default: () => !1
            }
        },
        data: function() {
            return {
                hidden: !1,
                editable: !1,
                draggableDisabled: !1,
                expanded: s4(this.widget.widgets)
            }
        },
        computed: {
            layerClasses: function() {
                return {
                    fold: !this.expanded,
                    selected: this.selected && !this.widget.hovered,
                    hidden: this.hidden,
                    expanded: this.expanded,
                    groupHidden: this.groupHidden,
                    groupLocked: this.groupLocked,
                    "not-visible": this.isNotVisible
                }
            },
            selected: function() {
                let e = !0;
                return jb.default.each(this.widget.widgets, function(o) {
                    e = e && o.selected
                }), e
            },
            oneWidgetSelected() {
                return s4(this.widget.widgets)
            },
            groupHidden: {
                get: function() {
                    return this.widget.widgets.every(e => e.model.get("hidden"))
                },
                set: function() {
                    this.groupSave({
                        hidden: !this.groupHidden
                    })
                }
            },
            groupLocked: {
                get: function() {
                    return this.widget.widgets.every(e => e.model.get("is_locked"))
                },
                set: function() {
                    this.groupSave({
                        is_locked: !this.groupLocked
                    })
                }
            },
            hasGlobalW: {
                get: function() {
                    return this.widget.widgets.some(e => e.model.get("is_global"))
                }
            },
            name: {
                get: function() {
                    return this.group_model ? this.group_model.get("name") : this.widget.groupName || "Group"
                },
                set: function(e) {
                    this.group_model || (this.group_model = new ea({
                        pack_id: this._id,
                        mid: this.widget.widgets[0].workspace.mag.id
                    })), this.group_model.save("name", e);
                    let o = this.packs_data.find(t => t.pack_id == this._id);
                    o ? o.name = e : this.packs_data.push(this.group_model.toJSON())
                }
            },
            _id: function() {
                return this.widget.pack_id
            },
            pack_id: function() {
                return "pack " + this._id
            },
            packs_data: function() {
                return this.widget.widgets[0].workspace.mag.attributes.packs
            },
            order: function() {
                return this.widget.sort(e => -Number(e.model.get("z"))).map(e => e.model.get("_id"))
            }
        },
        watch: {
            oneWidgetSelected() {
                this.expanded = !0
            }
        },
        created: function() {
            let e = this.packs_data && this.packs_data.find(o => o.pack_id == this._id);
            e && (this.group_model = new ea(e))
        },
        mounted: function() {
            this.$s = this.$refs.editable, this.$s && (this.$s.onkeydown = this.onkeydown)
        },
        updated: function() {
            this.layerList && (this.layerList[this.widget.pack_id] = this)
        },
        methods: {
            onMove: function(e) {
                this.$emit("onMove", e)
            },
            onEnd: function(e) {
                this.$emit("end", e)
            },
            layerClick: function(e) {
                if ((e.target.nearestViewportElement || e.target) != this.$refs.groupicon.$refs.expand && !(e.target == this.$refs.editable && this.editable)) {
                    if (!this.selected) {
                        let t = this.widget.widgets[0].getPack();
                        t && t.scrollTo(), this.widget.widgets[0].selectFromWidgetBar(e, !0)
                    }
                    this.selected && !this.groupHidden && (Hr("MobileMenuVisible", {
                        show: !1
                    }), Oe("MobileMenuVisible"))
                }
            },
            toggleExpand: function() {
                let e = JSON.parse(window.sessionStorage.getItem("groupsState") || "{}");
                this.expanded = !this.expanded, e[this.widget.pack_id] = this.expanded, window.sessionStorage.setItem("groupsState", window.JSON.stringify(e)), this.$emit("expandChanged"), this.expanded && Oe("ClickOnTriangleToOpenGroup")
            },
            reorder: function() {
                co.nextTick(() => this.$emit("reorder"))
            },
            rename: function() {
                this.editable = !0, this.$emit("changeEditState", !0), jb.default.delay(() => {
                    this.$s.focus()
                }, 50)
            },
            onblur: function() {
                this.editable = !1, this.$emit("changeEditState", !1), this.name = this.$refs.editable.innerText.trim()
            },
            onkeydown: function(e) {
                if (e.keyCode == 13) return e.preventDefault(), this.$s.blur(), !1;
                if (e.keyCode == 27) return this.$s.innerText = this.name, this.editable = !1, e.preventDefault(), !1
            },
            ondragstart: function(e) {
                this.$emit("start", e)
            },
            groupSave: function(e) {
                let o = this.widget.widgets.map(t => Object.assign({
                    _id: t.model.get("_id")
                }, e));
                this.widget.widgets[0].workspace.save_group(o)
            },
            onHideClick: function() {
                this.selected ? Oe("MobileMenuVisible") : (Ld(["MobileMenuVisible"]), Hr("MobileMenuVisible", {
                    show: !0
                })), this.groupHidden = !this.groupHidden, this.groupHidden && Oe("DeleteVisibleMobileMenu")
            }
        }
    },
    fz = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return e.widget.widgets.length == 1 ? t("layer", {
            attrs: {
                "fake-layer": e.fakeGroup,
                widget: e.widget.widgets[0]
            },
            on: {
                onWidgetSelect: function(r, i) {
                    e.$emit("onWidgetSelect", r, i)
                }
            }
        }) : e.widget.widgets.length > 0 ? t("div", {
            staticClass: "group_layer layer",
            class: e.layerClasses,
            attrs: {
                "layer-id": e.pack_id
            },
            on: {
                click: e.layerClick
            }
        }, [e.widget.widgets.length > 1 ? t("div", {
            staticClass: "head",
            class: {
                hovered: e.widget.hovered, "has-global-w": e.hasGlobalW
            }
        }, [t("group-icon", {
            ref: "groupicon",
            attrs: {
                group: e.widget.widgets,
                "no-arrow": e.noArrow,
                expanded: e.expanded
            },
            on: {
                expand: e.toggleExpand
            }
        }), e._v(" "), t("div", {
            staticClass: "w_name group_name"
        }, [t("span", {
            ref: "editable",
            class: {
                editable: e.editable
            },
            attrs: {
                contenteditable: e.editable,
                onfocus: "document.execCommand('selectAll',false,null)"
            },
            on: {
                dblclick: e.rename,
                click: function(r) {
                    e.selected && e.rename()
                },
                blur: e.onblur
            }
        }, [e._v(e._s(e.name))])]), e._v(" "), t("div", {
            staticClass: "icons-container"
        }, [t("permission-controller", {
            attrs: {
                permission: "BaseWidgetCanHide"
            }
        }, [t("div", {
            ref: "hide",
            staticClass: "hide",
            on: {
                click: function(r) {
                    return r.stopPropagation(), e.onHideClick(r)
                }
            }
        })]), e._v(" "), t("permission-controller", {
            attrs: {
                permission: "BaseWidgetCanLock"
            }
        }, [t("div", {
            ref: "lock",
            staticClass: "lock",
            on: {
                click: function(r) {
                    r.stopPropagation(), e.groupLocked = !e.groupLocked
                }
            }
        })])], 1)], 1) : e._e(), e._v(" "), t("div", {
            staticClass: "group_container",
            class: {
                active: e.expanded
            }
        }, [t("draggable", {
            staticClass: "draggable-container in-group-draggable",
            attrs: {
                move: function(r) {
                    e.$emit("move", r)
                },
                options: {
                    moveByBlock: !0,
                    disabled: e.noDragndrop || e.draggableDisabled,
                    onMoveGhost: e.onMoveGhost,
                    relParent: "sortable_relparent",
                    denyX: !0,
                    forceFallback: !0,
                    group: e.group,
                    animation: 200,
                    delay: 20,
                    onMove: e.onMove,
                    onEnd: e.onEnd
                }
            },
            on: {
                start: e.ondragstart,
                touchMove: e.onTouchMove,
                onEnd: e.onEnd,
                end: e.onEnd
            },
            model: {
                value: e.widget.widgets,
                callback: function(r) {
                    e.$set(e.widget, "widgets", r)
                },
                expression: "widget.widgets"
            }
        }, [e._l(e.widget.widgets, function(r) {
            return [r.model ? t("layer", {
                key: r.attributes._id,
                staticClass: "inpack",
                attrs: {
                    "fake-layer": e.fakeGroup,
                    widget: r,
                    "is-not-visible": !e.filterPredicate(r)
                },
                on: {
                    onWidgetDblClick: function(i) {
                        return e.$emit("onWidgetDblClick")
                    },
                    changeEditState: function(i) {
                        e.draggableDisabled = i, e.$emit("changeEditState", i)
                    },
                    onWidgetSelect: function(i, n) {
                        e.$emit("onWidgetSelect", i, n)
                    }
                }
            }) : e._e()]
        })], 2)], 1)]) : t("div")
    },
    bz = [],
    wz = void 0,
    xz = void 0,
    vz = void 0,
    yz = !1;

function kz(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "layers_group.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var _z = kz({
        render: fz,
        staticRenderFns: bz
    }, wz, hz, xz, yz, vz, !1, void 0, void 0, void 0),
    qb = _z;
Lr();
lk();
var Cz = {
        props: ["widget"],
        computed: {
            selected: function() {
                return this.widget.selected
            },
            w_name: function() {
                return Je.capitalize(this.widget.model.get("type"))
            },
            isPack: function() {
                return !1
            },
            icon_style: function() {
                return this.widget.getIconStyle()
            },
            hasVideo: function() {
                return this.widget.model && this.widget.model.get("selectedType") === "video" ? !!ak(this.widget.model.attributes) : !1
            }
        },
        mounted: function() {
            this.widget.on("select", this.select)
        },
        beforeDestroy: function() {
            this.widget.off("select", this.select)
        },
        methods: {
            select: function() {
                this.$emit("select")
            }
        }
    },
    Sz = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "layer bg"
        }, [t("div", {
            staticClass: "icon",
            class: {
                video: e.hasVideo
            },
            style: e.icon_style
        }), e._v(" "), t("div", {
            staticClass: "w_name"
        }, [e._v(e._s(e.w_name))])])
    },
    Pz = [],
    Tz = void 0,
    Iz = void 0,
    Mz = void 0,
    Bz = !1;

function Rz(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "background_icon.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var zz = Rz({
        render: Sz,
        staticRenderFns: Pz
    }, Tz, Cz, Iz, Bz, Mz, !1, void 0, void 0, void 0),
    a4 = zz;
var Ez = {},
    Az = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "grid_guides_layer layer",
            on: {
                click: function(r) {
                    return e.$emit("click")
                }
            }
        }, [t("div", {
            staticClass: "icon"
        }), e._v(" "), t("div", {
            staticClass: "w_name"
        }, [e._v("Grid & Guides")])])
    },
    Dz = [],
    Lz = void 0,
    Oz = void 0,
    $z = void 0,
    Hz = !1;

function Fz(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "grid_guides_icon.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var Nz = Fz({
        render: Az,
        staticRenderFns: Dz
    }, Lz, Ez, Oz, Hz, $z, !1, void 0, void 0, void 0),
    l4 = Nz;
By();
$o();
Xh();
kt();
var Yb = M(Ac()),
    p4 = M(F());
te();
Fa();
Vh();
be();
Wc();
W();
Ye();
y();
var Wz = N(f)
`
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  margin: 0;
  width: 24px;
  height: 24px;
  border: none;
  border-radius: 50%;
  background-color: transparent;
  cursor: pointer;
  color: ${e=>e.theme.colors.gray};

  ${e=>e.isActive&&ne`
      background-color: ${e.theme.colors.blue};
      color: white;
    `};

  &:hover,
  &:active,
  &:focus {
    background-color: ${e=>e.theme.colors.blue};
    color: white;
  }
`, c4 = N(we)
`
  &:hover {
    color: ${e=>e.theme.colors.black};
  }
`, Xb = ({
    actions: e,
    container: o,
    workspace: t,
    isActive: r = !1
}) => {
    let i = o(),
        [n, s] = (0, p4.useState)(!1);

    function l(m) {
        m.stopPropagation(), s(!1)
    }

    function p() {
        let u = t.blocks.filter(g => g.model.get("type") !== "background").filter(g => {
            let h = g.model;
            if (h.get("is_global")) return window.RM.constructorRouter.mag.pages.models.every(P => {
                let C = P.get("_id"),
                    k = h.clone({
                        viewport: "default",
                        pageId: C
                    }),
                    T = h.clone({
                        viewport: "phone_portrait",
                        pageId: C
                    }),
                    R = h.clone({
                        viewport: "tablet_portrait",
                        pageId: C
                    });
                return k.get("hidden") && T.get("hidden") && R.get("hidden")
            });
            let b = h.clone({
                    viewport: "default"
                }),
                x = h.clone({
                    viewport: "phone_portrait"
                }),
                S = h.clone({
                    viewport: "tablet_portrait"
                });
            return b.get("hidden") && x.get("hidden") && S.get("hidden")
        });
        re(fe.SettingsLayers, {
            settingsType: "delete all unused"
        }), t.deleteBlocks(u, {
            forceRemove: !0
        })
    }
    let c = {
        title: n ? w(f, {
            height: "24px",
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            paddingTop: "3px",
            children: [a(c4, {
                role: "button",
                color: "tomato",
                textStyle: "small",
                onClick: p,
                children: "Remove"
            }), a(c4, {
                role: "button",
                color: "darkGray",
                textStyle: "small",
                onClick: l,
                children: "Cancel"
            })]
        }) : "Remove unused",
        hoverVariant: Wh.danger,
        activeVariant: Wh.danger,
        active: n,
        onClick: m => {
            n || (m.stopPropagation(), s(!0))
        }
    };
    return a(sl, {
        minWidth: 240,
        popperOffset: [-84, 28],
        listItems: [...e, c],
        container: i,
        onToggleDropdown: m => {
            m || s(!1)
        },
        children: ({
            toggleDropdown: m
        }) => a(Wz, {
            as: "button",
            type: "button",
            isActive: r,
            "aria-label": "Layer filter",
            "aria-haspopup": "true",
            onClick: m,
            children: a(Cr, {})
        })
    })
}, d4 = ({
    props: e,
    rootElement: o
}) => {
    let t = (0, Yb.createRoot)(o);

    function r(n) {
        t.render(a($r, {
            withGlobalStyles: !1,
            children: a(Xb, { ...e,
                ...n
            })
        }))
    }

    function i(n) {
        t.unmount(), t = (0, Yb.createRoot)(o), r(n)
    }
    return r(), {
        render: r,
        rerender: i
    }
};
rr();
Kt();
var fo = {
        height: 56,
        indentationWidth: 16
    },
    Vi = {
        height: 26
    },
    ha = {
        height: 2,
        middle: 1
    },
    eg = 2,
    u4 = new Map([
        ["aboveAll", ["aboveAll"]],
        ["frontFixed", ["frontFixed", "backFixed"]],
        ["normal", ["normal"]],
        ["backFixed", ["frontFixed", "backFixed"]]
    ]),
    Kb = "layer-filter-value";
j0();

function og(e, o) {
    return !e || !o ? !1 : u4.get(e) ? .includes(o)
}

function wn(e, o, t) {
    let r = [o],
        i = e.get(o),
        n = i && i.children || [],
        s = l => {
            for (let p of l)
                if (p.parentId && r.includes(p.parentId)) {
                    if (p.type === "group") {
                        let d = e.get(p.id);
                        d && (r.push(p.id), d ? .children && s(d ? .children))
                    }
                    t(p)
                }
        };
    s(n)
}

function rg(e, o) {
    if (!o) return 0;
    let t = (r, i = 1) => {
        let n = e.get(r);
        if (n) {
            let s = n.parentId;
            return s ? t(s, i + 1) : i
        } else return i
    };
    return t(o)
}

function fa(e, o) {
    let t = o.map(r => r ? .model);
    switch (e) {
        case "all":
            return !0;
        case "links":
            return Uz(t);
        case "viewport":
            return Vz(t);
        default:
            return !0
    }
}

function Vz(e) {
    return e.some(o => !o.get("hidden"))
}

function Uz(e) {
    return e.some(o => {
        if (o.get("clickLink")) return !0;
        if (o.get("type") === "text") {
            let t = Object.values(o.get("entityMap") ? ? {});
            for (let r of t)
                if (r.type === Pd) return !0
        }
    })
}

function ig() {
    try {
        return window.sessionStorage.getItem(Kb)
    } catch (e) {
        console.log(e)
    }
}

function ng(e) {
    try {
        window.sessionStorage.setItem(Kb, e)
    } catch (o) {
        console.log(o)
    }
}
var Zb = M(Mo());
j0();

function Jb(e) {
    return e instanceof Zb.default.View ? !e.model.get("hidden") : Array.isArray(e.widgets) ? e.widgets.some(o => Jb(o)) : !1
}

function Qb(e) {
    if (!(e instanceof Zb.default.View)) return Array.isArray(e.widgets) ? e.widgets.some(o => Qb(o)) : !1;
    if (e.model.attributes.clickLink) return !0;
    if (e.model.get("type") === "text") {
        let o = Object.values(e.model.get("entityMap") ? ? {});
        for (let t of o)
            if (t.type === Pd) return !0
    }
    return !1
}
var Gz = {
        filtersRoot: null,
        components: {
            Layer: Jm,
            BackgroundIcon: a4,
            GuidesIcon: l4,
            GroupLayers: qb,
            Draggable: jl,
            RmScroll: hu,
            PermissionController: pl,
            HelpTourTooltip: $i
        },
        props: {
            workspace: Object,
            showGuidePanel: {
                type: Boolean,
                default: !0
            },
            dark: Boolean
        },
        data: function() {
            return {
                showCounter: 25,
                layers: {
                    above_all: [],
                    fixed_top: [],
                    regular: [],
                    fixed_bottom: []
                },
                lastPercent: 0,
                draggedFixed: "",
                fixedOverRegular: !1,
                mark_draggable: "",
                groupDrag: !1,
                boundTop: "",
                scrollOversizeTop: 0,
                scrollOversizeBottom: 0,
                oversize: "",
                draggableDisabled: !1,
                _groupsData: {},
                draggedItems: [],
                indrag: !1,
                helpTourStep: "SelectGrids",
                helpTourStepBackground: "OpenBackgroundLayer",
                filter: ig() ? ? "all"
            }
        },
        beforeCreate: function() {
            this.onIndexChange__debounced = Ne.default.debounce(() => {
                this.onIndexChange()
            }, 10)
        },
        mounted: function() {
            this._scroll = this.$refs.rmscroll, window.addEventListener("resize", this.updateScroll), Me.on("index:changed", this.onIndexChange__debounced), this.renderReactHeaderActions()
        },
        provide: function() {
            return this._layerList = {}, {
                layerList: this._layerList
            }
        },
        destroyed: function() {
            Me.off("index:changed", this.onIndexChange__debounced), this.workspace.page.off("change:viewport", this.onIndexChange), this.workspace.off("select", this.onSelect), window.removeEventListener("resize", this.updateScroll)
        },
        updated: function() {
            this.updateScroll()
        },
        methods: {
            getHeightScrolledContent() {
                return this._scroll && this._scroll.$refs.scrollWrapper ? (0, vi.default)(this._scroll.$refs.scrollWrapper).height() : "auto"
            },
            renderReactHeaderActions() {
                let e = this.getFilterActions(),
                    o = this.filter !== "all",
                    t = this.workspace;
                if (!this.$options.filtersRoot) {
                    let r = this.$refs.react_filters,
                        i = () => this.$refs.stack_panel;
                    r && (this.$options.filtersRoot = d4({
                        rootElement: r,
                        props: {
                            container: i,
                            actions: e,
                            isActive: o,
                            workspace: t
                        }
                    }));
                    return
                }
                this.$options.filtersRoot.rerender({
                    actions: e,
                    isActive: o,
                    workspace: t
                })
            },
            getFilterActions() {
                let e = this.filter,
                    o;
                switch (this.workspace.getViewports().find(r => r.isCurrent === !0) ? .name) {
                    case "default":
                        o = "Show desktop widgets only";
                        break;
                    case "phone_portrait":
                        o = "Show mobile widgets only";
                        break;
                    case "tablet_portrait":
                        o = "Show tablet widgets only";
                        break
                }
                return [{
                    title: "Show all",
                    onClick: () => this.setFilterAndUpdateReact("all"),
                    active: e === "all"
                }, {
                    title: o,
                    onClick: () => this.setFilterAndUpdateReact("viewport"),
                    active: e === "viewport"
                }, {
                    title: "Show layers with links",
                    onClick: () => this.setFilterAndUpdateReact("links"),
                    active: e === "links"
                }]
            },
            setFilterAndUpdateReact(e) {
                if (e === "links" && re(fe.SettingsLayers, {
                        settingsType: "show only with links"
                    }), e === "viewport" && re(fe.SettingsLayers, {
                        settingsType: "show current viewport"
                    }), this.filter === "all" && e !== "all") {
                    let o = (0, vi.default)(this._scroll.$refs.scrollWrapper);
                    o.css("min-height", o.height())
                }
                this.filter = e, this.renderReactHeaderActions(), ng(e)
            },
            onGuidesClick: function() {
                this.$emit("showPanel", "guides"), Oe("SelectGrids")
            },
            onPanelScroll: function(e) {
                this.showCounter > this.layersCount || e.scroll_event && (this.showCounter += Math.ceil(Math.abs(e.scroll_percent - this.lastPercent) * e.content_size / 50) + 10, this.lastPercent = e.scroll_percent)
            },
            caption: function(e) {
                return {
                    above_all: "Fixed on all pages",
                    fixed_top: "Front Fixed",
                    regular: "Widgets",
                    fixed_bottom: "Back Fixed"
                }[e]
            },
            needLine: function(e) {
                for (var o = Ne.default.keys(this.filteredLayers), t = o.indexOf(e), r = !1, i = t + 1; i < o.length; i++) this.layers[o[i]].length && (r = !0);
                return r
            },
            layer_type: function(e) {
                return Ne.default.isArray(e.widgets) ? "group-layers" : "layer"
            },
            getBlocks: function() {
                return (0, Ne.default)(this.workspace.blocks).chain().filter(e => e.model.get("type") != "background").sortBy(e => -e.model.get("z")).value()
            },
            fFlatten: function(e, o = !1, t = !1) {
                for (var r = [], i = 0; i < e.length; i++) e[i].widgets && (!o || e[i].expanded) ? (t && r.push(e[i]), r = r.concat(e[i].widgets)) : r.push(e[i]);
                return r
            },
            onWidgetDblClick: function() {
                Ne.default.defer(() => {
                    this.workspace.controls.selectSettingsControl()
                })
            },
            onWidgetSelect: function(e, o) {
                if (o.shiftKey && this.lastWidget) {
                    var t = [].concat(this.fFlatten(this.layers.above_all), this.fFlatten(this.layers.fixed_top), this.fFlatten(this.layers.regular), this.fFlatten(this.layers.fixed_bottom)),
                        r = t.indexOf(e),
                        i = t.indexOf(this.lastWidget),
                        n = Ne.default.chain(t.slice(Math.min(r, i), Math.max(r, i) + 1)).reduce((s, l) => {
                            var p = l.model.get("pack_id");
                            if (!p) s.push(l);
                            else {
                                var d = s[s.length - 1];
                                d instanceof Array && d[d.length - 1].model.get("pack_id") == p ? d.push(l) : s.push([l])
                            }
                            return s
                        }, []).reduce((s, l) => {
                            if (l instanceof Array) {
                                var p = l[0].model.get("pack_id");
                                this._groups_processed[p].widgets.length != l.length ? s = s.concat(l) : s.push(l)
                            } else s.push(l);
                            return s
                        }, []).value();
                    this.workspace.selectListBlocks(n, this.lastSelectedList), this.lastSelectedList = n
                } else this.lastWidget = e, this.lastSelectedList = [], e.scrollTo(), e.selectFromWidgetBar(o)
            },
            getCountBlocks: function(e) {
                var o = 0;
                return Ne.default.each(e, function(t) {
                    o += 1, t.widgets && t.expanded && (o += t.widgets.length)
                }), o
            },
            getSelectedInGroup: function(e) {
                var o = null;
                return Ne.default.each(this.layers, (t, r) => {
                    this.fInside(this.$refs[r], e) && (o = this.$refs[r])
                }), o && this.selectedList.length ? Ne.default.filter(this.selectedList, t => this.fInside(o, t.el)) : this.selectedList
            },
            onDragStart: function(e) {
                this.handleNextChange = !0, this.indrag = !0;
                var o = this.getSelectedInGroup(e.from),
                    t = Ne.default.find(o, function(l) {
                        return l.el == e.item
                    });
                if (e.getGhost().className = e.getGhost().className + (e.from.className.indexOf("in-group-draggable") != -1 ? " fallback-in-group" : " fallback-not-in-group"), (0, vi.default)(e.getGhost()).toggleClass("fallback-in-group", (0, vi.default)(e.from).hasClass("in-group-draggable")), (0, vi.default)(e.getGhost()).toggleClass("fallback-not-in-group", !(0, vi.default)(e.from).hasClass("in-group-draggable")), this.fInside(this.$refs.fixed_top, e.from) ? this.draggedFixed = "top" : this.fInside(this.$refs.fixed_bottom, e.from) && (this.draggedFixed = "bottom"), this.draggedFixed) {
                    var r = (0, vi.default)(this._scroll.$refs.content);
                    r.css("height", (0, vi.default)(this._scroll.$refs.content).height())
                }
                if (o.length > 1 && t) {
                    this.groupDrag = !0, e.setDraggedGroup(o.slice()), e.getGhost().innerHTML = "<div></div>", e.getGhost().className = e.getGhost().className.replace("layer", "");
                    var i = o.indexOf(t),
                        n = o.length - i - 1;
                    this.oversize = "both", this.scrollOversizeTop = i * 56, this.scrollOversizeBottom = n * 56;
                    var s = co.extend(qb);
                    this._layersGroupDrag = new s({
                        el: e.getGhost().firstElementChild,
                        parent: this,
                        abstract: !0,
                        propsData: {
                            group: "draggable",
                            noArrow: !0,
                            fakeGroup: !0,
                            onTouchMove: function() {},
                            widget: {
                                pack_id: "",
                                hovered: !1,
                                groupName: "Drag",
                                widgets: this.selectedLayers.slice()
                            }
                        }
                    }), this.draggedItems = Ne.default.map(o, l => l.context.element)
                } else this.draggedItems = [e.context.element], e.context && e.context.element && e.context.element.widgets && e.context.element.expanded && (this.scrollOversizeBottom = e.context.element.widgets.length * 56, this.scrollOversizeTop = 0, this.oversize = "bottom")
            },
            onDragEnd: function(e) {
                this.indrag = !1;
                var o = (0, vi.default)(this._scroll.$refs.content);
                if (o.css("height", ""), clearTimeout(this.expandTimeout), this.draggedFixed) {
                    var t = e.item.attributes["layer-id"].value;
                    this.$nextTick(() => {
                        this.scrollTo(document.querySelector('[layer-id="' + t + '"]'))
                    })
                }
                this.expandTimeout = 0, this.draggedFixed = "", this.boundTop = !1, this.groupDrag = !1, this.mark_draggable = "", this.fixedOverRegular = !1, this.oversize = "", this.lastRelatedContext && (this.lastRelatedContext.element.hovered = !1, this.lastRelatedContext = null), this._layersGroupDrag && (this._layersGroupDrag.$destroy(), this._layersGroupDrag = null)
            },
            onMove: function(e) {
                e.related.parentNode.className.indexOf("in-group-draggable") != -1 ? e.ghost.className = e.ghost.className.replace("fallback-not-in-group", "fallback-in-group") : e.ghost.className = e.ghost.className.replace("fallback-in-group", "fallback-not-in-group")
            },
            onMoveGhost: function(e, o, t) {
                if (!t) return {
                    dx: 0,
                    dy: 0
                };
                var r = e.getBoundingClientRect(),
                    i = (this.draggedFixed ? this._scroll.$el : e.parentNode).getBoundingClientRect(),
                    n = this._scroll.$el.parentNode.getBoundingClientRect(),
                    s = 0;
                if (this.draggedFixed && !this.fixedOverRegular) {
                    if (this.$refs.fixed_top) {
                        let l = e.parentNode.getBoundingClientRect();
                        r.bottom - l.bottom > 25 && (this.fixedOverRegular = !0, this.mark_draggable = "fixed_bottom")
                    }
                    this.$refs.fixed_bottom && e.parentNode.getBoundingClientRect().top - r.top > 25 && (this.fixedOverRegular = !0, this.mark_draggable = "fixed_top"), this.fixedOverRegular && (this.draggedFixed == "top" ? (this.oversize = "bottom", this.scrollOversizeBottom = Math.max(0, (this.getCountBlocks(this.layers.regular) - 1) * 56), this.scrollOversizeTop = 0) : (this.oversize = "top", this.scrollOversizeTop = Math.max(0, (this.getCountBlocks(this.layers.regular) - 1) * 56), this.scrollOversizeBottom = 0))
                }
                return r.top + s - Math.max(i.top, n.top) < t ? {
                    dx: 0,
                    dy: t - (r.top + s - Math.max(i.top, n.top))
                } : r.bottom - s - Math.min(i.bottom, n.bottom) > t ? {
                    dx: 0,
                    dy: t - (r.bottom - s - Math.min(i.bottom, n.bottom))
                } : {
                    dx: 0,
                    dy: 0
                }
            },
            onIndexChange: function() {
                this.handleNextChange = !1, this._unwatch && Ne.default.each(this._unwatch, function(s) {
                    s()
                }), this._unwatch = [];
                let e = [{
                        from: "aboveAll",
                        to: "above_all"
                    }, {
                        from: "frontFixed",
                        to: "fixed_top"
                    }, {
                        from: "normal",
                        to: "regular"
                    }, {
                        from: "backFixed",
                        to: "fixed_bottom"
                    }],
                    o = JSON.parse(window.sessionStorage.getItem("groupsState") || "{}"),
                    t = RM.constructorRouter.indexController.getOrder(this.workspace.page, this.workspace.viewport);
                this._groups_processed = this._groups_processed || {};
                let r = {};
                Ne.default.each(e, s => {
                    r[s.to] = Ne.default.reduce(t[s.from], (l, p) => {
                        if (p instanceof Array) {
                            let d = [];
                            l.push(d), Ne.default.each(p, c => {
                                let m = this.workspace.blocks.find(u => u.id === c);
                                m && (m.model.get("pack_id") ? d.push(c) : l.push(c))
                            })
                        } else l.push(p);
                        return l
                    }, [])
                });
                let i = Ne.default.flatten(Ne.default.map(r, s => s)),
                    n = !1;
                Ne.default.each(this.workspace.blocks, s => {
                    s.model.get("type") !== "background" && (i.includes(s.id) || (n = !0, s.model.get("is_above") ? r.above_all.push(s.id) : s.model.get("fixed_position") ? r.fixed_top.push(s.id) : r.regular.push(s.id)))
                }), Ne.default.each(e, s => {
                    let l = Ne.default.flatten(r[s.to]).reduce((d, c) => (d.u.includes(c) ? d.d.push(c) : d.u.push(c), d), {
                            d: [],
                            u: []
                        }).d,
                        p = {};
                    n = n || l.length, r[s.to] = Ne.default.compact(r[s.to].map(d => {
                        if (d instanceof Array) {
                            let c = Ne.default.compact(d.map(m => {
                                if (l.includes(m)) {
                                    if (p[m]) return null;
                                    p[m] = 1
                                }
                                return m
                            }));
                            return c.length ? c : null
                        }
                        if (l.includes(d)) {
                            if (p[d]) return null;
                            p[d] = 1
                        }
                        return d
                    }))
                }), Ne.default.each(e, s => {
                    this.layers[s.to] = r[s.to].map(l => {
                        if (l instanceof Array) {
                            let p = Ne.default.compact(l.map(m => this.workspace.blocks.find(u => u.id === m)));
                            if (p.length === 0) return null;
                            let d = p[0].model.get("pack_id"),
                                c = this._groups_processed[d] ? this._groups_processed[d] : {
                                    hovered: !1,
                                    pack_id: d,
                                    expanded: o[d] || !1
                                };
                            return c.widgets = p, this._groups_processed[d] = c, c
                        }
                        return this.workspace.blocks.find(p => p.id === l)
                    }), this.layers[s.to] = Ne.default.compact(this.layers[s.to])
                }), this._unwatch.push(this.$watch("layers.above_all", this.watchOnLayers)), this._unwatch.push(this.$watch("layers.fixed_top", this.watchOnLayers)), this._unwatch.push(this.$watch("layers.regular", this.watchOnLayers)), this._unwatch.push(this.$watch("layers.fixed_bottom", this.watchOnLayers)), n && (this.handleNextChange = !0, this.watchNewZindex()), this.$nextTick(() => {
                    this.updateScroll()
                })
            },
            watchNewZindex: function() {
                if (!this.handleNextChange) return;
                this.handleNextChange = !0;
                var e = [].concat(this.layers.above_all, this.layers.fixed_top, this.layers.regular, this.layers.fixed_bottom),
                    o = [],
                    t = {},
                    r = {},
                    i = function(m, u, g) {
                        for (var h in u)
                            if (u.hasOwnProperty(h) && m.attributes[h] != u[h]) return g.push(u), !0;
                        return !1
                    },
                    n = m => {
                        let u = {};
                        return m = Ne.default.reduce(m, (g, h) => {
                            if (h.widgets) g.push(h);
                            else {
                                let b = r[h.attributes._id];
                                b ? (u[b] || (u[b] = [], g.push({
                                    widgets: u[b]
                                })), u[b].push(h)) : g.push(h)
                            }
                            return g
                        }, []), Ne.default.compact(m.map(g => g.widgets ? g.widgets.length === 1 ? g.widgets[0].id : g.widgets.length === 0 ? void 0 : Ne.default.flatten(g.widgets.map(h => h.widgets ? h.widgets.map(b => b.id) : h.id)) : g.id))
                    },
                    s = null;
                Ne.default.each(e, m => {
                    if (m.attributes && m.attributes.pack_id && !t[m.attributes.pack_id]) {
                        var u = m.attributes.pack_id,
                            g = Ne.default.filter(e, h => h.attributes && h.attributes.pack_id == m.attributes.pack_id);
                        t[m.attributes.pack_id] = 1, this._groups_processed[u] && this._groups_processed[u].widgets.length == 0 && Ne.default.each(g, function(h) {
                            r[h.attributes._id] = h.attributes.pack_id
                        })
                    }
                });
                var l = {
                        aboveAll: n(this.layers.above_all),
                        frontFixed: n(this.layers.fixed_top),
                        normal: n(this.layers.regular),
                        backFixed: n(this.layers.fixed_bottom)
                    },
                    p = !1,
                    d;
                Ne.default.each(e, m => {
                    m.widgets instanceof Array ? m.widgets.length == 1 ? (d = i(m.widgets[0], {
                        _id: m.widgets[0].attributes._id,
                        pack_id: null
                    }, o), p = p || d) : Ne.default.each(m.widgets, function(u) {
                        let g = u.widgets ? u.widgets[0] : u;
                        g.attributes.is_global && g.attributes.pack_id !== m.pack_id && (s = s || {}, s.added = s.added || [], s.added.push(u.widgets ? Ne.default.map(u.widgets, h => h.attributes._id) : u.attributes._id), s.added = Ne.default.flatten(s.added), s.pack = Ne.default.flatten(m.widgets.map(h => h.widgets instanceof Array ? Ne.default.map(h.widgets, b => b.attributes._id) : h.attributes._id)), s.pack_id = m.pack_id), u.widgets ? Ne.default.each(u.widgets, function(h) {
                            d = i(h, {
                                _id: h.attributes._id,
                                pack_id: m.pack_id
                            }, o), p = p || d
                        }) : (d = i(u, {
                            _id: u.attributes._id,
                            pack_id: m.pack_id
                        }, o), p = p || d)
                    }) : (m.attributes.is_global && m.attributes.pack_id && (s = s || {}, s.removed = s.removed || [], s.removed.push(m.attributes._id)), d = i(m, {
                        _id: m.attributes._id,
                        pack_id: r[m.attributes._id] || null
                    }, o), p = p || d)
                }), RM.constructorRouter.indexController.setOrderForPage(l, this.workspace.page, this.workspace.viewport, s), p && (this.scrollCooldown = +new Date + 300, this.workspace.save_group(o));
                let c = RM.constructorRouter.indexController.getPagesToSave();
                this.workspace.syncManager.saveGroup(c, {
                    patch: !0,
                    silent: !0
                }), re(fe.EditorActions, {
                    action: "change order",
                    changeOrderMethod: "layers"
                }), this.$nextTick(() => {
                    this.onIndexChange()
                })
            },
            watchOnLayers: Ne.default.debounce(function() {
                this.watchNewZindex()
            }, 10),
            getLayerFromPoint: function(e, o, t) {
                for (var r = window.document.elementFromPoint(e, o); r && !(typeof r.className == "string" && r.className.indexOf("layer") !== -1);) r = r.parentNode;
                try {
                    if (r && r.parentNode.sortable.options.group.name !== t) return null
                } catch {
                    return null
                }
                return r
            },
            getElementByClassFromPoint: function(e, o, t, r) {
                for (var i = window.document.elementFromPoint(e, o); i && !(typeof i.className == "string" && i.className.indexOf(t) !== -1);) i = i.parentNode;
                if (r) {
                    if (i && i.sortable && i.sortable.options.group.name == r) return i;
                    for (var n = i; n && !(typeof n.className == "string" && n.className.indexOf("layer") !== -1);) n = n.parentNode;
                    try {
                        if (n && n.parentNode.sortable.options.group.name !== r) return null
                    } catch {
                        return null
                    }
                }
                return i
            },
            getEmptyContainerFromPoint: function(e, o, t) {
                for (var r = window.document.elementFromPoint(e, o); r;) {
                    if (typeof r.className == "string" && r.className.indexOf("draggable-container") !== -1) {
                        if (r.className.indexOf("empty-draggble") !== -1 || r.childElementCount == 0) break;
                        return null
                    }
                    r = r.parentNode
                }
                try {
                    if (r && r.sortable.options.group.name !== t) return null
                } catch {
                    return null
                }
                return r
            },
            fInside: function(e, o) {
                for (e instanceof Array && (e = Ne.default.flatten(e)[0]); o && o != e && (o = o.parentNode););
                return !!o
            },
            checkCanGroup: function(e) {
                return Ne.default.uniq(Ne.default.map(e, function(o) {
                    var t = !!(o.widgets ? o.widgets[0].model.get("fixed_position") : o.model.get("fixed_position"));
                    return t
                })).length > 1 || Ne.default.uniq(Ne.default.map(e, function(o) {
                    var t = !!(o.widgets ? o.widgets[0].model.get("is_global") : o.model.get("is_global"));
                    return t
                })).length > 1
            },
            onTouchMove: function(e, o) {
                var t = e.data;
                if (t.dy) {
                    for (var r = t.next && t.next.className.indexOf("sortable-fallback") == -1 ? t.next : null, i = t.prev, n = 0, s = t.ghost, l = s.getBoundingClientRect(), p = e.from.sortable.options.group.name, d, c, m, u, g = this.getLayerFromPoint((l.left + l.right) / 2, l.bottom, p) || r, h = g && g != t.dragEl && !this.fInside(g, t.dragEl) && g.getBoundingClientRect(), b = this.getLayerFromPoint((l.left + l.right) / 2, l.top, p) || i, x = b && b != t.dragEl && !this.fInside(b, t.dragEl) && b.getBoundingClientRect(), S = this.getElementByClassFromPoint((l.left + l.right) / 2, l.top, "draggable-container", p), v = this.getElementByClassFromPoint((l.left + l.right) / 2, l.bottom, "draggable-container", p), P = Ne.default.chain([
                            [this.$refs.fixed_top, S],
                            [this.$refs.fixed_bottom, S],
                            [this.$refs.fixed_top, v],
                            [this.$refs.fixed_bottom, v]
                        ]).reduce((de, Q) => this.fInside.apply(this, Ne.default.flatten(Q)) && !this.fInside(Ne.default.flatten(Q)[0], t.dragEl) ? Q[1] : de, null).value(); r && r.className.indexOf("selected") != -1 && this.groupDrag && (r = r.nextElementSibling););
                    for (; i && i.className.indexOf("selected") != -1 && this.groupDrag && (i = i.previousElementSibling););
                    r && r.className.indexOf("group_layer") !== -1 && r.className.indexOf("expanded") !== -1 ? (d = r.getBoundingClientRect(), r = r.querySelector(".in-group-draggable").firstElementChild, n = -1, m = r.parentNode) : r ? d = r.getBoundingClientRect() : (r = this.getLayerFromPoint((l.left + l.right) / 2, l.bottom, p), r == s || !r ? r = null : (d = r.className.indexOf("group_layer") == -1 && r.getBoundingClientRect(), m = r.parentNode, n = -1)), i && i.className.indexOf("group_layer") !== -1 && i.className.indexOf("expanded") !== -1 ? (i = i.querySelector(".in-group-draggable").lastElementChild, c = i.getBoundingClientRect(), m = i.parentNode, n = 1) : i ? c = i && i.getBoundingClientRect() : (i = this.getLayerFromPoint((l.left + l.right) / 2, l.top, p), i == s || !i ? i = null : (c = i && i.className.indexOf("group_layer") == -1 && i.getBoundingClientRect(), m = i && i.parentNode, n = 1));
                    var C = this.getElementByClassFromPoint((l.left + l.right) / 2, l.bottom, "head", p),
                        k = C && !this.fInside(t.dragEl, C) && C.getBoundingClientRect(),
                        T = this.getElementByClassFromPoint((l.left + l.right) / 2, l.top, "head", p),
                        R = T && !this.fInside(t.dragEl, T) && T.getBoundingClientRect(),
                        I = 34,
                        B = 15,
                        L = 15;
                    if (P) {
                        if (P.childElementCount == 0) {
                            e.result = {
                                toEmptyGroup: P
                            }, this.fInside(this.$refs.fixed_top, P) ? this.mark_draggable = "fixed_bottom" : this.fInside(this.$refs.fixed_bottom, P) && (this.mark_draggable = "fixed_top");
                            return
                        }
                        m = P, this.fInside.apply(this, Ne.default.flatten([this.$refs.fixed_top, P])) ? (n = 1, u = P.lastElementChild) : (n = -1, u = P.firstElementChild)
                    } else k && k.top + I <= l.bottom ? (u = C.nextElementSibling.querySelector(".layer"), n = -1, m = u.parentNode) : R && R.bottom - I >= l.top ? (u = T.parentNode, n = -1, m = u.parentNode) : (c && t.dragEl.parentNode.lastElementChild == t.dragEl && t.dragEl.parentNode.className.indexOf("in-group-draggable") !== -1 && t.dragEl.parentNode.parentNode.parentNode.parentNode.lastElementChild == t.dragEl.parentNode.parentNode.parentNode && l.top - c.bottom >= -2 ? (u = t.dragEl.parentNode.parentNode.parentNode, n = 1) : h && (g.className.indexOf("group_layer") == -1 || g.className.indexOf("expanded") == -1) && l.bottom - h.top >= I ? (u = g, n = 1) : h && t.dragEl.parentNode.lastElementChild == t.dragEl && l.bottom - h.top >= L ? (u = g, n = -1) : x && (b.className.indexOf("group_layer") == -1 || b.className.indexOf("expanded") == -1) && x.bottom - l.top >= I ? (u = b, n = -1) : x && b.parentNode.lastElementChild == b && x.bottom - l.top >= B && (u = b, n = 1), u && u.parentNode != t.dragEl.parentNode && (m = u.parentNode));
                    if (m && u && m.parentElement.parentElement.__vue__ && m.parentElement.parentElement.__vue__.widget) {
                        var D = m.parentElement.parentElement.__vue__.widget.widgets.concat([t.dragEl.__vue__.widget]);
                        this.checkCanGroup(D) && (u = null, m = null)
                    }
                    if (u && u.className.indexOf("sortable-fallback") == -1) this.fInside(this.$refs.fixed_top, u) ? this.mark_draggable = "fixed_bottom" : this.fInside(this.$refs.fixed_bottom, u) && (this.mark_draggable = "fixed_top"), e.result = {
                        target: u,
                        direction: n,
                        changeParent: m
                    }, this.expandTimeout && (clearTimeout(this.expandTimeout), this.expandTimeout = 0), this.lastRelatedContext && (this.lastRelatedContext.element.hovered = !1, this.lastRelatedContext = null);
                    else {
                        var E = null;
                        if (0) {
                            var $;
                            if ($ && $.element.widgets) var D
                        } else {
                            t.sortable.dropIntoGroup(null), this.expandTimeout && (clearTimeout(this.expandTimeout), this.expandTimeout = 0), this.lastRelatedContext && (this.lastRelatedContext.element.hovered = !1, this.lastRelatedContext = null);
                            var G = this.getEmptyContainerFromPoint((l.left + l.right) / 2, l.top, p) || this.getEmptyContainerFromPoint((l.left + l.right) / 2, l.bottom, p);
                            G && (this.fInside(this.$refs.fixed_top, G) ? this.mark_draggable = "fixed_bottom" : this.fInside(this.$refs.fixed_bottom, G) && (this.mark_draggable = "fixed_top"), e.result = {
                                toEmptyGroup: G
                            })
                        }
                    }
                }
                this.handleScroll(o)
            },
            handleScroll: Ne.default.throttle(function(e) {
                if (e && e.parentNode) {
                    var o = this._scroll.$el.getBoundingClientRect(),
                        t = e.getBoundingClientRect(),
                        r = 0,
                        i = 5,
                        n = 5;
                    this.layers.regular.length == 1 && this.layers.fixed_bottom.length == 0 && this.fixedOverRegular && (n = 100), o.bottom - t.bottom < n ? r = 4 : t.top - o.top < i && (r = -4), this._scroll.$el.children[0].scrollTop += r, r && this.$nextTick(() => {
                        this.handleScroll(e)
                    })
                }
            }, 10),
            updateScroll: function() {
                this._scroll.resizableScroll.recalc()
            },
            expandChanged: function() {
                this.updateScroll()
            },
            scrollTo: function(e, o = {}) {
                if (!(e instanceof Element)) return;
                let t = {
                    threshold: 0
                };
                new IntersectionObserver((i, n) => {
                    i.forEach(s => {
                        if (s.intersectionRatio < 1) {
                            let l = o.noAnimation ? "auto" : "smooth";
                            s.target.scrollIntoView({
                                block: "center",
                                inline: "nearest",
                                behavior: l
                            })
                        }
                        n.unobserve(s.target), n.disconnect()
                    })
                }, t).observe(e)
            },
            onSelect: Ne.default.debounce(function(e, o) {
                o = o || {};
                let t = null,
                    r = this;
                if (!e || !e.length) return;
                e.forEach(() => {
                    let n = e[0].model.get("_id");
                    if (r._layerList[n]) {
                        let s = r._layerList[n].$el;
                        (!t || t.offsetTop > s.offsetTop) && (t = s)
                    }
                });
                let i = t && (0, vi.default)(t);
                i && (i.height() > 0 || (t = i.parents(".layer")[0]), this.scrollTo(t, {
                    noAnimation: o.noAnimation
                }))
            }, 20),
            getElementIndex: function(e) {
                var o = 0;
                if (!e || !e.parentNode) return -1;
                for (; e && (e = e.previousElementSibling);) e.nodeName.toUpperCase() !== "TEMPLATE" && o++;
                return o
            },
            onFixedPositionChanged: function(e) {
                this.scrollCooldown && this.scrollCooldown > +new Date || this.$nextTick(() => {
                    var o = e.get("_id"),
                        t = this._layerList[o];
                    t && t.$props.widget.selected && this.scrollTo(t.$el)
                })
            },
            emptyDraggable: function(e) {
                return this.draggedFixed ? e.length == this.draggedItems.length && Ne.default.difference(e, this.draggedItems) == 0 : !1
            },
            filterPredicate(e) {
                switch (this.filter) {
                    case "all":
                        return !0;
                    case "links":
                        return Qb(e);
                    case "viewport":
                        return Jb(e);
                    default:
                        return !0
                }
            }
        },
        computed: {
            bg: function() {
                return Ne.default.find(this.workspace.blocks, function(e) {
                    return e.attributes.type == "background"
                })
            },
            needCaptions: function() {
                var e = 0;
                return Ne.default.each(this.layers, o => {
                    o.length && e++
                }), e > 1
            },
            flattenRegular: function() {
                return this.fFlatten(this.layers.regular)
            },
            flattenRegularFour: function() {
                return this.fFlatten(this.filteredLayers.regular).slice(0, 4)
            },
            scrollOversize: function() {
                return (this.layers.regular.length - 2) * 56
            },
            layersFlat: function() {
                return [].concat(this.fFlatten(this.filteredLayers.above_all, !0, !0), this.fFlatten(this.filteredLayers.fixed_top, !0, !0), this.fFlatten(this.filteredLayers.regular, !0, !0), this.fFlatten(this.filteredLayers.fixed_bottom, !0, !0))
            },
            countFlatLayers: function() {
                return [].concat(this.fFlatten(this.layers.above_all, !0), this.fFlatten(this.layers.fixed_top, !0), this.fFlatten(this.layers.regular, !0), this.fFlatten(this.layers.fixed_bottom, !0)).length
            },
            layersCount: function() {
                return [].concat(this.fFlatten(this.layers.above_all), this.fFlatten(this.layers.fixed_top), this.fFlatten(this.layers.regular), this.fFlatten(this.layers.fixed_bottom)).length
            },
            selectedLayers: function() {
                return [].concat(this.fFlatten(this.layers.above_all), this.fFlatten(this.layers.fixed_top), this.fFlatten(this.layers.regular), this.fFlatten(this.layers.fixed_bottom)).filter(function(e) {
                    return !!e.selected
                })
            },
            selectedList: function() {
                var e = this;
                return [].concat(this.fFlatten(this.layers.above_all, !0), this.fFlatten(this.layers.fixed_top, !0), this.fFlatten(this.layers.regular, !0), this.fFlatten(this.layers.fixed_bottom, !0)).filter(function(o) {
                    return !!o.selected || o.widgets && !!o.widgets[0].selected
                }).map(function(o) {
                    var t = o.model && o.model.get("_id") || o.pack_id;
                    if (!e._layerList[t]) return null;
                    var r = e._layerList[t].$el;
                    return r ? {
                        el: r,
                        context: e._layerList[t].$parent.getUnderlyingVm(r),
                        oldIndex: e.getElementIndex(r),
                        oldParent: r.parentNode
                    } : null
                }).filter(function(o) {
                    return !!o
                })
            },
            noDragndrop: function() {
                return !window.RM.constructorRouter.mag.isPermissionAllowed("BaseWidgetCanChangeZindex")
            },
            filteredLayers: function() {
                return Object.fromEntries(Object.entries(this.layers).map(([e, o]) => [e, o.filter(this.filterPredicate)]))
            },
            isEmptyFilteredLayers: function() {
                let e = this.fFlatten(Object.values(this.filteredLayers).flat(1), !0, !0).length === 0,
                    o = this.layersCount > 0,
                    t = this.filter !== "all";
                return e && o && t
            }
        },
        watch: {
            workspace: {
                handler: function(e, o) {
                    this.onIndexChange(), o && o.page.off("change:viewport", this.onIndexChange), e.page.on("change:viewport", this.onIndexChange), o && o.off("select", this.onSelect), e.on("select", this.onSelect), this.onSelect(this.selectedLayers, {
                        noAnimation: !0
                    }), this.renderReactHeaderActions()
                },
                immediate: !0
            },
            selectedLayers: {
                handler: function(e) {
                    this.showCounter = Math.max(this.showCounter, this.layersFlat.indexOf(e[0]) + 25)
                },
                immediate: !0
            }
        }
    },
    jz = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("transition", {
            attrs: {
                name: "wb-panel"
            }
        }, [t("div", {
            ref: "stack_panel",
            staticClass: "stack_panel",
            class: {
                "group-drag": e.groupDrag, dragging: e.indrag, dark: e.dark
            },
            attrs: {
                "aria-label": "Layer panel"
            }
        }, [t("div", {
            staticClass: "inner fix-radius-clip",
            on: {
                click: e.updateScroll
            }
        }, [t("div", {
            staticClass: "stack_panel-top"
        }, [t("h2", {
            staticClass: "panel-top-caption"
        }, [e._v("Layers")]), e._v(" "), t("div", {
            ref: "react_filters"
        })]), e._v(" "), t("div", {
            staticClass: "line last"
        }), e._v(" "), t("rm-scroll", {
            ref: "rmscroll",
            attrs: {
                "scroll-gap-start": 8,
                "scroll-gap-end": 8,
                "system-scroll": !0,
                "on-panel-scroll": e.onPanelScroll
            }
        }, [t("div", {
            staticClass: "bound-top",
            class: {
                visible: e.boundTop == "top"
            }
        }), e._v(" "), e.isEmptyFilteredLayers ? t("div", {
            staticClass: "empty-text-wrapper",
            style: {
                height: e.getHeightScrolledContent() + "px"
            }
        }, [t("span", {
            staticClass: "empty-text"
        }, [e._v("No widgets to show")])]) : e._e(), e._v(" "), t("div", {
            staticClass: "layers"
        }, [t("div", {
            staticClass: "oversize",
            class: {
                visible: e.oversize == "top" || e.oversize == "both"
            },
            style: {
                height: (e.scrollOversizeTop ? e.mark_draggable ? e.scrollOversizeTop - 56 : e.scrollOversizeTop : 0) + "px"
            }
        }), e._v(" "), e._l(e.layers, function(r, i) {
            return [t("div", {
                key: i
            }, [(e.filteredLayers[i].length > 0 || e.fixedOverRegular && (i == "fixed_top" || i == "fixed_bottom")) && e.needCaptions ? t("div", {
                staticClass: "group-title"
            }, [e._v(`
                ` + e._s(e.caption(i)) + `
              `)]) : e._e(), e._v(" "), i == "regular" ? t("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.fixedOverRegular,
                    expression: "fixedOverRegular"
                }]
            }, [t("div", {
                staticStyle: {
                    "margin-top": "-4px"
                }
            }, [e.flattenRegularFour.length > 0 ? t("group-layers", {
                attrs: {
                    "on-touch-move": e.onTouchMove,
                    "no-arrow": !0,
                    "fake-group": !0,
                    widget: {
                        groupName: " ",
                        pack_id: "fake",
                        widgets: e.flattenRegularFour
                    }
                }
            }) : e._e()], 1), e._v(" "), t("div", {
                staticClass: "line"
            })]) : e._e(), e._v(" "), e.filteredLayers[i].length > 0 || e.fixedOverRegular && (i == "fixed_top" || i == "fixed_bottom") ? t("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.fixedOverRegular || e.fixedOverRegular && (i == "fixed_top" || i == "fixed_bottom"),
                    expression: "!fixedOverRegular || (fixedOverRegular && (idx == 'fixed_top' || idx == 'fixed_bottom'))"
                }],
                ref: i,
                refInFor: !0,
                staticClass: "sortable_relparent",
                class: i
            }, [t("div", {
                key: e.filter,
                staticClass: "stack",
                style: {
                    "min-height": (e.fFlatten(e.filteredLayers[i], !0).length - 2) * 50 + "px"
                }
            }, [t("draggable", {
                staticClass: "draggable-container",
                class: {
                    "empty-draggble": r.length == 0 || e.emptyDraggable(r), "with-captions": e.needCaptions
                },
                attrs: {
                    move: e.onMove,
                    options: {
                        denyX: !0,
                        forceFallback: !0,
                        onEnd: e.onDragEnd,
                        onMoveGhost: e.onMoveGhost,
                        disabled: e.noDragndrop || e.draggableDisabled,
                        relParent: "sortable_relparent",
                        group: i == "fixed_bottom" ? "fixed_top" : i,
                        animation: 200,
                        delay: 0,
                        moveByBlock: !0,
                        scroll: !0,
                        scrollSensitivity: 40
                    }
                },
                on: {
                    end: e.onDragEnd,
                    start: e.onDragStart,
                    touchMove: e.onTouchMove
                },
                model: {
                    value: e.layers[i],
                    callback: function(n) {
                        e.$set(e.layers, i, n)
                    },
                    expression: "layers[idx]"
                }
            }, [r.length ? [e._l(r, function(n) {
                return [e.showCounter > e.layersFlat.indexOf(n) ? t(e.layer_type(n), {
                    key: e.workspace.page.id + (n.pack_id ? n.pack_id : n.attributes._id),
                    tag: "component",
                    attrs: {
                        group: i == "fixed_bottom" ? "fixed_top" : i,
                        widget: n,
                        "on-touch-move": e.onTouchMove,
                        "on-move-ghost": e.onMoveGhost,
                        "no-dragndrop": e.noDragndrop,
                        "is-not-visible": !e.filterPredicate(n),
                        "filter-predicate": e.filterPredicate
                    },
                    on: {
                        expandChanged: e.expandChanged,
                        onWidgetSelect: e.onWidgetSelect,
                        start: e.onDragStart,
                        move: e.onMove,
                        onWidgetDblClick: e.onWidgetDblClick,
                        changeEditState: function(s) {
                            e.draggableDisabled = s
                        },
                        end: function(s) {
                            e.watchOnLayers(), e.onDragEnd(s)
                        }
                    }
                }) : e._e()]
            })] : e._e()], 2)], 1), e._v(" "), e.needLine(i) ? t("div", {
                staticClass: "line"
            }) : e._e()]) : e._e()])]
        }), e._v(" "), t("div", {
            staticClass: "oversize",
            class: {
                visible: e.oversize == "bottom" || e.oversize == "both"
            },
            style: {
                height: (e.scrollOversizeBottom ? e.mark_draggable ? e.scrollOversizeBottom - 56 : e.scrollOversizeBottom : 0) + "px"
            }
        })], 2), e._v(" "), t("div", {
            staticClass: "bound-top",
            class: {
                visible: e.boundTop == "bottom"
            }
        })]), e._v(" "), e.layersCount != 0 ? t("div", {
            staticClass: "line last"
        }) : e._e(), e._v(" "), t("div", [e.showGuidePanel ? t("help-tour-tooltip", {
            attrs: {
                step: e.helpTourStep,
                position: "top",
                modifiers: [{
                    name: "offset",
                    options: {
                        offset: [0, -10]
                    }
                }]
            }
        }) : e._e(), e._v(" "), e.showGuidePanel ? t("permission-controller", {
            attrs: {
                permission: "GridsAndGuidesCanUse"
            }
        }, [t("guides-icon", {
            on: {
                click: e.onGuidesClick
            }
        })], 1) : e._e(), e._v(" "), t("background-icon", {
            attrs: {
                widget: e.bg
            },
            nativeOn: {
                click: function(r) {
                    return e.$emit("showPanel", "background")
                }
            }
        }), e._v(" "), t("div", {
            staticStyle: {
                position: "relative",
                top: "-32px"
            }
        }, [t("help-tour-tooltip", {
            attrs: {
                step: e.helpTourStepBackground,
                position: "right",
                modifiers: [{
                    name: "offset",
                    options: {
                        offset: [0, 8]
                    }
                }]
            }
        })], 1)], 1)], 1)])])
    },
    qz = [],
    Yz = void 0,
    Xz = void 0,
    Kz = void 0,
    Zz = !1;

function Jz(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "stack-panel.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var Qz = Jz({
        render: jz,
        staticRenderFns: qz
    }, Yz, Gz, Xz, Zz, Kz, !1, void 0, void 0, void 0),
    m4 = Qz;
var Ao = M(F());
Ut();
Tt();
W();
var Ia = M(Ws());
te();
var O3 = M(F());
var bo = M(F());
Ic();
var ce = M(F()),
    gs = M(ir());
var so = M(F());

function h4() {
    for (var e = arguments.length, o = new Array(e), t = 0; t < e; t++) o[t] = arguments[t];
    return (0, so.useMemo)(() => r => {
        o.forEach(i => i(r))
    }, o)
}
var kp = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u";

function ba(e) {
    let o = Object.prototype.toString.call(e);
    return o === "[object Window]" || o === "[object global]"
}

function sg(e) {
    return "nodeType" in e
}

function Jo(e) {
    var o, t;
    return e ? ba(e) ? e : sg(e) && (o = (t = e.ownerDocument) == null ? void 0 : t.defaultView) != null ? o : window : window
}

function ag(e) {
    let {
        Document: o
    } = Jo(e);
    return e instanceof o
}

function Yl(e) {
    return ba(e) ? !1 : e instanceof Jo(e).HTMLElement
}

function tw(e) {
    return e instanceof Jo(e).SVGElement
}

function wa(e) {
    return e ? ba(e) ? e.document : sg(e) ? ag(e) ? e : Yl(e) || tw(e) ? e.ownerDocument : document : document : document
}
var Er = kp ? so.useLayoutEffect : so.useEffect;

function lg(e) {
    let o = (0, so.useRef)(e);
    return Er(() => {
        o.current = e
    }), (0, so.useCallback)(function() {
        for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++) r[i] = arguments[i];
        return o.current == null ? void 0 : o.current(...r)
    }, [])
}

function f4() {
    let e = (0, so.useRef)(null),
        o = (0, so.useCallback)((r, i) => {
            e.current = setInterval(r, i)
        }, []),
        t = (0, so.useCallback)(() => {
            e.current !== null && (clearInterval(e.current), e.current = null)
        }, []);
    return [o, t]
}

function Xl(e, o) {
    o === void 0 && (o = [e]);
    let t = (0, so.useRef)(e);
    return Er(() => {
        t.current !== e && (t.current = e)
    }, o), t
}

function Kl(e, o) {
    let t = (0, so.useRef)();
    return (0, so.useMemo)(() => {
        let r = e(t.current);
        return t.current = r, r
    }, [...o])
}

function _p(e) {
    let o = lg(e),
        t = (0, so.useRef)(null),
        r = (0, so.useCallback)(i => {
            i !== t.current && o ? .(i, t.current), t.current = i
        }, []);
    return [t, r]
}

function cg(e) {
    let o = (0, so.useRef)();
    return (0, so.useEffect)(() => {
        o.current = e
    }, [e]), o.current
}
var ew = {};

function xa(e, o) {
    return (0, so.useMemo)(() => {
        if (o) return o;
        let t = ew[e] == null ? 0 : ew[e] + 1;
        return ew[e] = t, e + "-" + t
    }, [e, o])
}

function b4(e) {
    return function(o) {
        for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) r[i - 1] = arguments[i];
        return r.reduce((n, s) => {
            let l = Object.entries(s);
            for (let [p, d] of l) {
                let c = n[p];
                c != null && (n[p] = c + e * d)
            }
            return n
        }, { ...o
        })
    }
}
var va = b4(1),
    Zl = b4(-1);

function eE(e) {
    return "clientX" in e && "clientY" in e
}

function Cp(e) {
    if (!e) return !1;
    let {
        KeyboardEvent: o
    } = Jo(e.target);
    return o && e instanceof o
}

function tE(e) {
    if (!e) return !1;
    let {
        TouchEvent: o
    } = Jo(e.target);
    return o && e instanceof o
}

function Sp(e) {
    if (tE(e)) {
        if (e.touches && e.touches.length) {
            let {
                clientX: o,
                clientY: t
            } = e.touches[0];
            return {
                x: o,
                y: t
            }
        } else if (e.changedTouches && e.changedTouches.length) {
            let {
                clientX: o,
                clientY: t
            } = e.changedTouches[0];
            return {
                x: o,
                y: t
            }
        }
    }
    return eE(e) ? {
        x: e.clientX,
        y: e.clientY
    } : null
}
var ql = Object.freeze({
        Translate: {
            toString(e) {
                if (!e) return;
                let {
                    x: o,
                    y: t
                } = e;
                return "translate3d(" + (o ? Math.round(o) : 0) + "px, " + (t ? Math.round(t) : 0) + "px, 0)"
            }
        },
        Scale: {
            toString(e) {
                if (!e) return;
                let {
                    scaleX: o,
                    scaleY: t
                } = e;
                return "scaleX(" + o + ") scaleY(" + t + ")"
            }
        },
        Transform: {
            toString(e) {
                if (e) return [ql.Translate.toString(e), ql.Scale.toString(e)].join(" ")
            }
        },
        Transition: {
            toString(e) {
                let {
                    property: o,
                    duration: t,
                    easing: r
                } = e;
                return o + " " + t + "ms " + r
            }
        }
    }),
    g4 = "a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]";

function w4(e) {
    return e.matches(g4) ? e : e.querySelector(g4)
}
var ya = M(F()),
    oE = {
        display: "none"
    };

function x4(e) {
    let {
        id: o,
        value: t
    } = e;
    return ya.default.createElement("div", {
        id: o,
        style: oE
    }, t)
}

function v4(e) {
    let {
        id: o,
        announcement: t,
        ariaLiveType: r = "assertive"
    } = e, i = {
        position: "fixed",
        width: 1,
        height: 1,
        margin: -1,
        border: 0,
        padding: 0,
        overflow: "hidden",
        clip: "rect(0 0 0 0)",
        clipPath: "inset(100%)",
        whiteSpace: "nowrap"
    };
    return ya.default.createElement("div", {
        id: o,
        style: i,
        role: "status",
        "aria-live": r,
        "aria-atomic": !0
    }, t)
}

function y4() {
    let [e, o] = (0, ya.useState)("");
    return {
        announce: (0, ya.useCallback)(r => {
            r != null && o(r)
        }, []),
        announcement: e
    }
}
var R4 = (0, ce.createContext)(null);

function cw(e) {
    let o = (0, ce.useContext)(R4);
    (0, ce.useEffect)(() => {
        if (!o) throw new Error("useDndMonitor must be used within a children of <DndContext>");
        return o(e)
    }, [e, o])
}

function rE() {
    let [e] = (0, ce.useState)(() => new Set), o = (0, ce.useCallback)(r => (e.add(r), () => e.delete(r)), [e]);
    return [(0, ce.useCallback)(r => {
        let {
            type: i,
            event: n
        } = r;
        e.forEach(s => {
            var l;
            return (l = s[i]) == null ? void 0 : l.call(s, n)
        })
    }, [e]), o]
}
var iE = {
        draggable: `
    To pick up a draggable item, press the space bar.
    While dragging, use the arrow keys to move the item.
    Press space again to drop the item in its new position, or press escape to cancel.
  `
    },
    nE = {
        onDragStart(e) {
            let {
                active: o
            } = e;
            return "Picked up draggable item " + o.id + "."
        },
        onDragOver(e) {
            let {
                active: o,
                over: t
            } = e;
            return t ? "Draggable item " + o.id + " was moved over droppable area " + t.id + "." : "Draggable item " + o.id + " is no longer over a droppable area."
        },
        onDragEnd(e) {
            let {
                active: o,
                over: t
            } = e;
            return t ? "Draggable item " + o.id + " was dropped over droppable area " + t.id : "Draggable item " + o.id + " was dropped."
        },
        onDragCancel(e) {
            let {
                active: o
            } = e;
            return "Dragging was cancelled. Draggable item " + o.id + " was dropped."
        }
    };

function sE(e) {
    let {
        announcements: o = nE,
        container: t,
        hiddenTextDescribedById: r,
        screenReaderInstructions: i = iE
    } = e, {
        announce: n,
        announcement: s
    } = y4(), l = xa("DndLiveRegion"), [p, d] = (0, ce.useState)(!1);
    if ((0, ce.useEffect)(() => {
            d(!0)
        }, []), cw((0, ce.useMemo)(() => ({
            onDragStart(m) {
                let {
                    active: u
                } = m;
                n(o.onDragStart({
                    active: u
                }))
            },
            onDragMove(m) {
                let {
                    active: u,
                    over: g
                } = m;
                o.onDragMove && n(o.onDragMove({
                    active: u,
                    over: g
                }))
            },
            onDragOver(m) {
                let {
                    active: u,
                    over: g
                } = m;
                n(o.onDragOver({
                    active: u,
                    over: g
                }))
            },
            onDragEnd(m) {
                let {
                    active: u,
                    over: g
                } = m;
                n(o.onDragEnd({
                    active: u,
                    over: g
                }))
            },
            onDragCancel(m) {
                let {
                    active: u,
                    over: g
                } = m;
                n(o.onDragCancel({
                    active: u,
                    over: g
                }))
            }
        }), [n, o])), !p) return null;
    let c = ce.default.createElement(ce.default.Fragment, null, ce.default.createElement(x4, {
        id: r,
        value: i.draggable
    }), ce.default.createElement(v4, {
        id: l,
        announcement: s
    }));
    return t ? (0, gs.createPortal)(c, t) : c
}
var _o;
(function(e) {
    e.DragStart = "dragStart", e.DragMove = "dragMove", e.DragEnd = "dragEnd", e.DragCancel = "dragCancel", e.DragOver = "dragOver", e.RegisterDroppable = "registerDroppable", e.SetDroppableDisabled = "setDroppableDisabled", e.UnregisterDroppable = "unregisterDroppable"
})(_o || (_o = {}));

function dg() {}

function zp(e, o) {
    return (0, ce.useMemo)(() => ({
        sensor: e,
        options: o ? ? {}
    }), [e, o])
}

function gg() {
    for (var e = arguments.length, o = new Array(e), t = 0; t < e; t++) o[t] = arguments[t];
    return (0, ce.useMemo)(() => [...o].filter(r => r != null), [...o])
}
var yi = Object.freeze({
    x: 0,
    y: 0
});

function aE(e, o) {
    let {
        data: {
            value: t
        }
    } = e, {
        data: {
            value: r
        }
    } = o;
    return r - t
}

function z4(e, o) {
    if (!e || e.length === 0) return null;
    let [t] = e;
    return o ? t[o] : t
}

function lE(e, o) {
    let t = Math.max(o.top, e.top),
        r = Math.max(o.left, e.left),
        i = Math.min(o.left + o.width, e.left + e.width),
        n = Math.min(o.top + o.height, e.top + e.height),
        s = i - r,
        l = n - t;
    if (r < i && t < n) {
        let p = o.width * o.height,
            d = e.width * e.height,
            c = s * l,
            m = c / (p + d - c);
        return Number(m.toFixed(4))
    }
    return 0
}
var cE = e => {
    let {
        collisionRect: o,
        droppableRects: t,
        droppableContainers: r
    } = e, i = [];
    for (let n of r) {
        let {
            id: s
        } = n, l = t.get(s);
        if (l) {
            let p = lE(l, o);
            p > 0 && i.push({
                id: s,
                data: {
                    droppableContainer: n,
                    value: p
                }
            })
        }
    }
    return i.sort(aE)
};

function pE(e, o, t) {
    return { ...e,
        scaleX: o && t ? o.width / t.width : 1,
        scaleY: o && t ? o.height / t.height : 1
    }
}

function E4(e, o) {
    return e && o ? {
        x: e.left - o.left,
        y: e.top - o.top
    } : yi
}

function dE(e) {
    return function(t) {
        for (var r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++) i[n - 1] = arguments[n];
        return i.reduce((s, l) => ({ ...s,
            top: s.top + e * l.y,
            bottom: s.bottom + e * l.y,
            left: s.left + e * l.x,
            right: s.right + e * l.x
        }), { ...t
        })
    }
}
var uE = dE(1);

function mE(e) {
    if (e.startsWith("matrix3d(")) {
        let o = e.slice(9, -1).split(/, /);
        return {
            x: +o[12],
            y: +o[13],
            scaleX: +o[0],
            scaleY: +o[5]
        }
    } else if (e.startsWith("matrix(")) {
        let o = e.slice(7, -1).split(/, /);
        return {
            x: +o[4],
            y: +o[5],
            scaleX: +o[0],
            scaleY: +o[3]
        }
    }
    return null
}

function gE(e, o, t) {
    let r = mE(o);
    if (!r) return e;
    let {
        scaleX: i,
        scaleY: n,
        x: s,
        y: l
    } = r, p = e.left - s - (1 - i) * parseFloat(t), d = e.top - l - (1 - n) * parseFloat(t.slice(t.indexOf(" ") + 1)), c = i ? e.width / i : e.width, m = n ? e.height / n : e.height;
    return {
        width: c,
        height: m,
        top: d,
        right: p + c,
        bottom: d + m,
        left: p
    }
}
var hE = {
    ignoreTransform: !1
};

function Ca(e, o) {
    o === void 0 && (o = hE);
    let t = e.getBoundingClientRect();
    if (o.ignoreTransform) {
        let {
            transform: d,
            transformOrigin: c
        } = Jo(e).getComputedStyle(e);
        d && (t = gE(t, d, c))
    }
    let {
        top: r,
        left: i,
        width: n,
        height: s,
        bottom: l,
        right: p
    } = t;
    return {
        top: r,
        left: i,
        width: n,
        height: s,
        bottom: l,
        right: p
    }
}

function k4(e) {
    return Ca(e, {
        ignoreTransform: !0
    })
}

function fE(e) {
    let o = e.innerWidth,
        t = e.innerHeight;
    return {
        top: 0,
        left: 0,
        right: o,
        bottom: t,
        width: o,
        height: t
    }
}

function bE(e, o) {
    return o === void 0 && (o = Jo(e).getComputedStyle(e)), o.position === "fixed"
}

function wE(e, o) {
    o === void 0 && (o = Jo(e).getComputedStyle(e));
    let t = /(auto|scroll|overlay)/;
    return ["overflow", "overflowX", "overflowY"].some(i => {
        let n = o[i];
        return typeof n == "string" ? t.test(n) : !1
    })
}

function hg(e, o) {
    let t = [];

    function r(i) {
        if (o != null && t.length >= o || !i) return t;
        if (ag(i) && i.scrollingElement != null && !t.includes(i.scrollingElement)) return t.push(i.scrollingElement), t;
        if (!Yl(i) || tw(i) || t.includes(i)) return t;
        let n = Jo(e).getComputedStyle(i);
        return i !== e && wE(i, n) && t.push(i), bE(i, n) ? t : r(i.parentNode)
    }
    return e ? r(e) : t
}

function A4(e) {
    let [o] = hg(e, 1);
    return o ? ? null
}

function ow(e) {
    return !kp || !e ? null : ba(e) ? e : sg(e) ? ag(e) || e === wa(e).scrollingElement ? window : Yl(e) ? e : null : null
}

function D4(e) {
    return ba(e) ? e.scrollX : e.scrollLeft
}

function L4(e) {
    return ba(e) ? e.scrollY : e.scrollTop
}

function sw(e) {
    return {
        x: D4(e),
        y: L4(e)
    }
}
var To;
(function(e) {
    e[e.Forward = 1] = "Forward", e[e.Backward = -1] = "Backward"
})(To || (To = {}));

function O4(e) {
    return !kp || !e ? !1 : e === document.scrollingElement
}

function $4(e) {
    let o = {
            x: 0,
            y: 0
        },
        t = O4(e) ? {
            height: window.innerHeight,
            width: window.innerWidth
        } : {
            height: e.clientHeight,
            width: e.clientWidth
        },
        r = {
            x: e.scrollWidth - t.width,
            y: e.scrollHeight - t.height
        },
        i = e.scrollTop <= o.y,
        n = e.scrollLeft <= o.x,
        s = e.scrollTop >= r.y,
        l = e.scrollLeft >= r.x;
    return {
        isTop: i,
        isLeft: n,
        isBottom: s,
        isRight: l,
        maxScroll: r,
        minScroll: o
    }
}
var xE = {
    x: .2,
    y: .2
};

function vE(e, o, t, r, i) {
    let {
        top: n,
        left: s,
        right: l,
        bottom: p
    } = t;
    r === void 0 && (r = 10), i === void 0 && (i = xE);
    let {
        isTop: d,
        isBottom: c,
        isLeft: m,
        isRight: u
    } = $4(e), g = {
        x: 0,
        y: 0
    }, h = {
        x: 0,
        y: 0
    }, b = {
        height: o.height * i.y,
        width: o.width * i.x
    };
    return !d && n <= o.top + b.height ? (g.y = To.Backward, h.y = r * Math.abs((o.top + b.height - n) / b.height)) : !c && p >= o.bottom - b.height && (g.y = To.Forward, h.y = r * Math.abs((o.bottom - b.height - p) / b.height)), !u && l >= o.right - b.width ? (g.x = To.Forward, h.x = r * Math.abs((o.right - b.width - l) / b.width)) : !m && s <= o.left + b.width && (g.x = To.Backward, h.x = r * Math.abs((o.left + b.width - s) / b.width)), {
        direction: g,
        speed: h
    }
}

function yE(e) {
    if (e === document.scrollingElement) {
        let {
            innerWidth: n,
            innerHeight: s
        } = window;
        return {
            top: 0,
            left: 0,
            right: n,
            bottom: s,
            width: n,
            height: s
        }
    }
    let {
        top: o,
        left: t,
        right: r,
        bottom: i
    } = e.getBoundingClientRect();
    return {
        top: o,
        left: t,
        right: r,
        bottom: i,
        width: e.clientWidth,
        height: e.clientHeight
    }
}

function H4(e) {
    return e.reduce((o, t) => va(o, sw(t)), yi)
}

function kE(e) {
    return e.reduce((o, t) => o + D4(t), 0)
}

function _E(e) {
    return e.reduce((o, t) => o + L4(t), 0)
}

function CE(e, o) {
    if (o === void 0 && (o = Ca), !e) return;
    let {
        top: t,
        left: r,
        bottom: i,
        right: n
    } = o(e);
    A4(e) && (i <= 0 || n <= 0 || t >= window.innerHeight || r >= window.innerWidth) && e.scrollIntoView({
        block: "center",
        inline: "center"
    })
}
var SE = [
        ["x", ["left", "right"], kE],
        ["y", ["top", "bottom"], _E]
    ],
    Tp = class {
        constructor(o, t) {
            this.rect = void 0, this.width = void 0, this.height = void 0, this.top = void 0, this.bottom = void 0, this.right = void 0, this.left = void 0;
            let r = hg(t),
                i = H4(r);
            this.rect = { ...o
            }, this.width = o.width, this.height = o.height;
            for (let [n, s, l] of SE)
                for (let p of s) Object.defineProperty(this, p, {
                    get: () => {
                        let d = l(r),
                            c = i[n] - d;
                        return this.rect[p] + c
                    },
                    enumerable: !0
                });
            Object.defineProperty(this, "rect", {
                enumerable: !1
            })
        }
    },
    ka = class {
        constructor(o) {
            this.target = void 0, this.listeners = [], this.removeAll = () => {
                this.listeners.forEach(t => {
                    var r;
                    return (r = this.target) == null ? void 0 : r.removeEventListener(...t)
                })
            }, this.target = o
        }
        add(o, t, r) {
            var i;
            (i = this.target) == null || i.addEventListener(o, t, r), this.listeners.push([o, t, r])
        }
    };

function PE(e) {
    let {
        EventTarget: o
    } = Jo(e);
    return e instanceof o ? e : wa(e)
}

function rw(e, o) {
    let t = Math.abs(e.x),
        r = Math.abs(e.y);
    return typeof o == "number" ? Math.sqrt(t ** 2 + r ** 2) > o : "x" in o && "y" in o ? t > o.x && r > o.y : "x" in o ? t > o.x : "y" in o ? r > o.y : !1
}
var Kr;
(function(e) {
    e.Click = "click", e.DragStart = "dragstart", e.Keydown = "keydown", e.ContextMenu = "contextmenu", e.Resize = "resize", e.SelectionChange = "selectionchange", e.VisibilityChange = "visibilitychange"
})(Kr || (Kr = {}));

function _4(e) {
    e.preventDefault()
}

function TE(e) {
    e.stopPropagation()
}
var vt;
(function(e) {
    e.Space = "Space", e.Down = "ArrowDown", e.Right = "ArrowRight", e.Left = "ArrowLeft", e.Up = "ArrowUp", e.Esc = "Escape", e.Enter = "Enter"
})(vt || (vt = {}));
var F4 = {
        start: [vt.Space, vt.Enter],
        cancel: [vt.Esc],
        end: [vt.Space, vt.Enter]
    },
    IE = (e, o) => {
        let {
            currentCoordinates: t
        } = o;
        switch (e.code) {
            case vt.Right:
                return { ...t,
                    x: t.x + 25
                };
            case vt.Left:
                return { ...t,
                    x: t.x - 25
                };
            case vt.Down:
                return { ...t,
                    y: t.y + 25
                };
            case vt.Up:
                return { ...t,
                    y: t.y - 25
                }
        }
    },
    ug = class {
        constructor(o) {
            this.props = void 0, this.autoScrollEnabled = !1, this.referenceCoordinates = void 0, this.listeners = void 0, this.windowListeners = void 0, this.props = o;
            let {
                event: {
                    target: t
                }
            } = o;
            this.props = o, this.listeners = new ka(wa(t)), this.windowListeners = new ka(Jo(t)), this.handleKeyDown = this.handleKeyDown.bind(this), this.handleCancel = this.handleCancel.bind(this), this.attach()
        }
        attach() {
            this.handleStart(), this.windowListeners.add(Kr.Resize, this.handleCancel), this.windowListeners.add(Kr.VisibilityChange, this.handleCancel), setTimeout(() => this.listeners.add(Kr.Keydown, this.handleKeyDown))
        }
        handleStart() {
            let {
                activeNode: o,
                onStart: t
            } = this.props, r = o.node.current;
            r && CE(r), t(yi)
        }
        handleKeyDown(o) {
            if (Cp(o)) {
                let {
                    active: t,
                    context: r,
                    options: i
                } = this.props, {
                    keyboardCodes: n = F4,
                    coordinateGetter: s = IE,
                    scrollBehavior: l = "smooth"
                } = i, {
                    code: p
                } = o;
                if (n.end.includes(p)) {
                    this.handleEnd(o);
                    return
                }
                if (n.cancel.includes(p)) {
                    this.handleCancel(o);
                    return
                }
                let {
                    collisionRect: d
                } = r.current, c = d ? {
                    x: d.left,
                    y: d.top
                } : yi;
                this.referenceCoordinates || (this.referenceCoordinates = c);
                let m = s(o, {
                    active: t,
                    context: r.current,
                    currentCoordinates: c
                });
                if (m) {
                    let u = Zl(m, c),
                        g = {
                            x: 0,
                            y: 0
                        },
                        {
                            scrollableAncestors: h
                        } = r.current;
                    for (let b of h) {
                        let x = o.code,
                            {
                                isTop: S,
                                isRight: v,
                                isLeft: P,
                                isBottom: C,
                                maxScroll: k,
                                minScroll: T
                            } = $4(b),
                            R = yE(b),
                            I = {
                                x: Math.min(x === vt.Right ? R.right - R.width / 2 : R.right, Math.max(x === vt.Right ? R.left : R.left + R.width / 2, m.x)),
                                y: Math.min(x === vt.Down ? R.bottom - R.height / 2 : R.bottom, Math.max(x === vt.Down ? R.top : R.top + R.height / 2, m.y))
                            },
                            B = x === vt.Right && !v || x === vt.Left && !P,
                            L = x === vt.Down && !C || x === vt.Up && !S;
                        if (B && I.x !== m.x) {
                            let D = b.scrollLeft + u.x,
                                E = x === vt.Right && D <= k.x || x === vt.Left && D >= T.x;
                            if (E && !u.y) {
                                b.scrollTo({
                                    left: D,
                                    behavior: l
                                });
                                return
                            }
                            E ? g.x = b.scrollLeft - D : g.x = x === vt.Right ? b.scrollLeft - k.x : b.scrollLeft - T.x, g.x && b.scrollBy({
                                left: -g.x,
                                behavior: l
                            });
                            break
                        } else if (L && I.y !== m.y) {
                            let D = b.scrollTop + u.y,
                                E = x === vt.Down && D <= k.y || x === vt.Up && D >= T.y;
                            if (E && !u.x) {
                                b.scrollTo({
                                    top: D,
                                    behavior: l
                                });
                                return
                            }
                            E ? g.y = b.scrollTop - D : g.y = x === vt.Down ? b.scrollTop - k.y : b.scrollTop - T.y, g.y && b.scrollBy({
                                top: -g.y,
                                behavior: l
                            });
                            break
                        }
                    }
                    this.handleMove(o, va(Zl(m, this.referenceCoordinates), g))
                }
            }
        }
        handleMove(o, t) {
            let {
                onMove: r
            } = this.props;
            o.preventDefault(), r(t)
        }
        handleEnd(o) {
            let {
                onEnd: t
            } = this.props;
            o.preventDefault(), this.detach(), t()
        }
        handleCancel(o) {
            let {
                onCancel: t
            } = this.props;
            o.preventDefault(), this.detach(), t()
        }
        detach() {
            this.listeners.removeAll(), this.windowListeners.removeAll()
        }
    };
ug.activators = [{
    eventName: "onKeyDown",
    handler: (e, o, t) => {
        let {
            keyboardCodes: r = F4,
            onActivation: i
        } = o, {
            active: n
        } = t, {
            code: s
        } = e.nativeEvent;
        if (r.start.includes(s)) {
            let l = n.activatorNode.current;
            return l && e.target !== l ? !1 : (e.preventDefault(), i ? .({
                event: e.nativeEvent
            }), !0)
        }
        return !1
    }
}];

function C4(e) {
    return !!(e && "distance" in e)
}

function S4(e) {
    return !!(e && "delay" in e)
}
var Ip = class {
        constructor(o, t, r) {
            var i;
            r === void 0 && (r = PE(o.event.target)), this.props = void 0, this.events = void 0, this.autoScrollEnabled = !0, this.document = void 0, this.activated = !1, this.initialCoordinates = void 0, this.timeoutId = null, this.listeners = void 0, this.documentListeners = void 0, this.windowListeners = void 0, this.props = o, this.events = t;
            let {
                event: n
            } = o, {
                target: s
            } = n;
            this.props = o, this.events = t, this.document = wa(s), this.documentListeners = new ka(this.document), this.listeners = new ka(r), this.windowListeners = new ka(Jo(s)), this.initialCoordinates = (i = Sp(n)) != null ? i : yi, this.handleStart = this.handleStart.bind(this), this.handleMove = this.handleMove.bind(this), this.handleEnd = this.handleEnd.bind(this), this.handleCancel = this.handleCancel.bind(this), this.handleKeydown = this.handleKeydown.bind(this), this.removeTextSelection = this.removeTextSelection.bind(this), this.attach()
        }
        attach() {
            let {
                events: o,
                props: {
                    options: {
                        activationConstraint: t,
                        bypassActivationConstraint: r
                    }
                }
            } = this;
            if (this.listeners.add(o.move.name, this.handleMove, {
                    passive: !1
                }), this.listeners.add(o.end.name, this.handleEnd), this.windowListeners.add(Kr.Resize, this.handleCancel), this.windowListeners.add(Kr.DragStart, _4), this.windowListeners.add(Kr.VisibilityChange, this.handleCancel), this.windowListeners.add(Kr.ContextMenu, _4), this.documentListeners.add(Kr.Keydown, this.handleKeydown), t) {
                if (r != null && r({
                        event: this.props.event,
                        activeNode: this.props.activeNode,
                        options: this.props.options
                    })) return this.handleStart();
                if (S4(t)) {
                    this.timeoutId = setTimeout(this.handleStart, t.delay);
                    return
                }
                if (C4(t)) return
            }
            this.handleStart()
        }
        detach() {
            this.listeners.removeAll(), this.windowListeners.removeAll(), setTimeout(this.documentListeners.removeAll, 50), this.timeoutId !== null && (clearTimeout(this.timeoutId), this.timeoutId = null)
        }
        handleStart() {
            let {
                initialCoordinates: o
            } = this, {
                onStart: t
            } = this.props;
            o && (this.activated = !0, this.documentListeners.add(Kr.Click, TE, {
                capture: !0
            }), this.removeTextSelection(), this.documentListeners.add(Kr.SelectionChange, this.removeTextSelection), t(o))
        }
        handleMove(o) {
            var t;
            let {
                activated: r,
                initialCoordinates: i,
                props: n
            } = this, {
                onMove: s,
                options: {
                    activationConstraint: l
                }
            } = n;
            if (!i) return;
            let p = (t = Sp(o)) != null ? t : yi,
                d = Zl(i, p);
            if (!r && l) {
                if (C4(l)) {
                    if (l.tolerance != null && rw(d, l.tolerance)) return this.handleCancel();
                    if (rw(d, l.distance)) return this.handleStart()
                }
                return S4(l) && rw(d, l.tolerance) ? this.handleCancel() : void 0
            }
            o.cancelable && o.preventDefault(), s(p)
        }
        handleEnd() {
            let {
                onEnd: o
            } = this.props;
            this.detach(), o()
        }
        handleCancel() {
            let {
                onCancel: o
            } = this.props;
            this.detach(), o()
        }
        handleKeydown(o) {
            o.code === vt.Esc && this.handleCancel()
        }
        removeTextSelection() {
            var o;
            (o = this.document.getSelection()) == null || o.removeAllRanges()
        }
    },
    ME = {
        move: {
            name: "pointermove"
        },
        end: {
            name: "pointerup"
        }
    },
    Jl = class extends Ip {
        constructor(o) {
            let {
                event: t
            } = o, r = wa(t.target);
            super(o, ME, r)
        }
    };
Jl.activators = [{
    eventName: "onPointerDown",
    handler: (e, o) => {
        let {
            nativeEvent: t
        } = e, {
            onActivation: r
        } = o;
        return !t.isPrimary || t.button !== 0 ? !1 : (r ? .({
            event: t
        }), !0)
    }
}];
var BE = {
        move: {
            name: "mousemove"
        },
        end: {
            name: "mouseup"
        }
    },
    aw;
(function(e) {
    e[e.RightClick = 2] = "RightClick"
})(aw || (aw = {}));
var Mp = class extends Ip {
    constructor(o) {
        super(o, BE, wa(o.event.target))
    }
};
Mp.activators = [{
    eventName: "onMouseDown",
    handler: (e, o) => {
        let {
            nativeEvent: t
        } = e, {
            onActivation: r
        } = o;
        return t.button === aw.RightClick ? !1 : (r ? .({
            event: t
        }), !0)
    }
}];
var iw = {
        move: {
            name: "touchmove"
        },
        end: {
            name: "touchend"
        }
    },
    Bp = class extends Ip {
        constructor(o) {
            super(o, iw)
        }
        static setup() {
            return window.addEventListener(iw.move.name, o, {
                    capture: !1,
                    passive: !1
                }),
                function() {
                    window.removeEventListener(iw.move.name, o)
                };

            function o() {}
        }
    };
Bp.activators = [{
    eventName: "onTouchStart",
    handler: (e, o) => {
        let {
            nativeEvent: t
        } = e, {
            onActivation: r
        } = o, {
            touches: i
        } = t;
        return i.length > 1 ? !1 : (r ? .({
            event: t
        }), !0)
    }
}];
var Pp;
(function(e) {
    e[e.Pointer = 0] = "Pointer", e[e.DraggableRect = 1] = "DraggableRect"
})(Pp || (Pp = {}));
var mg;
(function(e) {
    e[e.TreeOrder = 0] = "TreeOrder", e[e.ReversedTreeOrder = 1] = "ReversedTreeOrder"
})(mg || (mg = {}));

function RE(e) {
    let {
        acceleration: o,
        activator: t = Pp.Pointer,
        canScroll: r,
        draggingRect: i,
        enabled: n,
        interval: s = 5,
        order: l = mg.TreeOrder,
        pointerCoordinates: p,
        scrollableAncestors: d,
        scrollableAncestorRects: c,
        delta: m,
        threshold: u
    } = e, g = EE({
        delta: m,
        disabled: !n
    }), [h, b] = f4(), x = (0, ce.useRef)({
        x: 0,
        y: 0
    }), S = (0, ce.useRef)({
        x: 0,
        y: 0
    }), v = (0, ce.useMemo)(() => {
        switch (t) {
            case Pp.Pointer:
                return p ? {
                    top: p.y,
                    bottom: p.y,
                    left: p.x,
                    right: p.x
                } : null;
            case Pp.DraggableRect:
                return i
        }
    }, [t, i, p]), P = (0, ce.useRef)(null), C = (0, ce.useCallback)(() => {
        let T = P.current;
        if (!T) return;
        let R = x.current.x * S.current.x,
            I = x.current.y * S.current.y;
        T.scrollBy(R, I)
    }, []), k = (0, ce.useMemo)(() => l === mg.TreeOrder ? [...d].reverse() : d, [l, d]);
    (0, ce.useEffect)(() => {
        if (!n || !d.length || !v) {
            b();
            return
        }
        for (let T of k) {
            if (r ? .(T) === !1) continue;
            let R = d.indexOf(T),
                I = c[R];
            if (!I) continue;
            let {
                direction: B,
                speed: L
            } = vE(T, I, v, o, u);
            for (let D of ["x", "y"]) g[D][B[D]] || (L[D] = 0, B[D] = 0);
            if (L.x > 0 || L.y > 0) {
                b(), P.current = T, h(C, s), x.current = L, S.current = B;
                return
            }
        }
        x.current = {
            x: 0,
            y: 0
        }, S.current = {
            x: 0,
            y: 0
        }, b()
    }, [o, C, r, b, n, s, JSON.stringify(v), JSON.stringify(g), h, d, k, c, JSON.stringify(u)])
}
var zE = {
    x: {
        [To.Backward]: !1,
        [To.Forward]: !1
    },
    y: {
        [To.Backward]: !1,
        [To.Forward]: !1
    }
};

function EE(e) {
    let {
        delta: o,
        disabled: t
    } = e, r = cg(o);
    return Kl(i => {
        if (t || !r || !i) return zE;
        let n = {
            x: Math.sign(o.x - r.x),
            y: Math.sign(o.y - r.y)
        };
        return {
            x: {
                [To.Backward]: i.x[To.Backward] || n.x === -1,
                [To.Forward]: i.x[To.Forward] || n.x === 1
            },
            y: {
                [To.Backward]: i.y[To.Backward] || n.y === -1,
                [To.Forward]: i.y[To.Forward] || n.y === 1
            }
        }
    }, [t, o, r])
}

function AE(e, o) {
    let t = o !== null ? e.get(o) : void 0,
        r = t ? t.node.current : null;
    return Kl(i => {
        var n;
        return o === null ? null : (n = r ? ? i) != null ? n : null
    }, [r, o])
}

function DE(e, o) {
    return (0, ce.useMemo)(() => e.reduce((t, r) => {
        let {
            sensor: i
        } = r, n = i.activators.map(s => ({
            eventName: s.eventName,
            handler: o(s.handler, r)
        }));
        return [...t, ...n]
    }, []), [e, o])
}
var Rp;
(function(e) {
    e[e.Always = 0] = "Always", e[e.BeforeDragging = 1] = "BeforeDragging", e[e.WhileDragging = 2] = "WhileDragging"
})(Rp || (Rp = {}));
var lw;
(function(e) {
    e.Optimized = "optimized"
})(lw || (lw = {}));
var P4 = new Map;

function LE(e, o) {
    let {
        dragging: t,
        dependencies: r,
        config: i
    } = o, [n, s] = (0, ce.useState)(null), {
        frequency: l,
        measure: p,
        strategy: d
    } = i, c = (0, ce.useRef)(e), m = x(), u = Xl(m), g = (0, ce.useCallback)(function(S) {
        S === void 0 && (S = []), !u.current && s(v => v === null ? S : v.concat(S.filter(P => !v.includes(P))))
    }, [u]), h = (0, ce.useRef)(null), b = Kl(S => {
        if (m && !t) return P4;
        if (!S || S === P4 || c.current !== e || n != null) {
            let v = new Map;
            for (let P of e) {
                if (!P) continue;
                if (n && n.length > 0 && !n.includes(P.id) && P.rect.current) {
                    v.set(P.id, P.rect.current);
                    continue
                }
                let C = P.node.current,
                    k = C ? new Tp(p(C), C) : null;
                P.rect.current = k, k && v.set(P.id, k)
            }
            return v
        }
        return S
    }, [e, n, t, m, p]);
    return (0, ce.useEffect)(() => {
        c.current = e
    }, [e]), (0, ce.useEffect)(() => {
        m || g()
    }, [t, m]), (0, ce.useEffect)(() => {
        n && n.length > 0 && s(null)
    }, [JSON.stringify(n)]), (0, ce.useEffect)(() => {
        m || typeof l != "number" || h.current !== null || (h.current = setTimeout(() => {
            g(), h.current = null
        }, l))
    }, [l, m, g, ...r]), {
        droppableRects: b,
        measureDroppableContainers: g,
        measuringScheduled: n != null
    };

    function x() {
        switch (d) {
            case Rp.Always:
                return !1;
            case Rp.BeforeDragging:
                return t;
            default:
                return !t
        }
    }
}

function N4(e, o) {
    return Kl(t => e ? t || (typeof o == "function" ? o(e) : e) : null, [o, e])
}

function OE(e, o) {
    return N4(e, o)
}

function $E(e) {
    let {
        callback: o,
        disabled: t
    } = e, r = lg(o), i = (0, ce.useMemo)(() => {
        if (t || typeof window > "u" || typeof window.MutationObserver > "u") return;
        let {
            MutationObserver: n
        } = window;
        return new n(r)
    }, [r, t]);
    return (0, ce.useEffect)(() => () => i ? .disconnect(), [i]), i
}

function fg(e) {
    let {
        callback: o,
        disabled: t
    } = e, r = lg(o), i = (0, ce.useMemo)(() => {
        if (t || typeof window > "u" || typeof window.ResizeObserver > "u") return;
        let {
            ResizeObserver: n
        } = window;
        return new n(r)
    }, [t]);
    return (0, ce.useEffect)(() => () => i ? .disconnect(), [i]), i
}

function HE(e) {
    return new Tp(Ca(e), e)
}

function T4(e, o, t) {
    o === void 0 && (o = HE);
    let [r, i] = (0, ce.useReducer)(l, null), n = $E({
        callback(p) {
            if (e)
                for (let d of p) {
                    let {
                        type: c,
                        target: m
                    } = d;
                    if (c === "childList" && m instanceof HTMLElement && m.contains(e)) {
                        i();
                        break
                    }
                }
        }
    }), s = fg({
        callback: i
    });
    return Er(() => {
        i(), e ? (s ? .observe(e), n ? .observe(document.body, {
            childList: !0,
            subtree: !0
        })) : (s ? .disconnect(), n ? .disconnect())
    }, [e]), r;

    function l(p) {
        if (!e) return null;
        if (e.isConnected === !1) {
            var d;
            return (d = p ? ? t) != null ? d : null
        }
        let c = o(e);
        return JSON.stringify(p) === JSON.stringify(c) ? p : c
    }
}

function FE(e) {
    let o = N4(e);
    return E4(e, o)
}
var I4 = [];

function NE(e) {
    let o = (0, ce.useRef)(e),
        t = Kl(r => e ? r && r !== I4 && e && o.current && e.parentNode === o.current.parentNode ? r : hg(e) : I4, [e]);
    return (0, ce.useEffect)(() => {
        o.current = e
    }, [e]), t
}

function WE(e) {
    let [o, t] = (0, ce.useState)(null), r = (0, ce.useRef)(e), i = (0, ce.useCallback)(n => {
        let s = ow(n.target);
        s && t(l => l ? (l.set(s, sw(s)), new Map(l)) : null)
    }, []);
    return (0, ce.useEffect)(() => {
        let n = r.current;
        if (e !== n) {
            s(n);
            let l = e.map(p => {
                let d = ow(p);
                return d ? (d.addEventListener("scroll", i, {
                    passive: !0
                }), [d, sw(d)]) : null
            }).filter(p => p != null);
            t(l.length ? new Map(l) : null), r.current = e
        }
        return () => {
            s(e), s(n)
        };

        function s(l) {
            l.forEach(p => {
                let d = ow(p);
                d ? .removeEventListener("scroll", i)
            })
        }
    }, [i, e]), (0, ce.useMemo)(() => e.length ? o ? Array.from(o.values()).reduce((n, s) => va(n, s), yi) : H4(e) : yi, [e, o])
}

function M4(e, o) {
    o === void 0 && (o = []);
    let t = (0, ce.useRef)(null);
    return (0, ce.useEffect)(() => {
        t.current = null
    }, o), (0, ce.useEffect)(() => {
        let r = e !== yi;
        r && !t.current && (t.current = e), !r && t.current && (t.current = null)
    }, [e]), t.current ? Zl(e, t.current) : yi
}

function VE(e) {
    (0, ce.useEffect)(() => {
        if (!kp) return;
        let o = e.map(t => {
            let {
                sensor: r
            } = t;
            return r.setup == null ? void 0 : r.setup()
        });
        return () => {
            for (let t of o) t ? .()
        }
    }, e.map(o => {
        let {
            sensor: t
        } = o;
        return t
    }))
}

function UE(e, o) {
    return (0, ce.useMemo)(() => e.reduce((t, r) => {
        let {
            eventName: i,
            handler: n
        } = r;
        return t[i] = s => {
            n(s, o)
        }, t
    }, {}), [e, o])
}

function W4(e) {
    return (0, ce.useMemo)(() => e ? fE(e) : null, [e])
}
var nw = [];

function GE(e, o) {
    o === void 0 && (o = Ca);
    let [t] = e, r = W4(t ? Jo(t) : null), [i, n] = (0, ce.useReducer)(l, nw), s = fg({
        callback: n
    });
    return e.length > 0 && i === nw && n(), Er(() => {
        e.length ? e.forEach(p => s ? .observe(p)) : (s ? .disconnect(), n())
    }, [e]), i;

    function l() {
        return e.length ? e.map(p => O4(p) ? r : new Tp(o(p), p)) : nw
    }
}

function jE(e) {
    if (!e) return null;
    if (e.children.length > 1) return e;
    let o = e.children[0];
    return Yl(o) ? o : e
}

function qE(e) {
    let {
        measure: o
    } = e, [t, r] = (0, ce.useState)(null), i = (0, ce.useCallback)(d => {
        for (let {
                target: c
            } of d)
            if (Yl(c)) {
                r(m => {
                    let u = o(c);
                    return m ? { ...m,
                        width: u.width,
                        height: u.height
                    } : u
                });
                break
            }
    }, [o]), n = fg({
        callback: i
    }), s = (0, ce.useCallback)(d => {
        let c = jE(d);
        n ? .disconnect(), c && n ? .observe(c), r(c ? o(c) : null)
    }, [o, n]), [l, p] = _p(s);
    return (0, ce.useMemo)(() => ({
        nodeRef: l,
        rect: t,
        setRef: p
    }), [t, l, p])
}
var YE = [{
        sensor: Jl,
        options: {}
    }, {
        sensor: ug,
        options: {}
    }],
    XE = {
        current: {}
    },
    pg = {
        draggable: {
            measure: k4
        },
        droppable: {
            measure: k4,
            strategy: Rp.WhileDragging,
            frequency: lw.Optimized
        },
        dragOverlay: {
            measure: Ca
        }
    },
    _a = class extends Map {
        get(o) {
            var t;
            return o != null && (t = super.get(o)) != null ? t : void 0
        }
        toArray() {
            return Array.from(this.values())
        }
        getEnabled() {
            return this.toArray().filter(o => {
                let {
                    disabled: t
                } = o;
                return !t
            })
        }
        getNodeFor(o) {
            var t, r;
            return (t = (r = this.get(o)) == null ? void 0 : r.node.current) != null ? t : void 0
        }
    },
    KE = {
        activatorEvent: null,
        active: null,
        activeNode: null,
        activeNodeRect: null,
        collisions: null,
        containerNodeRect: null,
        draggableNodes: new Map,
        droppableRects: new Map,
        droppableContainers: new _a,
        over: null,
        dragOverlay: {
            nodeRef: {
                current: null
            },
            rect: null,
            setRef: dg
        },
        scrollableAncestors: [],
        scrollableAncestorRects: [],
        measuringConfiguration: pg,
        measureDroppableContainers: dg,
        windowRect: null,
        measuringScheduled: !1
    },
    ZE = {
        activatorEvent: null,
        activators: [],
        active: null,
        activeNodeRect: null,
        ariaDescribedById: {
            draggable: ""
        },
        dispatch: dg,
        draggableNodes: new Map,
        over: null,
        measureDroppableContainers: dg
    },
    bg = (0, ce.createContext)(ZE),
    V4 = (0, ce.createContext)(KE);

function JE() {
    return {
        draggable: {
            active: null,
            initialCoordinates: {
                x: 0,
                y: 0
            },
            nodes: new Map,
            translate: {
                x: 0,
                y: 0
            }
        },
        droppable: {
            containers: new _a
        }
    }
}

function QE(e, o) {
    switch (o.type) {
        case _o.DragStart:
            return { ...e,
                draggable: { ...e.draggable,
                    initialCoordinates: o.initialCoordinates,
                    active: o.active
                }
            };
        case _o.DragMove:
            return e.draggable.active ? { ...e,
                draggable: { ...e.draggable,
                    translate: {
                        x: o.coordinates.x - e.draggable.initialCoordinates.x,
                        y: o.coordinates.y - e.draggable.initialCoordinates.y
                    }
                }
            } : e;
        case _o.DragEnd:
        case _o.DragCancel:
            return { ...e,
                draggable: { ...e.draggable,
                    active: null,
                    initialCoordinates: {
                        x: 0,
                        y: 0
                    },
                    translate: {
                        x: 0,
                        y: 0
                    }
                }
            };
        case _o.RegisterDroppable:
            {
                let {
                    element: t
                } = o,
                {
                    id: r
                } = t,
                i = new _a(e.droppable.containers);
                return i.set(r, t),
                { ...e,
                    droppable: { ...e.droppable,
                        containers: i
                    }
                }
            }
        case _o.SetDroppableDisabled:
            {
                let {
                    id: t,
                    key: r,
                    disabled: i
                } = o,
                n = e.droppable.containers.get(t);
                if (!n || r !== n.key) return e;
                let s = new _a(e.droppable.containers);
                return s.set(t, { ...n,
                    disabled: i
                }),
                { ...e,
                    droppable: { ...e.droppable,
                        containers: s
                    }
                }
            }
        case _o.UnregisterDroppable:
            {
                let {
                    id: t,
                    key: r
                } = o,
                i = e.droppable.containers.get(t);
                if (!i || r !== i.key) return e;
                let n = new _a(e.droppable.containers);
                return n.delete(t),
                { ...e,
                    droppable: { ...e.droppable,
                        containers: n
                    }
                }
            }
        default:
            return e
    }
}

function eA(e) {
    let {
        disabled: o
    } = e, {
        active: t,
        activatorEvent: r,
        draggableNodes: i
    } = (0, ce.useContext)(bg), n = cg(r), s = cg(t ? .id);
    return (0, ce.useEffect)(() => {
        if (!o && !r && n && s != null) {
            if (!Cp(n) || document.activeElement === n.target) return;
            let l = i.get(s);
            if (!l) return;
            let {
                activatorNode: p,
                node: d
            } = l;
            if (!p.current && !d.current) return;
            requestAnimationFrame(() => {
                for (let c of [p.current, d.current]) {
                    if (!c) continue;
                    let m = w4(c);
                    if (m) {
                        m.focus();
                        break
                    }
                }
            })
        }
    }, [r, o, i, s, n]), null
}

function tA(e, o) {
    let {
        transform: t,
        ...r
    } = o;
    return e != null && e.length ? e.reduce((i, n) => n({
        transform: i,
        ...r
    }), t) : t
}

function oA(e) {
    return (0, ce.useMemo)(() => ({
        draggable: { ...pg.draggable,
            ...e ? .draggable
        },
        droppable: { ...pg.droppable,
            ...e ? .droppable
        },
        dragOverlay: { ...pg.dragOverlay,
            ...e ? .dragOverlay
        }
    }), [e ? .draggable, e ? .droppable, e ? .dragOverlay])
}

function rA(e) {
    let {
        activeNode: o,
        measure: t,
        initialRect: r,
        config: i = !0
    } = e, n = (0, ce.useRef)(!1), {
        x: s,
        y: l
    } = typeof i == "boolean" ? {
        x: i,
        y: i
    } : i;
    Er(() => {
        if (!s && !l || !o) {
            n.current = !1;
            return
        }
        if (n.current || !r) return;
        let d = o ? .node.current;
        if (!d || d.isConnected === !1) return;
        let c = t(d),
            m = E4(c, r);
        if (s || (m.x = 0), l || (m.y = 0), n.current = !0, Math.abs(m.x) > 0 || Math.abs(m.y) > 0) {
            let u = A4(d);
            u && u.scrollBy({
                top: m.y,
                left: m.x
            })
        }
    }, [o, s, l, r, t])
}
var U4 = (0, ce.createContext)({ ...yi,
        scaleX: 1,
        scaleY: 1
    }),
    ms;
(function(e) {
    e[e.Uninitialized = 0] = "Uninitialized", e[e.Initializing = 1] = "Initializing", e[e.Initialized = 2] = "Initialized"
})(ms || (ms = {}));
var wg = (0, ce.memo)(function(o) {
        var t, r, i, n;
        let {
            id: s,
            accessibility: l,
            autoScroll: p = !0,
            children: d,
            sensors: c = YE,
            collisionDetection: m = cE,
            measuring: u,
            modifiers: g,
            ...h
        } = o, b = (0, ce.useReducer)(QE, void 0, JE), [x, S] = b, [v, P] = rE(), [C, k] = (0, ce.useState)(ms.Uninitialized), T = C === ms.Initialized, {
            draggable: {
                active: R,
                nodes: I,
                translate: B
            },
            droppable: {
                containers: L
            }
        } = x, D = R ? I.get(R) : null, E = (0, ce.useRef)({
            initial: null,
            translated: null
        }), $ = (0, ce.useMemo)(() => {
            var lo;
            return R != null ? {
                id: R,
                data: (lo = D ? .data) != null ? lo : XE,
                rect: E
            } : null
        }, [R, D]), G = (0, ce.useRef)(null), [de, Q] = (0, ce.useState)(null), [U, Z] = (0, ce.useState)(null), xe = Xl(h, Object.values(h)), ye = xa("DndDescribedBy", s), ve = (0, ce.useMemo)(() => L.getEnabled(), [L]), ee = oA(u), {
            droppableRects: oe,
            measureDroppableContainers: H,
            measuringScheduled: se
        } = LE(ve, {
            dragging: T,
            dependencies: [B.x, B.y],
            config: ee.droppable
        }), he = AE(I, R), le = (0, ce.useMemo)(() => U ? Sp(U) : null, [U]), ue = sh(), ke = OE(he, ee.draggable.measure);
        rA({
            activeNode: R ? I.get(R) : null,
            config: ue.layoutShiftCompensation,
            initialRect: ke,
            measure: ee.draggable.measure
        });
        let ie = T4(he, ee.draggable.measure, ke),
            _e = T4(he ? he.parentElement : null),
            Ce = (0, ce.useRef)({
                activatorEvent: null,
                active: null,
                activeNode: he,
                collisionRect: null,
                collisions: null,
                droppableRects: oe,
                draggableNodes: I,
                draggingNode: null,
                draggingNodeRect: null,
                droppableContainers: L,
                over: null,
                scrollableAncestors: [],
                scrollAdjustedTranslate: null
            }),
            We = L.getNodeFor((t = Ce.current.over) == null ? void 0 : t.id),
            Ke = qE({
                measure: ee.dragOverlay.measure
            }),
            O = (r = Ke.nodeRef.current) != null ? r : he,
            j = T ? (i = Ke.rect) != null ? i : ie : null,
            K = !!(Ke.nodeRef.current && Ke.rect),
            X = FE(K ? null : ie),
            $e = W4(O ? Jo(O) : null),
            Se = NE(T ? We ? ? he : null),
            Re = GE(Se),
            dt = tA(g, {
                transform: {
                    x: B.x - X.x,
                    y: B.y - X.y,
                    scaleX: 1,
                    scaleY: 1
                },
                activatorEvent: U,
                active: $,
                activeNodeRect: ie,
                containerNodeRect: _e,
                draggingNodeRect: j,
                over: Ce.current.over,
                overlayNodeRect: Ke.rect,
                scrollableAncestors: Se,
                scrollableAncestorRects: Re,
                windowRect: $e
            }),
            Fe = le ? va(le, B) : null,
            bt = WE(Se),
            at = M4(bt),
            wt = M4(bt, [ie]),
            rt = va(dt, at),
            oi = j ? uE(j, dt) : null,
            Pi = $ && oi ? m({
                active: $,
                collisionRect: oi,
                droppableRects: oe,
                droppableContainers: ve,
                pointerCoordinates: Fe
            }) : null,
            Ti = z4(Pi, "id"),
            [At, Do] = (0, ce.useState)(null),
            Rn = K ? dt : va(dt, wt),
            ri = pE(Rn, (n = At ? .rect) != null ? n : null, ie),
            Ii = (0, ce.useCallback)((lo, Lo) => {
                let {
                    sensor: Oo,
                    options: ii
                } = Lo;
                if (G.current == null) return;
                let xo = I.get(G.current);
                if (!xo) return;
                let or = lo.nativeEvent,
                    wr = new Oo({
                        active: G.current,
                        activeNode: xo,
                        event: or,
                        options: ii,
                        context: Ce,
                        onStart(si) {
                            let wc = G.current;
                            if (wc == null) return;
                            let xc = I.get(wc);
                            if (!xc) return;
                            let {
                                onDragStart: ud
                            } = xe.current, md = {
                                active: {
                                    id: wc,
                                    data: xc.data,
                                    rect: E
                                }
                            };
                            (0, gs.unstable_batchedUpdates)(() => {
                                ud ? .(md), k(ms.Initializing), S({
                                    type: _o.DragStart,
                                    initialCoordinates: si,
                                    active: wc
                                }), v({
                                    type: "onDragStart",
                                    event: md
                                })
                            })
                        },
                        onMove(si) {
                            S({
                                type: _o.DragMove,
                                coordinates: si
                            })
                        },
                        onEnd: ni(_o.DragEnd),
                        onCancel: ni(_o.DragCancel)
                    });
                (0, gs.unstable_batchedUpdates)(() => {
                    Q(wr), Z(lo.nativeEvent)
                });

                function ni(si) {
                    return async function() {
                        let {
                            active: xc,
                            collisions: ud,
                            over: md,
                            scrollAdjustedTranslate: i0
                        } = Ce.current, vc = null;
                        if (xc && i0) {
                            let {
                                cancelDrop: yc
                            } = xe.current;
                            vc = {
                                activatorEvent: or,
                                active: xc,
                                collisions: ud,
                                delta: i0,
                                over: md
                            }, si === _o.DragEnd && typeof yc == "function" && await Promise.resolve(yc(vc)) && (si = _o.DragCancel)
                        }
                        G.current = null, (0, gs.unstable_batchedUpdates)(() => {
                            S({
                                type: si
                            }), k(ms.Uninitialized), Do(null), Q(null), Z(null);
                            let yc = si === _o.DragEnd ? "onDragEnd" : "onDragCancel";
                            if (vc) {
                                let ah = xe.current[yc];
                                ah ? .(vc), v({
                                    type: yc,
                                    event: vc
                                })
                            }
                        })
                    }
                }
            }, [I]),
            zn = (0, ce.useCallback)((lo, Lo) => (Oo, ii) => {
                let xo = Oo.nativeEvent,
                    or = I.get(ii);
                if (G.current !== null || !or || xo.dndKit || xo.defaultPrevented) return;
                let wr = {
                    active: or
                };
                lo(Oo, Lo.options, wr) === !0 && (xo.dndKit = {
                    capturedBy: Lo.sensor
                }, G.current = ii, Ii(Oo, Lo))
            }, [I, Ii]),
            bc = DE(c, zn);
        VE(c), Er(() => {
            ie && C === ms.Initializing && k(ms.Initialized)
        }, [ie, C]), (0, ce.useEffect)(() => {
            let {
                onDragMove: lo
            } = xe.current, {
                active: Lo,
                activatorEvent: Oo,
                collisions: ii,
                over: xo
            } = Ce.current;
            if (!Lo || !Oo) return;
            let or = {
                active: Lo,
                activatorEvent: Oo,
                collisions: ii,
                delta: {
                    x: rt.x,
                    y: rt.y
                },
                over: xo
            };
            (0, gs.unstable_batchedUpdates)(() => {
                lo ? .(or), v({
                    type: "onDragMove",
                    event: or
                })
            })
        }, [rt.x, rt.y]), (0, ce.useEffect)(() => {
            let {
                active: lo,
                activatorEvent: Lo,
                collisions: Oo,
                droppableContainers: ii,
                scrollAdjustedTranslate: xo
            } = Ce.current;
            if (!lo || G.current == null || !Lo || !xo) return;
            let {
                onDragOver: or
            } = xe.current, wr = ii.get(Ti), ni = wr && wr.rect.current ? {
                id: wr.id,
                rect: wr.rect.current,
                data: wr.data,
                disabled: wr.disabled
            } : null, si = {
                active: lo,
                activatorEvent: Lo,
                collisions: Oo,
                delta: {
                    x: xo.x,
                    y: xo.y
                },
                over: ni
            };
            (0, gs.unstable_batchedUpdates)(() => {
                Do(ni), or ? .(si), v({
                    type: "onDragOver",
                    event: si
                })
            })
        }, [Ti]), Er(() => {
            Ce.current = {
                activatorEvent: U,
                active: $,
                activeNode: he,
                collisionRect: oi,
                collisions: Pi,
                droppableRects: oe,
                draggableNodes: I,
                draggingNode: O,
                draggingNodeRect: j,
                droppableContainers: L,
                over: At,
                scrollableAncestors: Se,
                scrollAdjustedTranslate: rt
            }, E.current = {
                initial: j,
                translated: oi
            }
        }, [$, he, Pi, oi, I, O, j, oe, L, At, Se, rt]), RE({ ...ue,
            delta: B,
            draggingRect: oi,
            pointerCoordinates: Fe,
            scrollableAncestors: Se,
            scrollableAncestorRects: Re
        });
        let dd = (0, ce.useMemo)(() => ({
                active: $,
                activeNode: he,
                activeNodeRect: ie,
                activatorEvent: U,
                collisions: Pi,
                containerNodeRect: _e,
                dragOverlay: Ke,
                draggableNodes: I,
                droppableContainers: L,
                droppableRects: oe,
                over: At,
                measureDroppableContainers: H,
                scrollableAncestors: Se,
                scrollableAncestorRects: Re,
                measuringConfiguration: ee,
                measuringScheduled: se,
                windowRect: $e
            }), [$, he, ie, U, Pi, _e, Ke, I, L, oe, At, H, Se, Re, ee, se, $e]),
            nh = (0, ce.useMemo)(() => ({
                activatorEvent: U,
                activators: bc,
                active: $,
                activeNodeRect: ie,
                ariaDescribedById: {
                    draggable: ye
                },
                dispatch: S,
                draggableNodes: I,
                over: At,
                measureDroppableContainers: H
            }), [U, bc, $, ie, S, ye, I, At, H]);
        return ce.default.createElement(R4.Provider, {
            value: P
        }, ce.default.createElement(bg.Provider, {
            value: nh
        }, ce.default.createElement(V4.Provider, {
            value: dd
        }, ce.default.createElement(U4.Provider, {
            value: ri
        }, d)), ce.default.createElement(eA, {
            disabled: l ? .restoreFocus === !1
        })), ce.default.createElement(sE, { ...l,
            hiddenTextDescribedById: ye
        }));

        function sh() {
            let lo = de ? .autoScrollEnabled === !1,
                Lo = typeof p == "object" ? p.enabled === !1 : p === !1,
                Oo = T && !lo && !Lo;
            return typeof p == "object" ? { ...p,
                enabled: Oo
            } : {
                enabled: Oo
            }
        }
    }),
    iA = (0, ce.createContext)(null),
    B4 = "button",
    nA = "Droppable";

function xg(e) {
    let {
        id: o,
        data: t,
        disabled: r = !1,
        attributes: i
    } = e, n = xa(nA), {
        activators: s,
        activatorEvent: l,
        active: p,
        activeNodeRect: d,
        ariaDescribedById: c,
        draggableNodes: m,
        over: u
    } = (0, ce.useContext)(bg), {
        role: g = B4,
        roleDescription: h = "draggable",
        tabIndex: b = 0
    } = i ? ? {}, x = p ? .id === o, S = (0, ce.useContext)(x ? U4 : iA), [v, P] = _p(), [C, k] = _p(), T = UE(s, o), R = Xl(t);
    Er(() => (m.set(o, {
        id: o,
        key: n,
        node: v,
        activatorNode: C,
        data: R
    }), () => {
        let B = m.get(o);
        B && B.key === n && m.delete(o)
    }), [m, o]);
    let I = (0, ce.useMemo)(() => ({
        role: g,
        tabIndex: b,
        "aria-disabled": r,
        "aria-pressed": x && g === B4 ? !0 : void 0,
        "aria-roledescription": h,
        "aria-describedby": c.draggable
    }), [r, g, b, x, h, c.draggable]);
    return {
        active: p,
        activatorEvent: l,
        activeNodeRect: d,
        attributes: I,
        isDragging: x,
        listeners: r ? void 0 : T,
        node: v,
        over: u,
        setNodeRef: P,
        setActivatorNodeRef: k,
        transform: S
    }
}

function G4() {
    return (0, ce.useContext)(V4)
}
var sA = "Droppable",
    aA = {
        timeout: 25
    };

function vg(e) {
    let {
        data: o,
        disabled: t = !1,
        id: r,
        resizeObserverConfig: i
    } = e, n = xa(sA), {
        active: s,
        dispatch: l,
        over: p,
        measureDroppableContainers: d
    } = (0, ce.useContext)(bg), c = (0, ce.useRef)({
        disabled: t
    }), m = (0, ce.useRef)(!1), u = (0, ce.useRef)(null), g = (0, ce.useRef)(null), {
        disabled: h,
        updateMeasurementsFor: b,
        timeout: x
    } = { ...aA,
        ...i
    }, S = Xl(b ? ? r), v = (0, ce.useCallback)(() => {
        if (!m.current) {
            m.current = !0;
            return
        }
        g.current != null && clearTimeout(g.current), g.current = setTimeout(() => {
            d(Array.isArray(S.current) ? S.current : [S.current]), g.current = null
        }, x)
    }, [x]), P = fg({
        callback: v,
        disabled: h || !s
    }), C = (0, ce.useCallback)((I, B) => {
        P && (B && (P.unobserve(B), m.current = !1), I && P.observe(I))
    }, [P]), [k, T] = _p(C), R = Xl(o);
    return (0, ce.useEffect)(() => {
        !P || !k.current || (P.disconnect(), m.current = !1, P.observe(k.current))
    }, [k, P]), Er(() => (l({
        type: _o.RegisterDroppable,
        element: {
            id: r,
            key: n,
            disabled: t,
            node: k,
            rect: u,
            data: R
        }
    }), () => l({
        type: _o.UnregisterDroppable,
        key: n,
        id: r
    })), [r]), (0, ce.useEffect)(() => {
        t !== c.current.disabled && (l({
            type: _o.SetDroppableDisabled,
            id: r,
            key: n,
            disabled: t
        }), c.current.disabled = t)
    }, [r, n, t, l]), {
        active: s,
        rect: u,
        isOver: p ? .id === r,
        node: k,
        over: p,
        setNodeRef: T
    }
}

function j4(e) {
    let o = {
            aboveAll: new Map,
            frontFixed: new Map,
            normal: new Map,
            backFixed: new Map
        },
        t = new Map,
        r = 0,
        i = null;
    for (let n of e.values()) {
        let s = n.parentId,
            l = n.section;
        if ((s ? e.get(s) ? .isCollapsed : !1) || !n.isFiltered) continue;
        let d = rg(e, s),
            c = o[l].get(i || "") || null;
        c || (i = null), n.setState(m => ({ ...m,
            visibleIndex: r,
            depth: d,
            prevVisibleId: i,
            nextVisibleId: null
        })), c && (c.setState(m => ({ ...m,
            nextVisibleId: n.id
        })), o[l].set(c.id, c)), o[l].set(n.id, n), i = n.id, r++
    }
    for (let n in o) {
        let s = n;
        t.set(n, o[s])
    }
    return t
}
Rh();
Kt();
Rh();
var Ql = class extends rn {
        constructor({
            id: t,
            zIndex: r,
            orderIndex: i,
            parentId: n,
            type: s,
            selectedBackgroundType: l,
            section: p,
            children: d,
            name: c,
            defaultName: m = "",
            iconStyles: u,
            iconSvgStyles: g,
            isLocked: h,
            isHidden: b,
            isGlobal: x = !1,
            isSelected: S = !1,
            isCollapsed: v = !0,
            isHover: P = !1,
            isFiltered: C = !0,
            isDefaultVpAvaliable: k = !1,
            isPhoneVpAvaliable: T = !1,
            depth: R,
            index: I,
            visibleIndex: B,
            prevVisibleId: L,
            nextVisibleId: D
        }) {
            super();
            z(this, "id");
            z(this, "zIndex");
            z(this, "orderIndex");
            z(this, "parentId");
            z(this, "type");
            z(this, "selectedBackgroundType");
            z(this, "section");
            z(this, "children");
            z(this, "name");
            z(this, "defaultName");
            z(this, "iconStyles");
            z(this, "iconSvgStyles");
            z(this, "isCollapsed");
            z(this, "isSelected");
            z(this, "isLocked");
            z(this, "isHidden");
            z(this, "isHover");
            z(this, "isFiltered");
            z(this, "isGlobal");
            z(this, "isDefaultVpAvaliable");
            z(this, "isPhoneVpAvaliable");
            z(this, "depth");
            z(this, "index");
            z(this, "visibleIndex");
            z(this, "prevVisibleId");
            z(this, "nextVisibleId");
            this.initStore(), this.setState({
                id: t,
                zIndex: r,
                orderIndex: i,
                parentId: n,
                type: s,
                selectedBackgroundType: l,
                section: p,
                children: d,
                name: c,
                defaultName: m,
                iconStyles: u,
                iconSvgStyles: g,
                isLocked: h,
                isHidden: b,
                isGlobal: x,
                isSelected: S,
                isCollapsed: v,
                isHover: P,
                isFiltered: C,
                isDefaultVpAvaliable: k,
                isPhoneVpAvaliable: T,
                depth: R,
                index: I,
                visibleIndex: B,
                prevVisibleId: L,
                nextVisibleId: D
            })
        }
        setIsHover(t) {
            this.setState(r => ({ ...r,
                isHover: t
            }))
        }
    },
    {
        Provider: q4,
        useStore: ec
    } = rn.createContext();
Co();
kI();

function Y4({
    order: e,
    blocks: o,
    packsData: t,
    isPhoneVpEnabled: r,
    filter: i = "all"
}, {
    oldFlatOrder: n,
    oldBackgroundLayer: s
} = {}) {
    let l = lA(e),
        p = new Map,
        d = new Map(t.map(v => [v.pack_id, v])),
        c = new Map,
        m = new Map,
        u = new Map,
        g = null;
    for (let v of o) {
        let P = v.model,
            C = P.get("_id");
        if (P.get("type") === "background") {
            g = s || new Ql({
                id: C,
                name: "Background",
                iconStyles: hs(v),
                iconSvgStyles: tc(v),
                isSelected: !!v ? .isSelected(),
                selectedBackgroundType: P ? .get("selectedType")
            }), c.set(C, v);
            continue
        }
        let T = P.get("z"),
            R = l.get(C) ? .index ? ? -1 / 0,
            I = P.get("is_above"),
            B = P.get("pack_id") || null,
            L = !!P.get("fixed_position");
        c.set(C, v);
        let D = l.get(C) ? .section || null;
        if (D || (I ? D = "aboveAll" : L ? D = "frontFixed" : D = "normal"), !D) continue;
        let E = n ? .get(C) || new Ql({
            id: C,
            zIndex: T,
            orderIndex: R,
            section: D,
            parentId: B,
            type: "widget",
            name: P.get("name") || v.getStandardName(),
            defaultName: v.getStandardName(),
            iconStyles: hs(v),
            iconSvgStyles: tc(v),
            isHidden: !!P.get("hidden"),
            isLocked: !!P.get("is_locked"),
            isGlobal: !!P.get("is_global"),
            isFiltered: fa(i, [v]),
            isSelected: !!v ? .isSelected(),
            isDefaultVpAvaliable: P && P.viewport_default && !P.viewport_default ? .hidden,
            isPhoneVpAvaliable: r && P && P.viewport_phone_portrait && !P.viewport_phone_portrait ? .hidden
        });
        if (n ? .get(C) && E.setState($ => ({ ...$,
                orderIndex: R,
                zIndex: T,
                section: D,
                parentId: B
            })), !E.parentId) p.set(E.id, E);
        else {
            let G = m.get(B),
                de = [...G ? .children || []],
                Q = Math.min(G ? .orderIndex ? ? 1 / 0, E.orderIndex),
                U = Math.max(G ? .zIndex ? ? -1 / 0, E.zIndex);
            de.push(E), G || (G = n ? .get(B) || new Ql({
                id: B,
                zIndex: U,
                orderIndex: Q,
                section: D,
                children: de,
                parentId: d.get(B) ? .parent_id || null,
                type: "group",
                name: d.get(B) ? .name || "Group",
                defaultName: "Group",
                iconStyles: {},
                iconSvgStyles: {},
                isHidden: !1,
                isLocked: !1
            })), G.isSelected && E.setState(Z => ({ ...Z,
                isSelected: !0
            })), G.setState(Z => ({ ...Z,
                zIndex: U,
                orderIndex: Q,
                children: de,
                parentId: d.get(B) ? .parent_id || null
            })), m.set(B, G), p.set(B, G)
        }
    }
    let h = new Map;
    for (let v of m.values())
        if (v ? .children ? .length < eg) {
            let P = v.children;
            p.delete(v.id);
            for (let C of P) {
                C.setState(T => ({ ...T,
                    parentId: v.parentId
                }));
                let k = u.get(C.id);
                u.set(C.id, { ...k,
                    _id: C.id,
                    pack_id: v.parentId
                }), p.set(C.id, C)
            }
        } else h.set(v.id, v);
    let b = Array.from(p.values()).sort((v, P) => {
            let C = v.orderIndex - P.orderIndex;
            return [NaN, -1 / 0, 1 / 0].includes(C) && (C = P.zIndex - v.zIndex), C
        }),
        x = new Map;
    for (let v of h.values())
        if (v.children) {
            let P = new Set,
                C = new Set,
                k = new Set,
                T = new Set;
            for (let E of v.children) {
                let $ = c.get(E.id);
                if ($) {
                    let G = x.get(v ? .id),
                        de = G ? .blocks || [];
                    de.push($);
                    let Q = G ? .model || new ea({
                        pack_id: v.id,
                        mid: $ ? .workspace ? .mag ? .id
                    });
                    x.set(v.id, {
                        blocks: de,
                        model: Q
                    })
                }[-1 / 0, 1 / 0].includes(E.orderIndex) && (E.orderIndex = v.orderIndex), E.isGlobal && T.add(E.id), E.isHidden && P.add(E.id), E.isSelected && C.add(E.id), E.isLocked && k.add(E.id)
            }
            let R = C.size === v.children.length,
                I = v.isCollapsed ? !(!R && C.size > 0) : !1;
            v.setState(E => ({ ...E,
                isSelected: R,
                isCollapsed: I,
                isHidden: P.size === (v ? .children ? .length || 0),
                isLocked: k.size === (v ? .children ? .length || 0),
                isGlobal: T.size === (v ? .children ? .length || 0),
                isFiltered: fa(i, x.get(v.id) ? .blocks || [])
            })), v.children.sort((E, $) => {
                let G = E.orderIndex - $.orderIndex;
                return [NaN, -1 / 0, 1 / 0].includes(G) && (G = $.zIndex - E.zIndex), G
            });
            let {
                iconStyles: B,
                iconSvgStyles: L
            } = cA(v.children, c);
            v.setState(E => ({ ...E,
                iconStyles: B,
                iconSvgStyles: L
            }));
            let D = b.findIndex(E => E.id === v.id);
            D > -1 && b.splice(D + 1, 0, ...v.children)
        }
    return {
        sortedFlatOrderMap: new Map(b.map(v => [v.id, v])),
        widgetPacksMap: x,
        blocksMap: c,
        backgroundLayer: g,
        changesSet: Array.from(u.values())
    }
}

function lA(e) {
    let o = new Map,
        t = 0,
        r = (i, n) => {
            for (let s of i) Array.isArray(s) ? r(s, n) : (o.set(s, {
                id: s,
                index: t,
                section: n
            }), t++)
        };
    for (let i in e) {
        let n = i;
        r(e[n], n)
    }
    return o
}

function tc(e, o) {
    if (!e) return {};
    let t = e.model,
        r = e.getIconData ? e.getIconData() : o ? .forGroups ? e.iconData : null,
        i = {};
    if (r ? .$svg) {
        let n = r.$svg.clone().get(0);
        t.get("type") === "hotspot" && n.setAttribute("color", "#ffffff");
        let {
            b64url: s
        } = Ty.getNormalizedSvg(n);
        i = {
            backgroundImage: `url(${s})`
        }
    }
    return i
}

function hs(e, o) {
    if (!e) return {};
    let t = e ? .getIconStyle ? e.getIconStyle(o) : {},
        r = {};
    for (let i in t) {
        let n = c0(i);
        r[n] = t[i]
    }
    return r
}

function cA(e, o) {
    let t = [],
        r = [];
    for (let i = 0; i <= 3 && i < e.length; i++) {
        let n = e[i],
            s = o.get(n.id),
            l = hs(s, {
                small: !0
            }),
            p = tc(s, {
                forGroups: !0
            });
        t.push(l), r.push(p)
    }
    return {
        iconStyles: t,
        iconSvgStyles: r
    }
}
Co();

function X4({
    items: e,
    selectedItems: o,
    startId: t
}) {
    if (!e) return null;
    if (t) {
        if (!o.has(t)) return e.get(t || "");
        let r = null,
            i = t;
        for (; i;) {
            if (r = e.get(i || ""), !r) continue;
            let n = r ? .prevVisibleId;
            if (o.has(n || "")) n && (i = n);
            else break
        }
        return r
    }
    return null
}

function K4({
    items: e,
    selectedItems: o,
    startId: t,
    depth: r
}) {
    if (!e) return null;
    if (t) {
        let i = e.get(t);
        for (; i;) {
            let n = e.get(i.parentId || "");
            if (n && !o.has(n.id) && i.depth === r) return i.parentId;
            if (i && i.type === "group" && !o.has(i.id) && i.depth + 1 === r) return i.id;
            i = e.get(i.prevVisibleId || "")
        }
        return null
    }
    return null
}

function Z4({
    layers: e,
    activeId: o,
    overId: t,
    dragOffset: r,
    selectedItems: i,
    insertionMarker: n
}) {
    let s = e.getVisibleSectionByItemId(t),
        l = e.getVisibleItem(t),
        p = e.getVisibleItem(o),
        d = e.getPrevVisibleItem(t) || null,
        c = e.getNextVisibleItem(t) || null;
    p && l && (p ? .visibleIndex <= l ? .visibleIndex ? (d = n === "atTheTop" ? d : l, c = n === "atTheTop" ? l : c) : p ? .visibleIndex > l ? .visibleIndex && (d = n === "atTheBottom" ? X4({
        items: s ? .value,
        selectedItems: i,
        startId: l ? .id || null
    }) || null : d, c = n === "atTheBottom" ? c : l));
    let m = uA(r, fo.indentationWidth),
        u = (p ? .depth || 0) + m,
        g = dA(d, i, !!p ? .isGlobal),
        h = Math.min(g, pA(c)),
        b = u;
    u >= g ? b = g : u < h && (b = h);

    function x() {
        return b === 0 || !d ? null : b === d.depth ? d.parentId : K4({
            items: s ? .value,
            selectedItems: i,
            startId: d ? .id || null,
            depth: b
        }) ? ? null
    }
    return {
        depth: b,
        maxDepth: g,
        minDepth: h,
        parentId: x()
    }
}

function pA(e) {
    return e ? e.depth : 0
}

function dA(e, o, t) {
    return e ? e.parentId && (o.has(e.parentId) || !!e.isGlobal !== t) ? Math.max(0, e.depth - 1) : o.has(e.id) && e.type === "group" ? e.depth : e.type === "group" && !e.isCollapsed ? e.depth + 1 : e.depth : 0
}

function uA(e, o) {
    return Math.round(e / o)
}

function J4({
    layers: e,
    selectedItems: o,
    cursorTop: t,
    active: r,
    collisions: i
}) {
    let n, s = i[0],
        l = s ? .data ? .droppableContainer ? .rect ? .current,
        p = e.getVisibleItem(r.id);
    if (!l || !p) return;
    let d = l.top + l.height / 2,
        c = t - d;
    o.has(s.id) || (c < 0 ? n = "atTheTop" : n = "atTheBottom");
    let m = e.getVisibleItem(s.id),
        u = m && e.getNextVisibleItem(m.parentId),
        g = m && e.getPrevVisibleItem(m.id),
        h = m && e.getNextVisibleItem(m.id);
    return o.has(s.id) && (c < 0 ? g && !o.has(g.id) || !g ? n = "atTheTop" : n = "atTheBottom" : h && !o.has(h.id) || !h ? n = "atTheBottom" : n = "atTheTop"), m ? .type === "group" && !m ? .isCollapsed && !!m.isGlobal != !!p.isGlobal ? n = "atTheTop" : h ? .depth !== m ? .depth && u && u.isGlobal !== !!p.isGlobal && (n = "atTheBottom"), n
}
Co();
var mA = 1;

function tP({
    allLayers: e,
    overId: o,
    selectedItems: t,
    projectedParentId: r,
    projectedDepth: i,
    insertionMarker: n,
    sections: s
}) {
    let l = [...e.values()],
        p = new Map,
        d = new Map,
        c = s.includes(o),
        m = e.get(r || ""),
        u = c ? o : e.get(o) ? .section,
        g = Q4(e, t);
    for (let v = 0; v < g.length; v++) {
        let P = g[v],
            C = e.get(P);
        if (!C) continue;
        if (og(C.section, u)) {
            if (!t.has(C.parentId || "")) {
                if (m && !!m ? .isGlobal != !!C.isGlobal) {
                    t.delete(P);
                    continue
                }
                C.parentId !== r && C.type !== "group" && p.set(C.id, {
                    _id: C.id,
                    pack_id: r
                }), bA({
                    item: C,
                    projectedParentId: r,
                    allLayers: e,
                    changedPackMap: d
                }), C.depth = i, C.parentId = r
            }
        } else t.delete(P)
    }
    g = Q4(e, t);
    let h = g.length > 0 && e.get(g[0]) || null;
    if (!h || !u) return {
        sortedItems: l,
        changesSet: [],
        globalGroupChanges: {}
    };
    let b = -1;
    if (h.id !== o && (l.splice(h.index, 1), b = gA({
            overId: o,
            items: l,
            sections: s,
            toSection: u,
            overIdIsSection: c
        })), b > -1) {
        h.section = u;
        let v = c ? b : n === "atTheBottom" ? b + 1 : b;
        l.splice(v, 0, h)
    }
    for (let v = 1; v < g.length; v++) {
        let P = g[v - 1],
            C = g[v],
            k = l.findIndex(I => I.id === C),
            T = nt(l.splice(k, 1)[0]);
        T.section = u;
        let R = l.findIndex(I => I.id === P);
        R > -1 && l.splice(R + 1, 0, T)
    }
    let x = new Map(l.map(v => [v.id, v]));
    wA({
        changedPackMap: d,
        sortedItemsMap: x,
        changesMap: p
    });
    let S = hA({
        sortedItemsMap: x,
        changesMap: p
    });
    return {
        sortedItems: l,
        changesSet: Array.from(p.values()),
        globalGroupChanges: S
    }
}

function Q4(e, o) {
    let t = [];
    for (let r of o.values()) {
        let i = e.get(r);
        i && t.push({
            id: i.id,
            index: i.index
        })
    }
    return t.sort((r, i) => r.index - i.index), t.map(r => r.id)
}

function gA({
    overId: e,
    items: o,
    sections: t,
    toSection: r,
    overIdIsSection: i
}) {
    let n = new Map;
    for (let p = 0; p < t.length; p++) n.set(t[p], {
        index: p
    });
    let s = n.get(r).index ? ? -1;
    return s === -1 ? -1 : o.findIndex(({
        id: p,
        section: d
    }, c) => i ? r === d || n.get(d).index > s || c + 1 === o.length : p === e)
}

function hA({
    sortedItemsMap: e,
    changesMap: o
}) {
    let t = {},
        r = {
            removed: []
        };
    for (let i of o.values()) {
        let n = e.get(i._id || ""),
            s = e.get(i.pack_id || "");
        !n || !n ? .isGlobal || (s ? (t ? .pack_id || (t = {
            added: [],
            pack_id: s.id,
            pack: fA(s.id, e)
        }), t ? .added ? .push(n.id)) : r ? .removed ? .push(n.id))
    }
    return t.pack_id ? t : r.removed && r.removed.length > 0 ? r : {}
}

function fA(e, o) {
    let t = [];
    for (let r of o.values()) r.parentId === e && r.type !== "group" && t.push(r.id);
    return t
}

function bA({
    item: e,
    projectedParentId: o,
    allLayers: t,
    changedPackMap: r
}) {
    if (e.parentId !== o) {
        if (e.parentId) {
            let i = r.get(e.parentId) ? .childrenWidgets,
                n = r.get(e.parentId) ? .childrenGroups;
            if (!i || !n) {
                let {
                    widgets: s,
                    groups: l
                } = eP(t, e.parentId);
                i = s, n = l
            }
            e.type === "group" ? n.delete(e.id) : i.delete(e.id), r.set(e.parentId, {
                childrenWidgets: i,
                childrenGroups: n
            })
        }
        if (o) {
            let i = r.get(o) ? .childrenWidgets,
                n = r.get(o) ? .childrenGroups;
            if (!i || !n) {
                let {
                    widgets: s,
                    groups: l
                } = eP(t, o);
                i = s, n = l
            }
            e.type === "group" ? n.add(e.id) : i.add(e.id), r.set(o, {
                childrenWidgets: i,
                childrenGroups: n
            })
        }
    }
}

function eP(e, o) {
    let t = e.get(o || ""),
        r = new Set,
        i = new Set;
    if (!t || !t ? .children) return {
        widgets: r,
        groups: i
    };
    for (let n of t ? .children) n.type === "widget" ? r.add(n.id) : n.type === "group" && i.add(n.id);
    return {
        widgets: r,
        groups: i
    }
}

function wA({
    changedPackMap: e,
    sortedItemsMap: o,
    changesMap: t
}) {
    for (let [r, i] of e) {
        let n = o.get(r);
        if (!n) continue;
        let s = new Set([...i.childrenGroups, ...i.childrenWidgets]),
            l = n.depth + 1;
        if (s.size < eg)
            for (let p of s) {
                let d = o.get(p);
                d && (d.depth = n.depth, d.parentId = n.parentId, t.set(d.id, {
                    _id: d.id,
                    pack_id: d.parentId
                }))
            } else if (i.childrenGroups.size > 0 && l >= mA)
                for (let p of i.childrenGroups) {
                    let d = o.get(p);
                    if (d && d.type === "group") {
                        let c = d ? .children || [];
                        for (let m of c) {
                            let u = o.get(m.id);
                            u && (u.depth = l, u.parentId = n.id, t.set(u.id, {
                                _id: u.id,
                                pack_id: u.parentId
                            }))
                        }
                    }
                }
    }
}

function oP({
    args: e,
    selectedItems: o,
    layers: t
}) {
    let {
        active: r,
        droppableContainers: i,
        droppableRects: n,
        pointerCoordinates: s
    } = e, l = [], p = r ? .rect ? .current ? .initial ? .top, d = t.getVisibleItem(r.id), c = t.getSections();
    if (!d || p === void 0 || !s) return [];
    for (let m = 0; m < i.length; m++) {
        let u = i[m],
            g = {
                data: {
                    droppableContainer: u,
                    value: 0
                },
                id: u.id
            },
            h = n.get(u ? .id);
        if (!h) continue;
        let b = c.includes(g.id),
            x = t.getVisibleItem(g.id),
            S = t.getPrevVisibleItem(g.id),
            v = t.getNextVisibleItem(g.id),
            P = t.getVisibleItem(x ? .parentId || ""),
            C = t.getVisibleItem(v ? .parentId || "");
        if (!x && !b || !og(d.section, b ? g.id : x ? .section)) continue;
        let T = h.top + h.height / 2,
            R = Math.abs(T - s.y);
        g.data.value = R, o.has(g.id) && S && o.has(S.id) && v && o.has(v.id) && (g.data.value = 1 / 0), P && !!P.isGlobal != !!d.isGlobal && C && !!C.isGlobal != !!d.isGlobal && (g.data.value = 1 / 0), l.push(g)
    }
    return l.sort((m, u) => m.data.value - u.data.value), l
}
var yg = class extends rn {
        constructor() {
            super();
            z(this, "selectedItems", new Set);
            z(this, "items", new Map);
            z(this, "visibleSectionItems", new Map);
            z(this, "visibleItems", new Map);
            z(this, "visibleIndexedItems", new Map);
            z(this, "visibleItemsArr", []);
            z(this, "visibleSelectedItems", new Set);
            z(this, "visibleJustSelectedItems", []);
            this.initStore()
        }
        resetState() {
            this.setState(t => ({ ...t,
                selectedItems: new Set,
                items: new Map,
                visibleSectionItems: new Map,
                visibleItems: new Map,
                visibleIndexedItems: new Map,
                visibleItemsArr: [],
                visibleSelectedItems: new Set,
                visibleJustSelectedItems: []
            }))
        }
        refreshAllItems(t) {
            let r = 0;
            for (let i of t.values()) {
                let n = rg(t, i.parentId);
                i.setState(s => ({ ...s,
                    depth: n,
                    index: r
                })), r++
            }
            this.setState(i => ({ ...i,
                items: t
            })), this.refreshState(t)
        }
        refreshState(t) {
            let r = t || this.items,
                i = this.visibleSelectedItems,
                n = new Set,
                s = j4(r),
                l = new Set,
                p = [],
                d = new Map,
                c = new Map;
            for (let m of s.values())
                for (let [u, g] of m) d.set(u, g), c.set(g.visibleIndex, g), g.isSelected && (l.add(g.id), n.add(g.id), g.type === "group" && g.isCollapsed && wn(r, g.id, h => {
                    n.add(h.id)
                }));
            for (let m of l) d.get(m) && (l.add(m), i.has(m) || p.push(m));
            this.setState(m => ({ ...m,
                selectedItems: n,
                visibleSectionItems: s,
                visibleItems: d,
                visibleIndexedItems: c,
                visibleItemsArr: Array.from(d.values()),
                visibleSelectedItems: l,
                visibleJustSelectedItems: p
            }))
        }
        filterItems(t, r, i) {
            for (let [n, s] of this.items) {
                let l = i.get(n),
                    p = r.get(n),
                    d = !0;
                l && l.blocks ? d = fa(t, l.blocks) : p && (d = fa(t, [p])), s.setState(c => ({ ...c,
                    isFiltered: d
                }))
            }
            this.refreshState()
        }
        setCollapse(t, r, i) {
            let n = this.getAllItems();
            for (let s of t) {
                let l = n.get(s);
                if (l) {
                    let p = i ? ? !l.isCollapsed,
                        d = r ? r.has(l.id) : l.isSelected;
                    if (!p && l ? .children) {
                        let c = l.children;
                        for (let m of c) {
                            let u = r ? r.has(m.id) : m.isSelected;
                            m.setState(g => ({ ...g,
                                isSelected: u
                            }))
                        }
                    }
                    l.setState(c => ({ ...c,
                        isSelected: d,
                        isCollapsed: p
                    }))
                }
            }
            this.refreshState()
        }
        refreshLayerState(t, r) {
            let i = this.getAllItems(),
                n = t.model,
                s = n.get("_id"),
                l = i.get(s);
            if (l) {
                let p = l.isSelected,
                    d = l.isFiltered,
                    c = !!t ? .isSelected(),
                    m = fa(r, [t]);
                l.setState(g => ({ ...g,
                    name: n.get("name") || t ? .getStandardName(),
                    iconStyles: hs(t),
                    iconSvgStyles: tc(t),
                    isHidden: n.get("hidden"),
                    isLocked: n.get("is_locked"),
                    isGlobal: n.get("is_global"),
                    isSelected: c,
                    isFiltered: m
                }));
                let u = i.get(l.parentId || "");
                if (u && u ? .children) {
                    let g = new Set,
                        h = new Set,
                        b = new Set,
                        x = new Set,
                        S = -1;
                    for (let v = 0; v < u.children.length; v++) {
                        let P = u.children[v];
                        S = P.id === l.id ? v : S, P.isHidden && g.add(P.id), P.isLocked && h.add(P.id), P.isSelected && b.add(P.id), P.isFiltered && x.add(P.id)
                    }
                    if (S > -1) {
                        let v = hs(t, {
                                small: !0
                            }),
                            P = tc(t, {
                                forGroups: !0
                            }),
                            C = Array.isArray(u.iconStyles) ? nt(u.iconStyles) : [],
                            k = Array.isArray(u.iconSvgStyles) ? nt(u.iconSvgStyles) : [];
                        C[S] = v, k[S] = P, u.setState(T => ({ ...T,
                            iconStyles: C,
                            iconSvgStyles: k,
                            isHidden: g.size === (u ? .children ? .length || 0),
                            isLocked: h.size === (u ? .children ? .length || 0),
                            isSelected: b.size === (u ? .children ? .length || 0),
                            isFiltered: x.size > 0
                        }))
                    }
                }
                if (d !== m) this.refreshState();
                else if (p !== c) {
                    let g = new Set(this.visibleSelectedItems);
                    g.delete(s);
                    let {
                        selectedItems: h,
                        visibleSelectedItems: b
                    } = this.getSelectedItemsParams(g);
                    this.setState(x => ({ ...x,
                        selectedItems: h,
                        visibleSelectedItems: b
                    }))
                }
            }
        }
        selectAndOpenGroupIfNeeded(t) {
            let r = this.getAllItems(),
                i = Array.from(this.selectedItems.values()),
                n = Array.from(t.values()),
                s = Ms(i, n),
                l = !1;
            for (let p of t) {
                let d = r.get(p);
                if (!d) continue;
                let c = r.get(d ? .parentId || ""),
                    m = t.has(c ? .id || "");
                c ? .isCollapsed && !m && (c.setState(g => ({ ...g,
                    isCollapsed: !1
                })), l = !0), d.setState(g => ({ ...g,
                    isSelected: !0
                }))
            }
            for (let p of s) {
                let d = r.get(p);
                d && d.setState(c => ({ ...c,
                    isSelected: !1
                }))
            }
            if (l) this.refreshState();
            else {
                let {
                    selectedItems: p,
                    visibleSelectedItems: d,
                    visibleJustSelectedItems: c
                } = this.getSelectedItemsParams(t);
                this.setState(m => ({ ...m,
                    selectedItems: p,
                    visibleSelectedItems: d,
                    visibleJustSelectedItems: c
                }))
            }
        }
        getSelectedItemsParams(t) {
            let r = this.items,
                i = this.visibleItems,
                n = this.visibleSelectedItems,
                s = new Set,
                l = [],
                p = new Set;
            for (let d of t) {
                let c = r.get(d),
                    m = i.get(d);
                c && p.add(d), m && s.add(d), m && !n.has(d) && l.push(d), c ? .type === "group" && wn(r, c.id, u => {
                    p.add(u.id)
                })
            }
            return {
                selectedItems: p,
                visibleSelectedItems: s,
                visibleJustSelectedItems: l
            }
        }
        getProjection(t) {
            return Z4({
                layers: this,
                selectedItems: this.getVisibleSelectedItems(),
                ...t
            })
        }
        getInsertionMarkerPos(t) {
            return J4({
                layers: this,
                selectedItems: this.getVisibleSelectedItems(),
                ...t
            })
        }
        getVisibleItem(t) {
            return t && this.visibleItems.get(t) || null
        }
        getVisibleItemByIndex(t) {
            return this.visibleIndexedItems.get(t)
        }
        getPrevVisibleItem(t) {
            let r = this.getVisibleItem(t);
            return r ? this.getVisibleItem(r.prevVisibleId) : null
        }
        getNextVisibleItem(t) {
            let r = this.getVisibleItem(t);
            return r ? this.getVisibleItem(r.nextVisibleId) : null
        }
        getVisibleSection(t) {
            return this.visibleSectionItems.get(t || "")
        }
        getVisibleSectionByItemId(t) {
            let r = this.visibleSectionItems;
            for (let [i, n] of r) {
                if (t === i) return {
                    id: i,
                    value: n
                };
                if (r.get(i) ? .get(t)) return {
                    id: i,
                    value: n
                }
            }
            return null
        }
        getSections(t) {
            if (t ? .onlyNotEmpty) {
                let r = [];
                for (let [i, n] of this.visibleSectionItems) n.size > 0 && r.push(i);
                return r
            }
            return Array.from(this.visibleSectionItems.keys())
        }
        getAllVisibleItems() {
            return this.visibleItems
        }
        getAllItems() {
            return this.items
        }
        getVisibleSelectedItems() {
            return this.visibleSelectedItems
        }
        getSelectedItems() {
            return this.selectedItems
        }
        moveSelectedBlocks(t) {
            return tP({
                allLayers: this.getAllItems(),
                selectedItems: this.getSelectedItems(),
                sections: this.getSections(),
                ...t
            })
        }
        getClosestCollisions(t) {
            return oP({
                layers: this,
                selectedItems: this.getVisibleSelectedItems(),
                ...t
            })
        }
        doesSectionNeedToBeRendered(t) {
            let r = this.getVisibleItemByIndex(t);
            return this.doSectionsNeedToBeRendered() && r ? .prevVisibleId === null
        }
        doSectionsNeedToBeRendered() {
            return this.getSections({
                onlyNotEmpty: !0
            }).length > 1
        }
        getTopOfItem(t) {
            let r = this.getVisibleItem(t),
                i = this.doSectionsNeedToBeRendered(),
                n = this.getSections({
                    onlyNotEmpty: !0
                });
            if (r) {
                let s = (r ? .visibleIndex || 0) * fo.height,
                    l = 0,
                    p = i ? n.findIndex(d => d === r.section) : -1;
                return p > -1 && (l = (p + 1) * Vi.height), l + s
            }
            return 0
        }
        getScrollPositionForSelectedItems(t) {
            let r = this.visibleJustSelectedItems,
                i = 1 / 0,
                n = -1 / 0;
            for (let s of r) {
                let l = this.getTopOfItem(s),
                    p = fo.height,
                    d = l + p;
                i = Math.min(i, l), n = Math.max(n, d)
            }
            if (i < 1 / 0 && n > -1 / 0) {
                let s = n - i,
                    l = i + s / 2,
                    p = t / 2,
                    d = l - p;
                return {
                    top: i,
                    scrollToPos: d,
                    bottom: n
                }
            }
            return null
        }
    },
    {
        useStore: Zr,
        Provider: rP
    } = rn.createContext();
var ao = M(F());

function iP(e, o, t) {
    let r = e.slice();
    return r.splice(t < 0 ? r.length + t : t, 0, r.splice(o, 1)[0]), r
}

function xA(e, o) {
    return e.reduce((t, r, i) => {
        let n = o.get(r);
        return n && (t[i] = n), t
    }, Array(e.length))
}

function kg(e) {
    return e !== null && e >= 0
}

function vA(e, o) {
    if (e === o) return !0;
    if (e.length !== o.length) return !1;
    for (let t = 0; t < e.length; t++)
        if (e[t] !== o[t]) return !1;
    return !0
}

function yA(e) {
    return typeof e == "boolean" ? {
        draggable: e,
        droppable: e
    } : e
}
var nP = e => {
    let {
        rects: o,
        activeIndex: t,
        overIndex: r,
        index: i
    } = e, n = iP(o, r, t), s = o[i], l = n[i];
    return !l || !s ? null : {
        x: l.left - s.left,
        y: l.top - s.top,
        scaleX: l.width / s.width,
        scaleY: l.height / s.height
    }
};
var _g = {
        scaleX: 1,
        scaleY: 1
    },
    sP = e => {
        var o;
        let {
            activeIndex: t,
            activeNodeRect: r,
            index: i,
            rects: n,
            overIndex: s
        } = e, l = (o = n[t]) != null ? o : r;
        if (!l) return null;
        if (i === t) {
            let d = n[s];
            return d ? {
                x: 0,
                y: t < s ? d.top + d.height - (l.top + l.height) : d.top - l.top,
                ..._g
            } : null
        }
        let p = kA(n, i, t);
        return i > t && i <= s ? {
            x: 0,
            y: -l.height - p,
            ..._g
        } : i < t && i >= s ? {
            x: 0,
            y: l.height + p,
            ..._g
        } : {
            x: 0,
            y: 0,
            ..._g
        }
    };

function kA(e, o, t) {
    let r = e[o],
        i = e[o - 1],
        n = e[o + 1];
    return r ? t < o ? i ? r.top - (i.top + i.height) : n ? n.top - (r.top + r.height) : 0 : n ? n.top - (r.top + r.height) : i ? r.top - (i.top + i.height) : 0 : 0
}
var aP = "Sortable",
    lP = ao.default.createContext({
        activeIndex: -1,
        containerId: aP,
        disableTransforms: !1,
        items: [],
        overIndex: -1,
        useDragOverlay: !1,
        sortedRects: [],
        strategy: nP,
        disabled: {
            draggable: !1,
            droppable: !1
        }
    });

function cP(e) {
    let {
        children: o,
        id: t,
        items: r,
        strategy: i = nP,
        disabled: n = !1
    } = e, {
        active: s,
        dragOverlay: l,
        droppableRects: p,
        over: d,
        measureDroppableContainers: c
    } = G4(), m = xa(aP, t), u = l.rect !== null, g = (0, ao.useMemo)(() => r.map(T => typeof T == "object" && "id" in T ? T.id : T), [r]), h = s != null, b = s ? g.indexOf(s.id) : -1, x = d ? g.indexOf(d.id) : -1, S = (0, ao.useRef)(g), v = !vA(g, S.current), P = x !== -1 && b === -1 || v, C = yA(n);
    Er(() => {
        v && h && c(g)
    }, [v, g, h, c]), (0, ao.useEffect)(() => {
        S.current = g
    }, [g]);
    let k = (0, ao.useMemo)(() => ({
        activeIndex: b,
        containerId: m,
        disabled: C,
        disableTransforms: P,
        items: g,
        overIndex: x,
        useDragOverlay: u,
        sortedRects: xA(g, p),
        strategy: i
    }), [b, m, C.draggable, C.droppable, P, g, x, p, u, i]);
    return ao.default.createElement(lP.Provider, {
        value: k
    }, o)
}
var _A = e => {
        let {
            id: o,
            items: t,
            activeIndex: r,
            overIndex: i
        } = e;
        return iP(t, r, i).indexOf(o)
    },
    CA = e => {
        let {
            containerId: o,
            isSorting: t,
            wasDragging: r,
            index: i,
            items: n,
            newIndex: s,
            previousItems: l,
            previousContainerId: p,
            transition: d
        } = e;
        return !d || !r || l !== n && i === s ? !1 : t ? !0 : s !== i && o === p
    },
    SA = {
        duration: 200,
        easing: "ease"
    },
    pP = "transform",
    PA = ql.Transition.toString({
        property: pP,
        duration: 0,
        easing: "linear"
    }),
    TA = {
        roleDescription: "sortable"
    };

function IA(e) {
    let {
        disabled: o,
        index: t,
        node: r,
        rect: i
    } = e, [n, s] = (0, ao.useState)(null), l = (0, ao.useRef)(t);
    return Er(() => {
        if (!o && t !== l.current && r.current) {
            let p = i.current;
            if (p) {
                let d = Ca(r.current, {
                        ignoreTransform: !0
                    }),
                    c = {
                        x: p.left - d.left,
                        y: p.top - d.top,
                        scaleX: p.width / d.width,
                        scaleY: p.height / d.height
                    };
                (c.x || c.y) && s(c)
            }
        }
        t !== l.current && (l.current = t)
    }, [o, t, r, i]), (0, ao.useEffect)(() => {
        n && s(null)
    }, [n]), n
}

function dP(e) {
    let {
        animateLayoutChanges: o = CA,
        attributes: t,
        disabled: r,
        data: i,
        getNewIndex: n = _A,
        id: s,
        strategy: l,
        resizeObserverConfig: p,
        transition: d = SA
    } = e, {
        items: c,
        containerId: m,
        activeIndex: u,
        disabled: g,
        disableTransforms: h,
        sortedRects: b,
        overIndex: x,
        useDragOverlay: S,
        strategy: v
    } = (0, ao.useContext)(lP), P = MA(r, g), C = c.indexOf(s), k = (0, ao.useMemo)(() => ({
        sortable: {
            containerId: m,
            index: C,
            items: c
        },
        ...i
    }), [m, i, C, c]), T = (0, ao.useMemo)(() => c.slice(c.indexOf(s)), [c, s]), {
        rect: R,
        node: I,
        isOver: B,
        setNodeRef: L
    } = vg({
        id: s,
        data: k,
        disabled: P.droppable,
        resizeObserverConfig: {
            updateMeasurementsFor: T,
            ...p
        }
    }), {
        active: D,
        activatorEvent: E,
        activeNodeRect: $,
        attributes: G,
        setNodeRef: de,
        listeners: Q,
        isDragging: U,
        over: Z,
        setActivatorNodeRef: xe,
        transform: ye
    } = xg({
        id: s,
        data: k,
        attributes: { ...TA,
            ...t
        },
        disabled: P.draggable
    }), ve = h4(L, de), ee = !!D, oe = ee && !h && kg(u) && kg(x), H = !S && U, se = H && oe ? ye : null, le = oe ? se ? ? (l ? ? v)({
        rects: b,
        activeNodeRect: $,
        activeIndex: u,
        overIndex: x,
        index: C
    }) : null, ue = kg(u) && kg(x) ? n({
        id: s,
        items: c,
        activeIndex: u,
        overIndex: x
    }) : C, ke = D ? .id, ie = (0, ao.useRef)({
        activeId: ke,
        items: c,
        newIndex: ue,
        containerId: m
    }), _e = c !== ie.current.items, Ce = o({
        active: D,
        containerId: m,
        isDragging: U,
        isSorting: ee,
        id: s,
        index: C,
        items: c,
        newIndex: ie.current.newIndex,
        previousItems: ie.current.items,
        previousContainerId: ie.current.containerId,
        transition: d,
        wasDragging: ie.current.activeId != null
    }), We = IA({
        disabled: !Ce,
        index: C,
        node: I,
        rect: R
    });
    return (0, ao.useEffect)(() => {
        ee && ie.current.newIndex !== ue && (ie.current.newIndex = ue), m !== ie.current.containerId && (ie.current.containerId = m), c !== ie.current.items && (ie.current.items = c)
    }, [ee, ue, m, c]), (0, ao.useEffect)(() => {
        if (ke === ie.current.activeId) return;
        if (ke && !ie.current.activeId) {
            ie.current.activeId = ke;
            return
        }
        let O = setTimeout(() => {
            ie.current.activeId = ke
        }, 50);
        return () => clearTimeout(O)
    }, [ke]), {
        active: D,
        activeIndex: u,
        attributes: G,
        data: k,
        rect: R,
        index: C,
        newIndex: ue,
        items: c,
        isOver: B,
        isSorting: ee,
        isDragging: U,
        listeners: Q,
        node: I,
        overIndex: x,
        over: Z,
        setNodeRef: ve,
        setActivatorNodeRef: xe,
        setDroppableNodeRef: L,
        setDraggableNodeRef: de,
        transform: We ? ? le,
        transition: Ke()
    };

    function Ke() {
        if (We || _e && ie.current.newIndex === C) return PA;
        if (!(H && !Cp(E) || !d) && (ee || Ce)) return ql.Transition.toString({ ...d,
            property: pP
        })
    }
}

function MA(e, o) {
    var t, r;
    return typeof e == "boolean" ? {
        draggable: e,
        droppable: !1
    } : {
        draggable: (t = e ? .draggable) != null ? t : o.draggable,
        droppable: (r = e ? .droppable) != null ? r : o.droppable
    }
}
var B1e = [vt.Down, vt.Right, vt.Up, vt.Left];
W();
var Ep = M(F());
te();
Co();
y();
var BA = N(f)
`
  background-color: ${e=>e.theme.colors.white};
  border-radius: 1px;
  height: ${ha.height}px;
`, uP = (0, Ep.memo)(({
    overId: e,
    insertionMarkerPos: o,
    paddingLeft: t
}) => {
    let [r, i, n, s] = Zr(d => [d.getVisibleItem, d.getVisibleSection, d.getSections, d.doSectionsNeedToBeRendered], !0), l = (0, Ep.useMemo)(() => !!i(e), [e]), p = (0, Ep.useMemo)(() => {
        let d = r(e),
            c = i(e),
            m = s(),
            u = n({
                onlyNotEmpty: !0
            });
        if (d && !l) {
            let g = (d ? .visibleIndex || 0) * fo.height,
                h = 0,
                b = m ? u.findIndex(x => x === d.section) : -1;
            return b > -1 && (h = (b + 1) * Vi.height), g + h - ha.middle
        } else if (c && l) {
            let g = 0,
                h = 0;
            for (let b = 0; b < u.length; b++) {
                let x = u[b],
                    S = i(x) ? .size || 0;
                if (h += Vi.height, x === e) return h + g - ha.middle;
                g += S * fo.height
            }
            return 0
        } else return 0
    }, [e, l]);
    return a(Y, {
        children: o && a(f, {
            paddingLeft: `${t}px`,
            children: a(f, {
                position: "relative",
                height: "0",
                children: a(f, {
                    padding: "0 16px",
                    top: "0",
                    left: "0",
                    zIndex: "1",
                    width: "100%",
                    position: "absolute",
                    transform: `translate(0,${l?p:p+(o==="atTheTop"?0:fo.height)}px)`,
                    children: a(BA, {})
                })
            })
        })
    })
}, (e, o) => Bs(e, o));

function mP() {
    return a(f, {
        height: ha.middle
    })
}
var cc = M(F());
W();
te();
y();
var RA = {
        aboveAll: "Fixed on all pages",
        frontFixed: "Front Fixed",
        normal: "Widgets",
        backFixed: "Back Fixed"
    },
    zA = N(f)
`
  color: ${e=>e.theme.colors.white};
`;

function gP({
    id: e
}) {
    let {
        setNodeRef: o
    } = vg({
        id: e
    });
    return a(zA, {
        ref: o,
        children: a(f, {
            fontWeight: 600,
            opacity: .5,
            fontSize: "12px",
            padding: "12px 0px 2px 16px",
            height: Vi.height,
            userSelect: "none",
            children: RA[e]
        })
    })
}
W();
var fs = M(F());
Tt();
W();
te();
W();
y();

function hP(e) {
    return a(f, {
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        ...e,
        children: a("svg", {
            width: "10",
            height: "7",
            viewBox: "0 0 10 7",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            children: a("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.75927 6.1142C5.36017 6.57981 4.63985 6.57981 4.24076 6.1142L0.414978 1.65079C-0.141028 1.00212 0.319881 -1.01881e-08 1.17423 0L8.82579 9.12439e-08C9.68015 1.01432e-07 10.1411 1.00212 9.58505 1.65079L5.75927 6.1142Z",
                fill: "#A2A2A2"
            })
        })
    })
}

function fP() {
    return a("svg", {
        width: "8",
        height: "14",
        viewBox: "0 0 8 14",
        fill: "currentColor",
        xmlns: "http://www.w3.org/2000/svg",
        children: a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M1.99997 0C0.8954 0 -3.05176e-05 0.89543 -3.05176e-05 2V12C-3.05176e-05 13.1046 0.8954 14 1.99997 14H5.99997C7.10454 14 7.99997 13.1046 7.99997 12V2C7.99997 0.895431 7.10454 0 5.99997 0H1.99997ZM2.49997 12C2.22383 12 1.99997 12.2239 1.99997 12.5C1.99997 12.7761 2.22383 13 2.49997 13H5.49997C5.77611 13 5.99997 12.7761 5.99997 12.5C5.99997 12.2239 5.77611 12 5.49997 12H2.49997Z"
        })
    })
}

function bP() {
    return a("svg", {
        width: "12",
        height: "17",
        viewBox: "0 0 12 17",
        fill: "currentColor",
        xmlns: "http://www.w3.org/2000/svg",
        children: a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6 0C3.79094 0 2 1.79061 2 3.99983V5C2 5.55228 2.44772 6 3 6C3.55228 6 4 5.55228 4 5V3.99983C4 2.89533 4.89536 2 6 2C7.10457 2 8 2.89543 8 4V8H6H2C0.895431 8 0 8.89543 0 10V15C0 16.1046 0.895431 17 2 17H10C11.1046 17 12 16.1046 12 15V10C12 8.89543 11.1046 8 10 8V4C10 1.79086 8.20914 0 6 0Z"
        })
    })
}

function wP() {
    return w("svg", {
        width: "30px",
        height: "22px",
        viewBox: "0 0 30 22",
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg",
        children: [a("title", {
            children: "icon"
        }), a("desc", {
            children: "Created with Sketch."
        }), a("defs", {}), a("g", {
            id: "Page-1",
            stroke: "none",
            strokeWidth: "1",
            fill: "none",
            fillRule: "evenodd",
            children: a("g", {
                id: "Widget-bar---Layers",
                transform: "translate(-548.000000, -751.000000)",
                fill: "#FFFFFF",
                children: a("g", {
                    id: "WIDGETS-layers-Copy-2",
                    transform: "translate(531.000000, 184.000000)",
                    children: a("g", {
                        id: "background",
                        transform: "translate(8.000000, 554.000000)",
                        children: a("g", {
                            id: "Video",
                            children: w("g", {
                                id: "icon",
                                transform: "translate(9.000000, 13.000000)",
                                children: [a("rect", {
                                    id: "Rectangle-9-Copy-16",
                                    x: "0",
                                    y: "0",
                                    width: "22",
                                    height: "22",
                                    rx: "4.08000004"
                                }), a("path", {
                                    d: "M18.4090909,10.9838522 L27.5612379,3.64006124 L27.5612379,3.64006124 C28.20737,3.12159726 29.1514616,3.22509267 29.6699255,3.8712247 C29.8835647,4.13747092 30,4.46862374 30,4.80998678 L30,17.1577176 L30,17.1577176 C30,17.9861447 29.3284271,18.6577176 28.5,18.6577176 C28.158637,18.6577176 27.8274841,18.5412822 27.5612379,18.3276431 L18.4090909,10.9838522 Z",
                                    id: "Triangle-6"
                                })]
                            })
                        })
                    })
                })
            })
        })]
    })
}
W();
var xP = M(F());
Ic();
Tt();
y();

function Cg({
    isBackgroundVideo: e,
    iconStyles: o,
    iconSvg: t
}) {
    let r = zi(() => Array.isArray(o) ? o : [o], [o]),
        i = zi(() => Array.isArray(t) ? t : [t], [t]),
        n = zi(() => r.length > 1, [r]),
        {
            gridTemplateColumns: s,
            gridTemplateRows: l,
            gridTemplateAreas: p
        } = (0, xP.useMemo)(() => {
            let d = "";
            switch (r.length) {
                case 1:
                    return {
                        gridTemplateColumns: "1fr",
                        gridTemplateRows: "1fr",
                        gridTemplateAreas: '"icon-0"'
                    };
                case 2:
                    return {
                        gridTemplateColumns: "1fr 1fr",
                        gridTemplateRows: "1fr",
                        gridTemplateAreas: '"icon-0 icon-1"'
                    };
                case 3:
                    return d = `
        "icon-0 icon-1"
        "icon-0 icon-2"
        `, {
                        gridTemplateColumns: "1fr 1fr",
                        gridTemplateRows: "1fr 1fr",
                        gridTemplateAreas: d
                    };
                case 4:
                    return d = `
        "icon-0 icon-1"
        "icon-2 icon-3"
        `, {
                        gridTemplateColumns: "1fr 1fr",
                        gridTemplateRows: "1fr 1fr",
                        gridTemplateAreas: d
                    };
                default:
                    return {
                        gridTemplateColumns: "1fr",
                        gridTemplateRows: "1fr"
                    }
            }
        }, [r]);
    return a(f, {
        pointerEvents: "none",
        children: a(f, {
            width: "48px",
            height: "48px",
            borderRadius: n ? "8px" : "0",
            overflow: "hidden",
            position: e ? "relative" : "static",
            children: a(f, {
                width: "100%",
                height: "100%",
                display: "grid",
                gap: "2px",
                gridTemplateColumns: s,
                gridTemplateRows: l,
                gridTemplateAreas: p,
                children: r.map((d, c) => a(f, {
                    backgroundPosition: "center",
                    backgroundSize: e ? "auto 150%" : "contain",
                    backgroundRepeat: "no-repeat",
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    borderRadius: n ? "0px" : "8px",
                    overflow: "hidden",
                    style: { ...d,
                        gridArea: `icon-${c}`
                    },
                    children: e ? a(f, {
                        position: "absolute",
                        top: "0",
                        left: "0",
                        height: "100%",
                        width: "100%",
                        display: "flex",
                        justifyContent: "center",
                        alignItems: "center",
                        backgroundColor: ({
                            theme: m
                        }) => Be(.3, m ? .colors ? .black || "black"),
                        children: a(wP, {})
                    }) : a(f, {
                        width: n ? "15px" : "32px",
                        height: n ? "15px" : "32px",
                        backgroundSize: "contain",
                        backgroundRepeat: "no-repeat",
                        backgroundPosition: "center",
                        style: i[c]
                    })
                }, c))
            })
        })
    })
}
Di();
Rh();
var Sg = class extends rn {
        constructor() {
            super();
            z(this, "filter", "all");
            z(this, "layers", new yg);
            z(this, "blocksMap", new Map);
            z(this, "packBlocks", {});
            z(this, "widgetPacksMap", new Map);
            z(this, "dragIsActive", !1);
            z(this, "editModeIsActive", !1);
            z(this, "backgroundLayer", null);
            z(this, "accumulatedOrderChanges", []);
            z(this, "shiftIsPressed", !1);
            z(this, "ctrlIsPressed", !1);
            this.initStore();
            let t = this.getInitialFilter();
            this.setState(r => ({ ...r,
                filter: t
            }))
        }
        updateLayers(t) {
            let {
                sortedFlatOrderMap: r,
                blocksMap: i,
                widgetPacksMap: n,
                backgroundLayer: s,
                changesSet: l
            } = Y4({ ...t,
                filter: this.filter
            }, {
                oldFlatOrder: this.layers.getAllItems(),
                oldBackgroundLayer: this.backgroundLayer
            });
            this.layers.refreshAllItems(r), this.setState(p => ({ ...p,
                blocksMap: i,
                widgetPacksMap: n,
                packBlocks: t.packs,
                backgroundLayer: s,
                accumulatedOrderChanges: l
            }))
        }
        resetState() {
            this.layers.resetState(), this.setState(t => ({ ...t,
                layers: this.layers,
                blocksMap: new Map,
                packBlocks: {},
                widgetPacksMap: new Map,
                dragIsActive: !1,
                editModeIsActive: !1,
                backgroundLayer: null,
                accumulatedOrderChanges: []
            }))
        }
        getBlock(t) {
            return this.blocksMap.get(t)
        }
        getPackBlock(t) {
            return this.packBlocks[t]
        }
        getWidgetPack(t) {
            return this.widgetPacksMap.get(t)
        }
        isDragActive() {
            return this.dragIsActive
        }
        isEditModeActive() {
            return this.editModeIsActive
        }
        isShiftPressed() {
            return this.shiftIsPressed
        }
        isCtrlPressed() {
            return this.ctrlIsPressed
        }
        setEditModeIsActive(t) {
            return this.setState(r => ({ ...r,
                editModeIsActive: t
            }))
        }
        setDragIsActive(t) {
            this.setState(r => ({ ...r,
                dragIsActive: t
            }))
        }
        setShiftIsPressed(t) {
            this.setState(r => ({ ...r,
                shiftIsPressed: t
            }))
        }
        setCtrlIsPressed(t) {
            this.setState(r => ({ ...r,
                ctrlIsPressed: t
            }))
        }
        getInitialFilter() {
            let t = this.filter,
                r = ig();
            return r && r !== t && t === "all" ? r : t
        }
        getFilter() {
            return this.filter
        }
        setFilter(t) {
            this.setState(r => ({ ...r,
                filter: t
            })), this.layers.filterItems(t, this.blocksMap, this.widgetPacksMap)
        }
        refreshBackgroundState(t) {
            let r = this.backgroundLayer;
            r && r.setState(i => ({ ...i,
                iconStyles: hs(t),
                selectedBackgroundType: t ? .model ? .get("selectedType")
            }))
        }
        mergeOrderChanges(t) {
            let r = new Map(t.map(i => [i ? ._id, i]));
            for (let i of this.accumulatedOrderChanges) {
                let n = i._id;
                if (!n) continue;
                let s = r.get(i._id);
                r.set(n, { ...i,
                    ...s
                })
            }
            return this.setState(i => ({ ...i,
                accumulatedOrderChanges: []
            })), Array.from(r.values())
        }
    },
    {
        Provider: vP,
        useStore: Jr
    } = rn.createContext();
Ut();
kr();
W();
var Ui = M(F());
Co();
Pc();
var dw = M(Ws());
y();
var yP = (0, Ui.memo)(({
    onLayerRename: e
}) => {
    let o = (0, Ui.useRef)(null),
        [t, r] = ec(u => [u.name, u.defaultName]),
        [i] = Jr(u => [u.setEditModeIsActive], !0),
        [n, s] = (0, Ui.useState)(!1),
        [l, p] = (0, Ui.useState)(() => t);
    (0, Ui.useEffect)(() => {
        p(t)
    }, [t]), (0, Ui.useEffect)(() => (n ? document.addEventListener("keydown", d) : document.removeEventListener("keydown", d), i(n), () => {
        document.removeEventListener("keydown", d)
    }), [n]);
    let d = u => {
            u.code === dw.Key.Enter ? o.current ? .blur() : u.code === dw.Key.Escape && (p(r), o.current ? .blur())
        },
        c = () => {
            s(!0), hd(() => {
                o ? .current ? .select()
            })
        };
    return w(f, {
        position: "relative",
        color: ({
            theme: u
        }) => u ? .colors.white || "white",
        children: [a(St, {
            ref: o,
            userSelect: n ? "auto" : "none",
            onClick: u => u.stopPropagation(),
            onBlur: () => {
                s(!1), e(l)
            },
            textStyle: "small",
            value: l,
            padding: "0",
            border: "none !important",
            color: "inherit",
            onChange: u => p(u.target.value),
            css: u => ne `
          ::selection {
            background-color: ${u.colors.black};
          }
        `
        }), !n && a(f, {
            onDoubleClick: u => {
                u.stopPropagation(), c()
            },
            position: "absolute",
            top: "0",
            left: "0",
            width: "100%",
            height: "100%"
        })]
    })
});
y();
var EA = N(f, {
    excludeProps: ["isActive", "isProjected"]
})
`
  list-style: none;
  position: 'relative';
  padding-left: ${({paddingLeft:e})=>e}px;
  z-index: 1;
  background-color: ${({isActive:e,theme:o})=>e?`
$ {
    Be(.58, o.colors.darkGray)
}
`:"transperent"};
  border: 1px solid
    ${({isProjected:e,theme:o})=>e?`
$ {
    Be(.84, o.colors.gray)
}
`:`
$ {
    Be(1, o.colors.gray)
}
`};
`, uw = N(f, {
    excludeProps: ["isDisplayed", "isHidden"]
})
`
  width: 24px;
  height: 24px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: ${({theme:e})=>e?.colors.gray};
  display: ${({isDisplayed:e})=>e?"flex":"none"};
  visibility: ${({isHidden:e})=>e?"hidden":"visible"};
  transition: color 0.2s;

  &:hover {
    color: ${({theme:e})=>e?.colors.lightGray};
    cursor: pointer;
  }
  &:not(:last-child) {
    margin-right: 4px;
  }
`, kP = e => {
    let {
        viewport: o
    } = (0, fs.useContext)(je);
    return a(AA, {
        viewport: o,
        ...e
    })
}, AA = (0, fs.memo)(e => {
    let {
        viewport: o,
        attributes: t,
        isProjected: r,
        onSelected: i,
        onLayerHover: n,
        onLayerHide: s,
        onLayerLock: l,
        onLayerRename: p,
        onLayerSwitchToViewport: d
    } = e, [c] = Zr(Z => [Z.setCollapse], !0), [m] = Jr(Z => [Z.isDragActive], !0), [u, g, h, b, x, S, v, P, C, k, T, R, I, B] = ec(Z => [Z.id, Z.type, Z.depth, Z.isHidden, Z.isHover, Z.isGlobal, Z.isLocked, Z.isSelected, Z.isCollapsed, Z.isDefaultVpAvaliable, Z.isPhoneVpAvaliable, Z.iconStyles, Z.iconSvgStyles, Z.setIsHover], !0), L = (0, fs.useMemo)(() => o ? o === "default" ? T ? "phone_portrait" : null : ["phone_portrait", "tablet_portrait"].includes(o) && k ? "default" : null : null, [o, k, T]);
    (0, fs.useEffect)(() => {
        n(u, x)
    }, [x]);
    let D = Z => {
            m() ? B(!1) : B(Z)
        },
        E = () => {
            m() ? B(!1) : B(!0)
        },
        $ = () => {
            c([u])
        },
        G = () => {
            s(u, !b)
        },
        de = () => {
            l(u, !v)
        },
        Q = Z => {
            p(u, Z)
        },
        U = () => {
            L && d(u, L)
        };
    return a(EA, {
        paddingLeft: fo.indentationWidth * h,
        isActive: P,
        isProjected: r,
        onClick: () => i(u),
        onMouseEnter: () => D(!0),
        onMouseLeave: () => D(!1),
        onMouseMove: E,
        children: w(f, {
            width: "100%",
            maxWidth: "100%",
            display: "flex",
            height: fo.height - 2,
            padding: "3px 16px",
            ...t,
            children: [w(f, {
                display: "flex",
                flexGrow: "1",
                minWidth: "0",
                alignItems: "center",
                flexDirection: "row",
                style: {
                    opacity: b ? .2 : 1
                },
                children: [a(Cg, {
                    iconStyles: R,
                    iconSvg: I
                }), g === "group" && a(f, {
                    display: "flex",
                    width: "18px",
                    paddingLeft: "6px",
                    onClick: Z => {
                        Z.stopPropagation(), $()
                    },
                    children: a(hP, {
                        width: "12px",
                        height: "16px",
                        transform: `rotate(${C?-90:0}deg)`,
                        transition: "transform 0.3s",
                        fill: ({
                            theme: Z
                        }) => Z ? .colors.gray || "gray"
                    })
                }), a(f, {
                    paddingLeft: "8px",
                    flexGrow: "1",
                    minWidth: "0",
                    maskImage: "linear-gradient(to right, #000000 70%, rgba(0, 0, 0, 0) 90%, rgba(0, 0, 0, 0))",
                    children: a(yP, {
                        onLayerRename: Q
                    })
                })]
            }), w(f, {
                flexShrink: "0",
                flexBasis: "auto",
                height: "100%",
                alignItems: "center",
                display: "flex",
                children: [L && a(uw, {
                    isDisplayed: x,
                    onClick: Z => {
                        Z.stopPropagation(), U()
                    },
                    children: L === "phone_portrait" ? a(fP, {}) : a(Qd, {
                        width: "20px"
                    })
                }), a(uw, {
                    isDisplayed: x,
                    onClick: Z => {
                        Z.stopPropagation(), G()
                    },
                    children: b ? a(ol, {}) : a($v, {})
                }), a(uw, {
                    isDisplayed: x || v,
                    isHidden: b,
                    onClick: Z => {
                        Z.stopPropagation(), de()
                    },
                    children: v ? a(Kd, {}) : a(bP, {})
                })]
            }), S && a(f, {
                display: "relative",
                userSelect: "none",
                children: a(f, {
                    position: "absolute",
                    right: "25px",
                    fontSize: "10px",
                    children: "G"
                })
            })]
        })
    })
});
var Pg = M(F());
Co();
y();
var _P = (0, Pg.memo)(e => {
        let [o] = ec(n => [n.id]), {
            attributes: t,
            listeners: r,
            setNodeRef: i
        } = dP({
            id: o
        });
        return a(DA, {
            ref: i,
            attributes: t,
            listeners: r,
            ...e
        })
    }, (e, o) => Bs(e, o)),
    DA = (0, Pg.forwardRef)(({
        listeners: e,
        ...o
    }, t) => a("li", {
        ref: t,
        ...e,
        children: a(kP, { ...o
        })
    }));
var M3 = M(x3()),
    B3 = M(I3());
y();
var R3 = (0, cc.memo)(e => {
    let {
        virtualizedListRef: o,
        projectedParentId: t,
        ...r
    } = e, [i, n, s, l, p, d] = Zr(u => [u.visibleItemsArr, u.getVisibleItemByIndex, u.getVisibleSection, u.getSections, u.doesSectionNeedToBeRendered, u.doSectionsNeedToBeRendered], !0);
    (0, cc.useEffect)(() => {
        o ? .current ? .recomputeRowHeights(0)
    }, [i]);
    let c = ({
            index: u
        }) => p(u) ? Vi.height + fo.height : fo.height,
        m = (0, cc.useMemo)(() => {
            let u = 0,
                g = l({
                    onlyNotEmpty: !0
                }),
                h = d();
            for (let b = 0; b < g.length; b++) {
                let x = g[b],
                    S = s(x) ? .size || 0,
                    v = h ? Vi.height : 0,
                    P = S * fo.height;
                u += v + P
            }
            return u
        }, [i]);
    return a(B3.default, {
        style: {
            height: m + "px"
        },
        children: ({
            width: u,
            height: g
        }) => a(M3.default, {
            ref: o,
            width: u,
            height: g,
            overscanRowCount: 1,
            style: {
                overflowX: "visible",
                overflowY: "visible"
            },
            rowCount: i.length,
            rowHeight: h => c(h),
            rowRenderer: ({
                index: h,
                style: b
            }) => {
                let x = n(h),
                    S = p(h);
                return x ? a(f, {
                    style: b,
                    children: w(q4, {
                        value: x,
                        children: [S && a(gP, {
                            id: x.section
                        }), a(_P, {
                            isProjected: t ? x.id === t : !1,
                            ...r
                        })]
                    })
                }, x.id) : a(Y, {})
            }
        })
    })
});
W();
Fr();
var tr = M(F());
du();
y();
var YL = 1,
    XL = 5,
    KL = 15,
    ZL = .1,
    z3 = (0, tr.memo)(({
        children: e,
        onMouseMove: o
    }) => {
        let [t, r] = Jr(S => [S.isShiftPressed, S.dragIsActive]), [i, n, s] = Zr(S => [S.visibleItemsArr, S.visibleJustSelectedItems, S.getScrollPositionForSelectedItems], !0), {
            wrapperRef: l
        } = (0, tr.useContext)(pv), p = (0, tr.useRef)(null), d = (0, tr.useRef)({}), c = (0, tr.useRef)(!0), m = (0, tr.useRef)(0), u = (0, tr.useRef)(!1), g = (0, tr.useRef)(!1), {
            callback: h
        } = Fn(b, 100);
        (0, tr.useEffect)(() => {
            c.current ? requestAnimationFrame(() => b()) : h()
        }, [n]), (0, tr.useEffect)(() => {
            if (p ? .current) {
                let S = p ? .current ? .getBoundingClientRect();
                d.current = S.height
            }
        }, [i]);

        function b() {
            if (t()) return;
            let S = l ? .current;
            if (S && !r) {
                let v = S.clientHeight,
                    P = S.scrollTop,
                    C = P,
                    k = (d.current || 0) + P,
                    T = s(v);
                T !== null && (T.top < C || T.bottom > k) && S.scrollTo({
                    top: T.scrollToPos,
                    behavior: c.current ? void 0 : "smooth"
                }), c.current = !1
            }
        }

        function x(S, v = 0) {
            if (!S) return;
            let P = l ? .current;
            if (!P || !u.current) return;
            let C = S.height * ZL,
                k = C + S.top,
                T = 2 * C + S.top,
                R = 3 * C + S.top,
                I = S.bottom - 3 * C,
                B = S.bottom - 2 * C,
                L = S.bottom - C,
                D = m.current,
                E = .1,
                $ = 0,
                G = null;
            if (D < k || D > L ? ($ = Math.min(v + E, KL), G = P.scrollTop + (D < k ? -$ : $)) : D < T || D > B ? ($ = Math.min(v + E, XL), G = P.scrollTop + (D < T ? -$ : $)) : (D < R || D > I) && ($ = Math.min(v + E, YL), G = P.scrollTop + (D < R ? -$ : $)), G = G && Math.min(P.scrollHeight, Math.max(0, Number(G.toFixed(2)))), $ = Number($.toFixed(2)), G !== null) {
                let de = Math.abs(G - P.scrollTop);
                P.scrollTo({
                    top: G
                }), requestAnimationFrame(() => x(S, de)), g.current = !0
            } else g.current = !1
        }
        return (0, tr.useEffect)(() => {
            u.current = r;
            let S = p ? .current ? .getBoundingClientRect(),
                v = l ? .current,
                P = {
                    height: S ? .height || 0,
                    top: (S ? .top || 0) + (v ? .scrollTop || 0),
                    bottom: (S ? .bottom || 0) + (v ? .scrollTop || 0)
                };
            g.current = !1;
            let C = k => {
                o && o(k);
                let T = k.clientY;
                m.current = T, !g.current && S && v && x(P)
            };
            return r && document.addEventListener("mousemove", C), () => {
                r && document.removeEventListener("mousemove", C)
            }
        }, [r]), a(f, {
            ref: p,
            height: "100%",
            children: e
        })
    });
W();

function E3(e) {
    let o = {
            aboveAll: [],
            frontFixed: [],
            normal: [],
            backFixed: []
        },
        t = JL(e);
    for (let r in t) {
        let i = r,
            n = t[i];
        o[i] = A3(n)
    }
    return o
}

function JL(e) {
    let o = {
            aboveAll: {
                id: "aboveAll",
                children: []
            },
            frontFixed: {
                id: "frontFixed",
                children: []
            },
            normal: {
                id: "normal",
                children: []
            },
            backFixed: {
                id: "backFixed",
                children: []
            }
        },
        t = {
            aboveAll: o.aboveAll,
            frontFixed: o.frontFixed,
            normal: o.normal,
            backFixed: o.backFixed
        },
        r = e.map(i => ({
            id: i.id,
            parentId: i.parentId,
            children: [],
            section: i.section
        }));
    for (let i of r) {
        let {
            id: n,
            children: s,
            section: l
        } = i, p = i.parentId ? ? o[l].id, d = t[p] ? ? r.find(c => c.id === p);
        t[n] = {
            id: n,
            children: s
        }, d.children.push(i)
    }
    return o
}

function A3(e) {
    let o = e.children,
        t = [];
    for (let r of o) Array.isArray(r ? .children) && r.children.length > 0 ? t = [...t, A3(r)] : t.push(r.id);
    return t
}
Co();

function D3({
    id: e,
    items: o,
    prevSelection: t,
    isCmdPressed: r = !1,
    isShiftPressed: i = !1,
    options: n = {}
}) {
    if (!o) return new Set([e]);
    let s = o.get(e) ? .parentId || "";
    return i ? eO(e, o, t) : r ? tO(e, s, o, t, n) : QL(e, o)
}

function QL(e, o) {
    let t = new Set([e]);
    return o && wn(o, e, r => {
        t ? .add(r.id)
    }), t
}

function eO(e, o, t) {
    let r = ch(t),
        i = -1,
        n = -1,
        s = 0;
    for (let l of o.values()) {
        let p = l.id;
        (p === e || r.has(p)) && (i === -1 && (i = s), n = s), s++
    }
    s = 0;
    for (let l of o.values()) {
        let p = l.id;
        if (l.type === "group" && !l.isCollapsed) {
            s++;
            continue
        }
        n >= s && s >= i && (r ? .add(p), wn(o, e, d => {
            r ? .add(d.id)
        })), s++
    }
    return Fg(r, o)
}

function tO(e, o, t, r, i) {
    let n = ch(r);
    return n && n ? .has(e) && !i ? .dontChangeExisting ? n.has(o) ? (n.delete(o), n.delete(e)) : (n.delete(e), t && wn(t, e, s => n ? .delete(s.id))) : (n ? .add(e), t && wn(t, e, s => {
        n ? .add(s.id)
    })), Fg(n, t)
}

function Fg(e, o) {
    let t = new Set(e),
        r = new Set;
    for (let i of t) {
        if (r.has(i)) continue;
        let n = o.get(i) ? .parentId;
        if (n) {
            let s = !0;
            wn(o, n, l => {
                t.has(l.id) || (s = !1), r.add(l.id)
            }), s && !t.has(n) && t.add(n)
        }
    }
    return t
}
var Jp = class extends Jl {};
z(Jp, "activators", [{
    eventName: "onPointerDown",
    handler: (o, {
        onActivation: t,
        shouldBeActivated: r
    }) => {
        let {
            nativeEvent: i
        } = o;
        return !i.isPrimary || i.button !== 0 || !(i.target instanceof HTMLElement) || r && !r() ? !1 : (t ? .({
            event: i
        }), !0)
    }
}]);
y();
var L3 = (0, bo.memo)(({
    virtualizedListRef: e,
    onChangeOrder: o,
    onLayersSelect: t,
    onLayerHover: r,
    onLayerHide: i,
    onLayerLock: n,
    onLayerRename: s,
    onLayerSwitchToViewport: l
}) => {
    let [p, d, c, m, u, g, h, b, x] = Zr(le => [le.visibleItemsArr, le.getAllVisibleItems, le.getProjection, le.getAllItems, le.getSelectedItems, le.getVisibleItem, le.getInsertionMarkerPos, le.moveSelectedBlocks, le.getClosestCollisions], !0), [S, v, P, C] = Jr(le => [le.isEditModeActive, le.isShiftPressed, le.isCtrlPressed, le.setDragIsActive], !0), k = (0, bo.useRef)({
        top: 0,
        left: 0
    }), [T, R] = (0, bo.useState)(), [I, B] = (0, bo.useState)(null), [L, D] = (0, bo.useState)(null), [E, $] = (0, bo.useState)(0), [G, de] = (0, bo.useState)(""), Q = zi(() => {
        let le = d().keys();
        return Array.from(le)
    }, [p]), U = (0, bo.useMemo)(() => I && L ? c({
        activeId: I,
        overId: L,
        dragOffset: E,
        insertionMarker: T
    }) : null, [I, L, E, T]), Z = (0, bo.useCallback)((le, ue = !1) => {
        let ke = u(),
            ie = D3({
                id: le,
                items: m(),
                prevSelection: ke,
                isCmdPressed: P(),
                isShiftPressed: v(),
                options: {
                    dontChangeExisting: ue
                }
            });
        t(le, ie, ke)
    }, [t]), xe = (0, bo.useCallback)(le => {
        let ue = le.active.id;
        C(!0), B(ue), g(ue) ? .isSelected || Z(ue, !0), D(ue), de(document ? .body ? .style.getPropertyValue("cursor") || "")
    }, [Z]), ye = (0, bo.useCallback)(le => {
        k.current = {
            top: le.clientY,
            left: le.clientX
        }
    }, []), ve = (0, bo.useCallback)(le => {
        let ue = k ? .current ? .top || 0,
            ke = le.collisions,
            ie = le.active;
        ke && R(h({
            active: ie,
            cursorTop: ue,
            collisions: ke
        })), $(le.delta.x)
    }, []), ee = (0, bo.useCallback)(le => {
        let ue = le.over ? .id ? ? null;
        D(ue)
    }, []), oe = Sd(({
        over: le
    }) => {
        if (se(), U && le) {
            let {
                sortedItems: ue,
                changesSet: ke,
                globalGroupChanges: ie
            } = b({
                overId: le.id,
                projectedDepth: U.depth,
                projectedParentId: U.parentId,
                insertionMarker: T
            });
            o(E3(ue), ke, ie)
        }
    }, [T, U]), H = (0, bo.useCallback)(() => {
        se()
    }, []), se = (0, bo.useCallback)(() => {
        D(null), B(null), $(0), R(void 0), C(!1), document.body.style.setProperty("cursor", G)
    }, []), he = gg(zp(Jp, {
        activationConstraint: {
            distance: 10
        },
        shouldBeActivated: () => !S()
    }));
    return w(f, {
        height: "inherit",
        padding: `${ha.middle}px 0 0`,
        children: [L && a(uP, {
            overId: L,
            insertionMarkerPos: T,
            paddingLeft: fo.indentationWidth * (U ? .depth || 0)
        }), a(wg, {
            sensors: he,
            collisionDetection: le => x({
                args: le
            }),
            onDragStart: xe,
            onDragMove: ve,
            onDragOver: ee,
            onDragEnd: oe,
            autoScroll: {
                layoutShiftCompensation: !1,
                enabled: !1
            },
            onDragCancel: H,
            children: a(cP, {
                items: Q,
                strategy: sP,
                children: w(z3, {
                    onMouseMove: ye,
                    children: [a(R3, {
                        virtualizedListRef: e,
                        projectedParentId: U ? .parentId || null,
                        onSelected: Z,
                        onLayerHover: r,
                        onLayerHide: i,
                        onLayerLock: n,
                        onLayerRename: s,
                        onLayerSwitchToViewport: l
                    }), a(mP, {})]
                })
            })
        })]
    })
});
W();
Fr();
y();

function $3(e) {
    let [o] = Zr(i => [i.visibleItemsArr]), t = (0, O3.useRef)(null);

    function r(i) {
        let n = i.target,
            {
                scrollTop: s,
                scrollLeft: l
            } = n;
        t.current && t.current ? .Grid && t.current.Grid.handleScrollEvent({
            scrollTop: s,
            scrollLeft: l
        })
    }
    return a("span", {
        style: {
            padding: o.length > 0 ? "5px 0px" : "0px"
        },
        children: a(Ft, {
            onScroll: r,
            children: ({
                ref: i
            }) => a(f, {
                height: "inherit",
                ref: i,
                children: a(L3, {
                    virtualizedListRef: t,
                    ...e
                })
            })
        })
    })
}
$o();
du();
ef();
Kt();
Co();
W();
be();
var vs = M(F());
var td = M(Ht()),
    Yi = M(lt());
Co();
ut();
yI();
$o();
uu();
Yh();
I0();
var Go = M(Ht()),
    Qp = M(lt());
Co();
ut();
uu();
Wd();
By();

function oO() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "18",
            height: "18",
            xmlns: "http://www.w3.org/2000/svg"
        }
    }, e.$listeners), [t("path", {
        attrs: {
            d: "M10 8h7a1 1 0 010 2h-7v7a1 1 0 01-2 0v-7H1a1 1 0 110-2h7V1a1 1 0 112 0v7z",
            fill: "#B8B8B8",
            "fill-rule": "evenodd"
        }
    })])]
}
var H3 = {
    render: oO
};
var rO = {
        components: {
            Draggable: jl,
            NumericInput: Ln,
            RmScroll: hu,
            SlideshowAddBtnImg: H3
        },
        props: ["slideshowData", "selectedType", "block"],
        data: function() {
            return {
                slideshowLoading: !1,
                slideshowDragging: !1,
                slideshowIsDnd: !1,
                highlightTimeout: null,
                pictureListRect: null,
                rectTopLine: null,
                rectBottomLine: null,
                dragTranslate: null,
                dragTranslateBottom: null,
                scrollElement: null,
                slideshowUpdating: {
                    num: null,
                    loading: !1,
                    starting: !1
                },
                slideshowDelay: 4,
                slideshowCrossfade: .5
            }
        },
        computed: {
            slideshowHasPictures: function() {
                return this.slideshowData && !Qp.default.isEmpty(this.slideshowData.pictures)
            }
        },
        watch: {
            selectedType: function() {
                this.onTypeChange()
            },
            slideshowData: function() {
                this.onSlideshowChange()
            }
        },
        mounted: function() {
            this.slideshowDelaySave._debounced = Qp.default.debounce(this.slideshowDelaySave, 300), this.slideshowCrossfadeSave._debounced = Qp.default.debounce(this.slideshowCrossfadeSave, 300), this.slideshowUploader = new Nn(this, {
                fileTypes: "jpeg|jpg|png|gif",
                fileTypesErrorMessage: "We support only JPG, GIF and PNG picture formats.",
                uploadInputRefName: "slideshowUploadInput"
            }), this.slideshowUploader.on("start", this.onStartSlideshowUpload), this.slideshowUploader.on("done", this.onDoneSlideshowUpload), this.slideshowUploader.on("fail", this.onFailSlideshowUpload), this.block.workspace.on("main-dragover", this.highlightDropZone), this.defaultSlideshowUpdating = {
                num: null,
                id: null,
                loading: !1,
                starting: !1
            }, this.slideshowHasPictures && (this.slideshowDelay = this.slideshowData.delay, this.slideshowCrossfade = this.slideshowData.crossfade, this.scrollElement = (0, Go.default)(this.$refs.rmscroll.$el).find(".resizable-content-wrapper")), this.selectedType === "slideshow" && this.block.runSlideshow()
        },
        beforeDestroy: function() {
            this.block.stopSlideshow()
        },
        destroyed: function() {
            this.slideshowUploader.off(), this.block.workspace.off("main-dragover", this.highlightDropZone)
        },
        methods: {
            showSelectSlideshowFile: function(e) {
                (0, Go.default)(e.target).hasClass("slideshowUploadInput") || this.slideshowLoading || this.slideshowHasPictures || (0, Go.default)(this.$refs.slideshowUploadInput).trigger("click", "stop")
            },
            highlightDropZone: function() {
                this.slideshowHasPictures && ((0, Go.default)(this.$refs.dropZoneHighlighter).css({
                    display: "block"
                }), clearTimeout(this.highlightTimeout), this.highlightTimeout = setTimeout(function() {
                    (0, Go.default)(this.$refs.dropZoneHighlighter).css({
                        display: "none"
                    })
                }.bind(this), 300))
            },
            onStartSlideshowUpload: function() {
                this.slideshowUpdating.starting ? this.slideshowUpdating.loading = !0 : this.slideshowLoading = !0, this.slideshowUploader.viewport = this.block.model.getViewport()
            },
            onDoneSlideshowUpload: function(e, o) {
                if (this.slideshowDragging = !1, this.slideshowLoading = !1, this.slideshowUpdating.loading && (this.slideshowUpdating.loading = !1), !o || !o.result) {
                    console.error("error file upload!");
                    return
                }
                let t = {
                    save: !0
                };
                this.slideshowUpdating.starting ? (t.num = this.slideshowUpdating.num, t.id = this.slideshowUpdating.id, this.block.updateSlideshowPicture(o.result, t), this.slideshowUpdating = this.defaultSlideshowUpdating) : this.block.saveSlideshowPicture(o.result, t)
            },
            onFailSlideshowUpload: function(e, o, t) {
                console.error("An error occurred while loading the slideshow image: ", t), t !== ae.MSG_UPLOAD_IMAGE_SIZE_ERROR && window.alert("Sorry, picture loading failed")
            },
            onSlideshowDragStart: function() {
                this.block.stopSlideshow(), this.slideshowIsDnd = !0, this.pictureListRect = this.$refs.picturesList.getBoundingClientRect(), this.rectTopLine = this.pictureListRect.top, this.rectBottomLine = this.pictureListRect.top + this.pictureListRect.height
            },
            onSlideshowDragEnd: function() {
                this.dragTranslate = null, this.dragTranslateBottom = null, this.$refs.picturesList.querySelectorAll(".real-slide").forEach(function(o) {
                    (0, Go.default)(o).removeClass("selected")
                });
                let e = this.recalcSlideshowNums();
                this.block.updateSlideshowPicturePosition(e), this.$emit("updatePictures", e), setTimeout(function() {
                    this.slideshowIsDnd = !1
                }.bind(this), 200)
            },
            onSlideshowTouchMove: function(e) {
                this.rectTopLine && e.data.y <= this.rectTopLine + 15 ? (this.dragTranslate || (this.dragTranslate = (0, Go.default)(e.item).css("transform")), (0, Go.default)(e.item).css("transform", this.dragTranslate)) : this.rectBottomLine && e.data.y + 16 >= this.rectBottomLine && (this.dragTranslateBottom || (this.dragTranslateBottom = (0, Go.default)(e.item).css("transform")), (0, Go.default)(e.item).css("transform", this.dragTranslateBottom)), this.rectBottomLine && e.data.y + 20 >= this.rectBottomLine && this.scrollElement.scrollTop(this.scrollElement.scrollTop() - e.data.dy * 4)
            },
            slideshowDelayChange: function(e) {
                this.slideshowDelaySave._debounced(e)
            },
            slideshowDelaySave: function(e) {
                this.slideshowHasPictures && (this.$emit("updateDelay", +e.toFixed(1)), this.block.updateSideshowDelay(+e.toFixed(1)))
            },
            slideshowCrossfadeChange: function(e) {
                this.slideshowCrossfadeSave._debounced(e)
            },
            slideshowCrossfadeSave: function(e) {
                this.slideshowHasPictures && (this.$emit("updateCrossfade", +e.toFixed(1)), this.block.updateSideshowCrossfade(+e.toFixed(1)))
            },
            recalcSlideshowNums: function() {
                let e = nt(this.slideshowData.pictures);
                return e.forEach(function(o, t) {
                    o.num = t + 1
                }), e
            },
            onSlideshowChange: function() {
                this.slideshowDelay = this.slideshowData.delay, this.slideshowCrossfade = this.slideshowData.crossfade
            },
            onTypeChange: function() {
                this.selectedType !== "slideshow" && this.slideshowHasPictures && this.$refs.picturesList.querySelectorAll(".real-slide").forEach(function(e) {
                    (0, Go.default)(e).removeClass("selected")
                })
            },
            selectSlide: function(e) {
                this.slideshowIsDnd || !e.target.dataset.id || (this.$refs.picturesList.querySelectorAll(".real-slide").forEach(function(o) {
                    (0, Go.default)(o).removeClass("selected")
                }), (0, Go.default)(e.target).parents(".list-item-wrap").addClass("selected"), this.block.selectSlideshowPicture(e.target.dataset.id))
            },
            onAddPictureClick: function() {
                this.slideshowLoading || !this.slideshowHasPictures || (0, Go.default)(this.$refs.slideshowUploadInput).trigger("click", "stop")
            },
            onDeleteSlideshowPicture: function(e) {
                if (e.stopPropagation(), this.slideshowIsDnd || !e.target.dataset.id) return;
                let o = this.slideshowData.pictures.findIndex(function(r) {
                        return r.uuid === e.target.dataset.id
                    }),
                    t = nt(this.slideshowData.pictures);
                t.splice(o, 1), t = Qp.default.sortBy(t, "num"), this.$emit("updatePictures", t), this.block.deleteSlideshowPicture(e.target.dataset.id)
            },
            onUpdateSlideshowPicture: function(e) {
                this.slideshowIsDnd || this.slideshowLoading || this.slideshowUpdating.starting || !e.target.dataset.id || (this.slideshowUpdating = {
                    id: e.target.dataset.id,
                    loading: !1,
                    starting: !0
                }, (0, Go.default)(this.$refs.slideshowUploadInput).trigger("click", "stop"))
            },
            save: function() {
                this.block.model.save()
            },
            getThumbnailUrl: function(e) {
                return this.block.getThumbnailUrl(e)
            }
        }
    },
    iO = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "view slideshow"
        }, [t("div", {
            ref: "slideshowDropZone",
            staticClass: "upload",
            class: {
                dragging: e.slideshowDragging, hasPictures: e.slideshowHasPictures
            },
            attrs: {
                "drag-over": "handleDragOver"
            },
            on: {
                dragenter: function(r) {
                    e.slideshowDragging = !0
                },
                dragend: function(r) {
                    e.slideshowDragging = !1
                },
                dragleave: function(r) {
                    e.slideshowDragging = !1
                },
                click: e.showSelectSlideshowFile
            }
        }, [t("input", {
            ref: "slideshowUploadInput",
            staticClass: "slideshowUploadInput",
            attrs: {
                type: "file",
                name: "upload",
                "data-url": "/api/upload/lambda/"
            }
        }), e._v(" "), e.slideshowHasPictures ? e._e() : t("div", {
            staticClass: "param-caption"
        }, [e._v("Slideshow")]), e._v(" "), e.slideshowHasPictures ? e._e() : t("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: !e.slideshowLoading,
                expression: "!slideshowLoading"
            }],
            staticClass: "upload-wrapper"
        }, [t("div", {
            staticClass: "center-wrapper"
        }, [t("div", {
            staticClass: "caption-upload-dop"
        }, [e._v(e._s(e.slideshowDragging ? "Drop here" : "Drop file here"))])])]), e._v(" "), e.slideshowHasPictures ? e._e() : t("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: e.slideshowLoading,
                expression: "slideshowLoading"
            }],
            staticClass: "first-loading"
        }, [t("div", {
            staticClass: "rm-loader"
        })]), e._v(" "), e.slideshowHasPictures ? t("div", {
            ref: "dropZoneHighlighter",
            staticClass: "upload-wrapper-if-pictures"
        }, [t("div", {
            staticClass: "center-wrapper"
        }, [e._v("Drop file here")])]) : e._e(), e._v(" "), t("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: e.slideshowHasPictures,
                expression: "slideshowHasPictures"
            }],
            ref: "picturesList",
            staticClass: "pictures-list"
        }, [t("rm-scroll", {
            ref: "rmscroll",
            attrs: {
                "scroll-gap-start": 8,
                "scroll-gap-end": 8,
                "system-scroll": !0
            }
        }, [t("draggable", {
            ref: "draggableContainer",
            staticClass: "draggable-container-slideshow",
            class: {
                "draggble-running": e.slideshowIsDnd
            },
            attrs: {
                options: {
                    denyX: !0,
                    forceFallback: !0,
                    scroll: !0,
                    scrollSensitivity: 40,
                    animation: 200,
                    delay: 0,
                    group: "",
                    ghostClass: "sl-ghost-item",
                    dragClass: "sl-drag-item",
                    chosenClass: "sl-drag-item",
                    disabled: e.slideshowLoading
                }
            },
            on: {
                start: e.onSlideshowDragStart,
                end: e.onSlideshowDragEnd,
                touchMove: e.onSlideshowTouchMove
            },
            model: {
                value: e.slideshowData.pictures,
                callback: function(r) {
                    e.$set(e.slideshowData, "pictures", r)
                },
                expression: "slideshowData.pictures"
            }
        }, [t("transition-group", {
            attrs: {
                type: "transition",
                name: e.slideshowIsDnd ? null : "flip-list"
            }
        }, e._l(e.slideshowData.pictures, function(r, i) {
            return t("div", {
                key: r.uuid,
                staticClass: "list-item-wrap real-slide",
                attrs: {
                    "data-id": r.uuid
                }
            }, [t("div", {
                staticClass: "pic-num-item-wrap"
            }, [t("div", {
                staticClass: "pic-num-item"
            }, [e._v(e._s(i + 1))])]), e._v(" "), t("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.slideshowUpdating.loading || e.slideshowUpdating.id !== r.uuid,
                    expression: "!slideshowUpdating.loading || slideshowUpdating.id !== picture.uuid"
                }],
                staticClass: "pic-list-item",
                style: {
                    backgroundImage: "url(" + e.getThumbnailUrl(r) + ")"
                },
                attrs: {
                    "data-id": r.uuid
                },
                on: {
                    click: e.selectSlide
                }
            }), e._v(" "), t("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: e.slideshowUpdating.loading && e.slideshowUpdating.id === r.uuid,
                    expression: "slideshowUpdating.loading && slideshowUpdating.id === picture.uuid"
                }],
                staticClass: "pic-list-item-loading",
                attrs: {
                    title: "Loading..."
                }
            }, [t("div", {
                staticClass: "rm-loader"
            })]), e._v(" "), t("div", {
                staticClass: "pic-actions-item"
            }, [t("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.slideshowUpdating.loading && !e.slideshowLoading,
                    expression: "!slideshowUpdating.loading && !slideshowLoading"
                }],
                staticClass: "update-image",
                attrs: {
                    title: "Update",
                    "data-id": r.uuid
                },
                on: {
                    click: e.onUpdateSlideshowPicture
                }
            }), e._v(" "), t("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !e.slideshowLoading && !e.slideshowUpdating.loading,
                    expression: "!slideshowLoading && !slideshowUpdating.loading"
                }],
                staticClass: "delete-image",
                attrs: {
                    title: "Delete",
                    "data-id": r.uuid
                },
                on: {
                    click: e.onDeleteSlideshowPicture
                }
            })])])
        }), 0)], 1), e._v(" "), t("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: !e.slideshowLoading && !e.slideshowUpdating.loading && !e.slideshowIsDnd,
                expression: "!slideshowLoading && !slideshowUpdating.loading && !slideshowIsDnd"
            }],
            staticClass: "list-item-wrap"
        }, [t("div", {
            staticClass: "add-picture-wrap",
            attrs: {
                title: "Add Picture"
            },
            on: {
                click: e.onAddPictureClick
            }
        }, [t("slideshow-add-btn-img", {
            staticClass: "svg add-picture-icon",
            staticStyle: {
                "pointer-events": "none"
            }
        })], 1)]), e._v(" "), t("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: e.slideshowLoading && !e.slideshowUpdating.loading,
                expression: "slideshowLoading && !slideshowUpdating.loading"
            }],
            staticClass: "list-item-wrap"
        }, [t("div", {
            staticClass: "add-picture-loading",
            attrs: {
                title: "Loading..."
            }
        }, [t("div", {
            staticClass: "rm-loader"
        })])])], 1)], 1)]), e._v(" "), e.slideshowHasPictures ? t("div", {
            staticClass: "animation-options"
        }, [t("div", {
            staticClass: "options-row first-row"
        }, [t("div", {
            staticClass: "option-label"
        }, [e._v("Delay")]), e._v(" "), t("numeric-input", {
            staticClass: "option-value",
            attrs: {
                value: e.slideshowDelay,
                min: e.slideshowCrossfade,
                max: 60,
                step: .1,
                "use-float": !0
            },
            on: {
                change: e.slideshowDelayChange
            }
        }), e._v(" "), e._m(0)], 1), e._v(" "), t("div", {
            staticClass: "options-row-separator"
        }), e._v(" "), t("div", {
            staticClass: "options-row second-row"
        }, [t("div", {
            staticClass: "option-label"
        }, [e._v("Crossfade")]), e._v(" "), t("numeric-input", {
            staticClass: "option-value",
            attrs: {
                value: e.slideshowCrossfade,
                min: 0,
                max: e.slideshowDelay,
                step: .1,
                "use-float": !0
            },
            on: {
                change: e.slideshowCrossfadeChange
            }
        }), e._v(" "), e._m(1)], 1)]) : e._e()])
    },
    nO = [function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "option-value-dimension-wrap"
        }, [t("div", {
            staticClass: "option-value-dimension"
        }, [e._v("s")])])
    }, function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "option-value-dimension-wrap"
        }, [t("div", {
            staticClass: "option-value-dimension"
        }, [e._v("s")])])
    }],
    sO = void 0,
    aO = void 0,
    lO = void 0,
    cO = !1;

function pO(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "background-slideshow.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var dO = pO({
        render: iO,
        staticRenderFns: nO
    }, sO, rO, aO, cO, lO, !1, void 0, void 0, void 0),
    F3 = dO;
var W3 = M(ir());
Es();
W();
qc();
be();
var xs = M(F());
WI();
Es();
lk();
dI();
pi();
Hh();
te();
He();
ut();
mI();
SI();
Kh();
Sr();
y();

function N3() {
    let {
        model: {
            video: e
        },
        rawModel: o,
        modelSet: t,
        modelSave: r
    } = (0, xs.useContext)(Na), i = sk(e), n = Number(Wn.getPermissions().video_upload_limit || 0), s = (0, xs.useMemo)(() => {
        if (i) return ik(e) ? .thumbnail
    }, [i, e]), l = (0, xs.useMemo)(() => window.RM.constructorRouter.mag.get("_id"), []), [p, d] = (0, xs.useState)(!1), [c, m] = (0, xs.useState)();
    async function u(x) {
        m(void 0), d(!0);
        try {
            let S = nk(x);
            if (!S.isValid) S.errorType === "SubscriptionLimitError" ? tt("video-upload", {
                currentLimit: n
            }) : m(S.errorMessage);
            else {
                let v = o.getViewport(),
                    P = await ok(x, l);
                t({
                    video: {
                        size: x.size,
                        provider_name: "self",
                        thumbnail_url: P.thumbPath,
                        url: P.videoPath,
                        loop: e && typeof e.loop == "boolean" ? e.loop : !0,
                        version: ae.VIDEO_BACKGROUND_VERSION,
                        opacity: 100
                    }
                }, {
                    viewport: v
                }), r()
            }
        } catch {
            m("Could not upload file")
        } finally {
            d(!1)
        }
    }

    function g({
        value: x
    }) {
        i && t({
            video: { ...e,
                opacity: x
            }
        })
    }

    function h(x) {
        i && t({
            video: { ...e,
                loop: x
            }
        })
    }

    function b() {
        t({
            video: {}
        })
    }
    return i ? w(f, {
        backgroundColor: "#f3f3f3",
        backgroundImage: `url('${s}')`,
        backgroundPosition: "center",
        backgroundSize: "cover",
        backgroundRepeat: "no-repeat",
        width: "100%",
        height: "100%",
        position: "relative",
        children: [a(f, {
            position: "absolute",
            top: 0,
            left: 0,
            zIndex: 0,
            width: "100%",
            height: "100%",
            backgroundColor: "#2E2D2C",
            opacity: .88
        }), w(f, {
            position: "relative",
            zIndex: 1,
            children: [a(f, {
                padding: "8px 16px 0",
                children: w(f, {
                    borderBottom: "2px solid",
                    borderColor: Ie("gray", .24),
                    paddingBottom: 38,
                    children: [a(A, {
                        as: "div",
                        color: "white",
                        marginBottom: 4,
                        children: "Background video"
                    }), w(A, {
                        as: "div",
                        color: "gray",
                        textStyle: "small",
                        children: [sy(e.size), " total size, muted"]
                    })]
                })
            }), w(f, {
                marginBottom: 16,
                children: [a(Fh, {
                    leftSlot: a(A, {
                        textStyle: "small",
                        color: "white",
                        children: "Loop"
                    }),
                    rightSlot: a(Nt, {
                        checked: e.loop,
                        onChange: h
                    })
                }), a(Fh, {
                    showBorder: !1,
                    leftSlot: a(A, {
                        textStyle: "small",
                        color: "white",
                        children: "Opacity"
                    }),
                    rightSlot: a(Ns, {
                        textAlign: "right",
                        color: "white",
                        value: typeof e.opacity == "number" ? e.opacity : 100,
                        min: 0,
                        max: 100,
                        onChange: g
                    })
                })]
            }), a(f, {
                display: "flex",
                alignItems: "center",
                padding: "0px 16px",
                children: a(ge, {
                    boxSizing: "border-box",
                    width: "100%",
                    height: 40,
                    variant: "bordered",
                    borderColor: Ie("white", .16),
                    textStyle: "small",
                    color: "white",
                    lineHeight: "38px",
                    onClick: b,
                    children: "Replace"
                })
            })]
        })]
    }) : a(Oi, {
        id: "rm-background-video-upload",
        onChange: u,
        accept: "video/mp4",
        readFileData: !1,
        cursor: p ? "default" : "pointer",
        dropFile: !p,
        children: a(f, {
            backgroundColor: "#f3f3f3",
            padding: "8px 16px",
            width: "100%",
            height: "100%",
            onMouseEnter: () => {
                c && setTimeout(() => {
                    m(void 0)
                }, 1e3)
            },
            children: w(f, {
                width: "100%",
                height: "100%",
                pointerEvents: p ? "none" : void 0,
                display: "flex",
                flexDirection: "column",
                justifyContent: "space-between",
                children: [a(A, {
                    children: p ? "Uploading..." : "Background video"
                }), a(A, {
                    textStyle: "small",
                    cursor: "pointer",
                    color: c ? "tomato" : "blue",
                    display: "block",
                    lineHeight: "16px",
                    width: "100%",
                    children: c || (p ? "It might take some time" : a(Y, {
                        children: "Drop an MP4 file here"
                    }))
                }), a(f, {
                    children: p ? null : a(ze, {
                        href: "https://help.readymag.com/hc/en-us/articles/360021875172-Background",
                        target: "_blank",
                        rel: "noopener noreferrer",
                        textStyle: "small",
                        lineHeight: "16px",
                        children: "Learn how to convert videos"
                    })
                })]
            })
        })
    })
}
var uO = {
        props: {
            widgetModel: {
                type: Object,
                default: null
            }
        },
        mounted: function() {
            Wa({
                component: N3,
                domElement: this.$el,
                model: this.widgetModel
            })
        },
        beforeDestroy: function() {
            W3.default.unmountComponentAtNode(this.$el)
        }
    },
    mO = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "view video video-panel"
        })
    },
    gO = [],
    hO = void 0,
    fO = void 0,
    bO = void 0,
    wO = !1;

function xO(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "background-video.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var vO = xO({
        render: mO,
        staticRenderFns: gO
    }, hO, uO, fO, wO, bO, !1, void 0, void 0, void 0),
    V3 = vO;
var pc = M(lt());
PI();
var yO = {},
    kO = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("svg", {
            attrs: {
                xmlns: "http://www.w3.org/2000/svg",
                width: "40",
                height: "40",
                viewBox: "0 0 40 40"
            }
        }, [t("path", {
            attrs: {
                "fill-rule": "evenodd",
                "clip-rule": "evenodd",
                d: "M20 8C13.3726 8 8 13.3726 8 20C8 26.6274 13.3726 32 20 32C26.6274 32 32 26.6274 32 20C32 13.3726 26.6274 8 20 8ZM24.1142 19.2407C24.5798 19.6398 24.5798 20.3601 24.1142 20.7592L19.6508 24.585C19.0021 25.141 18 24.6801 18 23.8257V16.1742C18 15.3198 19.0021 14.8589 19.6508 15.4149L24.1142 19.2407Z"
            }
        })])
    },
    _O = [],
    CO = void 0,
    SO = "data-v-1e670728",
    PO = void 0,
    TO = !1;

function IO(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "arrow-right.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var MO = IO({
        render: kO,
        staticRenderFns: _O
    }, CO, yO, SO, TO, PO, !1, void 0, void 0, void 0),
    U3 = MO;
CI();
var BO = {},
    RO = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("svg", {
            attrs: {
                width: "32",
                height: "32",
                viewBox: "0 0 32 32",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }
        }, [t("path", {
            attrs: {
                "fill-rule": "evenodd",
                "clip-rule": "evenodd",
                d: "M23.9917 12.9488C23.916 14.6685 22.7602 17.0232 20.5245 20.0118C18.2134 23.1338 16.2579 24.6946 14.6582 24.6946C13.6676 24.6946 12.8286 23.7444 12.1439 21.8427C11.6862 20.0998 11.2291 18.3571 10.7715 16.6143C10.2628 14.7138 9.71728 13.7624 9.13401 13.7624C9.00685 13.7624 8.56179 14.0404 7.79985 14.5944L7 13.5236C7.83895 12.7577 8.66668 11.9916 9.48098 11.2246C10.5999 10.2197 11.4399 9.6913 11.9997 9.63805C13.3228 9.50598 14.1371 10.4458 14.4428 12.4574C14.7729 14.6279 15.0016 15.978 15.1301 16.5064C15.5114 18.3072 15.931 19.2064 16.3894 19.2064C16.7453 19.2064 17.2797 18.6223 17.9924 17.4543C18.7042 16.2862 19.0856 15.3974 19.137 14.7868C19.2385 13.7787 18.857 13.2732 17.9924 13.2732C17.5852 13.2732 17.1658 13.3706 16.7342 13.5629C17.5696 10.7191 19.1659 9.33795 21.5221 9.41677C23.2688 9.47019 24.0923 10.6473 23.9917 12.9488Z"
            }
        })])
    },
    zO = [],
    EO = void 0,
    AO = "data-v-5533b0b7",
    DO = void 0,
    LO = !1;

function OO(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "vimeo-logo.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var $O = OO({
        render: RO,
        staticRenderFns: zO
    }, EO, BO, AO, LO, DO, !1, void 0, void 0, void 0),
    G3 = $O;
var HO = {},
    FO = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("svg", {
            attrs: {
                width: "32",
                height: "32",
                viewBox: "0 0 32 32",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }
        }, [t("path", {
            attrs: {
                "fill-rule": "evenodd",
                "clip-rule": "evenodd",
                d: "M24.7728 12.5609C24.7728 12.5609 24.5969 11.3852 24.0572 10.8674C23.3727 10.1879 22.6055 10.1845 22.2536 10.1447C19.7348 9.97217 15.9564 9.97217 15.9564 9.97217H15.9486C15.9486 9.97217 12.1703 9.97217 9.65136 10.1447C9.2995 10.1845 8.53256 10.1879 7.84784 10.8674C7.30814 11.3852 7.13252 12.5609 7.13252 12.5609C7.13252 12.5609 6.95251 13.9416 6.95251 15.3223V16.6167C6.95251 17.9973 7.13252 19.378 7.13252 19.378C7.13252 19.378 7.30814 20.5537 7.84784 21.0715C8.53256 21.751 9.43199 21.7296 9.83259 21.8008C11.2726 21.9317 15.9525 21.9722 15.9525 21.9722C15.9525 21.9722 19.7348 21.9668 22.2536 21.7942C22.6055 21.7544 23.3727 21.751 24.0572 21.0715C24.5969 20.5537 24.7728 19.378 24.7728 19.378C24.7728 19.378 24.9525 17.9973 24.9525 16.6167V15.3223C24.9525 13.9416 24.7728 12.5609 24.7728 12.5609ZM14.0942 18.1852L14.0934 13.3914L18.9571 15.7967L14.0942 18.1852Z"
            }
        })])
    },
    NO = [],
    WO = void 0,
    VO = "data-v-5a5c80d2",
    UO = void 0,
    GO = !1;

function jO(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "youtube-logo.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var qO = jO({
        render: FO,
        staticRenderFns: NO
    }, WO, HO, VO, GO, UO, !1, void 0, void 0, void 0),
    j3 = qO;
I0();
var YO = "Paste a link",
    XO = "Youtube or Vimeo only",
    KO = {
        components: {
            ArrowIcon: U3,
            XMarkIcon: Ry,
            VimeoLogo: G3,
            YoutubeLogo: j3
        },
        model: {
            event: "change:url",
            prop: "url"
        },
        props: {
            url: String,
            highlightOnError: Boolean,
            disabled: Boolean,
            showSocial: !0,
            isVideoProcessed: !1,
            isInputHovered: !1
        },
        data: function() {
            return {
                isError: !1,
                isInputHoveredOrNot: this.isInputHovered
            }
        },
        computed: {
            searchUrl: {
                get: function() {
                    return this.url
                },
                set: function(e) {
                    this.$emit("change:url", e)
                }
            },
            showIcon: function() {
                return !!this.url
            },
            isRemove: function() {
                return this.isVideoProcessed || this.isError
            },
            isUpload: function() {
                return this.isURL(this.url) && !this.isVideoProcessed
            },
            highlightInput: function() {
                return this.highlightOnError && this.isError
            },
            placeholder: function() {
                return this.isInputHoveredOrNot ? XO : YO
            }
        },
        methods: {
            changePlaceholder: function(e) {
                this.isInputHoveredOrNot = e
            },
            handlePaste: function(e) {
                let o = (e.clipboardData || window.clipboardData).getData("text");
                this.processInputVideo(o)
            },
            onIconClick: function() {
                this.isRemove ? (this.$emit("change:url", null), this.$emit("remove")) : this.processInputVideo()
            },
            onEnter: function() {
                this.processInputVideo()
            },
            processInputVideo: function(e = this.url) {
                e && this.isURL(e) && this.getVideoFromUrl(e)
            },
            parseStartTime: function(e) {
                let o, t, r = 0;
                return o = T0("t", e), !o || (t = o.match(/(\d+)(m?)(\d*)(s?)/), pc.default.isEmpty(t) || !parseInt(t[1], 10)) ? null : (t[2].toLowerCase() === "m" ? r += parseInt(t[1], 10) * 60 : r += parseInt(t[1], 10), parseInt(t[3], 10) && (r += parseInt(t[3], 10)), r)
            },
            getVideoFromUrl: function(e) {
                let o = e,
                    t, r, i;
                if (r = Vs.isVimeo(o), t = Vs.isYoutube(o), !t && !r) {
                    this.$emit("wrongUrl"), this.isError = !0, this.highlightremovalTimeout = setTimeout(function() {
                        this.isError = !1
                    }.bind(this), 200);
                    return
                }
                i = this.parseStartTime(o), o = o.replace(/\/?#?$/, "");
                let n = {
                    url: o,
                    provider_name: Vs.getVideoProvider(o)
                };
                i && (n.start_time = i), t && (n.video_id = Vs.getYoutubeIdFromUrl(o)), Vs.getEmbedData(o, pc.default.bind(function(s) {
                    this.url = s.url ? s.url : this.url, Vs.getHighResVideoThumbnail({
                        provider: n.provider_name,
                        thumbnail_url: s.thumbnail_url,
                        video_url: this.url
                    }).then(pc.default.bind(function(l) {
                        s.thumbnail_url = l, this.$emit("loaded", pc.default.extend(s, n))
                    }, this))
                }, this), pc.default.bind(function(s) {
                    this.$emit("error", s)
                }, this)), this.$emit("dataObtained", n)
            },
            uploadVideoFromSearch: function(e) {
                this.getVideoFromUrl(e)
            },
            isURL: bd
        }
    },
    ZO = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "video-panel-search"
        }, [t("div", {
            staticClass: "video-panel-input-wrapper"
        }, [t("input", {
            directives: [{
                name: "model",
                rawName: "v-model",
                value: e.searchUrl,
                expression: "searchUrl"
            }],
            class: {
                "video-panel-input": !0, "has-icon": e.showIcon
            },
            attrs: {
                type: "text",
                spellcheck: "false",
                placeholder: e.placeholder,
                disabled: e.disabled
            },
            domProps: {
                value: e.searchUrl
            },
            on: {
                keyup: function(r) {
                    return !r.type.indexOf("key") && e._k(r.keyCode, "enter", 13, r.key, "Enter") ? null : e.onEnter(r)
                },
                paste: e.handlePaste,
                mouseenter: function(r) {
                    return e.changePlaceholder(!0)
                },
                mouseleave: function(r) {
                    return e.changePlaceholder(!1)
                },
                input: function(r) {
                    r.target.composing || (e.searchUrl = r.target.value)
                }
            }
        }), e._v(" "), e.showIcon ? t("div", {
            staticClass: "video-panel-icon input-icon",
            class: {
                "is-remove": e.isRemove, "is-upload": e.isUpload
            },
            on: {
                click: e.onIconClick
            }
        }, [e.isUpload ? t("arrow-icon") : e._e(), e._v(" "), e.isRemove ? t("x-mark-icon") : e._e()], 1) : e._e(), e._v(" "), t("transition", {
            attrs: {
                name: "fade"
            }
        }, [e.highlightInput ? t("div", {
            staticClass: "video-panel-error"
        }) : e._e()])], 1), e._v(" "), t("transition", {
            attrs: {
                name: "fade"
            }
        }, [e.showSocial ? t("div", {
            staticClass: "video-panel-social"
        }, [t("div", {
            staticClass: "video-panel-social-icon video-panel-social-youtube",
            attrs: {
                title: "Youtube"
            }
        }, [t("youtube-logo")], 1), e._v(" "), t("div", {
            staticClass: "video-panel-social-icon video-panel-social-vimeo",
            attrs: {
                title: "Vimeo"
            }
        }, [t("vimeo-logo")], 1)]) : e._e()])], 1)
    },
    JO = [],
    QO = void 0,
    e$ = void 0,
    t$ = void 0,
    o$ = !1;

function r$(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "video-search.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var i$ = r$({
        render: ZO,
        staticRenderFns: JO
    }, QO, KO, e$, o$, t$, !1, void 0, void 0, void 0),
    q3 = i$;
var n$ = {
        name: "EllipsisPlus",
        props: {
            text: String,
            line: {
                type: Number,
                default: 2
            },
            ellipsis: {
                type: String,
                default: "..."
            },
            showButton: {
                type: Boolean,
                default: !1
            },
            expandText: {
                type: String,
                default: ""
            },
            collapseText: {
                type: String,
                default: ""
            }
        },
        data() {
            return {
                tmpTxt: "",
                show: !1,
                marginLeft: 0,
                collapseMarginLeft: 0
            }
        },
        created() {},
        mounted() {
            if (!this.line) return;
            let e = this.$refs.txt.offsetWidth;
            this.$refs.txt.innerHTML = this.text;
            let o = this.$refs.container.offsetWidth,
                t = 0,
                r = 0,
                i = this.$refs.ellipsis.offsetWidth;
            if (this.showButton) {
                r = Math.ceil(parseFloat(getComputedStyle(this.$refs.more, null).width.replace("px", ""))), t = r, this.$refs.ellipsis.style.display = "none";
                let d = 0,
                    c = this.$refs.more.cloneNode();
                this.expandText !== this.collapseText && (this.$refs.more.style.display = "none", c.innerHTML = this.collapseText, c.style.display = "inline-block", this.$refs.container.appendChild(c), r = Math.ceil(parseFloat(getComputedStyle(c, null).width.replace("px", ""))), d = c.offsetLeft), c.offsetTop <= this.$refs.ellipsis.offsetTop + 5 ? this.marginLeft = o - r - d + i : this.marginLeft = o - r - d, c.remove(), this.$refs.more.style.display = "inline-block", this.$refs.ellipsis.style.display = "inline-block"
            }
            let n = getComputedStyle(this.$refs.container, null),
                s = parseFloat(n.lineHeight.replace("px", ""));
            if (this.$refs.txt.innerHTML = this.text, Math.floor(this.$refs.container.offsetHeight / s) <= this.line) {
                this.tmpTxt = this.text, this.show = !0, this.showButton = !1;
                return
            }
            let l = Math.floor((o * this.line - t - i) / e),
                p = 1;
            this.$refs.txt.innerHTML = this.text.substr(0, l), Math.round(this.$refs.container.offsetHeight / s) > this.line && (p = -1);
            for (let d = l; d < this.text.length; d = d + p) {
                if (d < 0 || d > this.text.length) return;
                if (this.$refs.txt.innerHTML = this.text.substr(0, d), p === 1 && Math.round(this.$refs.container.offsetHeight / s) > this.line) {
                    if (this.tmpTxt = this.text.substr(0, d - 1), this.$refs.txt.innerHTML = this.tmpTxt, this.showButton) {
                        let c = this.$refs.more.offsetLeft;
                        this.collapseMarginLeft = o - t - c - 1
                    }
                    break
                } else if (p === -1 && Math.round(this.$refs.container.offsetHeight / s) === this.line) {
                    if (this.tmpTxt = this.text.substr(0, d), this.$refs.txt.innerHTML = this.tmpTxt, this.showButton) {
                        let c = this.$refs.more.offsetLeft;
                        this.collapseMarginLeft = o - t - c - 1
                    }
                    break
                }
            }
        },
        methods: {
            handleClick() {
                this.show ? this.collapse() : this.expand()
            },
            expand() {
                this.show || (this.show = !0, this.$refs.txt.innerHTML = this.text)
            },
            collapse() {
                this.show && (this.show = !1, this.$refs.txt.innerHTML = this.tmpTxt)
            }
        }
    },
    s$ = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            ref: "container",
            staticClass: "ellipsis-plus"
        }, [t("span", {
            ref: "txt",
            staticClass: "ellipsis-plus-txt"
        }, [e._v("\u4E2D")]), e._v(" "), t("span", {
            ref: "ellipsis",
            staticClass: "ellipsis-plus-ellipsis",
            style: {
                display: e.show ? "none" : "inline-block"
            }
        }, [e._v(`
    ` + e._s(e.ellipsis) + `
  `)]), e._v(" "), e.showButton ? t("button", {
            ref: "more",
            staticClass: "ellipsis-plus-button",
            style: {
                "margin-left": e.show ? e.marginLeft + "px" : e.collapseMarginLeft + "px"
            },
            on: {
                click: e.handleClick
            }
        }, [e._v(`
    ` + e._s(e.show ? e.collapseText : e.expandText) + `
  `)]) : e._e()])
    },
    a$ = [],
    l$ = void 0,
    c$ = void 0,
    p$ = void 0,
    d$ = !1;

function u$(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "ellipsis-plus.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var m$ = u$({
        render: s$,
        staticRenderFns: a$
    }, l$, n$, c$, d$, p$, !1, void 0, void 0, void 0),
    Y3 = m$;
Iy();
var ed = M(Ht());
Lr();
var g$ = {
        model: {
            event: "change"
        },
        props: {
            value: {
                type: Number,
                default: 1
            },
            width: {
                type: Number,
                default: 120
            },
            handleWidth: {
                type: Number,
                default: 30
            },
            gradientColor: {
                type: String,
                default: "none"
            },
            gap: {
                type: Number,
                default: 0
            }
        },
        computed: {
            percent: function() {
                return Math.round(this.value * 100)
            },
            gradientLeft: function() {
                return Je.getRGBA(this.gradientColor, 1)
            },
            gradientRight: function() {
                return Je.getRGBA(this.gradientColor, 0)
            }
        },
        watch: {
            value: function(e) {
                e !== (0, ed.default)(this.$el).data("opacity") && (0, ed.default)(this.$el).data("rmopacitydragChange")({
                    opacity: e
                })
            }
        },
        mounted: function() {
            (0, ed.default)(this.$el).rmOpacityDrag({
                opacity: this.value,
                onchange: this.onOpacityChange,
                onenddrag: this.onOpacityEndDrag,
                width: this.width,
                handleWidth: this.handleWidth,
                gap: this.gap
            }).data("rmopacitydrag-change")
        },
        methods: {
            opacityMouseEnter: function() {
                this.$emit("opacity-active", !0)
            },
            opacityMouseLeave: function() {
                this.$emit("opacity-active", !1)
            },
            onOpacityEndDrag: function() {
                this.$emit("opacity-active", !1)
            },
            onOpacityChange: function(e) {
                (0, ed.default)(this.$refs.handle).hasClass("opacity-dragging") && this.$emit("opacity-active", !0), Math.abs(this.value - e) > .001 && this.$emit("change", e)
            }
        }
    },
    h$ = function() {
        var e = this,
            o = e.$createElement,
            t = e._self._c || o;
        return t("div", {
            staticClass: "rm-opacity-slider",
            style: {
                background: "linear-gradient(to right, " + e.gradientLeft + ", " + e.gradientRight + ")"
            },
            on: {
                mouseenter: e.opacityMouseEnter,
                mouseleave: e.opacityMouseLeave
            }
        }, [t("div", {
            ref: "handle",
            staticClass: "opacity-handle"
        }, [e._t("default")], 2)])
    },
    f$ = [],
    b$ = void 0,
    w$ = void 0,
    x$ = void 0,
    v$ = !1;

function y$(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "rm-opacity-drag.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var k$ = y$({
        render: h$,
        staticRenderFns: f$
    }, b$, g$, w$, v$, x$, !1, void 0, void 0, void 0),
    X3 = k$;
_I();

function _$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "32",
            height: "32",
            xmlns: "http://www.w3.org/2000/svg"
        }
    }, e.$listeners), [t("g", {
        attrs: {
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("rect", {
        attrs: {
            fill: "#262626",
            opacity: ".4",
            width: "32",
            height: "32",
            rx: "16"
        }
    }), t("path", {
        attrs: {
            d: "M16 13.058c.744 0 1.38.254 1.908.761.528.508.792 1.12.792 1.835 0 .715-.264 1.326-.792 1.834A2.654 2.654 0 0116 18.25c-.744 0-1.38-.254-1.908-.762s-.792-1.119-.792-1.834c0-.715.264-1.327.792-1.835A2.654 2.654 0 0116 13.058m6.6-3.75a2.36 2.36 0 011.697.676c.469.45.703.994.703 1.631v8.077c0 .637-.234 1.181-.703 1.632A2.36 2.36 0 0122.6 22H9.4a2.36 2.36 0 01-1.697-.676A2.181 2.181 0 017 19.692v-8.077c0-.637.234-1.18.703-1.631A2.36 2.36 0 019.4 9.308h2.1l.478-1.226c.119-.295.336-.549.652-.762.315-.213.639-.32.97-.32h4.8c.331 0 .655.107.97.32.316.213.533.467.652.762l.478 1.226h2.1M16 19.692c1.156 0 2.145-.395 2.967-1.185.822-.79 1.233-1.741 1.233-2.853s-.41-2.063-1.233-2.853c-.822-.79-1.81-1.186-2.967-1.186-1.156 0-2.145.396-2.967 1.186-.822.79-1.233 1.741-1.233 2.853s.41 2.063 1.233 2.853c.822.79 1.81 1.185 2.967 1.185",
            fill: "#FFF",
            "fill-rule": "nonzero"
        }
    })])])]
}
var K3 = {
    render: _$
};

function C$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "46",
            height: "13",
            xmlns: "http://www.w3.org/2000/svg"
        }
    }, e.$listeners), [t("g", {
        attrs: {
            fill: "#FFF",
            "fill-rule": "evenodd"
        }
    }, [t("path", {
        attrs: {
            d: "M10.27 6.134c-.045.995-.744 2.357-2.095 4.087-1.397 1.806-2.58 2.71-3.546 2.71-.599 0-1.106-.55-1.52-1.65l-.83-3.026c-.307-1.1-.636-1.65-.99-1.65-.076 0-.345.16-.806.48L0 6.467c.507-.443 1.007-.886 1.5-1.33.676-.582 1.184-.887 1.522-.918.8-.077 1.292.467 1.477 1.631.2 1.256.338 2.038.415 2.343.23 1.042.484 1.563.761 1.563.215 0 .538-.338.97-1.014.43-.676.66-1.19.691-1.544.062-.583-.17-.876-.692-.876-.246 0-.5.057-.76.168.505-1.646 1.47-2.445 2.894-2.4 1.056.031 1.553.713 1.493 2.045"
        }
    }), t("path", {
        attrs: {
            d: "M14.606 1.197c-.016.38-.208.746-.578 1.096a2.069 2.069 0 01-1.476.594c-.877 0-1.3-.38-1.27-1.142.016-.395.25-.776.704-1.142a2.355 2.355 0 011.512-.548c.323 0 .592.126.807.377.216.252.315.507.3.765zm2.007 8.16a7.74 7.74 0 01-1.777 2.201c-1.03.887-2.061 1.33-3.091 1.33-.478 0-.843-.153-1.097-.459-.253-.306-.373-.703-.357-1.192.015-.504.172-1.284.472-2.34.3-1.054.45-1.62.45-1.696 0-.398-.138-.597-.414-.597-.093 0-.354.161-.785.482l-.531-.62 1.477-1.33c.661-.582 1.153-.887 1.477-.918.507-.046.88.102 1.119.446.238.343.326.788.265 1.337a70.9 70.9 0 00-.646 3.543c-.016.656.223.983.715.983.215 0 .6-.226 1.154-.679a9.624 9.624 0 001.13-1.064l.439.573z"
        }
    }), t("path", {
        attrs: {
            d: "M31.022 9.357a7.739 7.739 0 01-1.777 2.201c-1.03.887-2.061 1.33-3.091 1.33-1.001 0-1.485-.55-1.454-1.651.015-.49.111-1.078.288-1.766.176-.688.273-1.223.288-1.605.016-.58-.162-.872-.532-.872-.402 0-.88.475-1.435 1.423-.587.994-.904 1.958-.95 2.891-.03.658.034 1.163.195 1.515-1.074.03-1.826-.146-2.255-.528-.384-.337-.56-.894-.529-1.675.015-.49.09-.98.227-1.469.135-.49.21-.925.226-1.308.031-.566-.177-.849-.624-.849-.385 0-.801.437-1.248 1.308a6.637 6.637 0 00-.739 2.731c-.03.857.025 1.453.166 1.79-1.056.03-1.806-.19-2.25-.664-.368-.396-.536-.999-.505-1.807.015-.397.085-.95.212-1.66.127-.709.197-1.261.212-1.658.03-.275-.039-.412-.207-.412-.093 0-.354.155-.785.464l-.554-.62c.077-.06.561-.504 1.454-1.33.646-.596 1.084-.902 1.315-.918.4-.03.723.134.969.493.246.36.37.777.37 1.251 0 .153-.016.298-.047.436.23-.352.5-.658.808-.918.707-.612 1.5-.956 2.376-1.033.754-.06 1.292.115 1.616.528.26.336.384.819.369 1.446.108-.092.223-.191.346-.299.354-.413.7-.741 1.038-.986.57-.413 1.162-.643 1.777-.689.738-.06 1.269.114 1.592.526.276.335.4.815.37 1.44-.016.427-.12 1.048-.312 1.863-.193.816-.289 1.284-.289 1.406-.015.32.016.54.092.663.077.122.261.182.554.182.215 0 .6-.226 1.154-.679a9.62 9.62 0 001.13-1.064l.439.573z"
        }
    }), t("path", {
        attrs: {
            d: "M34.436 6.938c.015-.41-.153-.617-.507-.617-.46 0-.929.316-1.405.948-.476.632-.722 1.236-.737 1.815-.009 0-.009.099 0 .297a5.195 5.195 0 001.958-1.256c.445-.487.676-.883.691-1.187zm5.238 2.396c-.446.733-1.323 1.466-2.63 2.2-1.63.931-3.285 1.397-4.96 1.397-1.247 0-2.14-.413-2.678-1.239-.384-.566-.569-1.238-.553-2.019.015-1.238.569-2.416 1.661-3.533 1.2-1.224 2.615-1.836 4.245-1.836 1.508 0 2.308.611 2.4 1.832.061.778-.37 1.579-1.292 2.403-.985.9-2.224 1.473-3.715 1.717.276.381.692.572 1.246.572 1.107 0 2.315-.28 3.623-.84.938-.394 1.676-.803 2.215-1.227l.438.573z"
        }
    }), t("path", {
        attrs: {
            d: "M43.33 7.709a2.875 2.875 0 00-.173-1.138c-.13-.345-.32-.518-.565-.518-.785 0-1.431.422-1.938 1.265a4.425 4.425 0 00-.693 2.207c-.015.383.054.72.208 1.012.169.337.407.505.716.505.691 0 1.284-.405 1.776-1.218.416-.675.638-1.38.67-2.115m2.607.086c-.062 1.406-.585 2.62-1.57 3.644-.984 1.023-2.207 1.535-3.668 1.535-1.215 0-2.138-.39-2.769-1.17-.46-.58-.715-1.305-.76-2.175-.078-1.314.398-2.521 1.43-3.62 1.107-1.223 2.499-1.833 4.176-1.833 1.076 0 1.891.359 2.445 1.076.523.658.761 1.505.716 2.543"
        }
    })])])]
}
var Z3 = {
    render: C$
};

function S$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "40",
            height: "17",
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
        }
    }, e.$listeners), [t("defs", [t("path", {
        attrs: {
            id: "a",
            d: "M.032 16.196h23.325V.071H.032v16.125z"
        }
    })]), t("g", {
        attrs: {
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("path", {
        attrs: {
            d: "M14.607 13.126h-1.484v-.848c-.563.637-1.04.958-1.56.958-.456 0-.773-.212-.931-.596-.097-.233-.165-.598-.165-1.133v-6.17h1.484v6.324c.035.216.128.296.317.296.284 0 .54-.244.855-.682V5.337h1.484v7.79zM7.89 10.813c.077.77-.165 1.154-.626 1.154-.46 0-.703-.383-.624-1.154V7.728c-.079-.772.164-1.133.624-1.133.461 0 .704.361.626 1.133v3.085zm1.483-2.931c0-.833-.169-1.458-.468-1.851-.396-.533-1.016-.751-1.64-.751-.708 0-1.246.218-1.64.75-.305.394-.468 1.026-.468 1.859l-.002 2.77c0 .827.145 1.399.45 1.789.394.53 1.035.812 1.66.812.624 0 1.276-.281 1.671-.812.3-.39.437-.962.437-1.79V7.882zM3.515 8.884v4.242H1.953V8.884S.333 3.684 0 2.714h1.64l1.097 4.063 1.09-4.063h1.64l-1.952 6.17zM29.872 6.576c-.233 0-.5.121-.736.351l-.002 4.678c.237.233.505.352.738.352.408 0 .592-.296.592-1.067V7.573c0-.77-.184-.997-.592-.997M35.697 7.503c0-.713-.186-.927-.655-.927-.472 0-.673.196-.673.917v.853l1.328-.001v-.842z",
            fill: "#FFF"
        }
    }), t("g", {
        attrs: {
            transform: "translate(15.779 .006)"
        }
    }, [t("mask", {
        attrs: {
            id: "b",
            fill: "#fff"
        }
    }, [t("use", {
        attrs: {
            "xlink:href": "#a"
        }
    })]), t("path", {
        attrs: {
            d: "M19.276 11.95c.349 0 .551-.186.632-.56.013-.076.01-.409.01-.969h1.485v.219c0 .45-.038.768-.05.908-.048.31-.16.59-.331.836-.391.56-.972.836-1.71.836-.74 0-1.303-.263-1.712-.79-.3-.385-.493-.959-.493-1.778V7.953c0-.824.175-1.46.475-1.85.41-.528.972-.807 1.694-.807.71 0 1.273.28 1.67.807.295.39.46.992.46 1.816v1.577H18.59v1.385c-.005.711.2 1.07.685 1.07zm-3.107-1.143c0 .712-.061 1.215-.156 1.542-.189.573-.6.87-1.163.87-.503 0-1.018-.298-1.49-.875l-.003.776h-1.406V2.786h1.406l-.001 3.369c.456-.555.974-.87 1.494-.87.563 0 .941.32 1.13.898.095.31.19.809.19 1.539v3.085zm-5.39 2.313H9.296v-.848c-.562.637-1.04.958-1.56.958-.455 0-.772-.212-.93-.596-.097-.233-.165-.598-.165-1.133V5.408h1.484v6.247c.034.217.127.296.316.296.284 0 .541-.244.855-.682V5.408h1.485v7.712zm-5.624 0H3.593V4.251h-1.64V2.787l4.92-.001V4.25H5.156v8.87zm17.97-9.57s-.228-1.58-.928-2.276C21.31.361 20.316.356 19.86.304 16.596.07 11.7.07 11.7.07h-.01s-4.896 0-8.16.232c-.456.053-1.45.058-2.337.971C.493 1.97.266 3.55.266 3.55S.032 5.405.032 7.26V9c0 1.855.234 3.71.234 3.71s.227 1.58.927 2.276c.887.913 2.052.884 2.571.98 1.867.176 7.93.23 7.93.23s4.902-.007 8.166-.239c.456-.053 1.45-.058 2.337-.971.7-.696.927-2.276.927-2.276s.233-1.855.233-3.71V7.26c0-1.855-.233-3.71-.233-3.71z",
            fill: "#FFF",
            mask: "url(#b)"
        }
    })])])])]
}
var J3 = {
    render: S$
};

function P$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "24",
            height: "24",
            xmlns: "http://www.w3.org/2000/svg"
        }
    }, e.$listeners), [t("circle", {
        attrs: {
            cx: "12",
            cy: "12",
            r: "12",
            "fill-rule": "evenodd"
        }
    })])]
}
var Q3 = {
    render: P$
};

function T$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "24",
            height: "23",
            xmlns: "http://www.w3.org/2000/svg"
        }
    }, e.$listeners), [t("path", {
        attrs: {
            d: "M21.443 22.962l.024.039H2a2 2 0 01-1.7-3.053L8.377 6.894a2 2 0 013.414.022l5.16 8.577.344-.567a2 2 0 013.42 0l3.03 4.999a2 2 0 01-1.71 3.037h-.593zM20.01 8a4 4 0 110-8 4 4 0 010 8z",
            fill: "#FFF",
            "fill-rule": "evenodd"
        }
    })])]
}
var e5 = {
    render: T$
};

function I$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "24",
            height: "23",
            xmlns: "http://www.w3.org/2000/svg"
        }
    }, e.$listeners), [t("g", {
        attrs: {
            fill: "#FFF",
            "fill-rule": "evenodd"
        }
    }, [t("path", {
        attrs: {
            d: "M21.443 18.962l.024.039H2a2 2 0 01-1.7-3.053L8.377 2.894a2 2 0 013.414.022l5.16 8.577.344-.567a2 2 0 013.42 0l3.03 4.999a2 2 0 01-1.71 3.037h-.593zM20.01 8a4 4 0 110-8 4 4 0 010 8z"
        }
    }), t("rect", {
        attrs: {
            y: "22",
            width: "24",
            height: "1",
            rx: ".5"
        }
    }), t("rect", {
        attrs: {
            y: "20",
            width: "24",
            height: "1",
            rx: ".5"
        }
    })])])]
}
var t5 = {
    render: I$
};

function M$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "20",
            height: "24",
            xmlns: "http://www.w3.org/2000/svg"
        }
    }, e.$listeners), [t("path", {
        attrs: {
            d: "M18.973 13.994l-16.284 9.77c-.918.55-2.034.104-2.493-.997A2.601 2.601 0 010 21.77V2.23C0 .998.832 0 1.858 0c.288 0 .573.08.831.235l16.284 9.77c.917.551 1.29 1.89.83 2.992-.18.431-.47.781-.83.997z",
            fill: "#FFF",
            "fill-rule": "evenodd"
        }
    })])]
}
var o5 = {
    render: M$
};
Dn();
kt();
var B$ = {
        components: {
            BackgroundSlideshow: F3,
            BackgroundVideo: V3,
            VideoSearch: q3,
            EllipsisPlus: Y3,
            RmSwitcher: gu,
            RmOpacityDrag: X3,
            ColorPicker: My,
            UnsplashImg: K3,
            VimeoImg: Z3,
            YoutubeImg: J3,
            ColorImg: Q3,
            PictureImg: e5,
            SlideshowImg: t5,
            VideoImg: o5,
            HelpTourTooltip: $i
        },
        props: ["workspace", "dark"],
        data: function() {
            let e = Yi.default.findWhere(this.workspace.blocks, {
                    name: "Background"
                }),
                o = e.model.attributes.slideshow ? Yi.default.extend({
                    video: {}
                }, nt(e.model.attributes)) : Yi.default.extend({
                    video: {}
                }, nt(e.model.attributes), {
                    slideshow: nt(e.defaultSlideshow)
                });
            return {
                widget: e.model,
                block: e,
                attrs: o,
                state: "upload",
                videoState: e.model.get("video") && e.model.get("video").video_id ? "video" : "select",
                loading: !1,
                dragging: !1,
                videoLoading: !1,
                picSearchText: "",
                videoSearchText: e.model.get("video") && e.model.get("video").url,
                picOpacityActive: !1,
                videoOpacityActive: !1,
                error: null,
                picture: null,
                videoImg: {
                    youtube: "YoutubeImg",
                    vimeo: "VimeoImg"
                },
                tabImg: {
                    color: "ColorImg",
                    picture: "PictureImg",
                    slideshow: "SlideshowImg",
                    video: "VideoImg"
                },
                colorPickerHeight: 240,
                helpTourStep: "ClickOnPaletteIcon"
            }
        },
        computed: {
            selectedType: function() {
                return this.attrs.selectedType ? this.attrs.selectedType : "color"
            },
            canSelectBackgroundFromSwatches: function() {
                return Qe.isPermissionAllowed("BaseWidgetCanSelectColorFromSwatches")
            },
            canSelectBackgroundFromPalette: function() {
                return Qe.isPermissionAllowed("BaseWidgetCanSelectColorFromPalette")
            }
        },
        watch: {
            "attrs.picture": function() {
                this.onPictureChange()
            },
            "attrs.video": function() {
                this.onVideoChange()
            }
        },
        created: function() {
            this.$watch("attrs", function(e) {
                this.widget.set(nt(e))
            }, {
                deep: !0
            }), this.widget.on("change", function(e, o) {
                this.attrs = Yi.default.extend({}, this.attrs, e.changed), (!o || !o.undo && !o.redo) && this.save._debounced()
            }, this)
        },
        mounted: function() {
            import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-R4BAKHY4.js").then(({
                default: e
            }) => {
                e("controls-video_settings")
            }), Yi.default.isNumber(this.widget.get("opacity")) || this.widget.set("opacity", 1, {
                silent: !0
            }), this.save._debounced = Yi.default.debounce(this.save, 300), this.loadPreviewImage.__once = Yi.default.once(this.loadPreviewImage), this.workspace.on("main-dragover", this.highlightDropZone, this), this.uploader = new Nn(this, {
                fileTypes: "jpeg|jpg|png|gif",
                fileTypesErrorMessage: "We support only JPG, GIF and PNG picture formats.",
                dropZone: (0, td.default)([this.$refs.backgroundSlideshowPanel, this.$refs.backgroundPicturePanel])
            }), this.uploader.on("start", this.onStartUpload), this.uploader.on("done", this.onDoneUpload), this.uploader.on("fail", this.onFailUpload), this.uploader.on("uploadFromUrl", this.uploadFromUrl), this.block.panel = this, this.widget.get("picture") && this.setPreviewImage(() => {
                this.showPictureState()
            }), Oe("OpenBackgroundLayer"), Me.trigger("panel:showed", "background-panel")
        },
        destroyed: function() {
            this.workspace.off("main-dragover", this.highlightDropZone), this.widget.off("change", null, this), this.uploader.off()
        },
        methods: {
            selectTab: function(e) {
                this.widget.set("selectedType", e)
            },
            updateColor: function(e) {
                this.widget.set("color", e)
            },
            onStartUpload: function(e) {
                this.loading = !0, this.uploader.viewport = this.widget.getViewport();
                let o = e.target && e.target.files.length && e.target.files[0];
                o && mu(o).then(t => {
                    this.loading && t.ext && Xc.allowedLambdaExt(t.ext) && this.block.setTempPicture(t)
                }).catch(() => {})
            },
            onDoneUpload: function(e, o) {
                if (this.dragging = !1, !o || !o.result) {
                    console.error("error file upload!");
                    return
                }
                this.uploader.viewport !== this.widget.getViewport() && (this.loading = !1), this.block.changePicture(o.result, {
                    viewport: this.uploader.viewport
                })
            },
            onFailUpload: function() {
                this.block.removePicture(), this.showUploadState()
            },
            onChangeSlideshowPictures: function(e) {
                this.attrs.slideshow.pictures = e
            },
            onChangeSlideshowDelay: function(e) {
                this.attrs.slideshow.delay = e
            },
            onChangeSlideshowCrossfade: function(e) {
                this.attrs.slideshow.crossfade = e
            },
            showUploadState: function() {
                this.state = "upload", delete this.uploader.viewport
            },
            showPictureState: function() {
                this.loading = !1, this.block.off("imagesReady", this.showPreview), this.state = "picture"
            },
            showSelectFile: function(e) {
                (0, td.default)(e.target).hasClass("uploadInput") || this.loading || (0, td.default)(this.$refs.uploadInput).trigger("click", "stop")
            },
            loadPreviewImage: function(e) {
                this.block.loadPreviewUrl({
                    w: ae.backgroundPreviewWidth,
                    h: ae.backgroundPreviewHeight
                }, {
                    viewport: this.uploader.viewport,
                    success: () => {
                        delete this.uploader.viewport, this.widget.get("picture") && this.widget.get("picture").previewUrl ? this.setPreviewImage(e) : console.error("No preview for background")
                    }
                })
            },
            setPreviewImage: function(e) {
                this.loading = !0;
                let o, t = this.widget.get("picture"),
                    r = (0, td.default)("<img>").addClass("preload_image").appendTo("body");
                if (Xc.useLambdaUrl(t)) o = this.getPreviewUrl();
                else {
                    if (o = t && t.previewUrl, !o) return this.loadPreviewImage(e);
                    r.on("error", Yi.default.bind(function() {
                        r.off().remove(), this.loadPreviewImage.__once(e), this.loading = !1
                    }, this))
                }
                r.attr("src", o).on("load", Yi.default.bind(function() {
                    r.off().remove(), this.block.trigger("loadimage", "preview"), e && e()
                }, this))
            },
            getPreviewUrl: function() {
                let e = this.widget.get("picture");
                if (!e) return "";
                if (Xc.useLambdaUrl(e)) {
                    let o = {
                        width: ae.backgroundPreviewWidth,
                        height: ae.backgroundPreviewHeight
                    };
                    return Xc.getLambdaUrl(e, o)
                }
                return e.previewUrl
            },
            showPicOpacity: function(e) {
                this.picOpacityActive = e
            },
            showVideoOpacity: function(e) {
                this.videoOpacityActive = e
            },
            uploadFromSearch: function() {
                this.picSearchText && (this.isURL(this.picSearchText) ? this.uploadFromUrl(this.picSearchText) : RM.views.searchUnsplash && RM.views.searchUnsplash.show(this.picSearchText, {
                    upload: this.uploadImageFromSearch,
                    preview: this.previewImageFromSearch,
                    initialSize: "large"
                }))
            },
            uploadFromUrl: function(e) {
                this.uploader.viewport = this.widget.getViewport(), this.uploadXHR = this.block.loadFromUrl(e, {
                    save: !1,
                    success: () => {
                        this.picSearchText = "", delete this.uploadXHR
                    },
                    error: () => {
                        this.loading = !1, this.block.picUrl = "", this.block.renewPic(), delete this.uploadXHR
                    }
                }), this.loading = !0
            },
            uploadImageFromSearch: function(e) {
                this.block.cancelPictureLoading(), this.loading = !0, this.uploadFromUrl(e)
            },
            previewImageFromSearch: function(e, o) {
                this.block.previewPic(e, o)
            },
            searchUnsplash: function() {
                RM.views.searchUnsplash && RM.views.searchUnsplash.show("", {
                    upload: this.uploadImageFromSearch,
                    preview: this.previewImageFromSearch
                })
            },
            onPictureChange: function() {
                let e = this.widget.get("picture"),
                    o = this.widget.previous("picture") || {};
                e ? o.url != e.url && (this.block.trigger("unloadimage", "preview"), this.block.on("imagesReady", this.showPictureState, this), this.setPreviewImage()) : this.showUploadState(), delete this.uploader.viewport
            },
            deletePicture: function() {
                this.widget.get("picture") && this.widget.get("picture").url ? !this.uploader.uploading && !this.uploadXHR && this.block.removePicture() : this.showUpload(), this.loading = !1, this.uploadXHR && this.uploadXHR.abort(), this.uploader.abort(), this.block.off("imagesReady", this.showPreview)
            },
            onVideoChange: function() {
                this.widget.get("selectedType") == "video" && (this.widget.previous("video") && this.widget.previous("video").url !== this.widget.get("video") ? .url && this.block.video.render(), this.widget.get("video") && this.widget.get("video").url ? (this.videoSearchText = this.attrs.video.url, this.videoState = "video", this.block.video.show()) : (this.videoState = "select", this.block.video.hide()))
            },
            save: function() {
                this.widget.save()
            },
            isURL: bd
        }
    },
    R$ = function() {
        var e, o = this,
            t = o.$createElement,
            r = o._self._c || t;
        return r("transition", {
            attrs: {
                name: "wb-panel"
            }
        }, [r("div", {
            staticClass: "background-panel"
        }, [r("div", {
            staticClass: "background-panel-bg"
        }, [r("div", {
            staticClass: "views"
        }, [r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.selectedType === "color",
                expression: "selectedType === 'color'"
            }],
            staticStyle: {
                position: "absolute",
                width: "100%",
                top: "16px"
            }
        }, [r("help-tour-tooltip", {
            attrs: {
                step: o.helpTourStep,
                position: "right",
                indent: 8
            }
        })], 1), o._v(" "), r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.selectedType === "color",
                expression: "selectedType === 'color'"
            }],
            staticClass: "view color"
        }, [r("color-picker", {
            ref: "colorpicker",
            attrs: {
                color: o.attrs.color,
                "colorbox-type": "vertical",
                "colorbox-width": 224,
                "swatches-min": 14,
                "swatches-per-line": 7,
                "favourites-max": 8,
                "favourites-per-line": 4,
                "favourite-gap": 11,
                "show-alpha": !1,
                "always-visible": !0,
                "colorbox-height": o.colorPickerHeight,
                "colorbox-border-radius": 0,
                "swatches-only-mode": o.canSelectBackgroundFromSwatches && !o.canSelectBackgroundFromPalette
            },
            on: {
                "update:color": o.updateColor
            }
        })], 1), o._v(" "), r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.selectedType === "picture",
                expression: "selectedType === 'picture'"
            }],
            ref: "backgroundPicturePanel",
            staticClass: "view picture",
            class: {
                loaded: o.picture
            }
        }, [r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.state === "upload",
                expression: "state === 'upload'"
            }],
            staticClass: "upload",
            class: {
                dragging: o.dragging
            },
            attrs: {
                "drag-over": "handleDragOver"
            },
            on: {
                dragenter: function(i) {
                    o.dragging = !0
                },
                dragend: function(i) {
                    o.dragging = !1
                },
                dragleave: function(i) {
                    o.dragging = !1
                },
                click: o.showSelectFile
            }
        }, [r("div", {
            staticClass: "param-caption"
        }, [o._v("Picture")]), o._v(" "), r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: !o.loading,
                expression: "!loading"
            }],
            staticClass: "upload-wrapper"
        }, [r("div", {
            staticClass: "caption-drop"
        }, [o._v("Drop file here")])]), o._v(" "), r("input", {
            ref: "uploadInput",
            staticClass: "uploadInput",
            attrs: {
                type: "file",
                name: "upload",
                "data-url": "/api/upload/lambda/"
            }
        })]), o._v(" "), r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.loading,
                expression: "loading"
            }],
            staticClass: "picture_preloader rmpreloader"
        }, [r("div", {
            staticClass: "shadow"
        }), o._v(" "), r("div", {
            staticClass: "arc"
        })]), o._v(" "), r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.state === "upload" && !o.loading,
                expression: "state === 'upload' && !loading"
            }],
            staticClass: "social"
        }, [r("span", {
            on: {
                click: o.searchUnsplash
            }
        }, [r("unsplash-img", {
            staticClass: "svg unsplash",
            attrs: {
                title: "Unsplash"
            }
        })], 1), o._v(" "), r("div", {
            staticClass: "search"
        }, [r("input", {
            directives: [{
                name: "model",
                rawName: "v-model.trim",
                value: o.picSearchText,
                expression: "picSearchText",
                modifiers: {
                    trim: !0
                }
            }],
            class: {
                "has-icon": o.picSearchText != ""
            },
            attrs: {
                type: "text",
                spellcheck: "false",
                placeholder: "Search or paste URL",
                value: ""
            },
            domProps: {
                value: o.picSearchText
            },
            on: {
                keyup: function(i) {
                    return !i.type.indexOf("key") && o._k(i.keyCode, "enter", 13, i.key, "Enter") ? null : o.uploadFromSearch(i)
                },
                input: function(i) {
                    i.target.composing || (o.picSearchText = i.target.value.trim())
                },
                blur: function(i) {
                    return o.$forceUpdate()
                }
            }
        }), o._v(" "), r("div", {
            staticClass: "input-icon",
            class: {
                hidden: o.picSearchText === "", "upload-icon": o.isURL(o.picSearchText)
            },
            on: {
                click: o.uploadFromSearch
            }
        })])]), o._v(" "), r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.state === "picture",
                expression: "state === 'picture'"
            }],
            staticClass: "preview"
        }, [r("div", {
            staticClass: "image",
            style: {
                backgroundImage: "url(" + o.getPreviewUrl() + ")"
            }
        }), o._v(" "), r("div", {
            staticClass: "mask"
        }), o._v(" "), r("div", {
            staticClass: "delete",
            attrs: {
                title: "Replace"
            },
            on: {
                click: o.deletePicture
            }
        }), o._v(" "), r("rm-opacity-drag", {
            ref: "opacity",
            staticClass: "opacity",
            attrs: {
                width: 205,
                "handle-width": 24,
                gap: 4,
                "gradient-color": o.attrs.color
            },
            on: {
                "opacity-active": o.showPicOpacity
            },
            model: {
                value: o.attrs.opacity,
                callback: function(i) {
                    o.$set(o.attrs, "opacity", i)
                },
                expression: "attrs.opacity"
            }
        }, [r("span", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.picOpacityActive,
                expression: "picOpacityActive"
            }],
            staticClass: "opacity-percents"
        }, [o._v(o._s(Math.ceil(o.attrs.opacity * 100)))])])], 1)]), o._v(" "), r("background-slideshow", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.selectedType === "slideshow",
                expression: "selectedType === 'slideshow'"
            }],
            ref: "backgroundSlideshowPanel",
            attrs: {
                "slideshow-data": o.attrs.slideshow,
                "selected-type": o.selectedType,
                block: o.block
            },
            on: {
                updatePictures: o.onChangeSlideshowPictures,
                updateDelay: o.onChangeSlideshowDelay,
                updateCrossfade: o.onChangeSlideshowCrossfade
            }
        }), o._v(" "), r("background-video", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.selectedType === "video",
                expression: "selectedType === 'video'"
            }],
            attrs: {
                "widget-model": o.widget
            }
        })], 1), o._v(" "), r("div", {
            class: (e = {}, e.tabs = !0, e.dark = o.dark, e)
        }, o._l(["color", "picture", "slideshow", "video"], function(i) {
            var n;
            return r("div", {
                key: i,
                staticClass: "tab",
                class: (n = {
                    active: o.selectedType === i
                }, n[i] = !0, n),
                style: {
                    fill: i === "color" ? "#" + o.attrs.color : ""
                },
                on: {
                    click: function(s) {
                        return o.selectTab(i)
                    }
                }
            }, [r(o.tabImg[i], {
                tag: "component",
                staticClass: "svg",
                staticStyle: {
                    "pointer-events": "none"
                }
            })], 1)
        }), 0)])])])
    },
    z$ = [],
    E$ = void 0,
    A$ = "data-v-dcaca926",
    D$ = void 0,
    L$ = !1;

function O$(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "background-panel.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var $$ = O$({
        render: R$,
        staticRenderFns: z$
    }, E$, B$, A$, L$, D$, !1, void 0, void 0, void 0),
    Ng = $$;
Ut();
Pc();
W();
te();
Tt();
var r5 = N(f, {
    excludeProps: ["borderStyling"]
})
`
  width: 100%;
  height: 2px;
  background-color: ${e=>Be(e.borderStyling==="primary"?.8:.76,e.theme.colors.gray)};
`;
var i5 = M(F()),
    dc = (0, i5.createContext)({});
y();

function s5() {
    let {
        workspace: e
    } = (0, vs.useContext)(je), {
        nameOfOpenedPanel: o,
        setNameOfOpenedPanel: t
    } = (0, vs.useContext)(dc), r = (0, vs.useRef)(null), i = (0, vs.useRef)(null), [n] = Jr(l => [l.backgroundLayer]), s = () => {
        t("background")
    };
    return (0, vs.useEffect)(() => {
        o === "background" && (r.current && Xr(r.current), i.current && (r.current && Xr(r.current), r.current = ga(Ng, i.current, {
            workspace: e,
            dark: !0
        })))
    }, [o]), w(Y, {
        children: [o === "layers" && w(f, {
            padding: "0 16px 12px 16px",
            children: [a(r5, {}), w(f, {
                cursor: "pointer",
                height: fo.height,
                padding: "2px 0",
                display: "flex",
                alignItems: "center",
                onClick: s,
                children: [a(Cg, {
                    iconStyles: n ? .iconStyles,
                    isBackgroundVideo: n ? .selectedBackgroundType === "video"
                }), a(f, {
                    paddingLeft: "8px",
                    children: a(A, {
                        cursor: "pointer",
                        textStyle: "small",
                        userSelect: "none",
                        children: n ? .name
                    })
                })]
            })]
        }), a(f, {
            ref: i,
            position: "relative",
            css: ne `
          & .background-panel {
            position: relative !important;
            padding: 0 !important;
            width: 224px !important;
            height: 292px !important;
            left: 0 !important;
            bottom: 0 !important;
          }
        `
        })]
    })
}
var od = M(F());
Ut();
Ye();
y();

function a5() {
    let {
        workspace: e
    } = (0, od.useContext)(je), {
        dropdownContainer: o
    } = (0, od.useContext)(dp), [t, r] = Jr(p => [p.filter, p.setFilter]), [i, n] = (0, od.useState)(() => l(t));

    function s(p) {
        p === "links" && re(fe.SettingsLayers, {
            settingsType: "show only with links"
        }), p === "viewport" && re(fe.SettingsLayers, {
            settingsType: "show current viewport"
        }), r(p), n(l(p)), ng(p)
    }

    function l(p) {
        let d;
        switch (e ? .getViewports().find(m => m.isCurrent === !0) ? .name) {
            case "default":
                d = "Show desktop widgets only";
                break;
            case "phone_portrait":
                d = "Show mobile widgets only";
                break;
            case "tablet_portrait":
                d = "Show tablet widgets only";
                break
        }
        return [{
            title: "Show all",
            onClick: () => s("all"),
            active: p === "all"
        }, {
            title: d,
            onClick: () => s("viewport"),
            active: p === "viewport"
        }, {
            title: "Show layers with links",
            onClick: () => s("links"),
            active: p === "links"
        }]
    }
    return a(Y, {
        children: e && a(Xb, {
            workspace: e,
            container: () => o,
            actions: i,
            isActive: t !== "all"
        })
    })
}
y();
var H$ = N(f)
`
  width: 224px;
  background-color: ${e=>Be(.04,e.theme.colors.black)};
  color: ${e=>Be(.04,e.theme.colors.white)};
  backdrop-filter: blur(4px);
  border-radius: 8px;
  max-height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
`;

function Lw() {
    let {
        nameOfOpenedPanel: e
    } = (0, Ao.useContext)(dc), {
        page: o,
        workspace: t,
        blocks: r,
        mag: i,
        viewport: n
    } = (0, Ao.useContext)(je), s = (0, Ao.useRef)(new Sg).current, {
        callback: l
    } = Fn(() => {
        if (!o) return;
        let P = window.RM.constructorRouter.indexController.getOrder(o, n);
        d(P)
    }, 100), p = P => {
        if (P.model.get("type") === "background") s.refreshBackgroundState(P);
        else {
            let C = s.layers.refreshLayerState;
            P.model.get("type") === "shape" ? hd(() => C(P, s.getFilter())) : C(P, s.getFilter())
        }
    }, d = P => {
        let C = i ? .get("packs") || [],
            k = t ? .packs,
            T = t ? .blocks || [],
            R = t ? .page.getViewportParam("phone_portrait", "enabled");
        s.updateLayers({
            order: P,
            blocks: T,
            packsData: C,
            packs: k,
            isPhoneVpEnabled: R
        })
    }, c = (0, Ao.useCallback)((P, C, k) => {
        let T = s.isCtrlPressed(),
            R = s.isShiftPressed();
        if (k.has(P) && R || k.has(P) && k.size === 1) return;
        let I = s.getWidgetPack(P),
            B = I && I.blocks.length > 0 ? I.blocks[0] : s.getBlock(P),
            L = Array.from(C.values()),
            D = Array.from(k.values()),
            E = Ms(L, D),
            $ = Ms(D, L),
            G = [],
            de = [],
            Q = [];
        for (let U of C) {
            let Z = s.getBlock(U);
            Z && (E.includes(U) && G.push(Z), de.push(Z))
        }
        for (let U of $) {
            let Z = s.getBlock(U);
            Z && Q.push(Z)
        }
        if (R) t && t.selectListBlocks(de, []);
        else {
            t && t.trigger("block:click", B, {
                shiftKey: !1,
                ctrlKey: T
            });
            for (let U of G) U.select(!0);
            for (let U of Q) U.deselect();
            if (t && t.trigger("select", de, Q, !0), !$.includes(P)) {
                let U = s.isDragActive(),
                    Z = B ? .model.get("hidden");
                !U && !Z && B && B ? .scrollTo()
            }
        }
    }, [t]), m = (0, Ao.useCallback)((P, C, k) => {
        if (!o) return;
        let T = s.mergeOrderChanges(C);
        window.RM.constructorRouter.indexController.setOrderForPage(P, o, n, k);
        let R = window.RM.constructorRouter.indexController.getPagesToSave();
        t && (T.length > 0 && t.save_group(T), t.syncManager.saveGroup(R, {
            patch: !0,
            silent: !0,
            skipHistory: T.length > 0
        }))
    }, [t]), u = P => {
        let C = new Set(P.map(R => R.id)),
            k = s.layers.getAllItems(),
            T = Fg(C, k);
        s.layers.selectAndOpenGroupIfNeeded(T)
    }, g = (0, Ao.useCallback)(() => {}, []), h = (P, C) => {
        let k = s.getBlock(P),
            T = s.getWidgetPack(P),
            R = [];
        if (k) R.push({
            _id: k.model.get("_id"),
            ...C
        });
        else if (T) {
            let I = T.blocks;
            for (let B of I) B.model && R.push({
                _id: B.model.get("_id"),
                ...C
            })
        }
        return R
    }, b = (0, Ao.useCallback)((P, C) => {
        let k = h(P, {
            hidden: C
        });
        t && t.save_group(k)
    }, [t]), x = (0, Ao.useCallback)((P, C) => {
        let k = h(P, {
            is_locked: C
        });
        t && t.save_group(k)
    }, [t]), S = (0, Ao.useCallback)((P, C) => {
        let k = s.getWidgetPack(P),
            T = k ? k ? .model : s.getBlock(P) ? .model;
        if (T && T.save({
                name: C
            }), k) {
            let R = i ? .attributes ? .packs,
                I = R.find(B => B.pack_id === P);
            I ? I.name = C : R.push(T.toJSON())
        }
    }, []), v = (0, Ao.useCallback)((P, C) => {
        let k = s.getBlock(P);
        t && t.trigger("viewportShortcutPressed", C), k && k.scrollTo()
    }, [t]);
    return (0, Ao.useEffect)(() => {
        if (o) {
            s.resetState();
            let k = window.RM.constructorRouter.indexController.getOrder(o, n);
            d(k)
        }
        let P = k => {
                k.key === Ia.Key.Shift ? s.setShiftIsPressed(!0) : (k.key === Ia.Key.Control || k.key === Ia.Key.Meta) && s.setCtrlIsPressed(!0)
            },
            C = k => {
                k.key === Ia.Key.Shift ? s.setShiftIsPressed(!1) : (k.key === Ia.Key.Control || k.key === Ia.Key.Meta) && s.setCtrlIsPressed(!1)
            };
        return Me.on("index:changed", l), window.addEventListener("keydown", P), window.addEventListener("keyup", C), () => {
            Me.off("index:changed", l), window.removeEventListener("keydown", P), window.removeEventListener("keyup", C)
        }
    }, [t]), (0, Ao.useEffect)(() => {
        for (let P of r) P ? .model ? .on("change change:picture", () => p(P));
        return () => {
            for (let P of r) P ? .model ? .off("change change:picture", () => p(P))
        }
    }, [r]), (0, Ao.useEffect)(() => (t && t.on("select", u), () => {
        t && t.off("select", u)
    }), [t]), a(H$, {
        children: w(vP, {
            value: s,
            children: [e === "layers" && w(f, {
                display: "flex",
                overflow: "hidden",
                flexDirection: "column",
                children: [w(f, {
                    height: "48px",
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "space-between",
                    flexShrink: "0",
                    padding: "0 16px",
                    children: [a("h2", {
                        style: {
                            fontWeight: 500,
                            userSelect: "none"
                        },
                        children: "Layers"
                    }), a(a5, {})]
                }), a(f, {
                    flexGrow: "1",
                    overflow: "auto",
                    children: a(rP, {
                        value: s.layers,
                        children: a($3, {
                            onLayersSelect: c,
                            onChangeOrder: m,
                            onLayerHover: g,
                            onLayerHide: b,
                            onLayerLock: x,
                            onLayerRename: S,
                            onLayerSwitchToViewport: v
                        })
                    })
                })]
            }), a(f, {
                flexShrink: "0",
                children: a(s5, {})
            })]
        })
    })
}
te();
Tt();
Ut();
No();
kt();
rr();
y();

function l5({
    children: e,
    button: o,
    ...t
}) {
    let {
        togglePanel: r,
        openPanel: i
    } = (0, Qr.useContext)(_t), n = (0, Qr.useRef)(null), s = (0, Qr.useRef)(null), {
        user: l
    } = (0, Qr.useContext)(pr), [p, d] = (0, Qr.useState)(!1), {
        selectedBlocks: c,
        workspace: m,
        page: u,
        viewport: g
    } = (0, Qr.useContext)(je), [h, b] = (0, Qr.useState)("layers"), [x] = uo(), S = Zt();
    Wi("q", {
        handler: () => r("stackpanel", !1)
    }, [x]), (0, Qr.useEffect)(() => {
        if (!Ve("constructor.activateNewStackPanel"))
            if (p && s.current) {
                n.current && Xr(n.current);
                let C = {
                    showPanel: k => {
                        b(k), k === "background" && s.current && (n.current && Xr(n.current), n.current = ga(Ng, s.current, {
                            workspace: m,
                            dark: !0
                        }))
                    }
                };
                n.current = ga(m4, s.current, {
                    workspace: m,
                    showGuidePanel: !1,
                    dark: !0
                }, C), S.step ? .name === "ClickOnPaletteIcon" && Hr("ClickOnPaletteIcon", {
                    show: !1
                })
            } else p || (b("layers"), n.current && Xr(n.current), n.current = null, S.step ? .name === "ClickOnPaletteIcon" && Hr("ClickOnPaletteIcon", {
                show: !0
            }))
    }, [p, m, l, u, g]);
    let v = C => {
            let k = h !== "layers";
            k && Ve("constructor.activateNewStackPanel") && b("layers"), k && !C && i("stackpanel"), d(C)
        },
        P = C => C && c.length === 0 || h !== "layers";
    return a(Yt, {
        id: "toolbar-popover",
        name: "stackpanel",
        skidding: -28,
        button: o,
        onToggle: v,
        panelPosition: {
            width: 0,
            marginLeft: "-112px"
        },
        watchingClick: P,
        ArrowProps: {
            backgroundColor: ({
                theme: C
            }) => Ve("constructor.activateNewStackPanel") ? Be(.04, C ? .colors.black || "black") : "rgba(40, 40, 40, 0.96)",
            popperPadding: 132,
            stroke: ({
                theme: C
            }) => Ve("constructor.activateNewStackPanel") ? "transparent" : h !== "background" ? Be(.96, C ? .colors.gray || "gray") : "transparent"
        },
        ...t,
        children: Ve("constructor.activateNewStackPanel") ? a(dc.Provider, {
            value: {
                nameOfOpenedPanel: h,
                setNameOfOpenedPanel: b
            },
            children: a(Lw, {})
        }) : w(f, {
            height: "100%",
            display: "flex",
            flexDirection: "column",
            justifyContent: "flex-end",
            ref: s,
            css: C => ne `
            & .stack_panel {
              max-height: 100% !important;
              width: 224px !important;
            }
            & .line.last {
              background: ${Be(.8,C.colors.gray)};
              opacity: 1;
            }
            & .background-panel {
              position: relative !important;
              padding: 0 !important;
              width: 224px !important;
              height: 292px !important;
              left: 0 !important;
              bottom: 0 !important;
            }
            & .stack_panel .inner {
              padding: 0;
              margin-bottom: 0;
              box-shadow: 0 0 0 2px inset ${Be(.96,C.colors.gray)};
            }
            & .stack_panel .layer.selected {
              background: ${Be(.2,C.colors.darkGray)};
            }
          `,
            children: [a(f, {
                position: "relative",
                top: 88,
                left: 224,
                children: a(mt, {
                    targetSteps: ["MobileMenuVisible", "ClickOnTriangleToOpenGroup", "BeforeAddAnimations"],
                    position: "right",
                    indent: 8,
                    children: a("div", {})
                })
            }), a(f, {
                position: "relative",
                top: 148,
                left: 224,
                children: a(mt, {
                    targetSteps: ["DeleteVisibleMobileMenu"],
                    position: "right",
                    indent: 8,
                    children: a("div", {})
                })
            })]
        })
    })
}
$n();
te();
W();
y();
var F$ = N(f)
`
  position: relative;

  &::before {
    content: '';
    z-index: -1;
    width: 100%;
    height: 100%;
    position: absolute;
    backdrop-filter: ${e=>`blur(${e.blur})`};
  }
`;

function Wg({
    children: e,
    blur: o = "4px",
    ...t
}) {
    return a(F$, {
        blur: o,
        ...t,
        children: e
    })
}
be();
W();
var c5 = M(ir());
Di();
Ye();
var Vg = M(F());
y();

function N$() {
    let e = (0, Vg.useRef)(null);
    return (0, Vg.useEffect)(() => {
        let o = () => {
            e.current && new window.YT.Player(e.current, {
                events: {
                    onStateChange: t => {
                        t.data === 1 && re(fe.EditorTips2, {
                            tip: "mobile layout",
                            action: "play video"
                        })
                    }
                }
            })
        };
        window.youTubeApiIsReady ? o() : window.ytQueue.push({
            cb: o
        })
    }, []), a("iframe", {
        ref: e,
        width: "360",
        height: "224",
        src: "https://www.youtube.com/embed/JgoEncb3iDM?si=8jiXXcNZZ_yeqbd4&modestbranding=1&enablejsapi=1",
        title: "YouTube video player",
        allow: "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",
        referrerPolicy: "strict-origin-when-cross-origin",
        allowFullScreen: !0
    })
}

function W$({
    children: e
}) {
    return a(f, {
        borderRadius: "4px",
        position: "absolute",
        zIndex: "100000",
        right: "16px",
        top: "16px",
        backgroundColor: "blue",
        width: "392px",
        padding: "8px 16px 16px 16px",
        children: e
    })
}

function p5({
    isOpen: e,
    onClose: o
}) {
    return e ? (0, c5.createPortal)(w(W$, {
        children: [w(f, {
            display: "flex",
            width: "100%",
            justifyContent: "flex-end",
            marginBottom: "8px",
            alignItems: "center",
            gap: "8px",
            children: [a(Pv, {
                onClick: () => {
                    re(fe.EditorTips2, {
                        tip: "mobile layout",
                        action: "open youtube"
                    }), window.open("https://www.youtube.com/watch?v=JgoEncb3iDM", "_blank")
                },
                color: "white",
                cursor: "pointer"
            }), a(f, {
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                width: 24,
                height: 24,
                children: a(Lt, {
                    onClick: o,
                    color: "white",
                    cursor: "pointer"
                })
            })]
        }), a(N$, {}), a(we, {
            color: "white",
            fontWeight: "500",
            fontSize: "12px",
            lineHeight: "14px",
            paddingTop: "12px",
            children: "In this video, you\u2019ll learn how to optimize your Readymag designs for mobile, discover inheritance principles, and\xA0master composition tools."
        })]
    }), document.getElementById("mobile-layout-video")) : null
}
vr();
ai();
y();
var u5 = () => {
    let e = (0, d5.useContext)(je),
        [o] = uo(),
        [{
            visible: t,
            message: r
        }] = Xa(),
        i = () => {
            window.RM.constructorRouter.trigger("notice:triggerEduTipClose"), re(fe.EditorTips2, {
                tip: "mobile layout",
                action: "close"
            })
        };
    return e.page ? w(f, {
        id: "widgetbar",
        display: "flex",
        height: 56,
        position: "absolute",
        bottom: 16,
        left: 16,
        borderRadius: "9px 8px 8px 9px",
        zIndex: 3e3,
        children: [a(p5, {
            onClose: i,
            isOpen: t && r === "eduTipMobileLayoutVideo"
        }), a(PC, {}), a(Wg, {
            display: "flex",
            width: 224,
            height: 56,
            borderRadius: "8px",
            margin: "0 0 0 8px",
            backgroundColor: Ie("darkGray", .96),
            children: w(il, {
                children: [a(SS, {
                    width: "56px",
                    button: ({
                        isPanelShown: n
                    }) => a(IC, {
                        disableTooltip: n
                    })
                }), a(Wb, {
                    width: "56px",
                    button: ({
                        isPanelShown: n
                    }) => a(zC, {
                        currentViewport: e.viewport,
                        disableTooltip: n
                    })
                }), a(Os, {
                    disabled: o,
                    children: a(l5, {
                        width: "56px",
                        button: ({
                            isPanelShown: n
                        }) => a(iC, {
                            disableTooltip: n
                        })
                    })
                }), a(sn, {
                    permission: "BaseWidgetCanAdd",
                    children: a(Os, {
                        disabled: o,
                        children: a(GS, {
                            width: "56px",
                            height: "56px",
                            button: ({
                                isPanelShown: n
                            }) => a(sC, {
                                disableTooltip: n
                            })
                        })
                    })
                })]
            })
        })]
    }) : null
};
var Ww = M(F());
te();
W();
Ro();
$n();
Jt();
Ut();
var m5 = M(F());
He();
Ro();
Dn();
$h();
y();
var Sn = (0, m5.createContext)({
        isEditorModeEnabled: !1,
        canChangeLockedLayoutMode: !1
    }),
    {
        Provider: V$
    } = Sn;

function g5({
    children: e
}) {
    let o = Qe.getCurrentRole(),
        t = !!(o && o === "editor"),
        r = window.RM.constructorRouter.canChangeLockedLayoutMode();
    return a(V$, {
        value: {
            isEditorModeEnabled: t,
            canChangeLockedLayoutMode: r
        },
        children: e
    })
}

function h5({
    isActive: e,
    ...o
}) {
    let t = e ? "Layout locked" : "Layout unlocked";
    return a(Bt, {
        placement: "right",
        indent: 8,
        leaveDelay: 100,
        text: `${t} (L)`,
        instance: !0,
        children: a(Ge, {
            color: "white",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            variant: "unstyled",
            width: 56,
            height: 56,
            onClick: () => {
                let r = e ? "editor" : "member";
                window.RM.constructorRouter.changeEditorMode(r, !0)
            },
            "aria-label": t,
            ...o,
            children: a(Fs, {
                isActive: e
            })
        })
    })
}
He();
No();
Hn();
y();
var f5 = ({
    id: e = "guideIcon",
    width: o,
    height: t,
    hoverBox: r
}) => {
    let i = Fo(o, t, r);
    return w("svg", {
        id: e,
        viewBox: "0 0 24 26",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        width: o,
        height: t,
        style: {
            padding: i
        },
        children: [w("line", {
            x1: "3",
            y1: "1",
            x2: "3",
            y2: "25",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round",
            children: [a("animate", {
                attributeName: "x1",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x1",
                to: "3",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "1",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "3",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        }), w("line", {
            x1: "12",
            y1: "1",
            x2: "12",
            y2: "25",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round",
            children: [a("animate", {
                attributeName: "x1",
                to: "10",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x1",
                to: "12",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "10",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "12",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        }), w("line", {
            x1: "12",
            y1: "1",
            x2: "12",
            y2: "25",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round",
            children: [a("animate", {
                attributeName: "x1",
                to: "14",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x1",
                to: "12",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "14",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "12",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        }), w("line", {
            x1: "21",
            y1: "1",
            x2: "21",
            y2: "25",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round",
            children: [a("animate", {
                attributeName: "x1",
                to: "23",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x1",
                to: "21",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "23",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animate", {
                attributeName: "x2",
                to: "21",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        })]
    })
};
kt();
ai();
y();

function b5({
    disableTooltip: e,
    width: o = "100%",
    ...t
}) {
    return a(mt, {
        targetSteps: "SelectGrids",
        indent: 8,
        defaultText: "Grid and Layout",
        eduTips: "eduTipUseGrids",
        disabled: e,
        leaveDelay: 100,
        instance: !0,
        closeOnTargetClick: !0,
        children: a(Ge, {
            color: "white",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            variant: "unstyled",
            width: o,
            height: "100%",
            "aria-label": "Grid and Layout",
            "data-testid": "guides-button",
            ...t,
            children: a(f5, {
                width: "24px",
                height: "26px",
                hoverBox: {
                    width: 56,
                    height: 56
                }
            })
        })
    })
}
var Pn = M(F());
W();
var uc = M(lt());
Iy();
Wd();
kt();
Bo();
Ye();

function U$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "16",
            height: "20",
            fill: "currentColor",
            xmlns: "http://www.w3.org/2000/svg"
        }
    }, e.$listeners), [t("path", {
        attrs: {
            fill: "currentColor",
            d: "M0 0h1v20H0zM6 0h1v20H6zM9 0h1v20H9zM15 0h1v20h-1z"
        }
    })])]
}
var w5 = {
    render: U$
};

function G$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "16",
            height: "20",
            xmlns: "http://www.w3.org/2000/svg"
        }
    }, e.$listeners), [t("path", {
        attrs: {
            fill: "currentColor",
            opacity: "0.4",
            d: "M0 0h1v20H0z"
        }
    }), t("path", {
        attrs: {
            fill: "currentColor",
            d: "M6 0h1v20H6zM9 0h1v20H9z"
        }
    }), t("path", {
        attrs: {
            fill: "currentColor",
            opacity: "0.4",
            d: "M15 0h1v20h-1z"
        }
    })])]
}
var x5 = {
    render: G$
};

function j$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "16px",
            height: "40px",
            viewBox: "0 0 16 40",
            version: "1.1",
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
        }
    }, e.$listeners), [t("title", [e._v("Shape")]), t("g", {
        attrs: {
            id: "Page-1",
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("g", {
        attrs: {
            id: "Grid-and-Guides-(Guides)",
            transform: "translate(-16.000000, -169.000000)",
            fill: "currentColor"
        }
    }, [t("path", {
        attrs: {
            d: "M17,169 L16,169 L16,209 L17,209 L17,169 Z M22,169 L21,169 L21,209 L22,209 L22,169 Z M26,169 L27,169 L27,209 L26,209 L26,169 Z M32,169 L31,169 L31,209 L32,209 L32,169 Z",
            id: "Shape"
        }
    })])])])]
}
var v5 = {
    render: j$
};

function q$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "16px",
            height: "10px",
            viewBox: "0 0 16 10",
            version: "1.1",
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
        }
    }, e.$listeners), [t("title", [e._v("Shape")]), t("g", {
        attrs: {
            id: "Page-1",
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("g", {
        attrs: {
            id: "Grid-and-Guides-(Guides)",
            transform: "translate(-17.000000, -230.000000)",
            fill: "currentColor"
        }
    }, [t("path", {
        attrs: {
            d: "M33,230 L17,230 L17,231 L33,231 L33,230 Z M33,233 L17,233 L17,234 L33,234 L33,233 Z M17,236 L33,236 L33,237 L17,237 L17,236 Z M33,239 L17,239 L17,240 L33,240 L33,239 Z",
            id: "Shape"
        }
    })])])])]
}
var y5 = {
    render: q$
};

function Y$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "16px",
            height: "10px",
            viewBox: "0 0 16 10",
            version: "1.1",
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
        }
    }, e.$listeners), [t("title", [e._v("Group 2")]), t("g", {
        attrs: {
            id: "Page-1",
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("g", {
        attrs: {
            id: "Grid-and-Guides-(Guides)",
            transform: "translate(-49.000000, -230.000000)",
            fill: "currentColor",
            "fill-rule": "nonzero"
        }
    }, [t("g", {
        attrs: {
            id: "Group-2",
            transform: "translate(49.000000, 230.000000)"
        }
    }, [t("rect", {
        attrs: {
            id: "Rectangle",
            x: "0",
            y: "0",
            width: "16",
            height: "1"
        }
    }), t("rect", {
        attrs: {
            id: "Rectangle",
            opacity: "0.4",
            x: "0",
            y: "3",
            width: "16",
            height: "1"
        }
    }), t("rect", {
        attrs: {
            id: "Rectangle",
            opacity: "0.4",
            x: "0",
            y: "6",
            width: "16",
            height: "1"
        }
    }), t("rect", {
        attrs: {
            id: "Rectangle",
            x: "0",
            y: "9",
            width: "16",
            height: "1"
        }
    })])])])])]
}
var k5 = {
    render: Y$
};

function X$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "16px",
            height: "10px",
            viewBox: "0 0 16 10",
            version: "1.1",
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
        }
    }, e.$listeners), [t("title", [e._v("Group 3")]), t("g", {
        attrs: {
            id: "Page-1",
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("g", {
        attrs: {
            id: "Grid-and-Guides-(Guides)",
            transform: "translate(-97.000000, -230.000000)"
        }
    }, [t("g", {
        attrs: {
            id: "Group-3",
            transform: "translate(97.000000, 230.000000)"
        }
    }, [t("rect", {
        attrs: {
            id: "Rectangle",
            stroke: "currentColor",
            opacity: "0.4",
            x: "0.5",
            y: "0.5",
            width: "15",
            height: "9"
        }
    }), t("rect", {
        attrs: {
            id: "Rectangle",
            fill: "currentColor",
            "fill-rule": "nonzero",
            x: "0",
            y: "0",
            width: "1",
            height: "10"
        }
    })])])])])]
}
var _5 = {
    render: X$
};

function K$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "16px",
            height: "10px",
            viewBox: "0 0 16 10",
            version: "1.1",
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
        }
    }, e.$listeners), [t("title", [e._v("Group 4")]), t("g", {
        attrs: {
            id: "Page-1",
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("g", {
        attrs: {
            id: "Grid-and-Guides-(Guides)",
            transform: "translate(-129.000000, -230.000000)"
        }
    }, [t("g", {
        attrs: {
            id: "Group-4",
            transform: "translate(129.000000, 230.000000)"
        }
    }, [t("rect", {
        attrs: {
            id: "Rectangle",
            stroke: "currentColor",
            opacity: "0.4",
            x: "0.5",
            y: "0.5",
            width: "15",
            height: "9"
        }
    }), t("rect", {
        attrs: {
            id: "Rectangle",
            fill: "currentColor",
            "fill-rule": "nonzero",
            x: "0",
            y: "0",
            width: "16",
            height: "1"
        }
    })])])])])]
}
var C5 = {
    render: K$
};

function Z$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "16px",
            height: "10px",
            viewBox: "0 0 16 10",
            version: "1.1",
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
        }
    }, e.$listeners), [t("title", [e._v("Group 6")]), t("g", {
        attrs: {
            id: "Page-1",
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("g", {
        attrs: {
            id: "Grid-and-Guides-(Guides)",
            transform: "translate(-193.000000, -230.000000)"
        }
    }, [t("g", {
        attrs: {
            id: "Group-6",
            transform: "translate(193.500000, 230.000000)"
        }
    }, [t("rect", {
        attrs: {
            id: "Rectangle",
            stroke: "currentColor",
            opacity: "0.4",
            x: "0",
            y: "0.5",
            width: "15",
            height: "9"
        }
    }), t("rect", {
        attrs: {
            id: "Rectangle",
            fill: "currentColor",
            "fill-rule": "nonzero",
            x: "14.5",
            y: "0",
            width: "1",
            height: "10"
        }
    })])])])])]
}
var S5 = {
    render: Z$
};

function J$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "16px",
            height: "10px",
            viewBox: "0 0 16 10",
            version: "1.1",
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
        }
    }, e.$listeners), [t("title", [e._v("Group 5")]), t("g", {
        attrs: {
            id: "Page-1",
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("g", {
        attrs: {
            id: "Grid-and-Guides-(Guides)",
            transform: "translate(-161.000000, -230.000000)",
            stroke: "#282828"
        }
    }, [t("g", {
        attrs: {
            id: "Group-5",
            transform: "translate(161.250000, 230.500000)"
        }
    }, [t("rect", {
        attrs: {
            id: "Rectangle",
            stroke: "currentColor",
            opacity: "0.4",
            x: "0.25",
            y: "0",
            width: "15",
            height: "9"
        }
    }), t("rect", {
        attrs: {
            id: "Rectangle",
            fill: "currentColor",
            "stroke-width": "0.5",
            x: "0",
            y: "8.75",
            width: "15.5",
            height: "1"
        }
    })])])])])]
}
var P5 = {
    render: J$
};

function Q$() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "17px",
            height: "17px",
            viewBox: "0 0 17 17",
            version: "1.1",
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
        }
    }, e.$listeners), [t("title", [e._v("Group")]), t("g", {
        attrs: {
            id: "Page-1",
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("g", {
        attrs: {
            id: "Artboard",
            transform: "translate(-33.000000, -58.000000)"
        }
    }, [t("g", {
        attrs: {
            id: "[-Grid-Guides-Snap-Sizes-]",
            transform: "translate(34.000000, 9.914060)"
        }
    }, [t("g", {
        attrs: {
            id: "Group",
            transform: "translate(0.000000, 49.000000)"
        }
    }, [t("rect", {
        attrs: {
            id: "Rectangle",
            stroke: "currentColor",
            x: "0",
            y: "0",
            width: "15",
            height: "15"
        }
    }), t("path", {
        attrs: {
            d: "M4.5,0.5 L3.5,0.5 L3.5,3.5 L0.5,3.5 L0.5,4.5 L3.5,4.5 L3.5,10.5 L0.5,10.5 L0.5,11.5 L3.5,11.5 L3.5,14.5 L4.5,14.5 L4.5,11.5 L10.5,11.5 L10.5,14.5 L11.5,14.5 L11.5,11.5 L14.5,11.5 L14.5,10.5 L11.5,10.5 L11.5,4.5 L14.5,4.5 L14.5,3.5 L11.5,3.5 L11.5,0.5 L10.5,0.5 L10.5,3.5 L4.5,3.5 L4.5,0.5 Z M10.5,10.5 L10.5,4.5 L4.5,4.5 L4.5,10.5 L10.5,10.5 Z",
            id: "Shape",
            "fill-opacity": "0.4",
            fill: "currentColor",
            opacity: "0.4"
        }
    })])])])])])]
}
var T5 = {
    render: Q$
};

function eH() {
    var e = this,
        o = e.$createElement,
        t = e._self._c || o;
    return [t("svg", e._g({
        attrs: {
            width: "17px",
            height: "17px",
            viewBox: "0 0 17 17",
            version: "1.1",
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
        }
    }, e.$listeners), [t("title", [e._v("Group 2")]), t("g", {
        attrs: {
            id: "Page-1",
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd"
        }
    }, [t("g", {
        attrs: {
            id: "Artboard",
            transform: "translate(-33.000000, -9.000000)"
        }
    }, [t("g", {
        attrs: {
            id: "Group-2",
            transform: "translate(34.000000, 9.914060)"
        }
    }, [t("rect", {
        attrs: {
            id: "Rectangle",
            "stroke-opacity": "0.4",
            stroke: "currentColor",
            opacity: "0.4",
            x: "0",
            y: "0",
            width: "15",
            height: "15"
        }
    }), t("path", {
        attrs: {
            d: "M4.5,0.5 L3.5,0.5 L3.5,3.5 L0.5,3.5 L0.5,4.5 L3.5,4.5 L3.5,10.5 L0.5,10.5 L0.5,11.5 L3.5,11.5 L3.5,14.5 L4.5,14.5 L4.5,11.5 L10.5,11.5 L10.5,14.5 L11.5,14.5 L11.5,11.5 L14.5,11.5 L14.5,10.5 L11.5,10.5 L11.5,4.5 L14.5,4.5 L14.5,3.5 L11.5,3.5 L11.5,0.5 L10.5,0.5 L10.5,3.5 L4.5,3.5 L4.5,0.5 Z M10.5,10.5 L10.5,4.5 L4.5,4.5 L4.5,10.5 L10.5,10.5 Z",
            id: "Shape",
            fill: "currentColor"
        }
    })])])])])]
}
var I5 = {
    render: eH
};
E0();
kt();
ja();
var tH = {
        components: {
            RmSwitcher: gu,
            NumericInput: Ln,
            ColumnIcon: w5,
            GutterIcon: x5,
            GuideCount: v5,
            BaselineCount: y5,
            BaselineSize: k5,
            MarginLeft: _5,
            MarginRight: S5,
            MarginBottom: P5,
            MarginTop: C5,
            HelpTourTooltip: $i,
            GridOuter: T5,
            GridInner: I5
        },
        props: {
            workspace: {
                type: Object,
                default: null
            }
        },
        data: function() {
            let e = RM.constructorRouter.workspace.viewport,
                o = e === "default" || e === "phone_portrait",
                t = this.workspace.mag.get("opts");
            return {
                noHoverButtons: !1,
                loadedData: !1,
                selectedTab: "guides",
                index: 1,
                baseline_height: 0,
                baseline_group: 0,
                gg: null,
                grids: null,
                guides: null,
                guidesData: {
                    columns: 0,
                    padding: 0,
                    columnWidth: 0,
                    baseline_height: 0,
                    baseline_group: 0,
                    margin: {
                        top: 0,
                        left: 0,
                        right: 0,
                        bottom: 0
                    },
                    grid_step: 8,
                    grid_count: 8
                },
                editParamsData: {
                    grid: !1,
                    snap: !1,
                    guides: !1,
                    sizes: !1
                },
                initialEditParamsDataForHelpTour: {
                    grid: !1,
                    snap: !1,
                    guides: !0,
                    sizes: !1
                },
                initialEditParamsDataForHelpTourIsSet: !1,
                viewportWidth: void 0,
                scaleEnabled: !1,
                viewport: e,
                customViewportWidthEnabled: o,
                scaleRatio: this.getScaleRatio(e),
                helpTourStep: "ChangeGrids",
                helpTourStepSnap: "ClickOnSnapButton",
                helpTourStepSizes: "ClickOnSizesButton",
                opts: { ...t
                }
            }
        },
        computed: {
            baseline_group_h: function() {
                return this.baseline_group * this.baseline_height || 0
            },
            grid_count_h: function() {
                return this.guidesData.grid_count * this.guidesData.grid_step || 0
            },
            preciseColumnWidth() {
                return this.getPreciseColumnWidthByViewportWidth(this.viewportWidth)
            },
            isColumnWidthFloating() {
                return Math.round(this.preciseColumnWidth) !== this.preciseColumnWidth
            },
            minWidth() {
                return Tr.prototype.getViewportSetting("width", this.viewport)
            },
            maxWidth() {
                return Tr.prototype.getViewportSetting("max_width", this.viewport)
            },
            minColumnWidth() {
                return Math.max(Math.ceil(this.getPreciseColumnWidthByViewportWidth(this.minWidth)), 0)
            },
            maxColumnWidth() {
                return Math.floor(this.getPreciseColumnWidthByViewportWidth(this.maxWidth))
            },
            isScaleLayout() {
                return this.opts.scalableviewer
            },
            isDesktopLayout() {
                return this.viewport === "default"
            }
        },
        watch: {
            editParamsData: {
                handler: function() {
                    this.gg.mag.edit_params.set(this.editParamsData), this.saveParams()
                },
                deep: !0
            },
            guidesData: {
                handler: function() {
                    this.gg.guides.model.set({ ...this.guidesData,
                        margin: { ...this.guidesData.margin
                        }
                    }), this.saveParams()
                },
                deep: !0
            },
            selectedTab: {
                handler: function() {
                    this.gg.guides.model.set({ ...this.guidesData,
                        selectedTab: this.selectedTab
                    }), this.saveParams()
                }
            },
            index: function() {
                if (this.index === 3 && Oe("ChangeGrids"), this.loadedData) {
                    let e;
                    try {
                        e = JSON.parse(window.sessionStorage.getItem("RM-lastUsedGuidesSet") || "{}"), e[RM.constructorRouter.workspace.page.get("mid")] = this.index
                    } catch {
                        e = {}, e[RM.constructorRouter.workspace.page.get("mid")] = this.index
                    }
                    window.sessionStorage.setItem("RM-lastUsedGuidesSet", JSON.stringify(e)), this.gg.guides.models.setPage(RM.constructorRouter.workspace.page, this.index), this.editParamsData.guides = !0
                }
            },
            baseline_height: function(e, o) {
                e < 8 && (this.baseline_height = o > e ? 0 : 8), this.guidesData.baseline_height = this.baseline_height
            },
            baseline_group: function(e, o) {
                e < 2 && (this.baseline_group = o > e ? 0 : 2), this.guidesData.baseline_group = this.baseline_group
            },
            viewportWidth(e, o) {
                let t = this.workspace.viewport;
                if (o === void 0 || e === o || !this.customViewportWidthEnabled) return;
                let r = Math.max(this.minWidth, Math.min(this.maxWidth, e));
                if (e !== r) this.viewportWidth = r;
                else {
                    let i = {
                        default: "desktopWidth",
                        phone_portrait: "phoneWidth",
                        tablet_portrait: "tabletWidth"
                    }[t];
                    this.gg.mag.set({
                        [i]: e
                    }), this.saveViewportWidth(e);
                    let n = RM.constructorRouter.zoom.getZoom(),
                        s = RM.constructorRouter.workspace.$container[0],
                        l = (o * n - window.innerWidth) / 2,
                        p = (e * n - window.innerWidth) / 2;
                    s.scrollLeft = (s.scrollLeft || 0) + Math.max(p, 0) - Math.max(l, 0)
                }
            }
        },
        mounted: function() {
            this.gg = RM.constructorRouter.gg, this.gg.mag.edit_params.on("change", this.updateStateFromModel), this.gg.mag.on("change:phoneWidth change:desktopWidth", this.updateStateFromModel), this.gg.created ? this.loadGuides() : this.gg.on("create", this.loadGuides.bind(this)), this.workspace.mag.on("change:opts", this.handleChangeOpts), this.workspace.page.on("change:viewport", this.onChangeViewport), window.addEventListener("resize", this.onWindowResize)
        },
        destroyed() {
            Px("ChangeGrids"), this.workspace.mag.off("change:opts", this.handleChangeOpts), this.workspace.page.off("change:viewport", this.onChangeViewport), this.gg.mag.edit_params.off("change", this.updateStateFromModel), this.gg.mag.off("change:phoneWidth change:desktopWidth", this.updateStateFromModel), window.removeEventListener("resize", this.onWindowResize), Oe("ChangeGrids")
        },
        methods: {
            setOpts(e, o) {
                let t = { ...this.workspace.mag.get("opts"),
                    [e]: o
                };
                this.workspace.mag.set("opts", t), this.opts = t, this.saveOpts(t)
            },
            saveOpts: uc.default.debounce(function(e) {
                sx(RM.constructorRouter.mag.get("num_id"), e)
            }, 500),
            handleSetGridsClick() {
                this.index === 3 && Oe("ChangeGrids")
            },
            getPreciseColumnWidthByViewportWidth(e) {
                return (e - (this.guidesData.margin.left || 0) - (this.guidesData.margin.right || 0) - this.guidesData.padding * (this.guidesData.columns - 1)) / this.guidesData.columns
            },
            getViewportWidthByColumnWidth(e) {
                return e * this.guidesData.columns + this.guidesData.padding * (this.guidesData.columns - 1) + this.guidesData.margin.left + this.guidesData.margin.right
            },
            getViewportWidthByGutter(e, o) {
                return o * this.guidesData.columns + e * (this.guidesData.columns - 1) + this.guidesData.margin.left + this.guidesData.margin.right
            },
            handleChangeOpts: function(e, o) {
                this.opts = { ...o
                }
            },
            loadGuides: function() {
                this.guides = this.gg.guides, this.guides.created || this.gg.guides.create(!1), this.guides.model && (this.updateStateFromModel(), this.$nextTick(() => {
                    this.loadedData = !0
                })), this.guides.on("modelLoaded", e => {
                    this.updateStateFromModel(e), this.$nextTick(() => {
                        this.loadedData = !0
                    })
                })
            },
            updateBaselineGroup: function(e) {
                e > this.baseline_group_h ? this.baseline_group++ : e < this.baseline_group_h && this.baseline_group--
            },
            updateGridCount: function(e) {
                e > this.grid_count_h ? this.guidesData.grid_count++ : e < this.grid_count_h && this.guidesData.grid_count--, this.guidesData.grid_count = Math.max(this.guidesData.grid_count, 2)
            },
            updateStateFromModel: function() {
                let e = this.guides.model,
                    o = Zt(),
                    t = o.started,
                    r = t && o.step.name === "ChangeGrids";
                !this.initialEditParamsDataForHelpTourIsSet && t && r ? (this.initialEditParamsDataForHelpTourIsSet = !0, this.editParamsData.snap = this.initialEditParamsDataForHelpTour.snap, this.editParamsData.grid = this.initialEditParamsDataForHelpTour.grid, this.editParamsData.guides = this.initialEditParamsDataForHelpTour.guides, this.editParamsData.sizes = this.initialEditParamsDataForHelpTour.size) : (this.editParamsData.snap = this.gg.mag.edit_params.get("snap"), this.editParamsData.grid = this.gg.mag.edit_params.get("grid"), this.editParamsData.guides = this.gg.mag.edit_params.get("guides"), this.editParamsData.sizes = this.gg.mag.edit_params.get("sizes")), this.viewportWidth = this.gg.mag.getViewportWidth(this.workspace.viewport), this.editParamsData.grid && this.editParamsData.guides && (this.editParamsData.grid = !1), this.index = e.get("index"), this.selectedTab = e.get("selectedTab"), this.guidesData.columns = e.get("columns"), this.guidesData.padding = e.get("padding"), this.baseline_height = e.get("baseline_height"), this.baseline_group = e.get("baseline_group") || 0, this.guidesData.baseline_height = this.baseline_height, this.guidesData.baseline_group = this.baseline_group, this.guidesData.grid_step = e.get("grid_step") || 8, this.guidesData.grid_count = e.get("grid_count") || 8, this.guidesData.margin.top = e.get("margin").top, this.guidesData.margin.left = e.get("margin").left, this.guidesData.margin.right = e.get("margin").right, this.guidesData.margin.bottom = e.get("margin").bottom
            },
            onViewportWidthChange(e) {
                this.viewportWidth !== e && (this.guidesData.columnWidth = 0, this.viewportWidth = e)
            },
            onGutterChange(e) {
                this.guidesData.padding !== e && (this.guidesData.columnWidth = 0, this.guidesData.padding = e)
            },
            onColumnWidthChange(e) {
                this.guidesData.columnWidth = e, this.viewportWidth = this.getViewportWidthByColumnWidth(e)
            },
            onColumnCountChange(e) {
                this.guidesData.columns !== e && (this.guidesData.columnWidth = 0, this.guidesData.columns = e)
            },
            onLeftMarginChange(e) {
                this.guidesData.margin.left !== e && (this.guidesData.columnWidth = 0, this.guidesData.margin.left = e)
            },
            onRightMarginChange(e) {
                this.guidesData.margin.right !== e && (this.guidesData.columnWidth = 0, this.guidesData.margin.right = e)
            },
            saveParams: uc.default.debounce(function() {
                uc.default.isEmpty(this.gg.mag.edit_params.changed) || this.gg.mag.edit_params.save(), uc.default.isEmpty(this.gg.guides.model.changed) || this.gg.guides.model.save()
            }, 200),
            saveViewportWidth: uc.default.debounce(function(e) {
                let o = this.workspace.viewport,
                    t = {
                        default: "desktopWidth",
                        phone_portrait: "phoneWidth",
                        tablet_portrait: "tabletWidth"
                    }[o];
                this.gg.mag.save({
                    [t]: e
                }, {
                    patch: !0
                })
            }, 200),
            changeTab: function(e) {
                this.selectedTab = e
            },
            setIndex: function(e) {
                this.index = e, this.handleSetGridsClick()
            },
            toggleEditParam: function(e, o) {
                o === "grid" && (this.changeTab("grid"), this.editParamsData.guides = !1), o === "guides" && (this.changeTab("guides"), this.editParamsData.grid = !1, re(fe.SettingsViewer, {
                    settingsType: "guides set"
                })), o === "snap" && !e[o] && Oe("ClickOnSnapButton"), o === "sizes" && !e[o] && Oe("ClickOnSizesButton"), e[o] = !e[o], this.noHoverButtons = !0
            },
            onChangeViewport() {
                let e = this.workspace.viewport;
                this.viewport = e, this.viewportWidth = this.gg.mag.getViewportWidth(e), this.scaleRatio = this.getScaleRatio(e)
            },
            getScaleRatio(e) {
                return Math.round(xd.getLimitedRatio(this.workspace.mag.getViewportWidth(e), this.workspace.mag.get("opts").scalewidth, De.dictionary.default.min_scale_width, !1) * 100)
            },
            onWindowResize() {
                this.scaleRatio = this.getScaleRatio(this.viewport)
            },
            toggleScaleLayout() {
                this.setOpts("scalableviewer", !this.opts.scalableviewer), this.noHoverButtons = !0, re(fe.SettingsViewer, {
                    settingsType: "scale layout from guides"
                })
            },
            handleChangeScaleWidth(e) {
                this.setOpts("scalewidth", e)
            }
        }
    },
    oH = function() {
        var e, o = this,
            t = o.$createElement,
            r = o._self._c || t;
        return r("transition", {
            attrs: {
                name: "wb-panel"
            }
        }, [r("div", {
            staticClass: "guides-panel equal-columns",
            class: (e = {}, e[o.viewport] = !0, e)
        }, [o.loadedData ? r("help-tour-tooltip", {
            attrs: {
                step: o.helpTourStep,
                position: "top",
                indent: 8,
                modifiers: [{
                    name: "arrow",
                    options: {
                        padding: {
                            left: 170
                        }
                    }
                }]
            }
        }) : o._e(), o._v(" "), r("div", {
            staticClass: "guides-panel-bg"
        }, [r("div", {
            staticClass: "guides-panel-header"
        }, [r("div", {
            staticClass: "type-selector"
        }, [r("button", {
            class: {
                active: o.selectedTab === "guides"
            },
            on: {
                click: function(i) {
                    return i.stopPropagation(), o.changeTab("guides")
                }
            }
        }, [o._v("Guides")]), o._v(" "), r("button", {
            class: {
                active: o.selectedTab === "grid"
            },
            on: {
                click: function(i) {
                    return i.stopPropagation(), o.changeTab("grid")
                }
            }
        }, [o._v("Grid")])]), o._v(" "), r("div", {
            staticClass: "set-selector"
        }, o._l([{
            value: 1,
            title: "Set 1"
        }, {
            value: 2,
            title: "Set 2"
        }, {
            value: 3,
            title: "Set 3"
        }], function(i) {
            return r("button", {
                key: i.value,
                class: {
                    active: i.value === o.index
                },
                attrs: {
                    "aria-label": i.title
                },
                on: {
                    click: function(n) {
                        return n.stopPropagation(), o.setIndex(i.value)
                    }
                }
            }, [r("span")])
        }), 0)]), o._v(" "), r("div", {
            staticClass: "scale-layout",
            class: {
                disabled: !o.isScaleLayout
            }
        }, [r("div", {
            staticClass: "item"
        }, [r("span", [o._v("Scale layout")]), o._v(" "), r("rm-switcher", {
            attrs: {
                value: o.isDesktopLayout ? o.isScaleLayout : !0,
                width: 40,
                height: 24,
                "color-on": "#0080FF",
                "color-off": "#B8B8B8",
                callback: o.toggleScaleLayout,
                "is-disabled": !o.isDesktopLayout
            }
        })], 1), o._v(" "), r("div", {
            staticClass: "item"
        }, [r("span", {
            staticClass: "caption"
        }, [r("label", {
            attrs: {
                for: "scale-layout-width"
            }
        }, [o._v("Limit scale at")])]), o._v(" "), r("div", [r("numeric-input", {
            staticClass: "numeric-input big-numberic-input",
            attrs: {
                id: "scale-layout-width",
                "label-selector": "<.item",
                "get-label": function(i) {
                    return i.find(".caption")
                },
                value: o.opts.scalewidth,
                min: 1024,
                max: 9999,
                disabled: !o.isScaleLayout || !o.isDesktopLayout
            },
            on: {
                change: o.handleChangeScaleWidth
            }
        })], 1)]), o._v(" "), r("div", {
            staticClass: "item"
        }, [r("div", [r("span", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.scaleEnabled && !o.customViewportWidthEnabled,
                expression: "scaleEnabled && !customViewportWidthEnabled"
            }],
            staticClass: "gray"
        }, [o._v("Scale layout")]), o._v(" "), r("span", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.customViewportWidthEnabled,
                expression: "customViewportWidthEnabled"
            }]
        }, [o._v("Width")]), o._v(" "), r("span", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.customViewportWidthEnabled,
                expression: "customViewportWidthEnabled"
            }],
            staticClass: "gray"
        }, [o._v(`
              ` + o._s(o.guidesData.columnWidth || !o.isScaleLayout ? "Centered" : "Stretched") + `
            `)]), o._v(" "), r("span", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.isScaleLayout && o.isDesktopLayout,
                expression: "isScaleLayout && isDesktopLayout"
            }],
            staticClass: "scale-ratio gray"
        }, [o._v(o._s(o.scaleRatio) + "%")])]), o._v(" "), r("div", [r("numeric-input", {
            staticClass: "numeric-input big-numberic-input",
            attrs: {
                min: o.minWidth,
                max: o.maxWidth,
                value: o.viewportWidth,
                "label-selector": "<.item",
                "get-label": function(i) {
                    return i.children(":first")
                },
                disabled: !o.customViewportWidthEnabled
            },
            on: {
                change: o.onViewportWidthChange
            }
        })], 1)])]), o._v(" "), r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.selectedTab === "grid",
                expression: "selectedTab === 'grid'"
            }],
            staticClass: "row row-big"
        }, [r("div", {
            staticClass: "block block-grid-inner"
        }, [r("GridInner", {
            staticClass: "svg-icon icon"
        }), o._v(" "), r("numeric-input", {
            staticClass: "numeric-input grid-inner",
            attrs: {
                min: 4,
                max: Math.floor(999 / o.guidesData.grid_count),
                "label-selector": ".icon",
                dir: "v"
            },
            model: {
                value: o.guidesData.grid_step,
                callback: function(i) {
                    o.$set(o.guidesData, "grid_step", i)
                },
                expression: "guidesData.grid_step"
            }
        })], 1), o._v(" "), r("div", {
            staticClass: "block block-grid-outer"
        }, [r("GridOuter", {
            staticClass: "svg-icon icon"
        }), o._v(" "), r("numeric-input", {
            staticClass: "numeric-input grid-outer readonly",
            attrs: {
                "mouse-only": !0,
                min: o.guidesData.grid_step * 2,
                max: Math.floor(999 / o.guidesData.grid_step) * o.guidesData.grid_step,
                "label-selector": ".icon",
                value: o.grid_count_h,
                dir: "v"
            },
            on: {
                change: function(i) {
                    return o.updateGridCount(i)
                }
            }
        })], 1)]), o._v(" "), r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.selectedTab === "guides",
                expression: "selectedTab === 'guides'"
            }],
            staticClass: "row row-big guide-row"
        }, [r("div", {
            staticClass: "block block-guide-count"
        }, [r("GuideCount", {
            staticClass: "guide-icon icon"
        }), o._v(" "), r("numeric-input", {
            staticClass: "numeric-input guide-count",
            attrs: {
                value: o.guidesData.columns,
                "label-selector": ".icon",
                dir: "h",
                min: 0,
                max: 99
            },
            on: {
                change: o.onColumnCountChange
            }
        })], 1), o._v(" "), [r("div", {
            staticClass: "block block-column-width"
        }, [r("ColumnIcon", {
            staticClass: "column-icon icon",
            class: {
                disabled: !o.guidesData.columns
            },
            attrs: {
                title: "Column width"
            }
        }), o._v(" "), r("div", {
            staticClass: "guide-column-input-wrapper",
            class: {
                "is-auto": !o.guidesData.columns || o.guidesData.columns && !o.guidesData.width && o.isColumnWidthFloating, disabled: !o.guidesData.columns
            }
        }, [r("numeric-input", {
            staticClass: "numeric-input guides-column-width",
            style: o.guidesData.columns ? {} : {
                visibility: "hidden"
            },
            attrs: {
                value: o.guidesData.columns ? o.guidesData.columnWidth || Math.round(o.preciseColumnWidth) : 0,
                "label-selector": "< .block-column-width",
                "get-label": function(i) {
                    return i.find(".icon")
                },
                dir: "h",
                min: o.minColumnWidth,
                max: o.maxColumnWidth,
                disabled: !o.guidesData.columns,
                autosize: ""
            },
            on: {
                change: o.onColumnWidthChange
            }
        })], 1)], 1), o._v(" "), r("div", {
            staticClass: "block block-guide-padding"
        }, [r("GutterIcon", {
            staticClass: "gutter-icon icon",
            class: {
                disabled: o.guidesData.columns < 2
            },
            attrs: {
                title: "Gutter"
            }
        }), o._v(" "), r("numeric-input", {
            staticClass: "numeric-input guides-padding",
            attrs: {
                value: o.guidesData.padding,
                "label-selector": "< .block-guide-padding",
                "get-label": function(i) {
                    return i.find(".gutter-icon")
                },
                dir: "h",
                min: 0,
                max: 999,
                disabled: o.guidesData.columns < 2,
                autosize: ""
            },
            on: {
                change: o.onGutterChange
            }
        })], 1)]], 2), o._v(" "), r("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: o.selectedTab === "guides",
                expression: "selectedTab === 'guides'"
            }],
            staticClass: "guides-big-row-wrapper"
        }, [r("div", {
            staticClass: "row guides-big-row"
        }, [r("div", {
            staticClass: "block-small baseline"
        }, [r("div", {
            staticClass: "block-small baseline-count"
        }, [r("BaselineCount", {
            staticClass: "svg-icon icon"
        }), o._v(" "), r("numeric-input", {
            staticClass: "numeric-input",
            attrs: {
                "label-selector": ".icon",
                min: 0,
                max: Math.floor(999 / o.baseline_group),
                "debounce-keyboard": 500
            },
            model: {
                value: o.baseline_height,
                callback: function(i) {
                    o.baseline_height = i
                },
                expression: "baseline_height"
            }
        })], 1), o._v(" "), r("div", {
            staticClass: "block-small",
            class: {
                disabled: o.baseline_height == 0
            }
        }, [r("BaselineSize", {
            staticClass: "svg-icon icon"
        }), o._v(" "), r("numeric-input", {
            staticClass: "numeric-input readonly",
            attrs: {
                "mouse-only": !0,
                "label-selector": ".icon",
                value: o.baseline_group_h,
                min: 0,
                max: Math.floor(999 / o.baseline_height) * o.baseline_height
            },
            on: {
                change: o.updateBaselineGroup
            }
        })], 1)]), o._v(" "), r("div", {
            staticClass: "block-small"
        }, [r("MarginLeft", {
            staticClass: "svg-icon icon",
            class: {
                disabled: !o.guidesData.columns
            }
        }), o._v(" "), r("numeric-input", {
            staticClass: "numeric-input",
            attrs: {
                value: o.guidesData.margin.left,
                "label-selector": ".icon",
                dir: "h",
                min: 0,
                max: 999,
                disabled: !o.guidesData.columns
            },
            on: {
                change: o.onLeftMarginChange
            }
        })], 1), o._v(" "), r("div", {
            staticClass: "block-small"
        }, [r("MarginTop", {
            staticClass: "svg-icon icon",
            class: {
                disabled: !o.guidesData.columns
            }
        }), o._v(" "), r("numeric-input", {
            staticClass: "numeric-input",
            attrs: {
                "label-selector": ".icon",
                min: 0,
                max: 999,
                disabled: !o.guidesData.columns
            },
            model: {
                value: o.guidesData.margin.top,
                callback: function(i) {
                    o.$set(o.guidesData.margin, "top", i)
                },
                expression: "guidesData.margin.top"
            }
        })], 1), o._v(" "), r("div", {
            staticClass: "block-small"
        }, [r("MarginBottom", {
            staticClass: "svg-icon icon",
            class: {
                disabled: !o.guidesData.columns
            }
        }), o._v(" "), r("numeric-input", {
            staticClass: "numeric-input",
            attrs: {
                "label-selector": ".icon",
                min: 0,
                max: 999,
                disabled: !o.guidesData.columns
            },
            model: {
                value: o.guidesData.margin.bottom,
                callback: function(i) {
                    o.$set(o.guidesData.margin, "bottom", i)
                },
                expression: "guidesData.margin.bottom"
            }
        })], 1), o._v(" "), r("div", {
            staticClass: "block-small"
        }, [r("MarginRight", {
            staticClass: "svg-icon icon",
            class: {
                disabled: !o.guidesData.columns
            }
        }), o._v(" "), r("numeric-input", {
            staticClass: "numeric-input",
            attrs: {
                value: o.guidesData.margin.right,
                "label-selector": ".icon",
                dir: "h",
                min: 0,
                max: 999,
                disabled: !o.guidesData.columns
            },
            on: {
                change: o.onRightMarginChange
            }
        })], 1)])])]), o._v(" "), r("div", {
            staticClass: "buttons-wrapper"
        }, [r("div", {
            staticClass: "button",
            class: {
                active: o.editParamsData.guides, "no-hover": o.noHoverButtons
            },
            on: {
                click: function(i) {
                    return i.stopPropagation(), o.toggleEditParam(o.editParamsData, "guides")
                },
                mouseleave: function(i) {
                    o.noHoverButtons = !1
                }
            }
        }, [r("div", {
            staticClass: "caption"
        }, [o._v("Guides")]), o._v(" "), r("div", {
            staticClass: "letter"
        }, [o._v("H")])]), o._v(" "), r("div", {
            staticClass: "button",
            class: {
                active: o.editParamsData.grid, "no-hover": o.noHoverButtons
            },
            on: {
                click: function(i) {
                    return i.stopPropagation(), o.toggleEditParam(o.editParamsData, "grid")
                },
                mouseleave: function(i) {
                    o.noHoverButtons = !1
                }
            }
        }, [r("div", {
            staticClass: "caption"
        }, [o._v("Grid")]), o._v(" "), r("div", {
            staticClass: "letter"
        }, [o._v("G")])]), o._v(" "), r("div", {
            staticClass: "button",
            class: {
                active: o.editParamsData.snap, "no-hover": o.noHoverButtons
            },
            on: {
                click: function(i) {
                    return i.stopPropagation(), o.toggleEditParam(o.editParamsData, "snap")
                },
                mouseleave: function(i) {
                    o.noHoverButtons = !1
                }
            }
        }, [r("div", {
            staticStyle: {
                position: "relative",
                top: "24px"
            }
        }, [o.loadedData ? r("help-tour-tooltip", {
            attrs: {
                step: o.helpTourStepSnap,
                position: "left",
                indent: 26
            }
        }) : o._e()], 1), o._v(" "), r("div", {
            staticClass: "caption"
        }, [o._v("Snap")]), o._v(" "), r("div", {
            staticClass: "letter"
        }, [o._v("S")])]), o._v(" "), r("div", {
            staticClass: "button",
            class: {
                active: o.editParamsData.sizes, "no-hover": o.noHoverButtons
            },
            on: {
                click: function(i) {
                    return i.stopPropagation(), o.toggleEditParam(o.editParamsData, "sizes")
                },
                mouseleave: function(i) {
                    o.noHoverButtons = !1
                }
            }
        }, [r("div", {
            staticStyle: {
                position: "relative",
                top: "24px"
            }
        }, [o.loadedData ? r("help-tour-tooltip", {
            attrs: {
                step: o.helpTourStepSizes,
                position: "left",
                indent: 142
            }
        }) : o._e()], 1), o._v(" "), r("div", {
            staticClass: "caption"
        }, [o._v("Sizes")]), o._v(" "), r("div", {
            staticClass: "letter"
        }, [o._v("X")])])])], 1)])
    },
    rH = [],
    iH = void 0,
    nH = "data-v-349392fc",
    sH = void 0,
    aH = !1;

function lH(e, o, t, r, i, n, s, l, p, d) {
    let c = (typeof t == "function" ? t.options : t) || {};
    return c.__file = "guides-panel.vue", c.render || (c.render = e.render, c.staticRenderFns = e.staticRenderFns, c._compiled = !0, i && (c.functional = !0)), c._scopeId = r, c
}
var cH = lH({
        render: oH,
        staticRenderFns: rH
    }, iH, tH, nH, aH, sH, !1, void 0, void 0, void 0),
    M5 = cH;
Jt();
Ut();
y();

function B5({
    children: e,
    button: o,
    ...t
}) {
    let [r, i] = (0, Pn.useState)(!1), n = (0, Pn.useRef)(), s = (0, Pn.useRef)(null), {
        page: l
    } = (0, Pn.useContext)(je);
    (0, Pn.useEffect)(() => {
        if (r && s.current) {
            n.current && Xr(n.current);
            let c = {
                workspace: window.RM.constructorRouter.workspace
            };
            n.current = ga(M5, s.current, c)
        } else r || n.current && Xr(n.current)
    }, [s.current, r]);
    let p = d => {
        i(d)
    };
    return a(Yt, {
        name: "guides",
        skidding: 28,
        button: o,
        onToggle: p,
        panelPosition: {
            height: "auto"
        },
        withArrow: !1,
        ...t,
        children: a(f, {
            height: "100%",
            display: "flex",
            flexDirection: "column",
            justifyContent: "flex-end",
            ref: s
        }, String(l ? .id))
    })
}
He();
No();
kt();
Hn();
y();
var R5 = ({
    id: e = "helpIcon",
    width: o,
    height: t,
    hoverBox: r,
    margin: i
}) => {
    let n = Fo(o, t, r);
    return w("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        id: e,
        viewBox: "0 0 18 24",
        fill: "none",
        width: o,
        height: t,
        style: {
            padding: n,
            margin: i
        },
        children: [w("path", {
            d: "M0.000110626 5.92295L0.000648499 5.90145C0.17284 2.58286 2.52025 0 6.5589 0C10.3314 0 12.9769 2.41067 12.9769 5.60403C12.9769 7.92078 11.8186 9.56441 9.67399 10.9419C7.62336 12.2569 7.04417 13.1491 7.04417 14.8867V16.0607H7.04125C7.04 16.6329 6.57577 17.0963 6.00329 17.0963C5.43082 17.0963 4.96659 16.6329 4.96533 16.0607H4.96222V14.5893C4.94657 12.5073 5.85449 11.1924 8.06166 9.78357C10.034 8.49996 10.7697 7.41986 10.7697 5.69795C10.7697 3.47512 9.00088 1.86279 6.48063 1.86279C3.97604 1.86279 2.23848 3.42816 2.03498 5.90145H2.0299C2.03033 5.9136 2.03055 5.92581 2.03055 5.93806C2.03055 6.49879 1.576 6.95334 1.01527 6.95334C0.454554 6.95334 0 6.49879 0 5.93806L0.000110626 5.92295Z",
            fill: "currentColor",
            transform: "rotate(0, 5, 10)",
            children: [a("animateTransform", {
                attributeName: "transform",
                type: "rotate",
                from: "0, 5, 10",
                to: "45, 5, 10",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animateTransform", {
                attributeName: "transform",
                type: "rotate",
                to: "0, 5, 10",
                from: "45, 5, 10",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        }), w("path", {
            d: "M6 24C4.89543 24 4 23.1046 4 22C4 20.8954 4.89543 20 6 20C7.10457 20 8 20.8954 8 22C8 23.1046 7.10457 24 6 24Z",
            fill: "currentColor",
            children: [a("animateTransform", {
                attributeName: "transform",
                type: "translate",
                to: "0 -3",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseenter`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            }), a("animateTransform", {
                attributeName: "transform",
                type: "translate",
                from: "0 -3",
                to: "0 0",
                dur: "0.2s",
                repeatCount: "1",
                fill: "freeze",
                begin: `${e}.mouseleave`,
                calcMode: "spline",
                keySplines: "0.42 0 1 1"
            })]
        })]
    })
};
y();

function z5({
    disabledTooltip: e,
    width: o = "100%",
    ...t
}) {
    return a(mt, {
        instance: !0,
        closeOnTargetClick: !0,
        targetSteps: "HelpButton",
        indent: 8,
        defaultText: "Help",
        disabled: e,
        leaveDelay: 100,
        children: a(Ge, {
            color: "white",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            variant: "unstyled",
            height: "100%",
            width: o,
            "aria-label": "Help",
            "data-testid": "help-button",
            onClick: () => Oe("HelpButton"),
            ...t,
            children: a(R5, {
                width: "20px",
                height: "24px",
                hoverBox: {
                    width: 56,
                    height: 56
                }
            })
        })
    })
}
be();
var $w = M(F());
W();
pi();
be();
te();
Ye();
var br = M(F());
Ye();
W();
fI();
var rd = M(F());
var pH = {
        analytics: !1,
        webWidget: {
            color: {
                theme: "#F8A42B"
            }
        }
    },
    dH = "https://static.zdassets.com/ekr/snippet.js?key=",
    E5 = (e, o, t) => {
        let r = typeof window < "u" && typeof window.zE < "u",
            [i, n] = (0, rd.useState)(r ? "ready" : "idle");
        (0, rd.useEffect)(() => {
            if (!e) return;
            if (!r && i !== "loading") {
                let d = `${dH}${e}`;
                n("loading"), window.zESettings = pH;
                let c = document.createElement("script");
                c.src = d, c.async = !0, o && Object.keys(o).forEach(m => {
                    c.setAttribute(m, o[m])
                }), c.addEventListener("load", p, {
                    once: !0
                }), document.body.appendChild(c)
            }

            function p(d) {
                n(d.type === "load" ? "ready" : "error")
            }
        }, [e, o]), (0, rd.useEffect)(() => {
            i === "ready" && !window.zECBIsSet && (window.zE("webWidget:on", "userEvent", s), window.zECBIsSet = !0)
        }, [i]);

        function s({
            action: p,
            properties: d
        }) {
            p && t ? .(p.toLowerCase(), d)
        }

        function l() {
            i === "ready" && window.zE("webWidget", "toggle")
        }
        return {
            toggleWidget: l,
            isReady: i === "ready"
        }
    };
ut();
$n();
Vv();
Gh();
be();
Ue();
te();
He();
Ye();
W();
te();
W();
y();
var uH = e => w("svg", {
        width: 236,
        height: 118,
        viewBox: "0 0 236 118",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: [a("circle", {
            cx: 59.1855,
            cy: 59,
            r: 58.8145,
            fill: "#884FFF"
        }), a("circle", {
            cx: 176.814,
            cy: 59,
            r: 58.8145,
            fill: "#EC520B"
        }), a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M43.8551 50.7046C40.8611 48.7517 38.8818 45.3705 38.8818 41.5265C38.8818 35.4809 43.7778 30.58 49.8172 30.58H68.5529C74.5924 30.58 79.4883 35.4809 79.4883 41.5265C79.4883 45.3705 77.5091 48.7517 74.515 50.7046C77.5091 52.6575 79.4883 56.0387 79.4883 59.8826C79.4883 65.9282 74.5924 70.8292 68.5529 70.8292H68.3536C65.4987 70.8292 62.8993 69.734 60.9518 67.9405V78.1387C60.9518 84.2519 55.9488 89.1851 49.8667 89.1851C43.8397 89.1851 38.8818 84.2965 38.8818 78.2385C38.8818 74.3946 40.861 71.0135 43.8549 69.0606C40.861 67.1077 38.8818 63.7265 38.8818 59.8826C38.8818 56.0387 40.8611 52.6575 43.8551 50.7046ZM60.9518 59.8826C60.9518 63.9747 64.2658 67.292 68.3536 67.292H68.5529C72.6409 67.292 75.9547 63.9747 75.9547 59.8826C75.9547 55.7905 72.6409 52.4733 68.5529 52.4733H68.3536C64.2658 52.4733 60.9518 55.7905 60.9518 59.8826ZM57.4183 52.4733H49.8172C45.7293 52.4733 42.4154 55.7905 42.4154 59.8826C42.4154 63.9664 45.7159 67.2785 49.7923 67.292H49.8039H57.4183V52.4733ZM49.8172 70.8292C49.8089 70.8292 49.8006 70.8292 49.7923 70.8292C45.7159 70.8425 42.4154 74.1547 42.4154 78.2385C42.4154 82.3182 45.7664 85.6479 49.8667 85.6479C54.0221 85.6479 57.4183 82.2736 57.4183 78.1387V70.8292H49.8172ZM57.4183 48.9359H49.8172C45.7293 48.9359 42.4154 45.6186 42.4154 41.5265C42.4154 37.4344 45.7293 34.1172 49.8172 34.1172H57.4183V48.9359ZM68.5529 48.9359H60.9518V34.1172H68.5529C72.6409 34.1172 75.9547 37.4344 75.9547 41.5265C75.9547 45.6186 72.6409 48.9359 68.5529 48.9359Z",
            fill: "white"
        }), a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M204.153 88.9623V79.3865C204.153 77.4762 203.092 76.515 201.335 76.515C199.249 76.515 197.529 78.0409 197.456 79.8912V88.9502H193.93V79.3745C193.93 77.4642 192.869 76.503 191.112 76.503C189.026 76.503 187.306 78.0289 187.232 79.8792V88.9382H183.707V73.9679H186.879L187.232 75.2415L187.403 75.3977L187.574 75.2415C188.282 74.2803 190.038 73.6435 191.454 73.6435C193.991 73.6435 195.821 74.6287 196.748 76.1906L197.626 75.2295C198.505 74.2683 200.274 73.6315 201.677 73.6315C205.556 73.6315 207.679 75.8662 207.679 79.0501V88.9382H204.153V88.9623ZM145.949 88.1813L205.093 29.934L206.325 31.1475L147.181 89.3948L145.949 88.1813ZM150.487 42.3332H149.841V52.6658H146.376V28.6004H154.794C158.576 28.6004 161.894 31.0754 161.894 35.3527C161.894 39.4737 158.356 42.1049 154.574 42.1049L162.358 51.993V52.6538H158.405L150.487 42.3332ZM154.989 38.921C156.892 38.921 158.637 37.6114 158.637 35.4848C158.637 33.3582 156.892 32.0486 154.989 32.0486H149.914V38.921H154.989Z",
            fill: "#EBEBEB"
        })]
    }),
    mH = f.withComponent(N(uH)
        `
      display: block;
    `),
    A5 = mH;
te();
W();
y();
var gH = e => a("svg", {
        width: 17,
        height: 17,
        viewBox: "0 0 17 17",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            d: "M3.18575 12.6523C2.93808 12.9 2.93808 13.3015 3.18575 13.5492C3.43342 13.7968 3.83497 13.7968 4.08264 13.5492L12.2316 5.40021V10.5826C12.2316 10.9329 12.5155 11.2168 12.8658 11.2168C13.2161 11.2168 13.5 10.9329 13.5 10.5826V3.86912C13.5 3.51886 13.2161 3.23492 12.8658 3.23492H6.15232C5.80206 3.23492 5.51812 3.51886 5.51812 3.86912C5.51812 4.21938 5.80206 4.50332 6.15232 4.50332H11.3347L3.18575 12.6523Z",
            fill: "white"
        })
    }),
    hH = f.withComponent(N(gH)
        `
      display: block;
    `),
    D5 = hH;
y();
var L5 = N(ge)
`
  display: flex;
  justify-content: center;
  align-items: center;

  width: 100%;
  height: 56px;

  border-radius: 30px;

  color: ${({theme:e})=>e.colors.white};
`, O5 = ({
    show: e = !1,
    figmaPluginUrl: o,
    learnMoreUrl: t,
    onModalClose: r
}) => {
    let i = () => {
            re(fe.Popup, {
                content: "import from figma"
            }), window.open(o, "_blank")
        },
        n = () => {
            window.open(t, "_blank")
        };
    return w(cl, {
        underlayStyles: {
            backdropFilter: "blur(5px)"
        },
        showCloseButton: !0,
        show: e,
        onExit: r,
        children: [w(f, {
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
            children: [a(f, {
                display: "flex",
                children: a(A5, {})
            }), w(f, {
                padding: "24px 0 40px 0",
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                position: "relative",
                children: [a(f, {
                    padding: "0 0 16px 0",
                    children: a(we, {
                        id: "import-from-figma",
                        display: "flex",
                        alignItems: "center",
                        textAlign: "center",
                        whiteSpace: "pre-wrap",
                        fontSize: 24,
                        height: "auto",
                        margin: "auto",
                        color: q.white,
                        lineHeight: "6rm",
                        children: "Import from Figma"
                    })
                }), a(f, {
                    width: "75%",
                    children: a(we, {
                        id: "import-from-figma-text",
                        display: "flex",
                        alignItems: "center",
                        textAlign: "center",
                        whiteSpace: "pre-wrap",
                        fontSize: 16,
                        height: "auto",
                        color: q.gray,
                        children: "Open the plugin and transfer your designs"
                    })
                })]
            })]
        }), a(f, {
            width: "100%",
            children: w(L5, {
                variant: "clean",
                backgroundColor: "#0A85FF",
                onClick: i,
                children: ["Get plugin", a(D5, {})]
            })
        }), a(f, {
            width: "100%",
            children: a(L5, {
                variant: "clean",
                marginTop: "4rm",
                borderRadius: "50%",
                backgroundColor: "rgba(255, 255, 255, 0.1)",
                onClick: n,
                children: "Learn more"
            })
        })]
    })
};
rr();
te();
W();
y();
var fH = e => a("svg", {
        width: 88,
        height: 88,
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            d: "M84 80a4 4 0 110 8H4a4 4 0 110-8h80zm0-16a4 4 0 110 8H4a4 4 0 110-8h80zm0-16a4 4 0 110 8H4a4 4 0 110-8h80zm0-16a4 4 0 110 8H4a4 4 0 110-8h80zm0-16a4 4 0 110 8H4a4 4 0 110-8h80zm0-16a4 4 0 110 8H4a4 4 0 110-8h80z",
            fill: "#F8A42B",
            fillRule: "evenodd"
        })
    }),
    bH = f.withComponent(N(fH)
        `
      display: block;
    `),
    $5 = bH;
W();
be();
te();
Ue();
y();

function wH({
    text: e,
    children: o,
    href: t,
    onClick: r,
    "data-testid": i,
    absoluteIcon: n,
    marginBottom: s
}) {
    return w(f, {
        as: "a",
        width: 88,
        href: t,
        cursor: "pointer",
        marginBottom: s ? ? "4rm",
        onClick: l => {
            r && l.preventDefault(), r && r()
        },
        "data-testid": i,
        display: "block",
        textDecoration: "none",
        textAlign: "left",
        target: "_blank",
        position: "relative",
        children: [a(f, {
            as: "span",
            css: ne `
          &:hover {
            display: block;
            opacity: 0.8;
          }
        `,
            children: o
        }), a(A, {
            textStyle: "small",
            marginTop: "8px",
            color: "black",
            paddingTop: n ? "100%" : void 0,
            display: "block",
            css: ne `
          &:hover {
            color: ${q.red};
          }
        `,
            children: e
        })]
    })
}
var ei = wH;
te();
W();
y();
var xH = e => a("svg", {
        width: 88,
        height: 88,
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6 0a6 6 0 00-6 6v76a6 6 0 006 6h76a6 6 0 006-6V6a6 6 0 00-6-6H6zm22 48a4 4 0 100-8 4 4 0 000 8zm36-4a4 4 0 11-8 0 4 4 0 018 0zm-20 4a4 4 0 100-8 4 4 0 000 8z",
            fill: "#B9B9B9"
        })
    }),
    vH = f.withComponent(N(xH)
        `
      display: block;
    `),
    H5 = vH;
te();
W();
y();
var yH = e => a("svg", {
        width: 88,
        height: 88,
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            d: "M80 4a4 4 0 118 0v80a4 4 0 11-8 0V4zM64 4a4 4 0 118 0v80a4 4 0 11-8 0V4zM48 4a4 4 0 118 0v80a4 4 0 11-8 0V4zM32 4a4 4 0 118 0v80a4 4 0 11-8 0V4zM16 4a4 4 0 118 0v80a4 4 0 11-8 0V4zM0 4a4 4 0 118 0v80a4 4 0 11-8 0V4z",
            fill: "#282828",
            fillRule: "evenodd"
        })
    }),
    kH = f.withComponent(N(yH)
        `
      display: block;
    `),
    F5 = kH;
te();
W();
y();
var _H = e => a("svg", {
        width: 88,
        height: 88,
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            d: "M82 0a6 6 0 016 6v76a6 6 0 01-6 6H6a6 6 0 01-6-6V6a6 6 0 016-6h76zM52 28a8 8 0 00-8 8l-.004-.25A8 8 0 1036 44a8 8 0 107.996 8.25L44 52a8 8 0 108-8l.25-.004A8 8 0 0052 28z",
            fill: "#8E0D99",
            fillRule: "evenodd"
        })
    }),
    CH = f.withComponent(N(_H)
        `
      display: block;
    `),
    N5 = CH;
te();
W();
y();
var SH = e => a("svg", {
        width: 88,
        height: 88,
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6 0a6 6 0 00-6 6v76a6 6 0 006 6h76a6 6 0 006-6V6a6 6 0 00-6-6H6zm6 16a4 4 0 100-8 4 4 0 000 8zm20-4a4 4 0 11-8 0 4 4 0 018 0zm12 4a4 4 0 100-8 4 4 0 000 8zm20-4a4 4 0 11-8 0 4 4 0 018 0zm16 0a4 4 0 11-8 0 4 4 0 018 0zM16 28a4 4 0 11-8 0 4 4 0 018 0zm12 4a4 4 0 100-8 4 4 0 000 8zm20-4a4 4 0 11-8 0 4 4 0 018 0zm12 4a4 4 0 100-8 4 4 0 000 8zm16 0a4 4 0 100-8 4 4 0 000 8zM16 44a4 4 0 11-8 0 4 4 0 018 0zm12 4a4 4 0 100-8 4 4 0 000 8zm20-4a4 4 0 11-8 0 4 4 0 018 0zm12 4a4 4 0 100-8 4 4 0 000 8zm16 0a4 4 0 100-8 4 4 0 000 8zM16 60a4 4 0 11-8 0 4 4 0 018 0zm12 4a4 4 0 100-8 4 4 0 000 8zm20-4a4 4 0 11-8 0 4 4 0 018 0zm12 4a4 4 0 100-8 4 4 0 000 8zm16 0a4 4 0 100-8 4 4 0 000 8zM12 80a4 4 0 100-8 4 4 0 000 8zm20-4a4 4 0 11-8 0 4 4 0 018 0zm12 4a4 4 0 100-8 4 4 0 000 8zm20-4a4 4 0 11-8 0 4 4 0 018 0zm16 0a4 4 0 11-8 0 4 4 0 018 0z",
            fill: "#089400"
        })
    }),
    PH = f.withComponent(N(SH)
        `
      display: block;
    `),
    Ow = PH;
te();
W();
y();
var TH = e => a("svg", {
        width: 88,
        height: 88,
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            d: "M82 0a6 6 0 016 6v76a6 6 0 01-6 6H6a6 6 0 01-6-6V6a6 6 0 016-6h76zM70.828 17.172a4 4 0 00-5.656 0l-48 48-.151.159a4 4 0 005.807 5.497l48-48 .151-.159a4 4 0 00-.15-5.497z",
            fill: "#EC520B",
            fillRule: "evenodd"
        })
    }),
    IH = f.withComponent(N(TH)
        `
      display: block;
    `),
    W5 = IH;
te();
W();
y();
var MH = e => w("svg", {
        width: 88,
        height: 99,
        viewBox: "0 0 88 99",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: [a("path", {
            d: "M24.9965 97.0113V88H36.4219L26.7036 97.7184C26.0736 98.3483 24.9965 97.9022 24.9965 97.0113Z",
            fill: "#F8A42B"
        }), a("path", {
            d: "M0 6C0 2.68629 2.68629 0 6 0H82C85.3137 0 88 2.68629 88 6V82C88 85.3137 85.3137 88 82 88H6C2.68629 88 0 85.3137 0 82V6Z",
            fill: "#F8A42B"
        })]
    }),
    BH = f.withComponent(N(MH)
        `
      display: block;
    `),
    V5 = BH;
te();
W();
y();
var RH = e => a("svg", {
        width: 88,
        height: 88,
        viewBox: "0 0 88 88",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6 0C2.68629 0 0 2.68629 0 6V82C0 85.3137 2.68629 88 6 88H82C85.3137 88 88 85.3137 88 82V6C88 2.68629 85.3137 0 82 0H6ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16ZM24 16C26.2091 16 28 14.2091 28 12C28 9.79086 26.2091 8 24 8C21.7909 8 20 9.79086 20 12C20 14.2091 21.7909 16 24 16ZM40 12C40 14.2091 38.2091 16 36 16C33.7909 16 32 14.2091 32 12C32 9.79086 33.7909 8 36 8C38.2091 8 40 9.79086 40 12Z",
            fill: "#00793F"
        })
    }),
    zH = f.withComponent(N(RH)
        `
      display: block;
    `),
    U5 = zH;
te();
W();
y();
var EH = e => a("svg", {
        width: 88,
        height: 88,
        viewBox: "0 0 88 88",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6.00391 0C2.6902 0 0.00390625 2.68629 0.00390625 6V82C0.00390625 85.3137 2.6902 88 6.00391 88H82.0039C85.3176 88 88.0039 85.3137 88.0039 82V6C88.0039 2.68629 85.3176 0 82.0039 0H6.00391ZM30.005 31.7156C30.005 29.4896 32.344 28.0389 34.3382 29.028L58.8568 41.1902C61.0793 42.2927 61.0793 45.4628 58.8568 46.5653L34.3382 58.7275C32.344 59.7167 30.005 58.266 30.005 56.04V31.7156ZM36.1157 25.4447C31.4627 23.1366 26.005 26.5216 26.005 31.7156V56.04C26.005 61.2339 31.4627 64.6189 36.1157 62.3109L60.6343 50.1487C65.8201 47.5763 65.8201 40.1793 60.6343 37.6069L36.1157 25.4447Z",
            fill: "#0080FF"
        })
    }),
    AH = f.withComponent(N(EH)
        `
      display: block;
    `),
    G5 = AH;
te();
W();
y();
var DH = e => a("svg", {
        width: 88,
        height: 88,
        viewBox: "0 0 88 88",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        ...e,
        children: a("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6 0C2.68629 0 0 2.68629 0 6V82C0 85.3137 2.68629 88 6 88H82C85.3137 88 88 85.3137 88 82V6C88 2.68629 85.3137 0 82 0H6ZM29.1494 42.5687C29.1494 39.3341 31.7725 36.712 35.0082 36.712H41.0254V42.5687V48.4255H35.0082C31.7725 48.4255 29.1494 45.8033 29.1494 42.5687ZM49.8927 33.8627L49.7344 33.8627L43.8756 33.8627V22.1492H49.8927C53.1284 22.1492 55.7515 24.7714 55.7515 28.006C55.7515 31.2406 53.1284 33.8627 49.8927 33.8627ZM58.6017 28.006C58.6017 31.0513 57.0376 33.7315 54.6686 35.2874C57.0376 36.8433 58.6017 39.5234 58.6017 42.5687C58.6017 47.3769 54.7026 51.2747 49.8927 51.2747H49.7344C47.4783 51.2747 45.4225 50.4172 43.8756 49.0103V49.8501V51.2747V57.0524C43.8756 61.9142 39.8912 65.8375 35.0476 65.8375C30.2478 65.8375 26.2992 61.9497 26.2992 57.1315C26.2992 54.0862 27.8634 51.406 30.2324 49.8501C27.8634 48.2942 26.2992 45.6141 26.2992 42.5687C26.2992 39.5234 27.8634 36.8433 30.2324 35.2874C27.8634 33.7315 26.2992 31.0513 26.2992 28.006C26.2992 23.1978 30.1984 19.3 35.0082 19.3H41.0254H42.4505H43.8756H49.8927C54.7026 19.3 58.6017 23.1978 58.6017 28.006ZM49.7344 36.712H49.8927C53.1284 36.712 55.7515 39.3341 55.7515 42.5687C55.7515 45.8033 53.1284 48.4255 49.8927 48.4255H49.7344C46.4986 48.4255 43.8756 45.8033 43.8756 42.5687C43.8756 39.3341 46.4986 36.712 49.7344 36.712ZM35.0082 51.2747C31.7725 51.2747 29.1494 53.8969 29.1494 57.1315C29.1494 60.3561 31.8019 62.9883 35.0476 62.9883C38.3371 62.9883 41.0254 60.3207 41.0254 57.0524V51.2747H35.0082ZM35.0082 33.8627H41.0254V22.1492H35.0082C31.7725 22.1492 29.1494 24.7714 29.1494 28.006C29.1494 31.2406 31.7725 33.8627 35.0082 33.8627Z",
            fill: "#884FFF"
        })
    }),
    LH = f.withComponent(N(DH)
        `
      display: block;
    `),
    j5 = LH;
y();
var q5 = `${ae.readymag_host}/learn`,
    Y5 = `${ae.readymag_host}/templates`,
    OH = "https://forum.readymag.com",
    X5 = "https://help.readymag.com",
    $H = "https://www.youtube.com/@Readymag",
    HH = "https://help.readymag.com/hc/en-us/articles/360020647532-Shortcuts",
    FH = "https://www.figma.com/community/plugin/1482359008944255522/figma-to-readymag",
    NH = "https://help.readymag.com/hc/en-us/articles/35761265655067-Figma-Integration-with-Readymag",
    WH = {
        id: "ze-snippet"
    },
    VH = (e, o) => {
        let t = {
                "web widget opened": "zendesk_widget_opened",
                "help center search": "zendesk_search",
                "contact form submitted": "zendesk_widget_contact_submitted",
                "help center article viewed": "zendesk_widget_article_viewed",
                "help center view original article clicked": "zendesk_widget_original_article_clicked"
            },
            r = {
                "web widget opened": void 0,
                "help center search": {
                    search_term: o ? .term,
                    search_source: "zendesk_widget"
                },
                "contact form submitted": void 0,
                "help center article viewed": {
                    page_title: o ? .name
                },
                "help center view original article clicked": {
                    page_title: o ? .name
                }
            },
            i = t[e],
            n = r[e];
        i && (window.gtag("event", i, n), e === "contact form submitted" && re(fe.Zendesk, {
            action: "ticket created",
            zone: "editor"
        }))
    },
    UH = ({
        onHelpTourClick: e
    }) => {
        let [o, t] = (0, br.useState)(!1), [r, i] = (0, br.useState)(!1), {
            toggleWidget: n
        } = E5(ae.zendeskApiKey, WH, VH), s = Ei("PageCanAddFromTemplate"), l = (0, br.useCallback)(() => {
            re(fe.EditorHelp, {
                action: "quick tour"
            }), e ? .()
        }, []), p = (0, br.useCallback)(() => {
            re(fe.EditorHelp, {
                action: "how to videos"
            }), window.open($H, "_blank")
        }, []), d = (0, br.useCallback)(() => {
            re(fe.EditorHelp, {
                action: "import from figma"
            }), i(!0)
        }, []), c = (0, br.useCallback)(() => {
            re(fe.EditorHelp, {
                action: "shortcut"
            }), window.open(HH, "_blank")
        }, []), m = (0, br.useCallback)(() => {
            re(fe.EditorHelp, {
                action: "help page"
            }), window.open(X5, "_blank")
        }, []), u = (0, br.useCallback)(() => {
            re(fe.EditorHelp, {
                action: "rm updates"
            }), Wv(!0)
        }, []), g = (0, br.useCallback)(() => {
            re(fe.EditorHelp, {
                action: "templates"
            }), s || window.open(Y5, "_blank")
        }, []), h = (0, br.useCallback)(() => {
            re(fe.EditorHelp, {
                action: "learn more"
            }), window.open(q5, "_blank")
        }, []), b = (0, br.useCallback)(() => {
            re(fe.EditorHelp, {
                action: "forum"
            }), window.open(OH, "_blank")
        }, []), x = (0, br.useCallback)(() => {
            re(fe.EditorHelp, {
                action: "ask support"
            }), n()
        }, [n]);
        return w(gy, {
            gridTemplateColumns: "repeat(2, 1fr)",
            columnGap: "3rm",
            children: [a(ei, {
                text: "Product tour",
                "data-testid": "start-quick-tour",
                onClick: l,
                children: a(F5, {})
            }), a(ei, {
                text: "How-to videos",
                "data-testid": "how-to-videos",
                onClick: p,
                children: a(G5, {})
            }), Ve("viewer.figmaPluginMentions") && a(ei, {
                text: "Figma import",
                "data-testid": "figma-import",
                onClick: d,
                children: a(j5, {})
            }), r && a(O5, {
                show: r,
                figmaPluginUrl: FH,
                learnMoreUrl: NH,
                onModalClose: () => i(!1)
            }), a(ei, {
                text: "Ask support",
                "data-testid": "open-support",
                onClick: x,
                absoluteIcon: !0,
                children: a(f, {
                    position: "absolute",
                    top: 0,
                    left: 0,
                    right: 0,
                    bottom: 0,
                    children: a(V5, {})
                })
            }), a(ei, {
                href: X5,
                text: "Help page",
                "data-testid": "open-help",
                onClick: m,
                children: a($5, {})
            }), a(ei, {
                text: "Shortcuts",
                "data-testid": "show-shortcuts",
                onClick: c,
                children: a(N5, {})
            }), a(ei, {
                onClick: b,
                text: "Forum",
                "data-testid": "open-forum",
                children: a(U5, {})
            }), s ? a(Nm, {
                isPopupShown: o,
                onChangePopupVisibility: t,
                margin: "0 0 16px",
                hoverColor: "rgb(8, 148, 0)",
                bottom: "142px",
                width: "220px",
                left: "-16px",
                placementStyles: "bottom: -8px; left: 52px;",
                analyticsZone: fd.EditorHelp,
                children: a(ei, {
                    marginBottom: 0,
                    text: "Templates",
                    "data-testid": "open-templates",
                    onClick: g,
                    children: a(Ow, {})
                })
            }) : a(ei, {
                href: Y5,
                text: "Templates",
                "data-testid": "open-templates",
                onClick: g,
                children: a(Ow, {})
            }), a(ei, {
                text: "R/m updates",
                "data-testid": "open-updates",
                onClick: u,
                children: a(W5, {})
            }), a(ei, {
                href: q5,
                text: "Learn more",
                "data-testid": "open-learn",
                onClick: h,
                children: a(H5, {})
            })]
        })
    },
    K5 = UH;
Ee();
Ro();
kt();
y();

function GH({
    HelpPanelHeader: e = null,
    ...o
}) {
    let t = (0, $w.useContext)(Le),
        r = Zt();
    return w(f, {
        height: "100%",
        display: "flex",
        position: "relative",
        flexDirection: "column",
        padding: "28px 24px 32px",
        id: "help-panel",
        overflowY: "auto",
        backdropFilter: "blur(4px)",
        backgroundColor: Ie("lightGray", .96),
        ...o,
        children: [a(Bt, {
            text: "Here's a vast knowledge base for your future creativity",
            indent: 24,
            placement: "left",
            open: r.modalStatus === "unshowWithTooltip",
            componentsProps: {
                tooltip: {
                    backgroundColor: "blue"
                },
                arrow: {
                    color: "blue"
                }
            },
            children: a("div", {
                children: e
            })
        }), a(K5, {
            onHelpTourClick: () => {
                t.dispatch({
                    type: "setOnboardingType",
                    onboardingType: "tour"
                })
            }
        }), a(f, {
            display: "flex",
            flexDirection: "column",
            marginTop: "auto",
            gap: "2rm",
            children: a(f, {
                children: a(jH, {})
            })
        })]
    })
}
var jH = () => {
        let e = (0, $w.useContext)(Le),
            o = t => {
                t || (window.RM.constructorRouter.trigger("notice:hide"), window.RM.constructorRouter.trigger("notice:triggerEduTipClose")), e.dispatch({
                    type: "toggleShowTips"
                }), re(fe.SettingsGeneral, {
                    settingsType: "contextual tips",
                    toggle: `${t?"on":"off"}`,
                    zone: "editor"
                })
            };
        return w(f, {
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            children: [a(f, {
                children: a(A, {
                    textStyle: "small",
                    children: "Contextual tips"
                })
            }), a(f, {
                children: a(Nt, {
                    backgroundChecked: "tomato",
                    checked: e.showTips,
                    onChange: o
                })
            })]
        })
    },
    Z5 = f.withComponent(GH);
Tt();
Ue();
y();
var qH = () => a(we, {
    lineHeight: "48px",
    color: "black",
    textStyle: "subheading",
    children: "Help"
});

function J5({
    children: e,
    button: o,
    name: t,
    ...r
}) {
    return a(Yt, {
        name: t,
        skidding: -84,
        button: o,
        ArrowProps: {
            stroke: Be(.84, q.gray)
        },
        ...r,
        children: a(Z5, {
            width: "100%",
            borderRadius: "2rm",
            padding: "0 16px 16px 16px",
            overflowX: "hidden",
            border: "2px solid rgba(184, 184, 184, 0.16)",
            HelpPanelHeader: a(qH, {})
        })
    })
}
He();
Ro();
nI();
y();

function Q5({
    width: e = "100%",
    disableTooltip: o,
    tooltipText: t,
    ...r
}) {
    return a(Bt, {
        instance: !0,
        text: t,
        indent: 8,
        open: o ? !1 : void 0,
        leaveDelay: 100,
        closeOnTargetClick: !0,
        children: a(Ge, {
            color: "white",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            variant: "unstyled",
            height: "100%",
            width: e,
            "aria-label": t,
            "data-testid": "projectSettings-button",
            ...r,
            children: a(qv, {
                width: "24px",
                height: "24px",
                hoverBox: {
                    width: 56,
                    height: 56
                }
            })
        })
    })
}
var id = M(F());
W();
te();
Jt();
var Dr = M(F());
W();
He();
ar();
Ee();
zd();
ut();
vr();
Ho();
_c();
var eT = e => e ? xr(new Date(e), "d MMMM, yyyy") : "";
$a();
var tT = e => po.post("/api/featured/submit", {
        url: e
    }),
    oT = e => po.delete("/api/featured/submit", {
        url: e
    });
Ye();
Sr();
zd();
Ro();
be();
be();
te();
y();

function Ma({
    children: e,
    ...o
}) {
    return a(ge, {
        variant: "unstyled",
        display: "block",
        width: "100%",
        height: 40,
        lineHeight: "40px",
        marginBottom: 8,
        borderRadius: 8,
        textStyle: "small",
        cursor: "pointer",
        color: "white",
        transition: ".1s ease-in",
        userSelect: "none",
        ...o,
        children: e
    })
}
var YH = () => {
    let {
        isHovered: e,
        ...o
    } = Ze(!1), {
        project: t
    } = (0, Dr.useContext)(me), r = fi(t), [i, n] = (0, Dr.useState)(!!t ? .submitted_for_featured), s = (0, Dr.useMemo)(() => {
        let m = window.RM.constructorRouter.me.get("stripe") || {};
        return m.subscription_status === "active" || m.subscription_status === "trialing"
    }, []), l = async (m, u) => {
        try {
            await m(`${ae.readymag_host}/${t.num_id}/`), n(u), re(fe.SettingsProject, {
                settingsType: `submit to examples ${u?"on":"off"}`
            })
        } catch {
            console.warn("sendToExamples error")
        }
    }, p = () => {
        if (!s) {
            tt("submit-to-examples");
            return
        }
        i ? l(oT, !1) : l(tT, !0)
    }, d = w(A, {
        textStyle: "small",
        marginTop: 8,
        marginBottom: 8,
        children: ["The R/m design team will review ", a("br", {}), "your website and email you ", a("br", {}), "if it is selected into", " ", a(ze, {
            isUnderlined: !0,
            color: "white",
            target: "_blank",
            rel: "noopener noreferrer",
            href: "https://readymag.com/examples",
            css: ne `
          &:hover {
            color: white;
            text-decoration: none;
          }
        `,
            children: "Examples"
        })]
    }), c = w(A, {
        textStyle: "small",
        marginTop: 8,
        marginBottom: 8,
        children: ["Revoke your submission", a("br", {}), "to Examples if you changed your mind"]
    });
    return r !== "unpublished" ? a(Y, {
        children: a(Bt, {
            interactive: !0,
            text: i ? c : d,
            indent: 4,
            componentsProps: {
                tooltip: {
                    width: 186
                },
                arrow: {
                    marginLeft: 68
                }
            },
            children: a(f, {
                children: a(Ma, {
                    onClick: p,
                    backgroundColor: e ? "tomato" : "gray",
                    ...o,
                    children: i ? "Revoke submission" : "Submit to Examples"
                })
            })
        })
    }) : null
};

function XH() {
    let {
        isHovered: e,
        ...o
    } = Ze(!1), {
        isHovered: t,
        ...r
    } = Ze(!1), {
        isHovered: i,
        ...n
    } = Ze(!1), s = (0, Dr.useContext)(me), l = fi(s.project), [p, d] = (0, Dr.useState)(!1);
    return l === "unpublishedChanges" ? p ? w(f, {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        gap: 8,
        children: [a(Ma, {
            onClick: s.restoreToPublished,
            backgroundColor: t ? "tomato" : "gray",
            ...r,
            children: "Restore"
        }), a(Ma, {
            onClick: () => d(!1),
            backgroundColor: i ? "tomato" : "gray",
            ...n,
            children: "Cancel"
        })]
    }) : a(Ma, {
        onClick: () => d(!0),
        backgroundColor: e ? "tomato" : "gray",
        ...o,
        children: e ? eT(s.project.updated) : "Restore to last published"
    }) : null
}

function KH(e) {
    let {
        isHovered: o,
        ...t
    } = Ze(!1), r = (0, Dr.useContext)(me), i = fi(r.project), n = (0, Dr.useContext)(Le), {
        showNotice: s
    } = Dd(), p = `${ae.readymag_viewer_host}/${r.project.user.uri}/${r.project.uri}/`, d = !r.isPublishError && !r.publishInProgress && i === "sameAsPublished", c = (0, Dr.useCallback)(async () => {
        if (i !== "sameAsPublished" && !r.publishInProgress) try {
            await r.publishWithNotice({
                alsoExport: n.exportAsTemlate,
                dontRenewScreenshots: n.dontRenewScreenshots,
                isSharedAsTemplate: n.isCopyableSwitcherEnabled
            })
        } catch (g) {
            if (g instanceof Ga && g.type === "warning") {
                await r.publishWithNotice({
                    skipWarnings: !0,
                    alsoExport: n.exportAsTemlate,
                    dontRenewScreenshots: n.dontRenewScreenshots,
                    isSharedAsTemplate: n.isCopyableSwitcherEnabled
                });
                let h = ["type-widget-shots", "type-code-injection", "type-widget-shots", "type-widget-lottie"];
                g.tag && h.includes(g.tag) ? tt("widgets") : tt("default")
            } else if (g instanceof Ga) {
                let h = {
                    canBeClosed: !0,
                    closeByTimer: !0
                };
                g.tag === "type-publish-noemail" ? s(g.message, h) : g.tag === "type-publish-limit" ? tt("publish-limit") : g.tag === "type-free-publish-template-limit" ? tt("free-publish-template-limit") : g.tag === "type-publish-paused-subcription" ? s(g.message, h) : tt("default")
            } else throw g
        }
    }, [i, r.publishInProgress, n.exportAsTemlate, n.isCopyableSwitcherEnabled, r.project.isCopyableTemplate]), m = i === "unpublished" || i === "unpublishedChanges", u = i === "unpublishedChanges";
    return d ? a(Ma, {
        as: "a",
        href: p,
        target: "_blank",
        background: "transparent",
        color: "tomato",
        marginBottom: 0,
        height: 40,
        ...t,
        children: o ? "Open" : "Published"
    }) : a(Ma, {
        "data-testid": "publish-button",
        backgroundColor: m ? "tomato" : "transparent",
        color: m ? "white" : "tomato",
        onClick: c,
        marginBottom: 0,
        height: i === "unpublished" ? 56 : 40,
        ...e,
        children: r.publishInProgress ? a(f, {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            width: "100%",
            height: "100%",
            children: a(Rt, {
                size: u ? 24 : 28,
                bgColor: "transparent"
            })
        }) : r.isPublishError ? "Error" : i === "unpublished" ? "Publish" : "Republish"
    })
}

function ZH() {
    let {
        isHovered: e,
        ...o
    } = Ze(!1), t = (0, Dr.useContext)(me);
    return fi(t.project) !== "unpublished" ? a(Ma, {
        onClick: t.unpublish,
        backgroundColor: e ? "tomato" : "gray",
        ...o,
        children: "Unpublish"
    }) : null
}

function rT() {
    return a(f, {
        padding: "0 16px",
        children: w(f, {
            padding: "14px 0 16px",
            borderTop: "2px solid",
            borderTopColor: "gray",
            children: [a(YH, {}), a(XH, {}), a(ZH, {}), a(KH, {})]
        })
    })
}
var iT = M(F());
He();
W();
be();
rr();
Ee();
y();

function nT() {
    let o = (0, iT.useContext)(me) ? .owner ? .permissions ? .can_use_version_history;
    return !Ve("constructor.versionHistoryUI") || !o ? null : a(f, {
        display: "flex",
        height: "12rm",
        marginLeft: "4rm",
        marginRight: "4rm",
        borderTop: "2px solid",
        borderTopColor: "gray",
        children: a(Ge, {
            onClick: z1,
            color: "black",
            children: a(we, {
                fontSize: "6rm",
                fontWeight: 500,
                children: "Version history"
            })
        })
    })
}
var ys = M(F());
W();
be();
Fr();
var sT = M(F());
W();
He();
te();
y();
var aT = (0, sT.memo)(({
    isSomeSelected: e,
    isAllSelected: o,
    onDoneClick: t,
    onSelectAllClick: r,
    dividerColor: i,
    canUseEmailProtection: n,
    ...s
}) => w(f, {
    display: "flex",
    height: 88,
    paddingLeft: n ? 16 : 24,
    paddingRight: n ? 16 : 24,
    justifyContent: "center",
    alignItems: "center",
    position: "relative",
    ...s,
    children: [!n && a(f, {
        height: 2,
        position: "absolute",
        top: -1,
        left: "8px",
        right: "8px",
        borderRadius: "2px",
        backgroundColor: i || "gray"
    }), a(ge, {
        "data-testid": n ? "private-pages-select-all" : "private-pages-done",
        textStyle: "small",
        color: n ? "white" : e ? "tomato" : "white",
        onClick: n ? r : t,
        cursor: "pointer",
        backgroundColor: n ? "tomato" : "unset",
        borderRadius: n ? "8px" : "unset",
        height: n ? "40px" : "auto",
        width: n ? "100%" : "auto",
        marginBottom: n ? 16 : 0,
        css: ne `
            &:hover,
            &:focus,
            &:active {
              color: ${n?"white":e?"tomato":"white"};
              opacity: 1;
            }
          `,
        children: n ? "Protect the whole project" : e ? "Done" : "Close"
    })]
}));
aT.displayName = "PrivatePagesFooter";
var lT = aT;
var mc = M(F());
Ee();
W();
Ue();
tl();
be();
y();
var Hw = (0, mc.memo)(({
    page: e,
    level: o = 0,
    childIndex: t,
    onSelectPage: r,
    viewport: i,
    ...n
}) => {
    let s = (0, mc.useContext)(me),
        l = !!(e.children && e.children.length),
        p = (0, mc.useMemo)(() => s.pagesParams[e._id] ? s.pagesParams[e._id].parentId ? s.pagesParams[s.pagesParams[e._id].parentId].viewNum : s.pagesParams[e._id].viewNum : e.num, [e, o, s.pagesParams]),
        d = c => {
            c.preventDefault(), r(e)
        };
    return w(f, {
        "data-pageid": e._id,
        ...n,
        children: [a(f, {
            width: 200,
            height: 132,
            padding: "4px",
            borderRadius: "4px",
            position: "relative",
            boxShadow: e.isPrivate ? `0 0 0 4px ${q.red}` : void 0,
            onClick: d,
            cursor: "pointer",
            transformOrigin: "left",
            overflow: "hidden",
            flex: "0 0 auto",
            transform: `scale(${o?"0.92":"1"})`,
            children: a(f, {
                width: 192,
                height: 124,
                backgroundColor: "darkGray",
                borderRadius: "4px",
                position: "relative",
                children: a(Un, {
                    desktopUrl: e.screenshot,
                    phonePortraitUrl: e.viewport_phone_portrait ? .screenshot,
                    tabletPortraitUrl: e.viewport_tablet_portrait ? .screenshot,
                    phoneViewportEnabled: e.viewport_phone_portrait ? .enabled,
                    tabletViewportEnabled: e.viewport_tablet_portrait ? .enabled,
                    viewport: i
                })
            })
        }), w(f, {
            display: "flex",
            marginBottom: l ? "4px" : void 0,
            marginTop: o > 0 ? "-2px" : "4px",
            marginLeft: "4px",
            children: [l && a(f, {
                display: "flex",
                width: 12,
                height: 12,
                alignItems: "center",
                justifyContent: "center",
                zIndex: 1,
                marginRight: "2px",
                marginTop: "2px",
                children: a(qo, {
                    color: "white"
                })
            }), w(A, {
                textStyle: "small",
                color: "white",
                children: [p, t ? `.${t}` : "", ".\xA0", e.title ? e.title : "Page Title"]
            })]
        }), e.children && l ? a(f, {
            children: e.children.map((c, m) => a(Hw, {
                page: c,
                level: o + 1,
                childIndex: m + 1,
                onSelectPage: r,
                marginLeft: (o + 1) * 16
            }, c._id))
        }) : null]
    })
});
Hw.displayName = "PrivatePage";
var cT = Hw;
var Tn = M(F());
W();
te();
Ee();
y();
var pT = (0, Tn.memo)(({
    id: e,
    children: o,
    footer: t,
    footerHeight: r,
    ...i
}) => {
    let n = (0, Tn.useContext)(Le),
        [s, l] = (0, Tn.useState)(!1);
    (0, Tn.useEffect)(() => {
        n.isPrivatePagesOpened ? (n.isPageSettingsOpened || n.isTrashOpened) && (l(!0), setTimeout(() => {
            n.dispatch({
                type: n.isPageSettingsOpened ? "togglePageSettings" : "toggleTrash"
            }), l(!1)
        }, 0)) : s && l(!1), n.isPrivatePagesOpened ? document.body.classList.add("private-pages-is-opened") : document.body.classList.remove("private-pages-is-opened")
    }, [n.isPrivatePagesOpened]), (0, Tn.useEffect)(() => {
        n.privatePageSelected && p(n.privatePageSelected)
    }, [n.privatePageSelected]);
    let p = d => {
        if (!n.isPrivatePagesOpened) return;
        let c = document.getElementById("constructor-private-pages");
        if (!c) return;
        let m = c.querySelector(`[data-pageid="${d}"]`);
        m && setTimeout(() => {
            m.scrollIntoView({
                block: "center",
                behavior: "smooth"
            })
        }, 100)
    };
    return w(f, {
        id: e,
        height: "100%",
        width: 240,
        paddingTop: 0,
        backdropFilter: "blur(4px)",
        backgroundColor: Ie("black", .96),
        zIndex: s ? go.sidebarZindex + 1 : go.sidebarZindex,
        overflowX: "hidden",
        overflowY: "auto",
        ...i,
        children: [a(f, {
            height: `calc(100% - ${r+(typeof r=="number"?"px":"")})`,
            overflow: "auto",
            children: o
        }), t({
            height: r
        })]
    })
});
pT.displayName = "PrivatePagesPanel";
var dT = pT;
Ee();
Ut();
y();
var uT = (0, ys.memo)(({
    children: e,
    ...o
}) => {
    let t = (0, ys.useContext)(Le),
        r = (0, ys.useContext)(me),
        {
            viewport: i
        } = (0, ys.useContext)(je),
        n = u => u.every(g => g.isPrivate && (g.children ? n(g.children) : !0)),
        [s, l] = (0, ys.useState)(() => n(r.pages)),
        p = r.pages.some(u => u.isPrivate),
        d = u => {
            r.setPageIsPrivate({
                pageId: u._id,
                isPrivate: !u.isPrivate
            })
        },
        c = () => {
            t.isPrivatePagesOpened && t.dispatch({
                type: "togglePrivatePages"
            })
        },
        m = () => {
            l(!s), r.setPageIsPrivate({
                isPrivate: !s,
                updateAll: !0
            })
        };
    return a(dT, {
        id: "constructor-private-pages",
        borderRadius: "2rm",
        footerHeight: "56px",
        footer: ({
            height: u
        }) => a(lT, {
            dividerColor: "rgba(128, 128, 128, 0.4)",
            height: u,
            isSomeSelected: p,
            isAllSelected: s,
            canUseEmailProtection: !!r.project.user ? .permissions.can_make_mag_private_by_email,
            onDoneClick: c,
            onSelectAllClick: m
        }),
        ...o,
        children: a(Ft, {
            children: ({
                ref: u
            }) => w(f, {
                ref: u,
                padding: "16px 16px 0 16px",
                children: [a(f, {
                    display: "flex",
                    alignItems: "center",
                    height: "16px",
                    marginBottom: "16px",
                    children: a(A, {
                        color: "white",
                        textStyle: "subheading",
                        textAlign: "left",
                        children: "Select pages"
                    })
                }), r.pagesTree.map(g => a(cT, {
                    page: g,
                    onSelectPage: d,
                    viewport: i,
                    margin: "0 0 8px -4px"
                }, g._id))]
            })
        })
    })
});
uT.displayName = "PrivatePages";
var mT = uT;
Ee();
Tt();
Ue();
y();

function gT({
    children: e,
    button: o,
    ...t
}) {
    let r = (0, id.useContext)(Le),
        {
            openPanel: i
        } = (0, id.useContext)(_t),
        n = window ? .location ? .hash === "#settings-domain",
        s = n ? 3 : void 0;
    return (0, id.useEffect)(() => {
        n && i("project-settings")
    }, []), w(Yt, {
        name: "project-settings",
        skidding: -28,
        button: o,
        ArrowProps: {
            stroke: Be(.84, q.gray)
        },
        ...t,
        children: [a(ds, {
            isOpen: r.isPrivatePagesOpened,
            direction: "right",
            children: a(mT, {})
        }), w(f, {
            display: "flex",
            height: "100%",
            flexDirection: "column",
            borderRadius: "2rm",
            backdropFilter: "blur(4px)",
            backgroundColor: Ie("lightGray", .96),
            border: "2px solid rgba(184, 184, 184, 0.16)",
            zIndex: "1",
            children: [a(f, {
                display: "flex",
                minHeight: "calc(100% - 280px)",
                flexGrow: 1,
                children: a(eC, {
                    exclude: ["viewer"],
                    defaultAccordionValue: s,
                    renderButtonContainer: l => a(f, {
                        padding: "0 16px",
                        children: l
                    }),
                    renderCollapseContainer: l => a(f, {
                        padding: "0 16px",
                        children: l
                    })
                })
            }), w(f, {
                children: [a(nT, {}), a(rT, {})]
            })]
        })]
    })
}
var hT = M(F());
te();
He();
Ho();
W();
be();
y();
var Ba = ({
    text: e,
    backgroundColor: o = "blue",
    width: t
}) => a(f, {
    height: "56px",
    width: t,
    backgroundColor: o,
    borderRadius: 8,
    padding: "0 16px",
    children: a(we, {
        textStyle: "subheading",
        color: "white",
        lineHeight: "56px",
        userSelect: "none",
        children: e
    })
});
$n();
y();
var fT = () => {
    let {
        isEditorModeEnabled: e,
        canChangeLockedLayoutMode: o
    } = (0, hT.useContext)(Sn), [t] = uo(), {
        isHovered: r,
        ...i
    } = Ze(), n = Ei("CanUseDefaultMode") || o, s;
    return n ? s = a(ge, {
        onClick: () => {
            window.RM.constructorRouter.toggleSelfEditorMode()
        },
        ...i,
        children: a(Ba, {
            width: 179,
            text: r ? "Unlock layout" : "Layout locked",
            backgroundColor: Ie("darkGray", .96)
        })
    }) : s = a(Ba, {
        width: 179,
        text: "Layout locked",
        backgroundColor: Ie("darkGray", .96)
    }), e && !t ? s : null
};
He();
be();
Ho();
te();
var xT = M(F());
He();
var ks = M(F());
jv();
$n();
No();
kt();
y();
var _s = (0, ks.createContext)({});

function bT({
    children: e
}) {
    let o = window.RM.constructorRouter.gg,
        [t, r] = (0, ks.useState)(() => !!o.mag.edit_params.get("blocks"));

    function i() {
        Oe("TurnOnTheBlocksMode"), window.RM.constructorRouter.toggleBlocksMode()
    }

    function n(s) {
        r(s.get("blocks"))
    }
    return (0, ks.useEffect)(() => (o.mag.edit_params.on("change:blocks", n), () => {
        o.mag.edit_params.off("change:blocks", n)
    }), []), a(_s.Provider, {
        value: {
            isBlocksEnabled: t,
            toggleBlocks: i
        },
        children: e
    })
}

function wT() {
    let {
        toggleBlocks: e
    } = (0, ks.useContext)(_s), o = Ei("CanUseBlocksMode"), t = "Blocks (B)";
    return a(sn, {
        permission: "CanUseBlocksMode",
        children: a(mt, {
            targetSteps: ["TurnOnTheBlocksMode"],
            position: "left",
            indent: 8,
            delay: 1400,
            leaveDelay: 100,
            defaultText: t,
            instance: !0,
            children: a(ge, {
                color: "white",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                variant: "unstyled",
                width: 56,
                height: 56,
                "aria-label": t,
                onClick: e,
                disabled: !o,
                children: a(ou, {})
            })
        })
    })
}
y();

function vT() {
    let {
        isHovered: e,
        ...o
    } = Ze(), {
        isBlocksEnabled: t,
        toggleBlocks: r
    } = (0, xT.useContext)(_s);
    return t ? a(ge, {
        onClick: () => {
            r()
        },
        ...o,
        children: a(Ba, {
            width: 138,
            backgroundColor: Ie("darkGray", .96),
            text: e ? "Turn Off" : w(Y, {
                children: ["Blocks", " ", a(A, {
                    as: "span",
                    textStyle: "subheading",
                    color: "gray",
                    children: "On"
                })]
            })
        })
    }) : null
}
var nd = M(F());
var Ug = M(F());
W();
be();
Ue();
te();
Ee();
y();
var JH = kd `
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
`;

function Fw({
    index: e = 0
}) {
    return a(f, {
        display: "inline",
        animation: `${JH} 2.4s infinite steps(1) ${e*.4}s`,
        children: "."
    })
}

function QH({
    iAmOwner: e,
    name: o,
    avatarUrl: t
}) {
    let r = (0, Ug.useContext)(me),
        [i, n] = (0, Ug.useState)(!1);
    return w(Il, {
        onMouseEnter: () => e && n(!0),
        onMouseLeave: () => n(!1),
        position: "relative",
        width: "auto",
        paddingRight: "30px",
        css: ne `
        &:hover {
          background: ${i?q.black:q.darkGray};
        }
      `,
        children: [a(qt, {
            size: "medium",
            url: t,
            name: o,
            width: "54px",
            height: "54px",
            marginLeft: "1rm"
        }), w(f, {
            display: "flex",
            flexDirection: "column",
            marginLeft: "16px",
            children: [a(A, {
                color: "white",
                lineHeight: "1",
                children: o
            }), w(A, {
                color: "gray",
                lineHeight: "1",
                children: ["editing now", a(Fw, {
                    index: 0
                }), a(Fw, {
                    index: 1
                }), a(Fw, {
                    index: 2
                })]
            })]
        }), i && a(f, {
            color: "white",
            backgroundColor: "black",
            position: "absolute",
            left: 0,
            right: 0,
            top: 0,
            bottom: 0,
            borderRadius: "28px",
            lineHeight: "56px",
            textAlign: "center",
            onClick: () => r.takeOverCurrentPage(),
            children: "Take Over"
        })]
    })
}
var yT = QH;
Ee();
y();

function kT() {
    let e = (0, nd.useContext)(me),
        {
            user: o
        } = (0, nd.useContext)(pr),
        [t] = uo(),
        r = (0, nd.useMemo)(() => {
            let i = e.lockedPages[e.currentPageId];
            return i && i !== o ? .uri ? e.collaborators.find(n => n.uri === i) : void 0
        }, [e.currentPageId, e.collaborators, e.lockedPages, o ? .uri]);
    return !r || t ? null : r && a(yT, {
        iAmOwner: e.isOwner,
        name: r.name,
        avatarUrl: r.pic
    })
}
var _T = M(F());
No();
kt();
y();
var CT = () => {
    let e = (0, _T.useCallback)(() => {
        Cx()
    }, []);
    return a(Kv, {
        onStop: e
    })
};
var ST = M(F());
He();
Ho();
te();
y();

function PT() {
    let [e, o] = uo(), {
        isHovered: t,
        onMouseEnter: r,
        onMouseLeave: i
    } = Ze(!1);
    return (0, ST.useEffect)(() => {
        e || i({})
    }, [e, i]), e ? a(Ge, {
        onClick: () => o(!1),
        onMouseEnter: r,
        onMouseLeave: i,
        children: a(Ba, {
            width: 148,
            backgroundColor: Ie("darkGray", .96),
            text: t ? "Turn off" : "Comments"
        })
    }) : null
}
Yv();
var Cs = M(F());
W();
Ho();
Jt();
var TT = M(F());
y();
var Gg = (0, TT.forwardRef)((e, o) => a("svg", {
    width: "26",
    height: "26",
    viewBox: "0 0 26 26",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: o,
    ...e,
    children: a("path", {
        d: "M25 13C25 19.6274 19.6274 25 13 25C9.41592 25 6.57143 25 1 25C0.999999 20.7143 1 16.0433 1 13C1 6.37258 6.37258 1 13 1C19.6274 1 25 6.37258 25 13Z",
        stroke: "currentColor",
        strokeWidth: "2"
    })
}));
W();
He();
Ro();
y();

function jg({
    onClick: e,
    tooltipPlacement: o = "top",
    disableTooltip: t
}) {
    let [r] = Kn();
    return a(Bt, {
        placement: o,
        disabled: t,
        indent: 8,
        leaveDelay: 100,
        text: "Comments (C)",
        instance: !0,
        closeOnTargetClick: !0,
        children: a(f, {
            position: "relative",
            children: a(ge, {
                color: "white",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                variant: "unstyled",
                width: 56,
                height: 56,
                "aria-label": "Comments",
                onClick: e,
                children: a(Hi, {
                    show: !!r.totalNew,
                    offset: [-8, 0],
                    children: a(Gg, {})
                })
            })
        })
    })
}
var IT = M(F());
Ro();
He();
$h();
$n();
y();

function MT() {
    let {
        canChangeLockedLayoutMode: e
    } = (0, IT.useContext)(Sn), o = Ei("CanUseDefaultMode") || e;
    return a(Bt, {
        placement: "right",
        indent: 8,
        leaveDelay: 100,
        text: "Default (V)",
        instance: !0,
        children: a(Ge, {
            color: "white",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            variant: "unstyled",
            width: 56,
            height: 56,
            disabled: !o,
            onClick: () => {
                window.RM.constructorRouter.disableCurrentMode()
            },
            "aria-label": "Default",
            children: a(Fs, {})
        })
    })
}
y();

function eF({
    children: e
}) {
    let {
        closePanels: o
    } = (0, Cs.useContext)(_t), {
        isHovered: t,
        ...r
    } = Ze();
    return a(f, {
        width: "100%",
        textAlign: "center",
        children: a(f, {
            display: "inline-block",
            width: 56,
            height: 56,
            marginTop: 8,
            borderRadius: 8,
            background: t ? "#282828" : "#808080",
            transition: ".2s ease",
            onClick: o,
            ...r,
            children: e
        })
    })
}

function BT({
    children: e,
    button: o,
    hideButton: t = !1,
    ...r
}) {
    let {
        isBlocksEnabled: i
    } = (0, Cs.useContext)(_s), {
        isEditorModeEnabled: n
    } = (0, Cs.useContext)(Sn), [s, l] = uo(), p = (0, Cs.useCallback)(() => {
        l(!s)
    }, [s]), d = (0, Cs.useMemo)(() => {
        let c = {
                key: "enable-blocks",
                children: a(wT, {})
            },
            m = {
                key: "enable-edit-role",
                children: a(h5, {
                    isActive: !0
                })
            },
            u = {
                key: "default-mode",
                children: a(MT, {})
            },
            g = {
                key: "comments-mode",
                children: a(jg, {
                    tooltipPlacement: "right",
                    onClick: p
                })
            };
        return s ? [c, u, m] : i ? [u, m, g] : n ? [c, u, g] : [c, m, g]
    }, [i, n, s, p]);
    return a(Yt, {
        skidding: t ? 28 : 0,
        name: "modes",
        button: t ? () => a("div", {}) : o,
        withArrow: !1,
        panelPosition: {
            width: 56,
            height: "auto"
        },
        ...r,
        width: t ? "0px" : r.width,
        children: d.map(c => a(eF, {
            children: c.children
        }, c.key))
    })
}
var sd = M(F());
He();
$h();
jv();
ai();
No();
vr();
kt();
y();

function RT({
    isPanelShown: e
}) {
    let {
        isBlocksEnabled: o
    } = (0, sd.useContext)(_s), {
        isEditorModeEnabled: t
    } = (0, sd.useContext)(Sn), [r] = uo(), [i] = Kn(), [{
        message: n,
        visible: s
    }] = Xa();
    return (0, sd.useEffect)(() => {
        e && Oe("ClickOnModesIcon")
    }, [e]), a(mt, {
        eduTips: ["eduTipUseBlocks", "eduTipUseComments"],
        targetSteps: ["ClickOnModesIcon"],
        defaultText: "Modes",
        position: n === "eduTipUseBlocks" && s ? "left" : "top",
        indent: 8,
        disabled: e,
        leaveDelay: 100,
        instance: !0,
        closeOnTargetClick: !0,
        children: a(ge, {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            variant: "unstyled",
            height: "100%",
            width: "100%",
            position: "relative",
            color: "white",
            "aria-label": "Modes",
            "data-testid": "modes-button",
            children: a(Hi, {
                show: !!i.totalNew && !e,
                offset: [2, 10],
                children: r ? a(Gg, {}) : o ? a(ou, {
                    withTransition: !0
                }) : t ? a(Fs, {
                    withTransition: !0,
                    isActive: !0
                }) : a(Fs, {
                    withTransition: !0,
                    isActive: !1
                })
            })
        })
    })
}
var Io = M(F());
Tt();
W();
be();
_r();
W();
te();
y();
var tF = Mt(N(f, {
            excludeProps: ["isAbsolute"]
        })
        `
    width: 100%;
    height: 100%;
    overflow: hidden;
    ${e=>e.isAbsolute?"position: absolute":"position: relative"};
    top: 0;
    left: 0;
  `),
    oF = N("div", {
        excludeProps: ["color", "speed"]
    })
`
  width: 100%;
  height: 100%;
  transform: translateX(-100%);
  background-image: linear-gradient(
    90deg,
    ${e=>e.color?Ie(e.color,0):Ie("white",0)} 0,
    ${e=>e.color?Ie(e.color,.2):Ie("white",.2)} 20%,
    ${e=>e.color?Ie(e.color,.6):Ie("white",.6)} 65%,
    ${e=>e.color?Ie(e.color,0):Ie("white",0)}
  );
  background-repeat: no-repeat;
  animation: shimmerLoading ${e=>e.speed?e.speed:"2s"} infinite;
  @keyframes shimmerLoading {
    to {
      transform: translateX(100%);
    }
  }
`;

function rF({
    isVisible: e,
    isAbsolute: o,
    color: t,
    speed: r
}) {
    return a(So, {
        children: e && a(tF, {
            initial: {
                opacity: 1
            },
            exit: {
                opacity: 0
            },
            isAbsolute: o,
            children: a(oF, {
                color: t,
                speed: r
            })
        })
    })
}
var Nw = rF;
V6();
Ue();
var zT = M(F());
Tt();
W();
Ue();
te();
y();
var ET = (0, zT.forwardRef)(({
    children: e,
    backgroundColor: o,
    height: t,
    overflow: r,
    zIndex: i
}, n) => a(f, {
    ref: n,
    display: "flex",
    height: t || "100%",
    borderRadius: "2rm",
    maxHeight: "inherit",
    flexDirection: "column",
    paddingBottom: 2,
    color: "black",
    backgroundColor: Ie(o || "lightGray", .96),
    backdropFilter: "blur(4px)",
    zIndex: i || "auto",
    boxShadow: `0 0 0 2px inset ${Be(.84,q.gray)}`,
    overflow: r || "auto",
    children: e
}));
W();
Fr();
var AT = M(F());
_r();
W();
U6();
y();
var iF = Mt(f),
    nF = {
        open: {
            height: "auto"
        },
        collapsed: {
            height: 0
        }
    };

function DT({
    duration: e,
    ease: o = "easeOut",
    variants: t = nF,
    isVisible: r,
    children: i,
    ...n
}) {
    let s = (0, AT.useRef)(null),
        l = cv(s);
    return a(iF, {
        initial: r ? "open" : "collapsed",
        animate: r ? "open" : "collapsed",
        inherit: !1,
        variants: t,
        overflow: "hidden",
        transition: {
            ease: o,
            duration: typeof e == "number" ? e : sF(l.height) / 1e3
        },
        ...n,
        children: typeof i == "function" ? i(s) : a("div", {
            ref: s,
            children: i
        })
    })
}

function sF(e) {
    if (!e) return 0;
    let o = e / 36;
    return Math.round((4 + 15 * o ** .25 + o / 5) * 10)
}
y();

function LT({
    children: e,
    isCollapsed: o,
    onScroll: t,
    initialScrollTop: r
}) {
    function i(n) {
        r && n.scrollTo({
            top: r
        })
    }
    return a(Ft, {
        onScroll: t,
        onFirstRender: i,
        children: ({
            ref: n
        }) => a(f, {
            ref: n,
            flex: 1,
            padding: "0 8px",
            children: a(DT, {
                duration: .2,
                isVisible: !o,
                children: e
            })
        })
    })
}
Jt();
Ee();
Ut();
y();
var aF = {
        status: "unresolved"
    },
    lF = () => {
        let e = sessionStorage.getItem(uf);
        return e ? Number(e) : (window.innerHeight || 600) / 3 * 2
    },
    cF = () => a(f, {
        width: "100%",
        height: "100%",
        padding: "0 24px 0 16px",
        display: "flex",
        alignItems: "center",
        children: a(we, {
            color: "darkGray",
            textStyle: "small",
            children: "Click anywhere on the page to leave a comment"
        })
    });

function OT({
    children: e,
    button: o,
    ...t
}) {
    let {
        openPanel: r,
        closePanels: i,
        currentPanel: n
    } = (0, Io.useContext)(_t), {
        pages: s,
        me: l,
        owner: p,
        projectTeam: d,
        changeWorkspace: c,
        project: m
    } = (0, Io.useContext)(me), {
        page: u,
        setViewport: g
    } = (0, Io.useContext)(je), [h] = c1(), b = h !== "loaded" && h !== "error", x = Vu(aF), [S] = Kn(), [v, P] = an(), C = (0, Io.useRef)(0);
    (0, Io.useEffect)(() => {
        n === void 0 && !v ? r("comments") : n === "comments" && v && !v.fromList && i()
    }, [n, v]);
    let k = (0, Io.useCallback)((Q, U) => {
            let Z = Q.parentComment ? ? Q.comment;
            if (U === "selected") {
                P(null);
                return
            }(Z.viewport === "default" || u ? .getViewportParam(Z.viewport, "enabled")) && requestAnimationFrame(() => {
                g(Z.viewport)
            }), requestAnimationFrame(() => {
                c({
                    id: Z.pageId
                }), P({
                    comment: Z,
                    fromList: !0
                })
            })
        }, [u, g]),
        T = (0, Io.useCallback)(Q => {
            let U = Q.parentComment ? ? Q.comment;
            P({
                comment: U,
                fromList: !0
            })
        }, []);

    function R(Q) {
        Q && v && !v.fromList && P({
            comment: v.comment,
            fromList: !0
        })
    }
    let [I, B] = (0, Io.useState)(lF()), L = (0, Io.useCallback)(Q => {
        B(Q), sessionStorage.setItem(uf, `${Q}`)
    }, []), D = (0, Io.useRef)(null), {
        isResizable: E,
        onMouseDown: $
    } = lv({
        ref: D,
        min: 215,
        max: () => window.innerHeight - 32 - 72,
        onResizeComplete: L,
        initialHeight: I,
        direction: av.reverse
    }), G = (0, Io.useRef)(document.getElementById("main"));
    (0, Io.useLayoutEffect)(() => (E ? (G.current ? .classList.remove("comment-cursor"), G.current ? .classList.add("resize-comment-panel")) : (G.current ? .classList.remove("resize-comment-panel"), G.current ? .classList.add("comment-cursor")), () => {
        G.current ? .classList.remove("resize-comment-panel")
    }), [E]);

    function de(Q) {
        Q.stopPropagation(), n === "comments" ? r("modes") : n === "modes" ? r("comments") : n === void 0 && (r("comments"), v && P({
            comment: v.comment,
            fromList: !0
        }))
    }
    return a(Yt, {
        skidding: 82,
        button: o,
        name: "comments",
        isAutoHeight: !0,
        closeOnOutsideClick: !1,
        ArrowProps: {
            stroke: Be(.84, q.gray)
        },
        disableInteractions: E,
        onToggle: R,
        "data-testid": "comment-panel",
        onButtonClick: de,
        ...t,
        children: w(ET, {
            ref: D,
            height: I,
            zIndex: 1,
            overflow: "hidden",
            children: [a(f, {
                width: "100%",
                padding: "4px 0 8px 0",
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
                cursor: "row-resize",
                onMouseDown: $,
                children: a(f, {
                    width: 24,
                    height: 4,
                    borderRadius: 8,
                    backgroundColor: "gray"
                })
            }), x.length === 0 ? a(cF, {}) : a(LT, {
                initialScrollTop: C.current,
                onScroll: Q => {
                    C.current = Q.target.scrollTop
                },
                children: a(wl, {
                    me: l,
                    owner: p,
                    projectTeam: d,
                    viewState: S,
                    children: a(Ef, {
                        children: x.map(Q => {
                            let U = s.find(Z => Z._id === Q.pageId);
                            return U ? a(lp, {
                                readonly: Q.isTmp,
                                comment: Q,
                                projectNumId: m.num_id,
                                selected: v ? .comment ? ._id === Q._id,
                                page: U,
                                onClick: k,
                                onStartEditing: T
                            }, Q._id) : null
                        })
                    })
                })
            }), a(Nw, {
                isVisible: b,
                isAbsolute: !0
            })]
        })
    })
}
y();
var $T = () => {
        let {
            currentPanel: e
        } = (0, Ww.useContext)(_t), o = (0, Ww.useContext)(je), [t, r] = uo();
        return Wi("c", {
            activeOnLock: !0,
            handler: () => {
                r(!t)
            }
        }), Wi("l", {
            handler: () => {
                window.RM.constructorRouter.toggleSelfEditorMode()
            }
        }), Wi("b", {
            handler: () => {
                window.RM.constructorRouter.toggleBlocksMode()
            }
        }), o.page ? a(f, {
            right: 16,
            height: 56,
            bottom: 16,
            zIndex: 3020,
            gap: 16,
            position: "absolute",
            children: a(f, {
                display: "flex",
                gap: "2rm",
                height: 56,
                alignItems: "flex-end",
                children: a(bT, {
                    children: w(g5, {
                        children: [a(pF, {}), a(Wg, {
                            width: 224,
                            height: 56,
                            display: "flex",
                            borderRadius: "8px",
                            backgroundColor: Ie("darkGray", .96),
                            children: w(il, {
                                children: [a(BT, {
                                    width: "56px",
                                    height: "100%",
                                    hideButton: t,
                                    button: ({
                                        isPanelShown: i
                                    }) => a(RT, {
                                        isPanelShown: i
                                    })
                                }), t ? a(OT, {
                                    width: "56px",
                                    height: "100%",
                                    button: ({
                                        isPanelShown: i
                                    }) => a(jg, {
                                        disableTooltip: i || e === "modes"
                                    })
                                }) : null, a(sn, {
                                    permission: "GridsAndGuidesCanUse",
                                    children: a(Os, {
                                        disabled: t,
                                        children: a(B5, {
                                            width: "56px",
                                            height: "100%",
                                            button: ({
                                                isPanelShown: i
                                            }) => a(b5, {
                                                width: "56px",
                                                disableTooltip: i
                                            })
                                        })
                                    })
                                }), a(Os, {
                                    disabled: t,
                                    children: a(gT, {
                                        width: "56px",
                                        button: ({
                                            isPanelShown: i
                                        }) => a(Q5, {
                                            tooltipText: "Project settings",
                                            width: "56px",
                                            disableTooltip: i
                                        })
                                    })
                                }), a(Os, {
                                    disabled: t,
                                    children: a(J5, {
                                        name: "help",
                                        width: "56px",
                                        button: ({
                                            isPanelShown: i
                                        }) => a(z5, {
                                            disabledTooltip: i,
                                            width: "56px"
                                        })
                                    })
                                })]
                            })
                        }), a(f, {
                            children: a(um, {})
                        })]
                    })
                })
            })
        }) : null
    },
    pF = () => w(Y, {
        children: [a(ru, {}), a(CT, {}), a(vT, {}), a(fT, {}), a(PT, {}), a(kT, {})]
    });
W();
var Xi = M(F());
W();
be();
He();
Nr();
q6();
Lh();
Ue();
te();
y();
var dF = {
    connection: `Seems there is a connection problem. Changes may not be saved until this
  alert disappears.`,
    socket: "You have been disconnected from the server.",
    duplicate: `It seems like you\u2019ve opened this project in another tab or browser. We\u2019ve
  interrupted this session in order to avoid conflicting copies.`,
    none: "unknown alert"
};

function uF({
    zIndex: e = go.popupZindex,
    ...o
}) {
    let [t, r] = (0, Xi.useState)("none"), [i, n] = (0, Xi.useState)(null), [s, l] = (0, Xi.useState)(null), [p, d] = (0, Xi.useState)(!0), {
        styles: c,
        attributes: m,
        update: u
    } = rl(i, s, {
        placement: "top"
    }), g = (0, Xi.useMemo)(() => dF[t], [t]), h = t === "socket", b = t !== "none";
    (0, Xi.useEffect)(() => {
        let S = () => r("connection"),
            v = () => r("socket"),
            P = () => r("none");
        return window.RM.constructorRouter.on("showConnectionAlert", S), window.RM.constructorRouter.on("showSocketConnectionAlert", v), window.RM.constructorRouter.on("hideConnectionAlert", P), window.RM.constructorRouter.on("hideSocketConnectionAlert", P), () => {
            window.RM.constructorRouter.off("showConnectionAlert", S), window.RM.constructorRouter.off("showSocketConnectionAlert", v), window.RM.constructorRouter.off("hideConnectionAlert", P), window.RM.constructorRouter.off("hideSocketConnectionAlert", P)
        }
    }, []), (0, Xi.useEffect)(() => {
        u && u()
    }, [t]);
    let x = () => {
        h || d(!p)
    };
    return b ? a(Y, {
        children: w(f, {
            display: "flex",
            zIndex: e,
            ...o,
            children: [p && w(f, {
                width: 276,
                padding: 16,
                marginBottom: 18,
                borderRadius: "4px",
                textAlign: "center",
                backgroundColor: "white",
                boxShadow: "0 0 0 1px rgba(0, 0, 0, 0.08)",
                ref: l,
                style: c.popper,
                ...m.popper,
                children: [a(f, {
                    children: a(A, {
                        display: "block",
                        textStyle: "regular",
                        children: g
                    })
                }), h && a(ge, {
                    marginTop: 12,
                    width: 88,
                    height: 38,
                    borderRadius: "4px",
                    backgroundColor: "tomato",
                    color: "white",
                    css: ne `
                  &:hover {
                    color: ${q.white};
                    background: ${q.black};
                  }
                `,
                    onClick: () => window.location.reload(),
                    children: "Reload"
                })]
            }), a(f, {
                ref: n,
                children: a(Ct, {
                    height: 56,
                    width: 56,
                    marginRight: 0,
                    color: "tomato",
                    disabled: h,
                    onClick: x,
                    children: a(Cv, {
                        color: "white"
                    })
                })
            })]
        })
    }) : null
}
var HT = f.withComponent(uF);
y();

function FT() {
    return a(f, {
        position: "absolute",
        bottom: 16,
        left: "50%",
        transform: "translateX(-50%)",
        zIndex: 3e3,
        children: a(HT, {})
    })
}
Jt();
Vv();
y();

function NT() {
    let {
        currentPanel: e,
        isVisible: o
    } = (0, qg.useContext)(_t), [t, r] = Nv(), i = n => {
        n.stopPropagation(), r(!1)
    };
    return (0, qg.useEffect)(() => {
        let n = ["modes", "guides", "project-settings", "help"],
            s = e !== void 0 && n.includes(e);
        window.RM.constructorRouter.toggleHideControls(s)
    }, [e]), o ? w(Y, {
        children: [a(u5, {}), a(FT, {}), a($T, {}), t ? a(pm, {
            defaultIsOpen: !0,
            onClose: i
        }) : null]
    }) : null
}
nn();
var Ci = M(F());
var Ki = M(F());
te();
Ye();
W();
be();
Di();
He();
ar();
Gh();
Ue();
kt();
Jt();
hh();
Ee();
Kt();
y();
var gc = N(ge)
`
  display: flex;
  justify-content: center;
  align-items: center;

  width: 244px;
  height: 56px;

  border-radius: 8px;

  color: ${({theme:e})=>e.colors.white};
`, WT = N(ge)
`
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  width: 160px;
  border-radius: 16px;
  padding: 16px;
  color: white;
  cursor: pointer;
  &:hover {
    color: white;
  }
  &:hover path {
    fill: white;
  }
  &:disabled {
    opacity: 1;
  }
`, gF = () => a("svg", {
    width: "76",
    height: "76",
    viewBox: "0 0 76 76",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: a("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M33.0394 0.321083C34.6638 0.109189 36.3197 0 38 0C39.6803 0 41.3362 0.109189 42.9606 0.321084C44.0559 0.463955 44.828 1.46768 44.6851 2.56297C44.5423 3.65827 43.5385 4.43035 42.4432 4.28748C40.9899 4.09791 39.5069 4 38 4C36.4931 4 35.0101 4.09791 33.5568 4.28748C32.4615 4.43035 31.4577 3.65826 31.3149 2.56297C31.172 1.46768 31.9441 0.463955 33.0394 0.321083ZM49.9329 3.96559C50.356 2.94527 51.5261 2.46114 52.5465 2.88425C55.6369 4.16578 58.5207 5.84286 61.1349 7.85178C62.0107 8.52483 62.1751 9.78044 61.5021 10.6563C60.829 11.5321 59.5734 11.6965 58.6976 11.0235C56.3573 9.22509 53.7773 7.72493 51.0143 6.57915C49.9939 6.15604 49.5098 4.98591 49.9329 3.96559ZM26.0671 3.96559C26.4902 4.98591 26.0061 6.15604 24.9857 6.57915C22.2227 7.72493 19.6427 9.22509 17.3024 11.0235C16.4266 11.6965 15.171 11.5321 14.4979 10.6563C13.8249 9.78044 13.9893 8.52483 14.8651 7.85178C17.4793 5.84286 20.3631 4.16578 23.4535 2.88425C24.4738 2.46114 25.644 2.94527 26.0671 3.96559ZM10.6563 14.4979C11.5321 15.171 11.6965 16.4266 11.0235 17.3024C9.22509 19.6427 7.72493 22.2227 6.57915 24.9857C6.15604 26.0061 4.98591 26.4902 3.96559 26.0671C2.94527 25.644 2.46114 24.4738 2.88425 23.4535C4.16578 20.3631 5.84286 17.4793 7.85178 14.8651C8.52483 13.9893 9.78044 13.8249 10.6563 14.4979ZM65.3437 14.4979C66.2196 13.8249 67.4752 13.9893 68.1482 14.8651C70.1571 17.4793 71.8342 20.3631 73.1158 23.4535C73.5389 24.4738 73.0547 25.644 72.0344 26.0671C71.0141 26.4902 69.844 26.0061 69.4208 24.9857C68.2751 22.2227 66.7749 19.6427 64.9765 17.3024C64.3035 16.4266 64.4679 15.171 65.3437 14.4979ZM2.56297 31.3149C3.65827 31.4577 4.43035 32.4615 4.28748 33.5568C4.09791 35.0101 4 36.4931 4 38C4 39.5069 4.09791 40.9899 4.28748 42.4432C4.43035 43.5385 3.65826 44.5423 2.56297 44.6851C1.46768 44.828 0.463955 44.0559 0.321083 42.9606C0.109189 41.3362 0 39.6803 0 38C0 36.3197 0.109189 34.6638 0.321084 33.0394C0.463955 31.9441 1.46768 31.172 2.56297 31.3149ZM73.437 31.3149C74.5323 31.172 75.536 31.9441 75.6789 33.0394C75.8908 34.6638 76 36.3197 76 38C76 39.6803 75.8908 41.3362 75.6789 42.9606C75.536 44.0559 74.5323 44.828 73.437 44.6851C72.3417 44.5423 71.5696 43.5385 71.7125 42.4432C71.9021 40.9899 72 39.5069 72 38C72 36.4931 71.9021 35.0101 71.7125 33.5568C71.5696 32.4615 72.3417 31.4577 73.437 31.3149ZM3.96559 49.9329C4.98591 49.5098 6.15604 49.9939 6.57915 51.0143C7.72493 53.7773 9.22509 56.3573 11.0235 58.6976C11.6965 59.5734 11.5321 60.829 10.6563 61.5021C9.78044 62.1751 8.52483 62.0107 7.85178 61.1349C5.84286 58.5207 4.16578 55.6369 2.88425 52.5465C2.46114 51.5262 2.94527 50.356 3.96559 49.9329ZM72.0344 49.9329C73.0547 50.356 73.5389 51.5261 73.1158 52.5465C71.8342 55.6369 70.1571 58.5207 68.1482 61.1349C67.4752 62.0107 66.2196 62.1751 65.3437 61.5021C64.4679 60.829 64.3035 59.5734 64.9765 58.6976C66.7749 56.3573 68.2751 53.7773 69.4208 51.0143C69.844 49.9939 71.0141 49.5098 72.0344 49.9329ZM14.4979 65.3437C15.171 64.4679 16.4266 64.3035 17.3024 64.9765C19.6427 66.7749 22.2227 68.2751 24.9857 69.4208C26.0061 69.844 26.4902 71.0141 26.0671 72.0344C25.644 73.0547 24.4738 73.5389 23.4535 73.1158C20.3631 71.8342 17.4793 70.1571 14.8651 68.1482C13.9893 67.4752 13.8249 66.2196 14.4979 65.3437ZM61.5021 65.3437C62.1751 66.2196 62.0107 67.4752 61.1349 68.1482C58.5207 70.1571 55.6369 71.8342 52.5465 73.1158C51.5262 73.5389 50.356 73.0547 49.9329 72.0344C49.5098 71.0141 49.9939 69.844 51.0143 69.4208C53.7773 68.2751 56.3573 66.7749 58.6976 64.9765C59.5734 64.3035 60.829 64.4679 61.5021 65.3437ZM31.3149 73.437C31.4577 72.3417 32.4615 71.5696 33.5568 71.7125C35.0101 71.9021 36.4931 72 38 72C39.5069 72 40.9899 71.9021 42.4432 71.7125C43.5385 71.5696 44.5423 72.3417 44.6851 73.437C44.828 74.5323 44.0559 75.536 42.9606 75.6789C41.3362 75.8908 39.6803 76 38 76C36.3197 76 34.6638 75.8908 33.0394 75.6789C31.9441 75.536 31.172 74.5323 31.3149 73.437Z",
        fill: "white"
    })
}), hF = () => a("svg", {
    width: "76",
    height: "76",
    viewBox: "0 0 72 72",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: a("path", {
        d: "M72 36C72 55.8823 55.8823 72 36 72C16.1177 72 0 55.8823 0 36C0 16.1177 16.1177 0 36 0C55.8823 0 72 16.1177 72 36Z",
        fill: "white"
    })
}), fF = () => a("svg", {
    width: "76",
    height: "76",
    viewBox: "0 0 76 76",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: a("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M56 4C57.1438 4 58.2574 4.1197 59.3298 4.34656C60.4105 4.57516 61.4718 3.88444 61.7004 2.80378C61.929 1.72313 61.2383 0.661766 60.1577 0.433161C58.8147 0.149073 57.4237 0 56 0C54.5848 0 53.2018 0.14731 51.8662 0.428123C50.7853 0.655401 50.0933 1.71592 50.3205 2.79685C50.5478 3.87778 51.6083 4.56981 52.6893 4.34253C53.7558 4.11828 54.863 4 56 4ZM20 4C21.137 4 22.2442 4.11828 23.3107 4.34253C24.3917 4.56981 25.4522 3.87779 25.6795 2.79685C25.9067 1.71592 25.2147 0.655402 24.1338 0.428123C22.7982 0.14731 21.4152 0 20 0C18.5763 0 17.1853 0.149073 15.8423 0.433161C14.7617 0.661766 14.0709 1.72313 14.2996 2.80378C14.5282 3.88444 15.5895 4.57516 16.6702 4.34656C17.7426 4.1197 18.8562 4 20 4ZM47.9261 3.78403C47.3268 2.8562 46.0887 2.58992 45.1609 3.18926C42.8227 4.69971 40.8203 6.68432 39.2892 9.00773C38.6814 9.93004 38.9364 11.1704 39.8587 11.7782C40.781 12.386 42.0214 12.1311 42.6292 11.2088C43.8552 9.3484 45.4593 7.75851 47.3313 6.54921C48.2592 5.94987 48.5255 4.71185 47.9261 3.78403ZM28.0739 3.78403C27.4745 4.71185 27.7408 5.94987 28.6687 6.54922C30.5407 7.75852 32.1448 9.3484 33.3708 11.2088C33.9786 12.1311 35.219 12.386 36.1413 11.7782C37.0636 11.1704 37.3186 9.93005 36.7108 9.00774C35.1797 6.68433 33.1773 4.69971 30.8391 3.18927C29.9113 2.58992 28.6732 2.8562 28.0739 3.78403ZM64.1282 3.81125C63.5257 4.73706 63.7879 5.97596 64.7137 6.57841C66.5924 7.80094 68.1991 9.4076 69.4216 11.2863C70.024 12.2121 71.2629 12.4743 72.1888 11.8718C73.1146 11.2694 73.3767 10.0305 72.7742 9.10464C71.2473 6.75819 69.2418 4.75265 66.8954 3.22575C65.9695 2.6233 64.7306 2.88544 64.1282 3.81125ZM11.8718 3.81125C11.2694 2.88544 10.0305 2.6233 9.10464 3.22575C6.75819 4.75265 4.75265 6.75819 3.22575 9.10464C2.6233 10.0305 2.88544 11.2694 3.81125 11.8718C4.73706 12.4743 5.97596 12.2121 6.57841 11.2863C7.80094 9.4076 9.4076 7.80094 11.2863 6.57841C12.2121 5.97596 12.4743 4.73706 11.8718 3.81125ZM38.0148 21.8353C36.9112 21.8439 36.0092 20.9569 35.9993 19.8533C35.9892 18.717 35.8608 17.611 35.6267 16.5463C35.3895 15.4675 36.0717 14.4007 37.1505 14.1634C37.4398 14.0998 37.7282 14.1023 38 14.1609C38.2718 14.1023 38.5602 14.0998 38.8495 14.1634C39.9283 14.4006 40.6105 15.4675 40.3733 16.5463C40.1392 17.611 40.0108 18.717 40.0007 19.8533C39.9909 20.9434 39.11 21.8246 38.0204 21.8352M73.1962 14.2996C72.1156 14.5282 71.4248 15.5895 71.6534 16.6702C71.8803 17.7426 72 18.8562 72 20C72 21.137 71.8817 22.2442 71.6575 23.3107C71.4302 24.3917 72.1222 25.4522 73.2031 25.6795C74.2841 25.9067 75.3446 25.2147 75.5719 24.1338C75.8527 22.7982 76 21.4152 76 20C76 18.5763 75.8509 17.1853 75.5668 15.8423C75.3382 14.7617 74.2769 14.0709 73.1962 14.2996ZM2.80379 14.2996C1.72313 14.071 0.661766 14.7617 0.433159 15.8423C0.149071 17.1853 0 18.5763 0 20C0 21.4237 0.149071 22.8147 0.433159 24.1577C0.661766 25.2383 1.72313 25.9291 2.80379 25.7004C3.88444 25.4718 4.57516 24.4105 4.34656 23.3298C4.1197 22.2574 4 21.1438 4 20C4 18.8562 4.1197 17.7426 4.34656 16.6702C4.57516 15.5895 3.88444 14.5282 2.80379 14.2996ZM38.0182 21.8353C38.0182 21.8353 38.0182 21.8353 38.0182 21.8353ZM38.0182 21.8353C38.0177 21.8353 38.0172 21.8353 38.0167 21.8353ZM38.0167 21.8353C38.0166 21.8353 38.0164 21.8353 38.0162 21.8353ZM72.216 28.0739C71.2881 27.4745 70.0501 27.7408 69.4508 28.6687C68.2415 30.5407 66.6516 32.1448 64.7912 33.3708C63.8689 33.9786 63.614 35.219 64.2218 36.1413C64.8296 37.0636 66.07 37.3186 66.9923 36.7108C69.3157 35.1797 71.3003 33.1773 72.8107 30.8391C73.4101 29.9113 73.1438 28.6732 72.216 28.0739ZM3.81125 28.1282C2.88544 28.7306 2.6233 29.9695 3.22575 30.8954C4.75266 33.2418 6.75819 35.2473 9.10464 36.7743C10.0305 37.3767 11.2694 37.1146 11.8718 36.1888C12.4743 35.2629 12.2121 34.024 11.2863 33.4216C9.4076 32.1991 7.80094 30.5924 6.57841 28.7137C5.97596 27.7879 4.73706 27.5257 3.81125 28.1282ZM61.8366 37.1505C61.5994 36.0717 60.5325 35.3895 59.4537 35.6267C58.389 35.8608 57.283 35.9892 56.1467 35.9993C55.0566 36.0091 54.1754 36.89 54.1648 37.9796C54.1647 37.9803 54.1647 37.981 54.1647 37.9818M61.8366 37.1505C61.9002 37.4398 61.8977 37.7282 61.8391 38ZM61.8391 38C61.8977 38.2718 61.9002 38.5602 61.8366 38.8495C61.5993 39.9283 60.5325 40.6105 59.4537 40.3733C58.389 40.1392 57.283 40.0108 56.1467 40.0007C55.0431 39.9908 54.1561 39.0888 54.1647 37.9852M54.1647 37.9838C54.1647 37.9833 54.1647 37.9829 54.1647 37.9824ZM21.9822 38.8386C21.883 39.0537 21.7454 39.2514 21.574 39.4213C21.195 39.7969 20.6816 40.0055 20.1481 40.0007L20.1086 40.0004C20.0971 40.0003 20.0856 40.0001 20.0741 39.9998C20.0626 40 20.051 40.0001 20.0395 40L20 40C18.8562 40 17.7426 40.1197 16.6702 40.3466C15.5895 40.5752 14.5282 39.8844 14.2996 38.8038C14.2417 38.5302 14.2427 38.2579 14.2941 38C14.2427 37.7421 14.2417 37.4698 14.2996 37.1962C14.5282 36.1156 15.5895 35.4248 16.6702 35.6534C17.7426 35.8803 18.8562 36 20 36L20.0395 36C20.051 35.9999 20.0626 36 20.0741 36.0002C20.0856 35.9999 20.0971 35.9997 20.1086 35.9996L20.1481 35.9993C20.6816 35.9945 21.195 36.2031 21.5739 36.5787C21.7373 36.7406 21.8699 36.9278 21.9679 37.1311C22.0674 37.3376 22.1312 37.5609 22.1553 37.7912C22.159 37.8272 22.1618 37.8633 22.1636 37.8995C22.165 37.9268 22.1658 37.9543 22.1661 37.9818M22.1631 38.1116C22.1488 38.3699 22.0855 38.6154 21.9822 38.8386ZM22.1631 38.1116C22.1651 38.0748 22.1661 38.0378 22.1661 38.0008C22.1661 38.0003 22.1661 37.9998 22.1661 37.9993C22.1661 37.9993 22.1661 37.9993 22.1661 37.9992C22.1661 37.9943 22.1661 37.9893 22.1661 37.9843C22.1661 37.9838 22.1661 37.9833 22.1661 37.9828C22.1661 37.9827 22.1661 37.9826 22.1661 37.9825M11.8718 39.8112C11.2694 38.8854 10.0305 38.6233 9.10464 39.2257C6.75819 40.7527 4.75266 42.7582 3.22575 45.1046C2.6233 46.0305 2.88544 47.2694 3.81125 47.8718C4.73706 48.4743 5.97596 48.2121 6.57841 47.2863C7.80094 45.4076 9.4076 43.8009 11.2863 42.5784C12.2121 41.976 12.4743 40.7371 11.8718 39.8112ZM64.2218 39.8587C63.614 40.781 63.8689 42.0214 64.7912 42.6292C66.6516 43.8552 68.2415 45.4593 69.4508 47.3313C70.0501 48.2592 71.2881 48.5254 72.216 47.9261C73.1438 47.3268 73.4101 46.0887 72.8107 45.1609C71.3003 42.8227 69.3157 40.8203 66.9923 39.2892C66.0699 38.6814 64.8296 38.9364 64.2218 39.8587ZM2.80379 50.2996C1.72313 50.0709 0.661766 50.7617 0.433159 51.8423C0.149071 53.1853 0 54.5763 0 56C0 57.4237 0.149071 58.8147 0.433159 60.1577C0.661766 61.2383 1.72313 61.9291 2.80379 61.7004C3.88444 61.4718 4.57516 60.4105 4.34656 59.3298C4.1197 58.2574 4 57.1438 4 56C4 54.8562 4.1197 53.7426 4.34656 52.6702C4.57516 51.5895 3.88444 50.5282 2.80379 50.2996ZM73.2031 50.3205C72.1222 50.5478 71.4302 51.6083 71.6575 52.6893C71.8817 53.7558 72 54.863 72 56C72 57.1438 71.8803 58.2574 71.6534 59.3298C71.4248 60.4105 72.1156 61.4718 73.1962 61.7004C74.2769 61.9291 75.3382 61.2383 75.5668 60.1577C75.8509 58.8147 76 57.4237 76 56C76 54.5848 75.8527 53.2018 75.5719 51.8662C75.3446 50.7853 74.2841 50.0933 73.2031 50.3205ZM36.5787 54.426C36.2031 54.805 35.9945 55.3184 35.9993 55.8519L35.9996 55.8914C35.9997 55.9029 35.9999 55.9144 36.0002 55.9259C36 55.9374 35.9999 55.949 36 55.9605L36 56C36 57.1438 35.8803 58.2574 35.6534 59.3298C35.4248 60.4105 36.1156 61.4718 37.1962 61.7004C37.4698 61.7583 37.7421 61.7573 38 61.7059C38.2579 61.7573 38.5302 61.7583 38.8038 61.7004C39.8844 61.4718 40.5752 60.4105 40.3466 59.3298C40.1197 58.2574 40 57.1438 40 56L40 55.9605C40.0001 55.949 40 55.9374 39.9998 55.9259C40.0001 55.9144 40.0003 55.9029 40.0004 55.8914L40.0007 55.8519C40.0055 55.3184 39.7969 54.805 39.4213 54.4261C39.2594 54.2627 39.0722 54.1301 38.8689 54.0321C38.6596 53.9313 38.4332 53.8671 38.1996 53.8438C38.1395 53.8378 38.079 53.8345 38.0182 53.8339L38.0175 53.8339M36.5787 54.426C36.7486 54.2546 36.9463 54.117 37.1614 54.0178ZM37.1614 54.0178C37.3717 53.9208 37.5986 53.8604 37.8322 53.8408C37.8875 53.8362 37.9433 53.8339 37.9992 53.8339M72.1888 64.1282C71.2629 63.5257 70.024 63.7879 69.4216 64.7137C68.1991 66.5924 66.5924 68.1991 64.7137 69.4216C63.7879 70.024 63.5257 71.2629 64.1282 72.1888C64.7306 73.1146 65.9695 73.3767 66.8954 72.7742C69.2418 71.2473 71.2473 69.2418 72.7743 66.8954C73.3767 65.9695 73.1146 64.7306 72.1888 64.1282ZM39.8112 64.1282C38.8854 64.7306 38.6233 65.9695 39.2257 66.8954C40.7527 69.2418 42.7582 71.2474 45.1046 72.7742C46.0305 73.3767 47.2694 73.1146 47.8718 72.1888C48.4743 71.2629 48.2121 70.024 47.2863 69.4216C45.4076 68.1991 43.8009 66.5924 42.5784 64.7137C41.976 63.7879 40.7371 63.5257 39.8112 64.1282ZM36.1888 64.1282C35.2629 63.5257 34.024 63.7879 33.4216 64.7137C32.1991 66.5924 30.5924 68.1991 28.7137 69.4216C27.7879 70.024 27.5257 71.2629 28.1282 72.1888C28.7306 73.1146 29.9695 73.3767 30.8954 72.7742C33.2418 71.2474 35.2473 69.2418 36.7743 66.8954C37.3767 65.9695 37.1146 64.7306 36.1888 64.1282ZM3.81125 64.1282C2.88544 64.7306 2.6233 65.9695 3.22575 66.8954C4.75265 69.2418 6.75819 71.2473 9.10464 72.7742C10.0305 73.3767 11.2694 73.1146 11.8718 72.1888C12.4743 71.2629 12.2121 70.024 11.2863 69.4216C9.4076 68.1991 7.80094 66.5924 6.57841 64.7137C5.97596 63.7879 4.73706 63.5257 3.81125 64.1282ZM61.7004 73.1962C61.4718 72.1156 60.4105 71.4248 59.3298 71.6534C58.2574 71.8803 57.1438 72 56 72C54.8562 72 53.7426 71.8803 52.6702 71.6534C51.5895 71.4248 50.5282 72.1156 50.2996 73.1962C50.071 74.2769 50.7617 75.3382 51.8423 75.5668C53.1853 75.8509 54.5763 76 56 76C57.4237 76 58.8147 75.8509 60.1577 75.5668C61.2383 75.3382 61.9291 74.2769 61.7004 73.1962ZM25.7004 73.1962C25.4718 72.1156 24.4105 71.4248 23.3298 71.6534C22.2574 71.8803 21.1438 72 20 72C18.8562 72 17.7426 71.8803 16.6702 71.6534C15.5895 71.4248 14.5282 72.1156 14.2996 73.1962C14.0709 74.2769 14.7617 75.3382 15.8423 75.5668C17.1853 75.8509 18.5763 76 20 76C21.4237 76 22.8147 75.8509 24.1577 75.5668C25.2383 75.3382 25.9291 74.2769 25.7004 73.1962Z",
        fill: "white"
    })
}), bF = () => a("svg", {
    width: "76",
    height: "76",
    viewBox: "0 0 72 72",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: a("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M36.0007 17.8353C36.0891 7.97004 44.1138 0 54 0C63.9411 0 72 8.05887 72 18C72 27.8862 64.03 35.9109 54.1647 35.9993C54.1647 35.9998 54.1646 36.0002 54.1646 36.0007C64.03 36.0891 72 44.1138 72 54C72 63.9411 63.9411 72 54 72C44.0589 72 36 63.9411 36 54C36 63.9411 27.9411 72 18 72C8.05888 72 0 63.9411 0 54C0 44.0589 8.05888 36 18 36C8.05888 36 0 27.9411 0 18C0 8.05887 8.05888 0 18 0C27.8862 0 35.9109 7.97005 35.9993 17.8354C35.9998 17.8354 36.0002 17.8353 36.0007 17.8353ZM18.1661 35.9992C18.1108 35.9997 18.0554 36 18 36C18.0554 36 18.1108 36.0003 18.1661 36.0008C18.1661 36.0003 18.1661 35.9997 18.1661 35.9992ZM35.9992 53.8339C35.9997 53.8892 36 53.9446 36 54C36 53.9446 36.0003 53.8892 36.0008 53.8339C36.0003 53.8339 35.9997 53.8339 35.9992 53.8339Z",
        fill: "white"
    })
});

function VT({
    modalStatus: e,
    onClose: o,
    onStart: t,
    onEnd: r
}) {
    let [i, n] = (0, Ki.useState)(!1), [s, l] = (0, Ki.useState)(e), {
        togglePanel: p
    } = (0, Ki.useContext)(_t), [d, c] = (0, Ki.useState)(!1), [m, u] = (0, Ki.useState)(!1), {
        pages: g,
        deletePage: h
    } = (0, Ki.useContext)(me), b = Zt();
    (0, Ki.useEffect)(() => {
        l(e)
    }, [e]);
    let x = s !== "unshow" && s !== "unshowWithTooltip";
    if (!x) return null;
    let S = async ($, G = "tour") => {
            g.length > 1 && (window.RM.constructorRouter.workspace.deleteBlocks(window.RM.constructorRouter.workspace.getAllBlocks("text")), window.RM.constructorRouter.workspace.deleteBlocks(window.RM.constructorRouter.workspace.getAllBlocks("shape")), await h(g[g.length - 1]._id));
            try {
                n(!0), await t($, G)
            } finally {
                n(!1)
            }
        },
        v = () => {
            switch (s) {
                case "closing":
                    b.started ? li("unshow") : li("start");
                    break;
                case "start":
                    b.step ? li("closing") : r();
                    break;
                default:
                    r()
            }
        },
        P = () => {
            let $ = b.tourType === "pro" ? "helpTourProLeave" : "helpTourLeave";
            re($, {
                step: b.step
            }), b.started ? r() : o()
        },
        C = () => {
            r()
        },
        k = () => {
            r(), S("pro", "hidden")
        },
        T = () => {
            p("help", !1), r(!0)
        },
        R = a(f, {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            width: 64,
            height: 64,
            borderRadius: "50%",
            backgroundColor: q.blue,
            children: a(vv, {
                color: q.white,
                width: 39,
                height: 28
            })
        }),
        I = () => {
            switch (s) {
                case "start":
                    return `Get familiar with Readymag's
 toolbox on a step-by-step
 project in 10 minutes`;
                case "closing":
                    return "Leaving the tour for now?";
                default:
                    return "Congratulations!"
            }
        },
        B = () => {
            switch (s) {
                case "start":
                    return `You\u2019ll go through the main steps
of crafting and publishing a
web page in just 5 minutes.`;
                case "closing":
                    return `If you ever wish to revisit or need
guidance on specific features, the '?'
panel in project settings is always
there to help`;
                default:
                    return b.tourType === "default" ? `You can finish the basic tour now
or continue grasping more features
in the advanced one` : `Now you know how to set up
a project of your own. If you have any
questions, click on the Help section
for a wide knowledge base`
            }
        },
        L = () => s === "closing" ? a(f, {
            marginTop: 24,
            display: "flex",
            flexDirection: "column",
            children: i ? a(Rt, {
                bgColor: "transparent"
            }) : w(Y, {
                children: [a(gc, {
                    disabled: i,
                    variant: "clean",
                    backgroundColor: "#0A85FF",
                    onClick: v,
                    children: "Resume tour"
                }), a(gc, {
                    disabled: i,
                    variant: "clean",
                    backgroundColor: "rgba(255, 255, 255, 0.1)",
                    onClick: P,
                    marginTop: "4rm",
                    children: "Explore on my own"
                })]
            })
        }) : a(f, {
            marginTop: s === "start" ? 24 : 32,
            display: "flex",
            flexDirection: "column",
            children: s === "start" ? w(f, {
                display: "flex",
                justifyContent: "space-between",
                width: 336,
                children: [w(WT, {
                    disabled: i,
                    backgroundColor: "#00A882",
                    onClick: () => {
                        S("default")
                    },
                    onMouseEnter: () => {
                        c(!0)
                    },
                    onMouseLeave: () => {
                        c(!1)
                    },
                    children: [a(f, {
                        marginBottom: 16,
                        children: d ? a(hF, {}) : a(gF, {})
                    }), a(we, {
                        fontSize: 16,
                        marginBottom: 4,
                        children: "Just basics"
                    }), w(we, {
                        fontSize: 12,
                        textAlign: "center",
                        children: ["Learn how to add ", a("br", {}), " and tune essential ", a("br", {}), " widgets, arrange ", a("br", {}), " the layout for desktop ", a("br", {}), " ", "and mobile"]
                    })]
                }), w(WT, {
                    disabled: i,
                    backgroundColor: "#0080FF",
                    onClick: () => {
                        S("pro")
                    },
                    onMouseEnter: () => {
                        u(!0)
                    },
                    onMouseLeave: () => {
                        u(!1)
                    },
                    children: [a(f, {
                        marginBottom: 16,
                        children: m ? a(bF, {}) : a(fF, {})
                    }), a(we, {
                        fontSize: 16,
                        marginBottom: 4,
                        children: "A bit more"
                    }), w(we, {
                        fontSize: 12,
                        textAlign: "center",
                        children: ["Go deeper into the ", a("br", {}), " features: work further ", a("br", {}), " with grids, add ", a("br", {}), " animations and ", a("br", {}), " ", "navigation elements"]
                    })]
                })]
            }) : b.tourType === "pro" ? w(Y, {
                children: [a(gc, {
                    disabled: i,
                    variant: "clean",
                    backgroundColor: "#0A85FF",
                    onClick: C,
                    children: "Start own journey"
                }), a(gc, {
                    marginTop: "4rm",
                    disabled: i,
                    variant: "clean",
                    backgroundColor: "rgba(255, 255, 255, 0.1)",
                    onClick: T,
                    children: "Learn further with us"
                })]
            }) : w(Y, {
                children: [a(gc, {
                    disabled: i,
                    variant: "clean",
                    backgroundColor: "#0A85FF",
                    onClick: k,
                    children: "Start advanced tour"
                }), a(gc, {
                    marginTop: "4rm",
                    disabled: i,
                    variant: "clean",
                    backgroundColor: "rgba(255, 255, 255, 0.1)",
                    onClick: C,
                    children: "Set off on my own journey"
                })]
            })
        }),
        D = !b.started && s === "closing" ? () => null : v,
        E = b.started || s !== "closing";
    return w(cl, {
        underlayStyles: {
            backdropFilter: "blur(5px)"
        },
        showCloseButton: E,
        show: x,
        onExit: D,
        children: [s === "end" && R, a(we, {
            id: "help-tour-title",
            display: "flex",
            alignItems: "center",
            textAlign: "center",
            whiteSpace: "pre-wrap",
            fontSize: 24,
            height: s === "end" ? "auto" : 88,
            margin: s === "end" ? "32px 0 12px" : "auto",
            color: q.white,
            lineHeight: "6rm",
            children: I()
        }), s !== "start" && a(we, {
            id: "help-tour-text",
            display: "flex",
            alignItems: "center",
            textAlign: "center",
            whiteSpace: "pre-wrap",
            fontSize: 16,
            height: s === "end" ? "auto" : 62,
            color: q.gray,
            children: B()
        }), L()]
    })
}
kt();
hh();
var Yg = M(F());
vr();
Ee();

function UT(e) {
    setTimeout(() => {
        window ? .RM ? .constructorRouter ? .trigger("notice:triggerMetrics", e)
    }, 700)
}

function GT() {
    let {
        me: {
            behavior_metrics: e
        },
        project: o
    } = (0, Yg.useContext)(me);
    return (0, Yg.useEffect)(() => {
        let t = e ? .initial_onboarding_type;
        t === "blank" && UT("helpTourSkipped"), t === "templates" && !o.template_num && UT("newProjectAfterTemplatesOnboarding")
    }, []), null
}
Ee();
yh();
W();
var Zi = M(F());
W();
Oh();
Jh();
te();
_r();
Ai();

function wF(e, o, t) {
    let r = { ...e
    };
    return o.top + e.y <= t.top ? r.y = t.top - o.top : o.bottom + e.y >= t.top + t.height && (r.y = t.top + t.height - o.bottom), o.left + e.x <= t.left ? r.x = t.left - o.left : o.right + e.x >= t.left + t.width && (r.x = t.left + t.width - o.right), r
}
var jT = e => {
    let {
        transform: o,
        draggingNodeRect: t,
        windowRect: r
    } = e;
    return !t || !r ? o : wF(o, t, r)
};
Pc();
y();

function qT({
    children: e,
    title: o,
    onClose: t,
    actionButtons: r,
    initialPosition: i,
    onMove: n
}) {
    let s = gg(zp(Mp, {
        activationConstraint: {
            distance: 10
        }
    }), zp(Bp, {
        activationConstraint: {
            delay: 250,
            tolerance: 5
        }
    }));
    return a(nl, {
        children: a(wg, {
            sensors: s,
            modifiers: [jT],
            children: a(So, {
                children: a(vF, {
                    initialPosition: i,
                    onMove: n,
                    children: w(kF, {
                        children: [w(_F, {
                            children: [a(SF, {
                                children: o
                            }), w(CF, {
                                children: [r ? .map((l, p) => a(Zi.default.Fragment, {
                                    children: l
                                }, p)), a(Vw, {
                                    icon: a(Lt, {}),
                                    onClick: () => t ? .("button")
                                })]
                            })]
                        }), a(f, {
                            children: e
                        })]
                    })
                })
            })
        })
    })
}
var xF = (e, o) => {
        let {
            width: t,
            height: r
        } = o;
        switch (e) {
            case "TOP_CENTER":
                return {
                    x: window.innerWidth / 2 - t / 2,
                    y: 100
                };
            case "BOTTOM_CENTER":
                return {
                    x: window.innerWidth / 2 - t / 2,
                    y: window.innerHeight - r - 100
                };
            case "RIGHT_TOP":
                return {
                    x: window.innerWidth - t - 16,
                    y: 16
                };
            case "CENTER":
            default:
                return {
                    x: window.innerWidth / 2 - t / 2,
                    y: window.innerHeight / 2 - r / 2
                }
        }
    },
    vF = ({
        children: e,
        initialPosition: o = "CENTER",
        onMove: t,
        ...r
    }) => {
        let {
            attributes: i,
            listeners: n,
            setNodeRef: s,
            transform: l
        } = xg({
            id: "draggable-modal"
        }), [p, d] = (0, Zi.useState)({
            x: 0,
            y: 0
        }), [c, m] = (0, Zi.useState)(!1), u = (0, Zi.useRef)(null);
        cw({
            onDragStart: () => {
                m(!0)
            },
            onDragEnd: h => {
                m(!1);
                let {
                    delta: b
                } = h;
                d({
                    x: p.x + b.x,
                    y: p.y + b.y
                }), t ? .(h)
            }
        }), (0, Zi.useEffect)(() => {
            if (u.current) {
                let h = u.current.getBoundingClientRect(),
                    b = xF(o, h);
                d(b)
            }
        }, [o]);
        let g = {
            x: p.x + (l ? .x || 0),
            y: p.y + (l ? .y || 0)
        };
        return a(yF, {
            ref: h => {
                s(h), u.current = h
            },
            ...n,
            ...i,
            style: {
                left: `${g.x}px`,
                top: `${g.y}px`,
                cursor: c ? "grabbing" : "grab"
            },
            ...r,
            children: e
        })
    };

function Vw({
    onClick: e,
    ...o
}) {
    let [t, r] = (0, Zi.useState)(!1), i = H0();
    return a(dl, {
        onMouseEnter: () => r(!0),
        onMouseLeave: () => r(!1),
        color: t ? "tomato" : "white",
        onClick: () => {
            r(!1), e ? .()
        },
        style: {
            background: t ? i.colors.tomato : i.colors.transparentBlue,
            transition: "background 0.3s"
        },
        ...o
    })
}
var yF = Mt(N("div")({
        position: "fixed",
        willChange: "transform",
        zIndex: 10001
    })),
    kF = Mt(N("div")({
        paddingTop: "8px",
        paddingBottom: "16px",
        paddingLeft: "16px",
        paddingRight: "16px",
        background: "#0080FF",
        borderRadius: "4px",
        flexDirection: "column",
        justifyContent: "flex-start",
        alignItems: "flex-start",
        gap: "8px",
        display: "inline-flex"
    })),
    _F = N("div")({
        display: "flex",
        flexDirection: "row",
        width: "100%",
        justifyContent: "space-between",
        alignItems: "center",
        gap: "8px"
    }),
    CF = N("div")({
        display: "flex",
        flexDirection: "row",
        width: "100%",
        minHeight: "32px",
        justifyContent: "end",
        alignItems: "center",
        gap: "8px"
    }),
    SF = N("div")({
        color: "white",
        fontSize: "16px",
        fontWeight: 400,
        lineHeight: "20px",
        wordWrap: "break-word",
        width: "100%"
    });
be();
Gs();
tl();
te();
Ue();
Cd();
var In = M(F());
var wo = M(F());
W();
wd();
var Xg = class {
    constructor() {
        z(this, "player", null);
        z(this, "events", {});
        z(this, "milestones", {
            watched_50: !1,
            watched_70: !1,
            watched_90: !1
        });
        z(this, "progressInterval", null)
    }
    stopTrackingProgress() {
        this.progressInterval && (clearInterval(this.progressInterval), this.progressInterval = null)
    }
    startTrackingProgress() {
        this.progressInterval || (this.progressInterval = setInterval(() => {
            if (!this.player || this.duration === 0) return;
            let o = this.player.getCurrentTime(),
                t = Math.floor(o / this.duration * 100);
            t >= 25 && !this.milestones.watched_25 && (this.milestones.watched_25 = !0, this.emit("watched_25", {
                progress: t
            })), t >= 50 && !this.milestones.watched_50 && (this.milestones.watched_50 = !0, this.emit("watched_50", {
                progress: t
            })), t >= 70 && !this.milestones.watched_70 && (this.milestones.watched_70 = !0, this.emit("watched_70", {
                progress: t
            })), t >= 90 && !this.milestones.watched_90 && (this.milestones.watched_90 = !0, this.emit("watched_90", {
                progress: t
            }))
        }, 1e3))
    }
    get duration() {
        return this.player ? this.player.getDuration() : 0
    }
    init(o) {
        this.player = o, this.milestones = {
            watched_25: !1,
            watched_50: !1,
            watched_70: !1,
            watched_90: !1
        }, this.stopTrackingProgress(), [3, 1].indexOf(o.getPlayerState()) && this.startTrackingProgress()
    }
    play() {
        this.player && this.player.playVideo()
    }
    pause() {
        this.player && this.player.pauseVideo()
    }
    seekTo(o, t) {
        this.player && this.player.seekTo(o, t)
    }
    getCurrentTime() {
        return this.player ? this.player.getCurrentTime() : 0
    }
    on(o, t) {
        return this.events[o] = this.events[o] || [], this.events[o].push(t), () => {
            this.events[o] = this.events[o] ? .filter(r => r !== t)
        }
    }
    emit(o, t) {
        if (this.events[o] && this.events[o].forEach(r => {
                try {
                    r(t)
                } catch (i) {
                    console.warn(i)
                }
            }), o === "stateChange") switch (t === 1 ? this.startTrackingProgress() : this.stopTrackingProgress(), t) {
            case 0:
                this.emit("ended", this);
                break;
            case 1:
                this.emit("playing", this);
                break;
            case 2:
                this.emit("paused", this);
                break;
            case 4:
                this.emit("cued", this);
                break;
            case 3:
                this.emit("buffering", this);
                break;
            case -1:
                this.emit("unstarted", this);
                break
        }
    }
    dispose() {
        this.stopTrackingProgress()
    }
};
y();
var YT = (0, wo.forwardRef)(({
    startTime: e,
    videoUrl: o,
    coverImage: t,
    autoplay: r,
    onLoaded: i
}, n) => {
    let [s, l] = (0, wo.useState)(r || !t), {
        iframeRef: p,
        onIframeLoad: d,
        controller: c
    } = PF(), m = (0, wo.useMemo)(() => {
        let g = new URL(o);
        return g.searchParams.set("enablejsapi", "1"), g.searchParams.set("origin", window.location.origin), g.searchParams.set("widget_referrer", window.location.origin), g.toString()
    }, [o]);
    (0, wo.useEffect)(() => {
        c && e && (l(!0), c.seekTo(Uw(e)), c.play())
    }, [c, e]), (0, wo.useEffect)(() => {
        c && s && c.play()
    }, [c, s]);
    let u = (0, wo.useMemo)(() => t ? .startsWith("http") ? t : Bi(t), [t]);
    return (0, wo.useImperativeHandle)(n, () => c), (0, wo.useEffect)(() => {
        i ? .(c)
    }, [c, i]), w(f, {
        position: "relative",
        width: "100%",
        height: "100%",
        children: [!s && w(Y, {
            children: [a(f, {
                as: "img",
                src: u,
                alt: "Getting started Video",
                width: "100%",
                height: "100%",
                style: {
                    objectFit: "cover",
                    cursor: "pointer"
                },
                onClick: () => l(!0)
            }), a(f, {
                position: "absolute",
                top: "50%",
                left: "50%",
                transform: "translate(-50%, -50%)",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                width: "64px",
                height: "64px",
                borderRadius: "50%",
                backgroundColor: "rgba(0, 0, 0, 0.6)",
                cursor: "pointer",
                onClick: () => l(!0),
                children: a(f, {
                    as: "img",
                    width: "32px",
                    height: "32px",
                    src: Bi("./common/video-player/play.svg")
                })
            })]
        }), a(f, {
            style: {
                display: s ? "block" : "none"
            },
            as: "iframe",
            ref: p,
            onLoad: d,
            width: "100%",
            height: "100%",
            src: m,
            frameBorder: "0",
            allow: "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",
            allowFullScreen: !0
        })]
    })
});

function Uw(e) {
    let [o = 0, t = 0] = (e || "").split(":").map(Number).filter(r => !Number.isNaN(r));
    return o * 60 + t
}

function PF() {
    let e = (0, wo.useRef)(null),
        o = (0, wo.useRef)(null),
        t = (0, wo.useMemo)(() => new Xg, []),
        r = (0, wo.useCallback)(() => {
            e.current && (o.current = new window.YT.Player(e.current, {
                events: {
                    onReady: i => {
                        t.init(i.target)
                    },
                    onStateChange: i => {
                        let n = i.data;
                        t.emit("stateChange", n)
                    }
                }
            }))
        }, [t]);
    return (0, wo.useEffect)(() => {
        if (window.YT) e.current && !o.current && r();
        else {
            let i = document.createElement("script");
            i.src = "https://www.youtube.com/iframe_api", i.async = !0, document.body.appendChild(i)
        }
        return () => {
            o.current && o.current.destroy(), t.dispose()
        }
    }, [t, r]), {
        iframeRef: e,
        onIframeLoad: r,
        controller: t
    }
}
var ad = M(F());
Ye();

function XT(e) {
    return (0, ad.useEffect)(() => {
        if (!e) return;
        let o = [];
        return o.push(e.on("playing", () => {
            re("onboardingVideoPopup", {
                action: "playing"
            })
        }), e.on("paused", () => {
            re("onboardingVideoPopup", {
                action: "paused"
            })
        }), e.on("ended", () => {
            re("onboardingVideoPopup", {
                action: "video_finished"
            })
        }), e.on("watched_25", () => {
            re("onboardingVideoPopup", {
                action: "watched_25"
            })
        }), e.on("watched_50", () => {
            re("onboardingVideoPopup", {
                action: "watched_50"
            })
        }), e.on("watched_70", () => {
            re("onboardingVideoPopup", {
                action: "watched_70"
            })
        }), e.on("watched_90", () => {
            re("onboardingVideoPopup", {
                action: "watched_90"
            })
        })), () => {
            o.forEach(t => t())
        }
    }, [e]), (0, ad.useEffect)(() => {
        re("onboardingVideoPopup", {
            action: "open"
        })
    }, []), (0, ad.useMemo)(() => ({
        trackClose: () => {
            re("onboardingVideoPopup", {
                action: "close"
            })
        },
        trackMove: () => {
            re("onboardingVideoPopup", {
                action: "move"
            })
        },
        trackExpand: () => {
            re("onboardingVideoPopup", {
                action: "expand"
            })
        }
    }), [])
}
Jt();
_y();
y();
var Gw = {
    timeCodes: [{
        time: "0:00",
        label: "introduction"
    }, {
        time: "0:21",
        label: "getting familiar with the interface"
    }, {
        time: "4:05",
        label: "exploring widgets and presets"
    }, {
        time: "6:45",
        label: "designing a page"
    }, {
        time: "14:38",
        label: "designing for mobile"
    }, {
        time: "16:27",
        label: "collaboration and publishing"
    }],
    videoId: "_CYzGN5LgHM",
    videoCover: "./onboarding/rm-video-onboarding-placeholder.png"
};

function ZT({
    videoId: e = Gw.videoId,
    videoCover: o = Gw.videoCover,
    timeCodes: t = Gw.timeCodes,
    onClose: r
}) {
    let [i, n] = (0, In.useState)(0), [s, l] = (0, In.useState)(), [p, d] = (0, In.useState)(null), {
        trackMove: c,
        trackExpand: m,
        trackClose: u
    } = XT(p), {
        closePanels: g
    } = (0, In.useContext)(_t);
    return yy(() => {
        g()
    }), a(qT, {
        title: "Getting started",
        initialPosition: "RIGHT_TOP",
        onMove: () => {
            c()
        },
        actionButtons: (0, In.useMemo)(() => [a(Vw, {
            icon: a(BF, {}),
            onClick: () => {
                let h = new URL("https://www.youtube.com/watch");
                h.searchParams.set("v", e);
                let b = Math.round(p ? .getCurrentTime() ? ? Uw(s ? .time));
                h.searchParams.set("t", `${b}s`), h.searchParams.set("autoplay", "1"), window.open(h.toString(), "_blank"), p ? .pause(), m()
            }
        }, "ext")], [s ? .time, p, m, e]),
        onClose: h => {
            u(), r ? .(h)
        },
        children: w(MF, {
            children: [a(A, {
                fontSize: "12px",
                children: "In this video, you\u2019ll go through the basics of designing a website in Readymag \u2014 watch, learn and repeat"
            }), a(cr, {
                transition: {
                    ease: zs.easeInCubic
                },
                dynamicHeight: !0,
                value: i,
                onChange: IF,
                children: a(Qt, {
                    onCollapseClick: () => {
                        n(h => h ? 0 : 1)
                    },
                    renderButton: ({
                        isActive: h
                    }) => w(f, {
                        display: "flex",
                        flexDirection: "row",
                        alignItems: "center",
                        gap: "6px",
                        cursor: "pointer",
                        onMouseUp: () => {
                            n(b => b ? 0 : 1)
                        },
                        children: [a(A, {
                            fontSize: "12px",
                            children: "Time codes"
                        }), a(qo, {
                            color: q.white,
                            transform: h ? "rotate(180deg)" : ""
                        })]
                    }),
                    value: 1,
                    children: h => a("div", {
                        ref: h,
                        children: a(TF, {
                            timeCodes: t,
                            onTimeCodeClicked: b => {
                                l(b)
                            }
                        })
                    })
                })
            }), a(f, {
                width: "360px",
                height: "205px",
                children: a(YT, {
                    coverImage: o,
                    videoUrl: `https://www.youtube.com/embed/${e}`,
                    startTime: s ? .time,
                    autoplay: !!s,
                    onLoaded: d
                })
            })]
        })
    })
}

function KT({
    time: e,
    label: o,
    onClick: t
}) {
    return w(f, {
        children: [a(A, {
            display: "inline",
            fontSize: "12px",
            textDecoration: t ? "underline" : null,
            cursor: t ? "pointer" : null,
            onClick: t,
            children: e
        }), w(A, {
            display: "inline",
            fontSize: "12px",
            children: [" ", "- ", o]
        })]
    })
}

function TF({
    timeCodes: e,
    onTimeCodeClicked: o
}) {
    let [t, r] = (0, In.useMemo)(() => [e.slice(0, Math.ceil(e.length / 2)), e.slice(Math.ceil(e.length / 2))], [e]);
    return w(f, {
        display: "flex",
        flexDirection: "row",
        flexWrap: "nowrap",
        gap: "8px",
        children: [a(f, {
            flex: "1 1 0",
            children: t.map(i => a(KT, {
                time: i.time,
                label: i.label,
                onClick: () => o ? .(i)
            }, i.time))
        }), a(f, {
            flex: "1 1 0",
            children: r.map(i => a(KT, {
                time: i.time,
                label: i.label,
                onClick: () => o ? .(i)
            }, i.time))
        })]
    })
}
var IF = () => 0,
    MF = N(f)({
        width: "360px",
        display: "flex",
        flexDirection: "column",
        gap: "8px",
        color: q.white,
        fontFeatureSettings: "'liga' off, 'clig' off",
        fontSize: "12px",
        fontStyle: "normal",
        fontWeight: 500,
        lineHeight: "16px",
        letterSpacing: "-0.08px"
    }),
    BF = () => w("svg", {
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "#fff",
        xmlns: "http://www.w3.org/2000/svg",
        children: [a("path", {
            d: "M12.5583 11.61C12.8165 11.8654 12.817 12.2808 12.5595 12.5369C12.303 12.792 11.8872 12.7925 11.63 12.5381L7.33589 8.29005L7.33363 10.9663C7.3334 11.3323 7.03499 11.6289 6.66696 11.6289C6.29861 11.6289 6.00007 11.3318 6.00029 10.9655L6.00351 6.74795C6.00356 6.66171 6.02017 6.57933 6.05034 6.50376C6.12752 6.22347 6.38505 6.01722 6.69134 6.01628L10.998 6C11.367 5.99887 11.6667 6.29603 11.6667 6.66299C11.6667 7.02836 11.3695 7.32486 11.0021 7.32599L8.23939 7.33752L12.5583 11.61Z",
            fill: "#fff"
        }), a("path", {
            d: "M14.6667 18H9.33333C7.49238 18 6 16.5158 6 14.685V14.022C6 13.6559 6.29848 13.359 6.66667 13.359C7.03486 13.359 7.33333 13.6559 7.33333 14.022V14.685C7.33333 15.7835 8.22876 16.674 9.33333 16.674H14.6667C15.7712 16.674 16.6667 15.7835 16.6667 14.685V9.38103C16.6667 8.28254 15.7712 7.39204 14.6667 7.39204H14.3333C13.9651 7.39204 13.6667 7.0952 13.6667 6.72904C13.6667 6.36288 13.9651 6.06604 14.3333 6.06604L14.6667 6.06604C16.5076 6.06604 18 7.55021 18 9.38103V14.685C18 16.4014 16.6883 17.8131 15.0075 17.9829C14.8954 17.9942 14.7817 18 14.6667 18Z",
            fill: "#fff"
        })]
    });
rr();
y();
var RF = e => ({
        template: e.page_id,
        specialScreenshot: e.thumb
    }),
    Kg = () => {
        let e = (0, Ci.useContext)(Le),
            o = (0, Ci.useContext)(me),
            [{
                modalStatus: t
            }] = Ka();
        GT(), (0, Ci.useEffect)(() => {
            e.currentOnboardingType === "tour" && li("start"), e.currentOnboardingType === "templates" && Ch("templates", {
                headlessMode: !0
            })
        }, [e.currentOnboardingType]);
        let r = (0, Ci.useCallback)(p => {
                Sx(), p ? li("unshowWithTooltip") : li("unshow"), e.dispatch({
                    type: "setOnboardingType",
                    onboardingType: "hidden"
                })
            }, [e]),
            i = (0, Ci.useCallback)(() => {
                r()
            }, [r]),
            n = async p => {
                if (p ? .templates ? .length)
                    for (let d = 0; d <= p.templates.length - 1; d++) await o.addNewPage(o.currentPageNum + d, RF(p.templates[d]))
            },
            s = (0, Ci.useCallback)(async (p, d = "tour") => {
                try {
                    let c = await dx(p);
                    await n(c), e.dispatch({
                        type: "setOnboardingType",
                        onboardingType: d
                    }), Ch(p)
                } catch {
                    li("unshow")
                }
            }, [n, e]);
        return (0, Ci.useMemo)(() => o.me.ab_flags ? .tourVsVideo === "video" && Ve("experiment.2503tourVsVideo"), [o]) ? a(Y, {
            children: t !== "unshow" && a(ZT, {
                onClose: () => {
                    i()
                }
            })
        }) : a(VT, {
            modalStatus: t,
            onClose: i,
            onStart: s,
            onEnd: r
        })
    };
var Si = M(F());
Co();
W();
te();
Jt();
Ut();
y();
var zF = N(f, {
    excludeProps: ["isVisible"]
})
`
  z-index: 3000;
  position: relative;
  transition: opacity 0.3s ease, transform 0.3s ease;
  opacity: ${e=>e.isVisible?1:0};
  transform: translateY(${e=>e.isVisible?"0":"2px"});
`;

function EF(e) {
    if (!(e.target instanceof HTMLElement)) return !1;
    let o = e.target;
    return !!(o.tagName.toLowerCase() === "input" || o.dataset && o.dataset.text || o.tagName.toLowerCase() === "textarea" && !o.classList.contains("copyhack") || o.getAttribute("contenteditable"))
}
var jw = 30;

function AF(e, o) {
    return Math.abs(o.x - e.x) >= jw || Math.abs(o.y - e.y) >= jw
}

function JT({
    children: e,
    scrollGap: o
}) {
    let {
        viewport: t
    } = (0, Si.useContext)(je), [r, i] = (0, Si.useState)(!0), [n] = Uv(), s = (0, Si.useRef)(0).current, l = (0, Si.useRef)(0).current, p = (0, Si.useRef)({
        x: 0,
        y: 0
    }).current, d = !!n.name;
    return t === "phone_portrait" && (d = !0), (0, Si.useEffect)(() => {
        d && i(!0);
        let c = document.getElementById("main"),
            m = ph(() => {
                if (!c) return;
                let g = c.scrollTop;
                g > l || (s = g);
                let b = g - s;
                Math.abs(g - l) > 50 && i(!(b > o)), l = g
            }, 200),
            u = ph(g => {
                let h = {
                        x: g.clientX,
                        y: g.clientY
                    },
                    b = Math.sqrt(Math.pow(h.x - p.x, 2) + Math.pow(h.y - p.y, 2));
                AF(p, h) && b >= jw && i(!0), p = h
            }, 100);
        return d || (c ? .addEventListener("scroll", m, !1), document.addEventListener("mousemove", u, !1)), () => {
            c ? .removeEventListener("scroll", m, !1), document.removeEventListener("mousemove", u, !1)
        }
    }, [d]), (0, Si.useEffect)(() => {
        function c(u) {
            r || u.key !== "Tab" || EF(u) || (u.preventDefault(), u.stopPropagation(), i(!0))
        }
        let m = document.querySelector("body");
        return d || m.addEventListener("keydown", c), () => {
            m.removeEventListener("keydown", c)
        }
    }, [r, d]), a(zF, {
        isVisible: r,
        children: e
    })
}
Sr();
var Ra = M(F());
te();
W();
be();
He();
ar();
Gh();
Ue();
Ee();
$a();
var QT = e => po.put(`/api/support/project/${e}/revoke`, {}),
    e8 = e => po.put(`/api/support/project/${e}/accept`, {}),
    t8 = e => po.get(`/api/support/validate?token=${e}`);
y();
var o8 = N(ge)
`
  display: flex;
  justify-content: center;
  align-items: center;

  width: 244px;
  height: 56px;

  border-radius: 8px;

  color: ${({theme:e})=>e.colors.white};
`;

function r8(e) {
    let [o, t] = (0, Ra.useState)(!1), [r, i] = (0, Ra.useState)(!1), {
        project: n
    } = (0, Ra.useContext)(me);
    (0, Ra.useEffect)(() => {
        e.token && (async () => (await t8(e.token)).isSupportTokenValid && t(!0))()
    }, [e.token]);
    let s = async () => {
            try {
                i(!0), await QT(n.num_id)
            } finally {
                i(!1), t(!1)
            }
        },
        l = async () => {
            try {
                i(!0), await e8(n.num_id)
            } catch (p) {
                console.error("Error allowing support access", p)
            } finally {
                i(!1), t(!1)
            }
        };
    return w(cl, {
        underlayStyles: {
            backdropFilter: "blur(5px)"
        },
        showCloseButton: !0,
        wrapperProps: {
            width: "364px"
        },
        show: o,
        onExit: () => t(!1),
        children: [a(we, {
            id: "request-support-modal-title",
            display: "flex",
            alignItems: "center",
            textAlign: "center",
            whiteSpace: "pre-wrap",
            fontSize: 24,
            height: "auto",
            marginBottom: "3rm",
            color: q.white,
            lineHeight: "6rm",
            children: `Allow Readymag support team access to project ${n.title||"Project"}?`
        }), a(we, {
            id: "request-support-modal-text",
            display: "flex",
            alignItems: "center",
            textAlign: "center",
            whiteSpace: "pre-wrap",
            fontSize: 16,
            height: "auto",
            color: q.gray,
            marginTop: "8px",
            children: `This account will retain access for
72 hours only.`
        }), a(f, {
            marginTop: "40px",
            display: "flex",
            flexDirection: "column",
            children: r ? a(Rt, {
                bgColor: "transparent"
            }) : w(Y, {
                children: [a(o8, {
                    disabled: r,
                    variant: "clean",
                    backgroundColor: "#0A85FF",
                    onClick: l,
                    children: "Allow"
                }), a(o8, {
                    marginTop: "4rm",
                    disabled: r,
                    variant: "clean",
                    backgroundColor: "rgba(255, 255, 255, 0.1)",
                    onClick: s,
                    children: "Deny"
                })]
            })
        })]
    })
}
var ti = M(F());
Ri();
te();
W();
be();
Fr();
ar();
K6();
_r();
var n8 = M(F());
te();
var Zg = M(F()),
    DF = e => {
        let [o, t] = (0, Zg.useState)(!1), r = n => {
            n.key === e && t(!0)
        }, i = n => {
            n.key === e && t(!1)
        };
        return (0, Zg.useEffect)(() => (window.addEventListener("keydown", r), window.addEventListener("keyup", i), () => {
            window.removeEventListener("keydown", r), window.removeEventListener("keyup", i)
        }), []), o
    },
    i8 = DF;
y();
var LF = Mt(N("div")({
        position: "fixed",
        inset: 0,
        backgroundColor: "rgba(0, 0, 0, 0.5)",
        backdropFilter: "blur(5px)",
        zIndex: 1e4
    })),
    OF = Mt(N("div")({
        position: "fixed",
        top: "50%",
        left: "50%",
        zIndex: 10001
    }));

function s8({
    onClose: e,
    isOpen: o,
    children: t
}) {
    let r = i8("Escape");
    (0, n8.useEffect)(() => {
        r && e ? .()
    }, [r]);

    function i(n) {
        n.stopPropagation(), e ? .()
    }
    return a(So, {
        children: o && w(Y, {
            children: [a(LF, {
                initial: {
                    opacity: 0
                },
                animate: {
                    opacity: 1
                },
                exit: {
                    opacity: 0
                },
                onClick: i
            }), a(OF, {
                initial: {
                    opacity: 0,
                    y: "-50%",
                    x: "-50%"
                },
                animate: {
                    opacity: 1,
                    y: "-50%",
                    x: "-50%"
                },
                exit: {
                    opacity: 0
                },
                transition: {
                    type: "spring",
                    duration: .5
                },
                children: t
            })]
        })
    })
}
Ee();
var a8 = M(lt()),
    l8 = M(F());
Ri();
te();
be();
W();
He();
y();
var $F = N(Ge)
`
  user-select: none;

  display: flex;
  align-items: center;

  height: 40px;

  background-color: ${({theme:e,active:o})=>o?Ie(e.colors.gray,.16):"transparent"};
  padding: 8px 12px 8px 12px;
  border-radius: 8px;
  text-align: left;

  &:hover > span {
    color: ${({theme:e})=>e.colors.tomato};
  }
`, HF = N(f)
`
  user-select: none;
  padding: 8px 12px 8px 12px;
  text-align: left;
`;

function c8({
    versions: e,
    selectedVersion: o,
    onVersionClick: t
}) {
    let r = (0, l8.useMemo)(() => a8.default.groupBy(e, ({
            metadata: s
        }) => s.category), []),
        i = Object.keys(r),
        n = !i.every(s => s === "older");
    return a(f, {
        display: "flex",
        flexDirection: "column",
        children: i.map(s => {
            let l = r[s];
            return l ? .length ? w(f, {
                children: [n ? a(HF, {
                    children: a(we, {
                        fontSize: "3rm",
                        color: "gray",
                        fontWeight: 500,
                        children: I1(s)
                    })
                }) : null, a(f, {
                    display: "flex",
                    flexDirection: "column",
                    children: l.map(p => a($F, {
                        active: o._id === p._id,
                        variant: "clean",
                        onClick: () => t(p._id),
                        children: w(we, {
                            color: "black",
                            fontSize: "3rm",
                            fontWeight: 500,
                            children: [p.metadata.formatedDate, " ", p.metadata.titlePostfix ? a(we, {
                                as: "span",
                                fontSize: "3rm",
                                fontWeight: 500,
                                color: "gray",
                                children: p.metadata.titlePostfix
                            }) : null]
                        })
                    }, p._id))
                })]
            }, s) : null
        })
    })
}
var za = M(F());
_r();
te();
W();
W();
W();
be();
var ld = M(F());
te();
te();
W();
be();
y();
var FF = N("img")
`
  border-radius: 8px;
  height: 100%;
  width: 100%;
  object-fit: contain;
`, NF = N(f)
`
  display: flex;
  justify-content: center;
  align-items: center;

  overflow: hidden;

  border-radius: 8px;
  height: auto;

  border: 2px solid ${e=>e.borderColor};
`;

function p8({
    page: e,
    screenshotProps: o
}) {
    let [t, r] = (0, ld.useState)(!1), [i, n] = (0, ld.useState)(!0), s = e.screenshots[o.viewport], l = (0, ld.useMemo)(() => e.enabledViewports ? !e.enabledViewports.includes(o.viewport) : !1, [o.viewport]), d = l || (!s || t);

    function c() {
        r(!0)
    }

    function m() {
        n(!1)
    }
    return a(NF, {
        borderColor: d ? Ie("gray", .16) : "transparent",
        backgroundColor: i && !d ? Ie("gray", .16) : "transparent",
        width: o.width,
        aspectRatio: o.aspectRatio,
        children: d ? a(we, {
            fontSize: "4rm",
            color: "gray",
            textAlign: "center",
            padding: "4rm",
            children: l ? `Page is
not available in
this
version` : `Screenshot is
not available in
this
version`
        }) : a(FF, {
            src: s,
            onError: c,
            onLoad: m,
            loading: "lazy"
        })
    })
}
y();

function WF(e, o) {
    return o ? .order ? `${o.parent}.${o.order}` : o ? .parent || e
}

function d8({
    page: e,
    screenshotProps: o
}) {
    let {
        path: t,
        num: r
    } = e;
    return w(f, {
        userSelect: "none",
        pointerEvents: "none",
        children: [a(p8, {
            page: e,
            screenshotProps: o
        }), a(f, {
            margin: "1rm",
            marginLeft: "0.5rm",
            children: w(we, {
                color: "gray",
                fontSize: "3rm",
                fontWeight: 500,
                children: ["Page ", WF(r, t)]
            })
        })]
    })
}
y();

function cd({
    version: e,
    screenshotProps: o
}) {
    return a(f, {
        display: "flex",
        flexDirection: "column",
        gap: "2rm",
        children: e.pages ? .map(t => a(d8, {
            page: t,
            screenshotProps: o
        }, `${e._id}-${t.num}`))
    })
}
W();
y();

function qw({
    version: e,
    screenshotProps: o,
    onClick: t,
    ...r
}) {
    return e ? a(f, {
        position: "absolute",
        opacity: "0.3",
        cursor: "pointer",
        onClick: t,
        ...r,
        children: a(cd, {
            version: e,
            screenshotProps: o
        })
    }) : null
}
var VF = {
        default: {
            2: "112rm",
            1: "72rm",
            0: "48rm"
        },
        phone_portrait: {
            2: "60rm",
            1: "40rm",
            0: "30rm"
        }
    },
    UF = {
        default: "3/2",
        phone_portrait: "320/568"
    };

function u8({
    size: e,
    viewport: o
}) {
    return {
        viewport: o,
        aspectRatio: UF[o],
        width: VF[o][e]
    }
}
y();
var GF = Mt(N("div")({
    display: "flex",
    flex: 1,
    flexDirection: "column",
    alignItems: "center",
    overflow: "hidden",
    width: "512px",
    padding: "64px 0 32px 0"
}));

function m8({
    children: e
}) {
    return a(So, {
        children: a(GF, {
            initial: {
                opacity: 0
            },
            animate: {
                opacity: 1
            },
            exit: {
                opacity: 0
            },
            transition: {
                ease: "easeInOut",
                duration: .2
            },
            children: e
        })
    })
}

function jF({
    versions: e,
    selectedVersion: o,
    currentViewport: t,
    currentTileSize: r,
    onVersionChange: i
}) {
    let n = (0, za.useCallback)(() => {
            i(o - 1)
        }, [o]),
        s = (0, za.useCallback)(() => {
            i(o + 1)
        }, [o]),
        l = (0, za.useMemo)(() => u8({
            size: r,
            viewport: t
        }), [r, t]);
    return r === 2 ? a(m8, {
        children: a(cd, {
            version: e[o],
            screenshotProps: l
        })
    }, `${o}-${t}-${r}`) : a(m8, {
        children: w(f, {
            display: "flex",
            gap: "40px",
            position: "relative",
            children: [a(qw, {
                version: e[o - 1],
                screenshotProps: l,
                onClick: n,
                left: "calc(-100% - 40px)"
            }), a(cd, {
                version: e[o],
                screenshotProps: l
            }), a(qw, {
                version: e[o + 1],
                screenshotProps: l,
                onClick: s,
                left: "calc(100% + 40px)"
            })]
        })
    }, `${o}-${t}-${r}`)
}
var g8 = (0, za.memo)(jF);
W();
te();
y();

function h8({
    children: e
}) {
    return a(f, {
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "space-between",
        width: "16rm",
        paddingTop: "6rm",
        paddingBottom: "6rm",
        border: "1px solid",
        borderRight: "0px",
        borderTopLeftRadius: "4rm",
        borderBottomLeftRadius: "4rm",
        borderColor: Ie("gray", .16),
        children: e
    })
}

function f8({
    children: e
}) {
    return a(f, {
        width: "72rm",
        height: "100%",
        display: "flex",
        flexDirection: "column",
        paddingTop: "5rm",
        paddingBottom: "4rm",
        backgroundColor: "white",
        overflow: "hidden",
        children: e
    })
}
Ri();
W();
Ah();
He();
y();
var qF = N(ge)
`
  border-radius: 4px;
  height: 48px;
  width: 48px;

  display: flex;
  justify-content: center;
  align-items: center;

  &:hover {
    background-color: #333333;
  }
`, YF = N(f)
`
  position: fixed;

  display: flex;
  align-items: center;
  justify-content: space-between;

  background: ${({theme:e})=>`
linear - gradient(180 deg, $ {
    e.colors.black
}, transparent)
`};
  backdrop-filter: blur(1px);

  padding: 8px 18px;

  z-index: 1000;
`;

function b8({
    type: e,
    onClick: o,
    hidden: t
}) {
    return a(qF, {
        visibility: t ? "hidden" : "visible",
        variant: "clean",
        onClick: o,
        children: a($s, {
            width: "8rm",
            height: "6rm",
            color: "gray",
            transform: e === "left" ? "rotate(0deg)" : "rotate(180deg)"
        })
    })
}

function w8({
    total: e,
    current: o,
    onChange: t,
    children: r
}) {
    function i() {
        t(o - 1)
    }

    function n() {
        t(o + 1)
    }
    return w(YF, {
        width: "132.5rm",
        children: [a(b8, {
            hidden: o === 0,
            type: "left",
            onClick: i
        }), r, a(b8, {
            hidden: o === e,
            type: "right",
            onClick: n
        })]
    })
}
var C8 = M(F());
Ri();
W();
var Qg = M(F());
Ye();
te();
W();
be();
He();
Ri();
He();
be();
ar();
y();
var XF = N(Ge)
`
  display: flex;
  align-items: center;
  justify-content: center;

  height: 40px;
  border-radius: 8px;

  user-select: none;

  &:hover,
  &:disabled {
    opacity: 0.8;
  }
`;

function Jg({
    status: e,
    color: o,
    backgroundColor: t,
    borderColor: r,
    onClick: i,
    children: n,
    ...s
}) {
    let [l, p] = [e === "pending", e === "error"];
    return a(XF, {
        variant: "unstyled",
        disabled: l || p,
        color: o,
        backgroundColor: t,
        border: "1px solid",
        borderColor: r,
        onClick: i,
        ...s,
        children: l ? a(Rt, {
            color: o,
            bgColor: "transparent"
        }) : p ? a(we, {
            fontSize: "3rm",
            fontWeight: 500,
            children: "Error"
        }) : a(we, {
            fontSize: "3rm",
            fontWeight: 500,
            children: n
        })
    })
}
y();

function KF({
    version: e,
    show: o,
    onConfirm: t,
    onCancel: r
}) {
    return o ? a(f, {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        position: "absolute",
        top: 0,
        left: 0,
        zIndex: 1e4,
        width: "100%",
        height: "100%",
        borderRadius: "4rm",
        backgroundColor: "black",
        children: w(f, {
            width: "72rm",
            display: "flex",
            gap: "2rm",
            flexDirection: "column",
            children: [w(we, {
                color: "white",
                fontSize: "6rm",
                fontWeight: "500",
                lineHeight: "24px",
                children: ["Are you sure you want to restore the version from ", P1(e.createdDate), "?"]
            }), a(we, {
                color: "gray",
                fontSize: "3rm",
                fontWeight: "500",
                lineHeight: "16px",
                children: "The action cannot be undone, but the current state will be saved and you will be able to restore it later. The restoring may take up to 60 sec."
            }), w(f, {
                display: "flex",
                marginTop: "2rm",
                gap: "4rm",
                children: [a(Ge, {
                    color: "tomato",
                    fontSize: "6rm",
                    fontWeight: "500",
                    onClick: r,
                    children: "No, go back"
                }), a(Ge, {
                    color: "white",
                    fontSize: "6rm",
                    fontWeight: "500",
                    onClick: t,
                    children: "Yes"
                })]
            })]
        })
    }) : null
}

function x8({
    selectedVersion: e
}) {
    let {
        setStatus: o,
        status: t
    } = Iu(), [r, i] = (0, Qg.useState)(!1);
    (0, Qg.useEffect)(() => {
        o("idle")
    }, [e]);
    async function n() {
        try {
            o("pending");
            let {
                id: s
            } = await _1(e.projectNumId, e._id);
            window.RM.constructorRouter.sockets.startProjectRestore({
                restoreId: s
            }), fl({
                show: !0,
                jobId: s
            }), o("success"), re("versionHistory", {
                action: "restore version",
                age: Uu(e.createdDate)
            })
        } catch {
            o("error")
        }
    }
    return w(Y, {
        children: [a(KF, {
            version: e,
            show: r,
            onCancel: () => i(!1),
            onConfirm: n
        }), a(Jg, {
            status: t,
            variant: "secondary",
            color: "black",
            backgroundColor: "white",
            borderColor: Ie("gray", .24),
            onClick: () => i(!0),
            children: "Restore this version"
        })]
    })
}
var fc = M(F());
Ye();
var v8 = M(F());
Ic();

function y8(e, o = []) {
    let t = (0, v8.useRef)();
    return Sd((...r) => (t.current && !t.current ? .signal.aborted && t.current.abort(), t.current = new AbortController, e(t.current ? .signal)(...r)), [o])
}
$a();
async function k8(e) {
    return await po.get(`/api/jobs/${e}/status`)
}
var ZF = ["complete", "unknown"],
    hc = class {
        constructor({
            interval: o = 2e3
        } = {}) {
            z(this, "intervalId", null);
            z(this, "interval");
            this.interval = o
        }
        async pollJob(o, t, r) {
            try {
                let {
                    status: i
                } = await k8(o);
                if (ZF.includes(i)) return t(), !1;
                if (i === "failed") return r(), !1
            } catch {
                return r(), !1
            }
            return !0
        }
        async start(o) {
            if (!o) throw new Error("Job ID is required");
            if (this.intervalId) throw new Error("Polling is already in progress");
            return new Promise((t, r) => {
                let i = async () => {
                    await this.pollJob(o, t, r) || this.stop()
                };
                this.intervalId = setInterval(i, this.interval)
            })
        }
        stop() {
            this.intervalId && (clearInterval(this.intervalId), this.intervalId = null)
        }
        isPolling() {
            return !!this.intervalId
        }
    };
ut();
y();

function _8({
    selectedVersion: e
}) {
    let {
        setStatus: o,
        status: t
    } = Iu(), [r] = (0, fc.useState)(() => new hc), [i, n] = (0, fc.useState)(null);
    (0, fc.useEffect)(() => {
        n(null), o("idle"), r.stop()
    }, [e]), (0, fc.useEffect)(() => function() {
        r.stop()
    }, []);
    let s = y8(p => async () => {
        try {
            o("pending");
            let {
                id: d
            } = await C1(e.projectNumId, e._id, {
                signal: p
            });
            await r.start(d);
            let {
                projectId: c
            } = await S1(e.projectNumId, {
                signal: p
            });
            n(c), o("success"), re("versionHistory", {
                action: "make a copy",
                age: Uu(e.createdDate)
            })
        } catch {
            o("error")
        }
    }, [i, e]);

    function l() {
        window.open(`${ae.readymag_auth_host}/edit/${i}`, "_blank")
    }
    return a(Jg, {
        status: t,
        color: "white",
        backgroundColor: "tomato",
        onClick: i ? l : s,
        children: i ? "Open a copy" : "Make a copy"
    })
}
y();
var JF = N(f)
`
  display: flex;
  flex-direction: column;
  margin: 0 24px;
  gap: 8px;
`, QF = N(f)
`
  position: relative;

  ::before {
    content: '';
    position: absolute;
    top: -36px;
    left: 0;
    right: 0;
    height: 36px;
    background: linear-gradient(transparent, #fff);
    pointer-events: none;
  }
`, S8 = (0, C8.memo)(({
    selectedVersion: e
}) => w(JF, {
    children: [a(QF, {}), a(_8, {
        selectedVersion: e
    }), a(x8, {
        selectedVersion: e
    })]
}));
var P8 = M(F());
Ri();
He();
y();
var eN = N(ge)
`
  color: ${({theme:e})=>e.colors.gray};

  &:hover {
    color: ${({theme:e})=>e.colors.white};
  }
`, T8 = (0, P8.memo)(({
    type: e,
    onToggle: o
}) => {
    function t() {
        o(e === "phone_portrait" ? "default" : "phone_portrait")
    }
    return a(eN, {
        variant: "unstyled",
        onClick: t,
        children: a(Km, {
            type: e
        })
    })
});
var M8 = M(F()),
    B8 = M(F());
Ri();
W();
He();
y();
var tN = N(f)
`
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
`, I8 = N(Ge)
`
  color: ${({theme:e})=>e.colors.darkGray};

  &:hover {
    color: ${({theme:e})=>e.colors.gray};
  }
`;

function oN() {
    return a("svg", {
        width: "32",
        height: "32",
        viewBox: "0 0 32 32",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        children: a("g", {
            children: a("path", {
                d: "M8 12C8 10.8954 8.89543 10 10 10H22C23.1046 10 24 10.8954 24 12V20C24 21.1046 23.1046 22 22 22H10C8.89543 22 8 21.1046 8 20V12Z",
                fill: "currentColor"
            })
        })
    })
}

function rN() {
    return a("svg", {
        width: "32",
        height: "24",
        viewBox: "0 0 32 24",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        children: w("g", {
            children: [a("rect", {
                x: "5",
                y: "8",
                width: "10",
                height: "8",
                rx: "1",
                fill: "currentColor"
            }), a("rect", {
                x: "17",
                y: "8",
                width: "10",
                height: "8",
                rx: "1",
                fill: "currentColor"
            })]
        })
    })
}
var iN = N("input")
`
  appearance: none;
  cursor: pointer;
  position: absolute;

  // It's a hack to get native vertical range input, because 'appearance: slider-vertical'
  // don't allow to set custom styles
  transform: rotate(-90deg);
  transform-origin: 50% 50%;

  background: ${({theme:e})=>e.colors.gray};

  // Should be here because 'transform' will override height :(
  width: 100px;
  height: 1px;

  &::-webkit-slider-thumb {
    appearance: none;
    width: 13px;
    height: 13px;
    background: ${({theme:e})=>e.colors.black};
    border-radius: 50%;
    border: 2px solid ${({theme:e})=>e.colors.gray};
    cursor: ns-resize;
    transition: background-color 0.3s ease;
  }

  &::-webkit-slider-thumb:hover {
    background: ${({theme:e})=>e.colors.gray};
  }

  &::-webkit-slider-thumb:active {
    cursor: grabbing;
  }
`, R8 = (0, M8.memo)(({
    defaultSize: e = 2,
    maxSize: o = 2,
    minSize: t = 0,
    onSizeChange: r
}) => {
    let [i, n] = (0, B8.useState)(e);

    function s(c) {
        n(parseInt(c.target.value))
    }

    function l() {
        r(i)
    }

    function p() {
        i !== o && (n(i + 1), r(i + 1))
    }

    function d() {
        i !== t && (n(i - 1), r(i - 1))
    }
    return w(f, {
        display: "flex",
        flexDirection: "column",
        gap: "0.5rm",
        children: [a(I8, {
            disabled: i === o,
            variant: "unstyled",
            onClick: p,
            "aria-label": "Increase tile size",
            children: a(oN, {})
        }), a(tN, {
            height: "25rm",
            children: a(iN, {
                type: "range",
                value: i,
                min: t,
                max: o,
                step: 1,
                onChange: s,
                onMouseUp: l
            })
        }), a(I8, {
            disabled: i === t,
            variant: "unstyled",
            onClick: d,
            "aria-label": "Decrease tile size",
            children: a(rN, {})
        })]
    })
});
y();
var nN = N(f)
`
  padding: 0 32px;
  position: relative;

  ::after {
    content: '';
    position: absolute;
    bottom: -24px;
    left: 0;
    right: 0;
    height: 24px;
    background: linear-gradient(#fff, transparent);
    pointer-events: none;
    z-index: 10;
  }
`;

function sN() {
    return w(f, {
        display: "flex",
        justifyContent: "space-between",
        userSelect: "none",
        children: [a(we, {
            color: "black",
            fontWeight: 500,
            fontSize: "6rm",
            letterSpacing: "-0.16px",
            children: "Version history"
        }), a(ze, {
            display: "flex",
            marginRight: "2rm",
            target: "_blank",
            href: "https://help.readymag.com/hc/en-us/articles/33666976895643/",
            children: a(Iv, {
                color: "gray",
                width: "2rm"
            })
        })]
    })
}

function aN({
    versionsPerProject: e
}) {
    return w(f, {
        flexDirection: "column",
        marginTop: "2rm",
        userSelect: "none",
        children: [w(we, {
            color: "black",
            fontSize: "3rm",
            lineHeight: "16px",
            fontWeight: 500,
            children: ["Up to ", e, " snapshots per project available."]
        }), " ", a(ze, {
            href: "/settings#change-plan",
            target: "_blank",
            lineHeight: "16px",
            fontSize: "3rm",
            color: "tomato",
            children: "Upgrade for more"
        })]
    })
}

function lN({
    children: e
}) {
    return a(f, {
        display: "flex",
        flexDirection: "row",
        justifyContent: "space-between",
        overflow: "hidden",
        height: "144rm",
        width: "220rm",
        backgroundColor: "black",
        borderRadius: "4rm",
        onClick: o => o.stopPropagation(),
        children: e
    })
}

function cN({
    showUpgradeMention: e,
    versionsPerProject: o
}) {
    let [{
        selectedVersion: t,
        versions: r,
        status: i
    }] = wf(), n = (0, ti.useContext)(me), [s, l] = (0, ti.useState)("default"), [p, d] = (0, ti.useState)(1), c = (0, ti.useCallback)(u => {
        A1(u)
    }, []), m = (0, ti.useCallback)(u => {
        D1(u)
    }, []);
    return (0, ti.useEffect)(() => {
        let u = new AbortController;
        return R1({
                projectId: n.project.num_id,
                signal: u.signal
            }),
            function() {
                u.abort()
            }
    }, []), i !== "loaded" ? w(f, {
        display: "flex",
        flex: 1,
        alignItems: "center",
        justifyContent: "center",
        children: [i === "loading" ? a(Rt, {
            color: "white",
            bgColor: "transparent"
        }) : null, i === "error" ? a(we, {
            color: "gray",
            children: "Something went wrong"
        }) : null]
    }) : !r.length || !t ? a(f, {
        display: "flex",
        flex: 1,
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "center",
        children: w(f, {
            display: "flex",
            flexDirection: "column",
            width: "63rm",
            textAlign: "center",
            children: [a(we, {
                color: "gray",
                lineHeight: "20px",
                children: "The first version will appear after 10 minutes of working in the editor."
            }), a(ze, {
                target: "_blank",
                href: "https://help.readymag.com/hc/en-us/articles/33666976895643/",
                color: "gray",
                fontWeight: 400,
                textDecoration: "underline",
                textUnderlineOffset: "3px",
                children: "Learn more"
            })]
        })
    }) : w(Y, {
        children: [w(h8, {
            children: [a(T8, {
                type: s,
                onToggle: l
            }), a(R8, {
                defaultSize: p,
                onSizeChange: d
            })]
        }), a(f, {
            border: "1px solid",
            borderRight: "0px",
            borderColor: Ie("gray", .16),
            children: a(Ft, {
                children: ({
                    ref: u
                }) => w(f, {
                    ref: u,
                    display: "flex",
                    justifyContent: "center",
                    children: [a(w8, {
                        total: r.length - 1,
                        current: t.idx,
                        onChange: c,
                        children: w(we, {
                            color: "white",
                            fontWeight: 400,
                            fontSize: "4rm",
                            lineHeight: "20px",
                            userSelect: "none",
                            children: [t.value.metadata.titlePrefix, " ", t.value.metadata.formatedDate, w(we, {
                                as: "span",
                                color: "gray",
                                children: [" ", t.value.metadata.titlePostfix]
                            })]
                        })
                    }), a(g8, {
                        versions: r,
                        selectedVersion: t.idx,
                        currentViewport: s,
                        currentTileSize: p,
                        onVersionChange: c
                    })]
                })
            })
        }), w(f8, {
            children: [w(nN, {
                children: [a(sN, {}), e ? a(aN, {
                    versionsPerProject: o
                }) : null]
            }), a(Ft, {
                mode: "vertical",
                children: ({
                    ref: u
                }) => a(f, {
                    ref: u,
                    padding: "16px 24px",
                    children: a(c8, {
                        versions: r,
                        selectedVersion: t.value,
                        onVersionClick: m
                    })
                })
            }), a(S8, {
                selectedVersion: t.value
            })]
        })]
    })
}

function z8({
    user: e,
    isOwner: o
}) {
    let [{
        show: t
    }] = wf(), r = e ? .get("permissions"), i = (0, ti.useMemo)(() => {
        let n = e ? .get("stripe") ? .subscription_id,
            s = r ? .can_use_version_history;
        if (!o || !n || !s) return !1;
        let [l] = n.split("_");
        return !["business", "extra", "professional"].includes(l)
    }, []);
    return a(s8, {
        isOpen: t,
        onClose: E1,
        children: a(lN, {
            children: a(cN, {
                showUpgradeMention: i,
                versionsPerProject: r ? .version_history_limit_per_project
            })
        })
    })
}
y();

function pN({
    router: e,
    constructorMagModel: o
}) {
    let {
        inPreview: t
    } = vx(), r = e.workspace ? a(Qh, {
        router: e,
        children: a(JT, {
            scrollGap: 210,
            children: a(NT, {})
        })
    }) : null, i = e.preview ? a(Jx, {
        constructorMagModel: o,
        router: e.preview,
        children: a(Tm, {
            zIndex: 3e3
        })
    }) : null;
    return t ? i : r
}
var Xw = (e, {
    router: o,
    project: t,
    fromPreview: r,
    supportAccessToken: i
}) => {
    let n = new Backbone.Model({
        isVisible: !0
    });

    function s() {
        E8.default.render(a($r, {
            withGlobalStyles: !1,
            children: a(qa, {
                router: o,
                project: t,
                inPreview: r,
                children: a(Vc, {
                    router: o,
                    widgetbar: n,
                    children: a(Ad, {
                        magModel: t,
                        router: o,
                        children: w(dm, {
                            userModel: o.me,
                            children: [a(pN, {
                                constructorMagModel: t,
                                router: o
                            }), a(f, {
                                id: "settings-popup-container",
                                position: "absolute",
                                top: "0",
                                left: "0",
                                zIndex: "8000",
                                width: "100%"
                            }), a(Kg, {}), a(z8, {
                                user: o.me,
                                isOwner: o.isOwner
                            }), a(ay, {}), i && a(r8, {
                                token: i
                            })]
                        })
                    })
                })
            })
        }), e)
    }
    return s(), {
        show() {
            n.set({
                isVisible: !0
            })
        },
        hide() {
            n.set({
                isVisible: !1
            })
        },
        setWorkspace(l) {
            n.set({
                workspace: l
            })
        },
        isVisible() {
            return n.get("isVisible")
        },
        rerender() {
            s()
        }
    }
};
cI();
zI();
EI();
Qv();
lI();
var U8 = M(Ac());
W();
Fa();
Ee();
Jt();
nn();
var jo = M(F());
_r();
W();
Ri();
Bo();
jd();
nn();
Mi();
Hc();
$6();
D6();
L6();
S6();
ja();
var eh = e => {
    let o = e.pages.reduce((t, r) => {
        let i = r.wids.filter(n => n.is_global);
        return t.concat(i)
    }, []);
    return { ...e,
        pages: e.pages.map(t => {
            let r = { ...t,
                widgets: t.wids
            };
            return delete r.wids, r
        }),
        hasSummary: !0,
        globalWidgets: o.filter(t => !t.is_above),
        aboveAllWidgets: o.filter(t => t.is_above)
    }
};
zh();
var Ji = M(F());
Kt();
nn();
Es();
H6();
y();
var dN = e => e.globalWidgets.find(o => o.get("type") === "ecommercecart"),
    A8 = ({
        constructorProject: e,
        children: o
    }) => {
        let {
            project: t,
            setProject: r,
            page: i,
            postViewerAction: n
        } = (0, Ji.useContext)(sr), [s] = (0, Ji.useState)(() => dN(e)), l = (0, Ji.useCallback)(d => {
            if (!t || !s) return;
            s.save(d), s.hasChanged() && e.set("changed", !0);
            let c = t.globalWidgets.map(g => g.type === "ecommercecart" ? { ...g,
                ...d
            } : g);
            r({ ...t,
                globalWidgets: c
            });
            let [m, u] = Object.entries(d)[0] || [];
            m === "bar-auto-open" && n({
                type: "changeSetting",
                key: m,
                value: u
            })
        }, [t]), [p] = (0, Ji.useState)(() => {
            if (!s) return;
            let d = new Zc({
                    numId: e.attributes.num_id,
                    ecommerceData: e.attributes.ecommerce_data,
                    isPublished: !1,
                    isDownloadedSource: !1
                }),
                c = new Backbone.Model({
                    block: {
                        model: s,
                        saveModelChanges: l,
                        saveModelChangesDebounced: _.debounce(l, 80),
                        eCommerceManager: d
                    },
                    faded: !1,
                    selected: !1,
                    disabled: !1,
                    visible: !0,
                    select: () => c.set({
                        selected: !0,
                        faded: !1
                    }),
                    deselect: () => c.set({
                        selected: !1,
                        faded: !1
                    }),
                    removeFade: () => c.set({
                        faded: !1
                    }),
                    appearanceAnimation: !1,
                    project: e,
                    user: e.user,
                    injectedRefs: {},
                    workspace: null,
                    controlsManager: null,
                    useSharedState: () => ({}),
                    doesUserHaveAccess: !0,
                    isMixed: () => !1
                });
            return c
        });
        return (0, Ji.useMemo)(function() {
            if (!p) return;
            let c = p.get("block");
            c.saveModelChanges = l, c.saveModelChangesDebounced = _.debounce(l, 80)
        }, [l]), (0, Ji.useMemo)(function() {
            if (!p || !i) return;
            let c = i._id,
                m = e.pages.find(u => u.id === c);
            p.set("page", m)
        }, [i]), p && s ? a(Td, {
            model: p,
            context: qd,
            children: o
        }) : o
    };
W();
W6();
var Mn = M(F());
Ri();
ut();
pI();
zh();
O6();
z6();
E6();
y();
var uN = ({
        autoSize: e,
        ...o
    }) => {
        let t = (0, Mn.useRef)(null),
            [r] = ry({
                ref: t,
                value: o.value !== void 0 ? o.value.toString() : o.defaultValue ? .toString() ? ? "",
                disabled: !e
            });
        return r && (o.width = r), a(St, { ...o,
            ref: t
        })
    },
    D8 = N(uN)
`
  box-sizing: border-box;
  height: 100%;
  max-width: 100%;
  min-width: 100%;
  padding: 1px;
  border: 1px solid rgba(0, 0, 0, 0);
  border-radius: 3px;
  font-size: inherit;
  font-family: inherit;
  color: inherit;
  &:focus {
    border-bottom: 1px solid rgba(0, 0, 0, 0);
    border-color: rgba(255, 255, 255, 0.2);
  }
  &:hover {
    border-color: rgba(255, 255, 255, 0.2);
  }
`, Kw = N(St)
`
  box-sizing: border-box;
  height: 100%;
  padding: 1px;
  border: 1px solid rgba(0, 0, 0, 0);
  border-radius: 3px;
  font-size: inherit;
  font-family: inherit;
  color: inherit;
  &:focus {
    border-bottom: 1px solid rgba(0, 0, 0, 0);
    border-color: rgba(255, 255, 255, 0.2);
  }
  &:hover {
    border-color: rgba(255, 255, 255, 0.2);
  }
`, mN = ({
    project: e
}) => {
    let {
        model: {
            block: {
                model: o,
                saveModelChangesDebounced: t
            }
        }
    } = (0, Mn.useContext)(qd), [r, i] = (0, Mn.useState)(() => ({
        "bar-title": o.get("bar-title") ? ? ae.defaultSidebarTexts.title,
        "bar-empty\u0421artTitle": o.get("bar-empty\u0421artTitle") ? ? ae.defaultSidebarTexts.empty\ u0421artTitle,
        "bar-checkout": o.get("bar-checkout") ? ? ae.defaultSidebarTexts.checkout,
        "bar-price": o.get("bar-price") ? ? ae.defaultSidebarTexts.price,
        "bar-quantity": o.get("bar-quantity") ? ? ae.defaultSidebarTexts.quantity
    })), n = (0, Mn.useCallback)(g => {
        let h = g.target.name,
            b = g.target.value;
        i({ ...r,
            [h]: b
        }), t({ ...r,
            [h]: b
        })
    }, [r, t]), s = {
        translate: "no",
        autoComplete: "off",
        autoCorrect: "off",
        spellCheck: !1
    }, l = w(f, {
        display: "flex",
        alignItems: "center",
        gap: "10px",
        position: "relative",
        zIndex: "1",
        children: [a(Kw, {
            name: "bar-title",
            value: r["bar-title"],
            placeholder: ae.defaultSidebarTexts.title,
            maxLength: 32,
            width: "100%",
            height: "32px",
            fontSize: "inherit",
            lineHeight: "inherit",
            onChange: n,
            ...s
        }), a(f, {
            position: "relative",
            top: "1px",
            children: a(wk, {})
        })]
    }), p = a(Kw, {
        name: "bar-empty\u0421artTitle",
        value: r["bar-empty\u0421artTitle"],
        placeholder: ae.defaultSidebarTexts.empty\ u0421artTitle,
        maxLength: 32,
        textAlign: "center",
        width: "100%",
        height: "32px",
        fontSize: "inherit",
        lineHeight: "inherit",
        onChange: n,
        ...s
    }), d = a(Kw, {
        name: "bar-checkout",
        value: r["bar-checkout"],
        placeholder: ae.defaultSidebarTexts.checkout,
        maxLength: 32,
        height: "24px",
        width: "100%",
        textAlign: "center",
        onClick: g => g.stopPropagation(),
        onChange: n,
        ...s
    }), c = a(D8, {
        name: "bar-price",
        value: r["bar-price"],
        placeholder: ae.defaultSidebarTexts.price,
        maxLength: 32,
        width: "auto",
        height: "18px",
        maxWidth: "120px",
        minWidth: "20px",
        fontSize: "0.75em",
        lineHeight: "inherit",
        autoSize: !0,
        onChange: n,
        ...s
    }), m = a(D8, {
        name: "bar-quantity",
        value: r["bar-quantity"],
        placeholder: ae.defaultSidebarTexts.quantity,
        maxLength: 32,
        width: "auto",
        height: "18px",
        maxWidth: "120px",
        minWidth: "20px",
        fontSize: "0.75em",
        autoSize: !0,
        onChange: n,
        ...s
    }), [u] = (0, Mn.useState)(() => new qx({
        project: e,
        publicPath: "",
        base: ""
    }));
    return a(Yx, {
        value: u,
        children: a(Fx, {
            value: u.project,
            children: a(Wx, {
                value: u.router,
                children: a(vk, {
                    project: e,
                    cartTitle: l,
                    emptyText: p,
                    buttonText: d,
                    priceText: c,
                    quantityText: m
                })
            })
        })
    })
}, L8 = mN;
ut();
A6();
y();

function O8(e) {
    return `/api/fonts/${e}/css`
}

function gN(e) {
    return e.map(o => o.css_url)
}

function $8({
    fonts: e
}) {
    if (!e ? .length) return null;
    let o = e.filter(n => n.provider === "custom"),
        t = e.filter(n => n.provider === "webtype"),
        r = e.filter(n => n.provider === "typetoday"),
        i = [t.length ? O8("webtype") : void 0, r.length ? O8("typetoday") : void 0, ...o.length ? gN(o) : []].filter(Boolean);
    return i.length ? a(Y, {
        children: i.map((n, s) => a("link", {
            rel: "stylesheet",
            type: "text/css",
            href: n
        }, s))
    }) : null
}
Ic();

function hN({
    id: e,
    token: o,
    fontsMetaData: t
}) {
    let r = document.createElement("script");
    r.src = "//use.typekit.net/previewkits/pk-v1.js", r.onload = function() {
        window.TypekitPreview.setup({
            auth_id: e,
            auth_token: o,
            default_subset: "all"
        }), window.TypekitPreview.load(t)
    }, window.document.head.appendChild(r)
}
var H8 = hN;
y();

function fN(e) {
    let o = encodeURIComponent(e.name);
    if (e.variations.length === 1 && e.variations[0] === "n4") return `family=${o}`;
    let t = [],
        r = [];
    for (let n of e.variations.sort((s, l) => s.localeCompare(l))) {
        let [s, l] = [n.slice(0, 1), parseInt(n.slice(1))], p = l * 100;
        s === "n" ? t.push(p) : s === "i" && r.push(p)
    }
    let i = [...t.map(n => `0,${n}`), ...r.map(n => `1,${n}`)];
    return `family=${o}:ital,wght@${i.join(";")}`
}

function F8({
    fonts: e
}) {
    if (!e ? .length) return null;
    let o = e.filter(n => n.provider === "google");
    if (!o.length) return null;
    let i = `https://fonts.googleapis.com/css2?${o.map(fN).join("&")}`;
    return w(Y, {
        children: [a("link", {
            rel: "preconnect",
            href: "//fonts.googleapis.com"
        }), a("link", {
            rel: "preconnect",
            href: "//fonts.gstatic.com",
            crossOrigin: "anonymous"
        }), a("link", {
            rel: "stylesheet",
            type: "text/css",
            href: i
        })]
    })
}
y();

function N8({
    fontsMetaData: e = [],
    typekitId: o,
    typekitToken: t
}) {
    let r = zi(() => e ? .filter(i => i.provider === "typekit").map(i => ({
        id: i.css_name,
        variations: i.variations
    })), [e]);
    return Bu(() => {
        H8({
            id: o,
            token: t,
            fontsMetaData: r
        })
    }, r.length > 0), w(Y, {
        children: [a(F8, {
            fonts: e
        }), a($8, {
            fonts: e
        })]
    })
}
Kt();
y();
var W8 = N(f, {
    label: "preview-background"
})
`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: white;
`, bN = Mt(W8), wN = N(f, {
    label: "device-box"
})
`
  position: absolute;
  box-sizing: content-box;
  // Device box overflow, auto or hidden, does not matter for most viewports, because its nested iframe occupies 100% of its size.
  // It matters only for tablet viewport, where the iframe is downscaled with transforms.
  // Without overflow hidden, it will have horizontal scroll.
  overflow: hidden;
`, xN = N(f)
`
  display: block;
`, vN = (e, o) => {
    let t = new URL(`${window.origin}/preview/${e}/${o!=="1"?o+"/":""}`);
    return t.searchParams.set("external_link_target", "parent"), t.toString()
}, th = .75;

function V8({
    projectNumId: e,
    initialPagePath: o
}) {
    let t = (0, jo.useRef)(vN(e, o)).current,
        {
            project: r,
            setProject: i,
            viewport: n,
            setIframe: s,
            constructorProject: l,
            isViewportEnabled: p,
            setViewport: d,
            switchToConstructor: c
        } = (0, jo.useContext)(sr),
        {
            isRenderedOnClient: m
        } = U0(),
        [u] = Ud(),
        g = xk(),
        h = (0, jo.useRef)(null),
        [b, x] = (0, jo.useState)(!1),
        {
            deviceBox: S,
            iframeBox: v,
            deviceFrame: P,
            minWidth: C
        } = (0, jo.useMemo)(() => {
            if (r) {
                let I = yr.getPageWidth(r, n),
                    {
                        width: B,
                        height: L
                    } = yr.fitToDevice(n === "tablet_portrait" ? I * th : I, n, u),
                    D = {
                        width: B,
                        height: Math.min(L, g.height)
                    };
                return {
                    deviceBox: n === "default" ? {} : ct.center(D, g),
                    iframeBox: n === "tablet_portrait" ? {
                        transformOrigin: "left top",
                        scale: th,
                        width: D.width / th,
                        height: D.height / th
                    } : {
                        width: "100%",
                        height: "100%"
                    },
                    deviceFrame: n === "default" ? {} : {
                        border: "1px solid #e0e0e0",
                        borderRadius: "4px"
                    },
                    minWidth: De.dictionary[n].min_scale_width || De.dictionary[n].width
                }
            } else return {
                deviceBox: {},
                deviceFrame: {},
                minWidth: De.dictionary.default.min_scale_width
            }
        }, [u, r, n, g]),
        k = (0, jo.useMemo)(() => r ? !!r.pages.find(B => B.widgets ? .find(L => L.type === "ecommercecart")) : !1, [r]),
        T = (0, jo.useCallback)(I => {
            h.current = I, x(!0), s(I)
        }, []);
    Vx(() => {
        g0()
    }), Bu(function() {
        r && (Ux(r, {
            isPublished: !1
        }), Xx(Gx(r)), Kx(e))
    }, m && !!r), (0, jo.useEffect)(() => {
        r || nx(e).then(I => {
            let B = eh(I);
            i(B)
        })
    }, [r]), (0, jo.useEffect)(function() {
        if (!b) return;

        function B(L) {
            if (L.target ? .matches ? .(window.RM.constructorRouter.workspaceTextInputSelectors)) return;
            let E = p("tablet_portrait"),
                $ = p("phone_portrait"),
                G = E && $ ? {
                    2: "tablet_portrait",
                    3: "phone_portrait"
                } : E ? {
                    2: "tablet_portrait"
                } : $ ? {
                    2: "phone_portrait"
                } : {},
                de = {
                    1: "default",
                    ...G
                },
                Q;
            if (L.key === "p") c();
            else if (L.key === "d") {
                let U = Object.values(de),
                    Z = U.indexOf(n);
                Q = U[Z === U.length - 1 ? 0 : Z + 1]
            } else ["1", "2", "3"].includes(L.key) && (Q = de[L.key]);
            Q && d(Q)
        }
        return document.addEventListener("keyup", B), h.current ? .contentDocument ? .addEventListener("keyup", B), () => {
            document.removeEventListener("keyup", B), h.current ? .contentDocument ? .removeEventListener("keyup", B)
        }
    }, [p, n, d, c, b]), (0, jo.useEffect)(function() {
        if (!b || !h.current) return;

        function B() {
            !document.fullscreenElement && (h.current ? .style.setProperty("display", "none"), setTimeout(() => h.current ? .style.removeProperty("display")))
        }
        return document.addEventListener("fullscreenchange", B), () => {
            document.removeEventListener("fullscreenchange", B)
        }
    }, [b]);
    let R = r ? .edit_params ? .fonts ? ? [];
    return a(Y, {
        children: w(So, {
            children: ["Transition between constructor and preview", a(bN, {
                minWidth: C,
                initial: {
                    opacity: 0
                },
                animate: {
                    opacity: 1
                },
                exit: {
                    opacity: 0
                },
                children: a(W8, {
                    children: a(wN, {
                        width: "100%",
                        height: "100%",
                        ...P,
                        ...S,
                        children: m ? w(Y, {
                            children: [a(xN, {
                                as: "iframe",
                                src: t,
                                ref: T,
                                ...v
                            }), r ? w(Y, {
                                children: [a(Tm, {
                                    position: "fixed",
                                    bottom: 16,
                                    right: 16
                                }), a(Qx, {
                                    viewport: n
                                })]
                            }) : null, r && (k || jx(r)) ? w(Y, {
                                children: [R.length ? a(N8, {
                                    fontsMetaData: R,
                                    typekitId: ae.TYPEKIT_ID,
                                    typekitToken: ae.TYPEKIT_TOKEN
                                }) : void 0, a(A8, {
                                    constructorProject: l,
                                    children: a(L8, {
                                        project: r
                                    })
                                })]
                            }) : null]
                        }) : null
                    })
                })
            })]
        })
    })
}
y();

function G8(e, {
    router: o,
    initialPageId: t,
    initialPagePath: r,
    constructorProject: i,
    previewProject: n,
    viewport: s,
    initialScrollTop: l,
    projectNumId: p
}) {
    let d = (0, U8.createRoot)(e),
        c = new Backbone.Model({
            isVisible: !0
        });
    return document.body.classList.add(sf), d.render(a($r, {
        withGlobalStyles: !1,
        children: a(qa, {
            router: o,
            project: i,
            inPreview: !0,
            children: a(Vc, {
                router: o,
                widgetbar: c,
                children: a(Ad, {
                    magModel: i,
                    router: o,
                    children: w(dm, {
                        userModel: o.me,
                        children: [a(Zx, {
                            viewport: s,
                            project: n,
                            constructorProject: i,
                            initialPageId: t,
                            initialScrollTop: l,
                            children: a(V8, {
                                projectNumId: p,
                                initialPagePath: r
                            })
                        }), a(f, {
                            id: "settings-popup-container",
                            position: "absolute",
                            top: "0",
                            left: "0",
                            zIndex: "8000",
                            width: "100%"
                        }), a(Kg, {})]
                    })
                })
            })
        })
    })), () => {
        d.unmount(), document.body.classList.remove(sf)
    }
}
Rs();
v6();
Pu();
vr();
Co();
Hd();
ef();
var {
    eventName: j8,
    hiddenKey: q8
} = yk();

function Y8(e) {
    return e && l0(e) && d0(e ? .timeSpent)
}

function yN({
    projectId: e,
    localStorageKey: o
}) {
    let t = {
        timeSpent: 0
    };
    try {
        let r = localStorage.getItem(o);
        if (!r) return t;
        let i = JSON.parse(r);
        return Y8(i[e]) && i[e] || t
    } catch {
        return t
    }
}

function kN({
    projectId: e,
    localStorageKey: o,
    data: t
}) {
    let r = {};
    try {
        let i = localStorage.getItem(o);
        if (i) {
            let n = JSON.parse(i);
            (!n[e] || Y8(n[e])) && (r = n)
        }
    } catch {}
    r[e] = t, localStorage.setItem(o, JSON.stringify(r))
}
var oh = class {
    constructor({
        projectId: o,
        onThreshold: t,
        config: r
    }) {
        z(this, "projectId");
        z(this, "config");
        z(this, "onThreshold");
        z(this, "isInit");
        z(this, "projectHasChanges");
        z(this, "timeSpent");
        z(this, "isTabVisible");
        z(this, "timerId", null);
        z(this, "onProjectChanged", () => {
            this.projectHasChanges = !0, this.startTracking()
        });
        z(this, "onVisibilityChange", () => {
            this.isTabVisible = q8 in document && !document[q8], this.isTabVisible ? this.startTracking() : this.stopTracking()
        });
        z(this, "updateSpentTime", () => {
            let {
                checkEverySeconds: o,
                thresholdSeconds: t,
                localStorageKey: r
            } = this.config;
            this.timeSpent = this.timeSpent + o, this.timeSpent % t === 0 && (this.projectHasChanges = !1, this.onThreshold(), this.stopTracking()), kN({
                localStorageKey: r,
                projectId: this.projectId,
                data: {
                    timeSpent: this.timeSpent
                }
            })
        });
        let {
            localStorageKey: i
        } = r, {
            timeSpent: n
        } = yN({
            projectId: o,
            localStorageKey: i
        });
        this.isInit = !1, this.projectId = o, this.config = r, this.onThreshold = t, this.projectHasChanges = !1, this.isTabVisible = !0, this.timeSpent = this.correctSpentTime(n)
    }
    correctSpentTime(o) {
        let {
            checkEverySeconds: t
        } = this.config;
        return o === 0 || this.timeSpent % t === 0 ? o : Math.floor(o / t) * t
    }
    startTracking() {
        let {
            checkEverySeconds: o
        } = this.config, t = o * 1e3;
        this.isInit && this.isTabVisible && this.projectHasChanges && !this.timerId && (this.timerId = setInterval(this.updateSpentTime, t))
    }
    stopTracking() {
        this.timerId && (clearInterval(this.timerId), this.timerId = null)
    }
    init() {
        this.isInit || (this.isInit = !0, $t.on("change", this.onProjectChanged), document.addEventListener(j8, this.onVisibilityChange))
    }
    destroy() {
        this.isInit && (this.isInit = !1, this.stopTracking(), $t.off("change", this.onProjectChanged), document.removeEventListener(j8, this.onVisibilityChange))
    }
};
var K8 = M(Ac());
Fa();
var Ea = M(F());
W();
be();
ar();
ut();
y();
var {
    versionHistory: {
        restore: {
            pollingInterval: _N
        }
    }
} = ae;

function CN() {
    return w(Y, {
        children: ["Something went wrong.", a("br", {}), a("br", {}), "Please check your internet connection and reload the page.", a("br", {}), "If the problem persists,", " ", a(ze, {
            textDecoration: "underline",
            color: "gray",
            href: `mailto:${ae.SUPPORT_MAIL}`,
            children: "contact support"
        }), "."]
    })
}

function SN({
    isError: e
}) {
    return w(f, {
        position: "absolute",
        top: 0,
        display: "flex",
        flexDirection: "column",
        width: "100vw",
        height: "100vh",
        alignItems: "center",
        justifyContent: "center",
        backgroundColor: "white",
        textAlign: "center",
        zIndex: 1e5,
        children: [e ? null : a(Rt, {
            color: "red",
            bgColor: "transparent"
        }), a(we, {
            fontSize: "4rm",
            color: "gray",
            children: e ? a(CN, {}) : "Restoring backup..."
        })]
    })
}

function X8() {
    let [{
        show: e,
        jobId: o
    }] = B1(), [t, r] = (0, Ea.useState)(!1), i = (0, Ea.useRef)(), n = e && o;
    return (0, Ea.useEffect)(() => {
        n && (i.current = new hc({
            interval: _N
        }), i.current.start(o).then(() => window.location.reload()).catch(() => r(!0)))
    }, [n]), (0, Ea.useEffect)(() => function() {
        i.current ? .stop(), i.current = null, r(!1)
    }, []), n ? a(SN, {
        isError: t
    }) : null
}
y();

function Z8(e) {
    if (!e) throw new Error("Target element must be provided");
    (0, K8.createRoot)(e).render(a($r, {
        withGlobalStyles: !1,
        children: a(X8, {})
    }))
}
Co();
xI();
Kt();
Bo();
Ua();
As();
_6();
k6();
C6();
Co();
var J8 = new Set(["adobe", "itc", "linotype", "bitstream", "fontfont", "ff", "urw++", "urw", "paratype", "pt", "t26", "ibm"]),
    Q8 = new Set(["thin", "light", "regular", "medium", "bold", "black", "heavy", "semi", "extra", "ultra", "normal", "italic"]),
    e6 = new Set(["pro", "next", "std", "web", "classic", "one"]),
    t6 = new Set(["condensed", "cond", "expanded", "rounded", "round", "extended"]),
    o6 = new Set(["serif", "slab", "sans", "script", "mono", "grotesk", "grotesque", "gothic", "sc"]),
    r6 = new Set(["display", "stencil", "inline", "text"]);

function Zw(e, o) {
    let t = e.toLowerCase().split(/[^a-z0-9]+/),
        r = o.toLowerCase().split(/[^a-z0-9]+/),
        i = t.filter(s => r.includes(s)),
        n = Math.max(t.length, r.length);
    return Math.round(i.length / n * 100)
}

function Jw(e, o) {
    let t = e.toLowerCase().split(/[^a-z0-9]+/),
        r = o.toLowerCase().split(/[^a-z0-9]+/),
        i = Math.max(t.length, r.length),
        n = [{
            key: "allCategories",
            words: new Set([...J8, ...Q8, ...e6, ...t6, ...o6, ...r6]),
            weightOrdinaryWords: 3
        }, {
            key: "producers",
            words: J8,
            weightNoisyWords: .1
        }, {
            key: "weights",
            words: Q8,
            weightNoisyWords: .03
        }, {
            key: "versions",
            words: e6,
            weightNoisyWords: .05
        }, {
            key: "fontWidths",
            words: t6,
            weightNoisyWords: .05
        }, {
            key: "types",
            words: o6,
            weightNoisyWords: .1
        }, {
            key: "usageOptions",
            words: r6,
            weightNoisyWords: .05
        }],
        s = {},
        l = {},
        p = (u, g, h) => {
            u[g] ? u[g].push(h) : u[g] = [h]
        },
        d = (u, g, h) => {
            u[g] ? u[g].add(h) : u[g] = new Set([h])
        };
    for (let u = 0; u < i; u++) {
        let g = u < t.length ? t[u] : null,
            h = u < r.length ? r[u] : null;
        for (let b of n) g && p(s, b.key, g), h && d(l, b.key, h)
    }
    let c = 0,
        m = n.length;
    for (let u of n) {
        let {
            key: g,
            words: h,
            weightNoisyWords: b = 1,
            weightOrdinaryWords: x = 1
        } = u, S = s[g] || [], v = l[g] || new Set, P = Math.max(S.length, v.size), C = [], k = [];
        for (let B of S) h.has(B) && v.has(B) ? k.push(B) : v.has(B) && C.push(B);
        let T = k.length * b / P * 100,
            R = C.length * x / P * 100;
        c += Math.min(R + T, 200)
    }
    return m0(c / m, 4)
}
Mi();
Yh();
Kc();
As();
var Qw = "|";

function e0(e) {
    let o = e.indexOf(Rd),
        [t, r] = [e.substring(0, o), e.substring(o + 1)];
    return {
        key: t,
        value: r
    }
}

function i6(e, o) {
    for (let t in e) {
        let r = e[t];
        if (r.type !== "LINK") continue;
        let i = r ? .data ? .linkStyle,
            n = o[i];
        n && (r.data.linkStyle = n)
    }
}

function n6(e = {}) {
    let o = [];
    for (let t in e) {
        let [r, i, n, s, l] = t.split(Qw), p = {
            padding: Number(l),
            size: Number(s),
            type: i,
            color: n,
            textColor: r
        }, d = {
            name: e[t],
            label: "Link Style from Figma",
            style: {
                link: { ...p
                },
                hover: { ...p
                },
                current: { ...p
                }
            }
        };
        o.push(d)
    }
    return o
}

function t0() {
    let e = {};
    for (let o in document.styleSheets) {
        let t = document.styleSheets[o],
            r = null;
        try {
            r = t.rules || t.cssRules
        } catch {
            continue
        }
        r && (e = { ...e,
            ...Dc(r)
        })
    }
    return e
}
As();
Ua();
async function s6(e) {
    let o = {},
        t = t0(),
        r = {};
    for (let i in e) {
        let s = e[i].actualFont,
            {
                provider: l,
                cssName: p,
                variations: d
            } = s;
        if (t[p]) {
            r[p] = t[p];
            continue
        }
        o[l] || (o[l] = []), o[l].push({
            name: p,
            variations: d
        })
    }
    for (let i in o) {
        let n = o[i];
        if (i === "google") {
            let s = It.getGoogleFontUrl(n);
            if (!s) continue;
            let l = await wh(s);
            r = { ...r,
                ...Dc(l)
            }
        } else if (i === "typekit") {
            let s = [];
            for (let p of n) {
                let d = p.name,
                    c = p.variations;
                s.push({
                    id: d,
                    variations: c
                })
            }
            s.length > 0 && window.TypekitPreview && await new Promise(p => {
                window.TypekitPreview.load(s, {
                    fontinactive: () => p(!0),
                    active: () => p(!0)
                })
            });
            let l = t0();
            for (let p of n) {
                let d = l[p.name];
                d && (r[p.name] = d)
            }
        } else if (i === "typetoday") {
            let s = window.ServerData && window.ServerData.fonts && window.ServerData.fonts.typetoday;
            if (!s) continue;
            let l = await wh(s),
                p = Dc(l);
            for (let d of n) {
                let {
                    name: c
                } = d;
                p[c] && (r[c] = p[c])
            }
        }
    }
    return r
}
Rs();
async function a6({
    blocks: e,
    unprocessedLinkStyles: o,
    unprocessedFonts: t,
    linkProjectStyles: r,
    projectFonts: i,
    fontShortList: n
}) {
    let {
        linksMap: s,
        newLinkStyles: l
    } = PN(o, r), {
        fontsMap: p,
        importedFonts: d
    } = await IN({
        unprocessedFonts: t,
        projectFonts: i,
        fontShortList: n
    });
    for (let c of e) {
        if (c.type !== "text") continue;
        let {
            blocks: m,
            blocksMeta: u,
            styles: g,
            entityMap: h
        } = c;
        i6(h, s), BN({
            blocks: m,
            blocksMeta: u,
            styles: g,
            entityMap: h
        }, p)
    }
    return {
        newLinkStyles: l,
        importedFonts: d
    }
}

function PN(e, o) {
    let {
        linksMap: t,
        unprocessedLinks: r
    } = TN(e, o), i = n6(r);
    return {
        linksMap: t,
        newLinkStyles: i
    }
}

function TN(e = {}, o = []) {
    let t = nt(e),
        r = {};
    for (let i of o) {
        let n = i.name,
            s = i.style.link;
        if (!s || !n) continue;
        let l = [s.textColor, s.type, s.color, s.size, s.padding].join(Qw),
            p = t[l];
        p && (r[p] = n, delete t[l])
    }
    return {
        linksMap: r,
        unprocessedLinks: t
    }
}
async function IN({
    unprocessedFonts: e,
    projectFonts: o,
    fontShortList: t
}) {
    let r = MN(e, o),
        i = zN(r.unprocessedFonts, t),
        n = EN(i.unprocessedFonts),
        s = await AN({ ...r.recognizedFonts,
            ...i.recognizedFonts,
            ...n.recognizedFonts
        });
    return {
        importedFonts: i.importedFonts,
        fontsMap: s
    }
}

function MN(e, o) {
    let t = nt(e),
        r = {},
        i = {},
        n = o.sort(l => l.provider === "custom" ? -1 : 1),
        s = (l, p, d) => {
            r[l] || (r[l] = { ...p,
                similar: []
            }), (r[l] ? .similar).push(d)
        };
    for (let l = 0; l < n.length; l++) {
        let p = n[l],
            d = p.name,
            c = p.css_name,
            m = p.provider,
            u = p.variations,
            g = p._id;
        if (!p.hidden) {
            if (t[c] || t[d]) {
                let h = t[c] ? c : d,
                    b = t[h],
                    x = pd(b.fontStyles, b.fontWeights),
                    S = It.calcBrowserUsedVariation(x, p.variations);
                i[h] = {
                    fontStyles: [...b.fontStyles],
                    fontWeights: [...b.fontWeights],
                    actualFont: {
                        id: g,
                        name: d,
                        cssName: c,
                        provider: m,
                        usedVariations: S,
                        variations: u
                    }
                }, delete t[h]
            }
            for (let h in t) {
                let b = t[h],
                    x = Zw(h, p.name),
                    S = 10,
                    v = 55;
                if (x > S && (x = Jw(h, d)), x < v) continue;
                let P = pd(b.fontStyles, b.fontWeights),
                    C = It.calcBrowserUsedVariation(P, p.variations);
                s(h, b, {
                    id: g,
                    name: d,
                    cssName: c,
                    provider: m,
                    rate: x,
                    usedVariations: C,
                    variations: u
                })
            }
        }
    }
    for (let l in r) {
        let p = r[l],
            c = p.similar.sort((g, h) => h.rate - g.rate)[0],
            m = {
                fontStyles: [...p.fontStyles],
                fontWeights: [...p.fontWeights]
            },
            u = {
                id: c.id,
                name: c.name,
                cssName: c.cssName,
                provider: c.provider,
                usedVariations: c.usedVariations,
                variations: c.variations
            };
        i[l] = { ...m,
            actualFont: u
        }, delete t[l]
    }
    return {
        recognizedFonts: i,
        unprocessedFonts: t
    }
}

function BN(e, o) {
    let t = X0(e);
    for (let r of Object.values(e.styles)) {
        let i = r.key,
            n = t.getBlockForKey(i),
            s = {},
            l = (d, c) => {
                s[d] ? s[d].push(c) : s[d] = [c]
            },
            p = n.getCharacterList().toArray();
        for (let d = 0; d < p.length; d++) {
            let m = p[d] ? .getStyle().toArray() || [],
                u = LN(m),
                g = u.FONT_FAMILY || null,
                h = u.FONT_STYLE || null,
                b = u.FONT_WEIGHT || null,
                x = g && o[g] ? .actualFont || null,
                {
                    usedVariation: S,
                    availableVariation: v,
                    variableWght: P
                } = RN({
                    actualFont: x,
                    fontWeight: b,
                    fontStyle: h
                });
            for (let C = 0; C < m.length; C++) {
                let k = m[C],
                    {
                        key: T,
                        value: R
                    } = e0(k),
                    I = R;
                if (T === "FONT_FAMILY" && x && (I = x.cssName), S) {
                    let {
                        style: B,
                        weight: L
                    } = tx(S);
                    T === "FONT_STYLE" && (I = B), T === "FONT_WEIGHT" && (I = String(L))
                }
                if (T === "FONT_FEATURE" && v) {
                    let B = R.split(";"),
                        L = x ? x[v] ? .features || [] : [];
                    I = L ? p0(B, L).join(Rd) : I
                }
                if (I) {
                    let B = vh(T, I);
                    l(T, {
                        offset: d,
                        length: 1,
                        style: B
                    })
                }
            }
            P && l("FONT_VARIABLE", {
                offset: d,
                length: 1,
                style: vh("FONT_VARIABLE", `wght|${P}`)
            })
        }
        r.inlineStyles = ox(rx(s))
    }
}

function RN({
    actualFont: e,
    fontWeight: o,
    fontStyle: t
}) {
    let r = null,
        i = null,
        n = null;
    if (!e || !o || !t) return {
        availableVariation: r,
        usedVariation: i,
        variableWght: n
    };
    let s = xh(o, t),
        l = It.calcBrowserUsedVariation([s], e.usedVariations);
    r = l.length > 0 ? l[0] : null;
    let p = r && e[r] ? .variableVariation,
        d = null;
    return p && (n = Math.min(p.max, Math.max(p.min, Number(o))), d = xh(p.defaultValue, t)), i = d || r, {
        availableVariation: r,
        usedVariation: i,
        variableWght: n
    }
}

function zN(e = {}, o = {}) {
    let t = ["google", "typekit", "typetoday"],
        r = {},
        i = {},
        n = nt(e),
        s = [],
        l = (p, d, c) => {
            i[p] || (i[p] = { ...d,
                similar: []
            }), (i[p] ? .similar).push(c)
        };
    for (let p of t) {
        let d = o[p];
        if (d)
            for (let c of d) {
                let m = c._id,
                    u = c.variations,
                    g = null,
                    h = null;
                if (p === "google" ? (g = "family" in c ? c.family : null, h = g) : p === "typekit" ? (g = "name" in c ? c.name : null, h = "id" in c ? c.id : null) : p === "typetoday" && (g = "name" in c ? c.name : null, h = g), !g || !h) continue;
                let b = n[g] ? g : n[h] ? h : null;
                if (b && h) {
                    let x = n[b],
                        S = pd(x.fontStyles, x.fontWeights),
                        v = It.calcBrowserUsedVariation(S, u);
                    r[b] = {
                        fontStyles: [...x.fontStyles],
                        fontWeights: [...x.fontWeights],
                        actualFont: {
                            id: m,
                            name: g,
                            cssName: h,
                            provider: p,
                            usedVariations: v,
                            variations: u
                        }
                    }, s.push({
                        provider: p,
                        css_name: h,
                        name: g,
                        variations: u,
                        used_variations: v
                    }), l(b, x, {
                        id: m,
                        name: g,
                        cssName: h,
                        rate: 100,
                        usedVariations: v,
                        variations: u,
                        provider: p
                    }), delete n[b]
                }
                for (let x in n) {
                    let S = n[x],
                        v = Zw(x, g),
                        P = 10,
                        C = 65;
                    if (v > P && (v = Jw(x, g)), v < C) continue;
                    let k = pd(S.fontStyles, S.fontWeights),
                        T = It.calcBrowserUsedVariation(k, u);
                    l(x, S, {
                        id: m,
                        name: g,
                        cssName: h,
                        rate: v,
                        usedVariations: T,
                        variations: u,
                        provider: p
                    })
                }
            }
    }
    for (let p in i) {
        let d = i[p];
        if (r[p]) continue;
        let u = d.similar.sort((b, x) => x.rate - b.rate)[0],
            g = {
                fontStyles: [...d.fontStyles],
                fontWeights: [...d.fontWeights]
            },
            h = {
                id: u.id,
                name: u.name,
                cssName: u.cssName,
                provider: u.provider,
                usedVariations: u.usedVariations,
                variations: u.variations
            };
        r[p] = { ...g,
            actualFont: h
        }, s.push({
            provider: u.provider,
            css_name: u.cssName,
            name: u.name,
            variations: u.variations,
            used_variations: u.usedVariations
        }), delete n[p]
    }
    return {
        importedFonts: s,
        recognizedFonts: r,
        unprocessedFonts: n
    }
}

function EN(e = {}) {
    let o = {};
    for (let t in e) {
        let r = e[t],
            i = pd(r.fontStyles, r.fontWeights),
            n = It.calcBrowserUsedVariation(i, Tc.fontWeights);
        o[t] = {
            fontStyles: [...r.fontStyles],
            fontWeights: [...r.fontWeights],
            actualFont: {
                id: "default",
                name: Tc.fontFamily,
                provider: "google",
                cssName: Tc.fontFamily,
                usedVariations: n,
                variations: Tc.fontWeights
            }
        }
    }
    return {
        recognizedFonts: o
    }
}
async function AN(e) {
    let o = nt(e),
        t = await DN(e),
        r = await V0(t);
    for (let i of r.data) {
        let n = o[i.name].actualFont,
            s = i.variations || [],
            l = i.features || [],
            p = i.weight,
            d = s.find(c => c.code === "wght");
        n[p] = {
            features: l
        }, d && (n[p] = { ...n[p],
            variableVariation: {
                max: d.max,
                min: d.min,
                defaultValue: d.defaultValue
            }
        })
    }
    return o
}
async function DN(e) {
    let o = await s6(e),
        t = [];
    for (let r in e) {
        let n = e[r].actualFont,
            s = null,
            l = null,
            p = null;
        if (n.provider === "custom") s = n.id;
        else {
            let d = o[n.cssName];
            d && (p = d)
        }
        n.provider === "system" && (l = n.name);
        for (let d of n.usedVariations) {
            let c = {
                name: r,
                weight: d
            };
            s ? c.id = s : p && (c.url = p), l && (c.systemFontName = l), t.push({ ...c
            })
        }
    }
    return t
}
var pd = (e = [], o = []) => {
    let t = e.length,
        r = [];
    for (let i = 0; i < t; i++) {
        let n = e[i],
            s = o[i],
            l = It.convertToFVD(n, s);
        l && r.push(l)
    }
    return r
};

function LN(e) {
    let o = {};
    for (let t = 0; t < e.length; t++) {
        let r = e[t],
            {
                key: i,
                value: n
            } = e0(r);
        o[i] = n
    }
    return o
}

function l6(e, o, t) {
    let r = e && e.width >= 0 && e.height >= 0,
        i = De.viewports.find(l => l.name === t),
        n = r ? e.width : o.width,
        s = r ? e.height : o.height;
    return i ? {
        width: Math.round(Math.min(i.max_width, Math.max(i.width, n))),
        height: Math.round(Math.min(i.max_height, Math.max(i.min_height, s)))
    } : {
        width: n,
        height: s
    }
}

function c6({
    pageSize: e,
    originSize: o,
    rootSize: t,
    boundingBox: r
}) {
    let i = t && t.width >= 0 && t.height >= 0,
        {
            width: n,
            height: s
        } = e,
        l = (n - o.width) / 2,
        p = i ? {
            width: t.width,
            height: t.height
        } : {
            width: r.w,
            height: r.h
        },
        d = {
            width: n,
            height: s
        },
        c = i ? 0 : r.x,
        m = i ? 0 : r.y,
        u = ct.center(d, p),
        g = u.left + l + c,
        h = u.top + m;
    return {
        left: g,
        top: h
    }
}

function p6({
    boundingBox: e,
    originSize: o,
    zoom: t,
    pageSize: r,
    viewportBox: i
}) {
    let {
        width: n
    } = r, {
        top: s,
        left: l,
        width: p,
        height: d
    } = i, c = (n - o.width) / 2, m = {
        width: e.w,
        height: e.h
    }, u = {
        width: p / t,
        height: d / t
    }, g = l, h = s, b = ct.center(u, m), x = b.left - g + c + e.x, S = b.top - h + e.y;
    return {
        left: x,
        top: S
    }
}

function d6(e, o) {
    for (let t of e) t.x = Math.round(t.x - o.left), t.y = Math.round(t.y - o.top)
}
async function u6(e, o) {
    let t = n => Object.values(Cy).includes(n),
        r = 0,
        i = [];
    for (let n of e) {
        let s = new Promise(l => {
            if (!t(n.type)) return l(n);
            try {
                let p = Sy(n.image, n.type);
                Ly(p.name, p).then(d => {
                    let c = { ...n,
                        ...d,
                        type: "picture"
                    };
                    delete c.image, r++, o(r), l(c)
                }).catch(d => {
                    console.error("Failed to upload image:", d), l(null)
                })
            } catch (p) {
                console.error("Failed to process image:", p), l(null)
            }
        });
        i.push(s)
    }
    return Promise.all(i).then(n => n.filter(s => s !== null)).catch(n => (console.error("Failed to process blocks:", n), []))
}

function m6(e) {
    let o = [];
    for (let r of e) {
        if (!r) continue;
        let {
            x: i,
            y: n,
            w: s,
            h: l,
            angle: p
        } = r, d = -(p ? ? 0) * Math.PI / 180, c = Math.sin(d), m = Math.cos(d), u = pt.calcBoundingBox({
            width: s,
            height: l,
            left: i,
            top: n,
            sinAngle: c,
            cosAngle: m
        });
        o.push({
            left: u.bb_left,
            top: u.bb_top,
            right: u.bb_left + u.bb_width,
            bottom: u.bb_top + u.bb_height
        })
    }
    let t = pt.getBoundingBoxOfBoxes(o);
    return {
        x: Math.round(t.left || 0),
        y: Math.round(t.top || 0),
        w: Math.round((t.right || 0) - (t.left || 0)),
        h: Math.round((t.bottom || 0) - (t.top || 0))
    }
}
Kt();
W();
vr();
be();
y();

function rh() {
    _x()
}

function o0(e, o, t = 0) {
    o === "Default" ? _h(ON(e, t), {
        variant: "bluePill",
        placement: "center",
        withLoader: !0
    }) : o === "Error" && _h(e, {
        variant: "redPill",
        placement: "center",
        closeByTimer: !0
    })
}

function ON(e, o) {
    return w(f, {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        children: [a(A, {
            color: "white",
            lineHeight: "20px",
            fontSize: "16px",
            fontWeight: "400",
            children: e
        }), a(f, {
            display: "flex",
            width: "65px",
            justifyContent: "end",
            children: w(A, {
                color: "white",
                fontSize: "24px",
                lineHeight: "24px",
                fontWeight: "500",
                children: [o, "%"]
            })
        })]
    })
}
var Aa = Ae.default.memoize(() => {
        let e = new URLSearchParams(window.location.search);
        return e.has("__next") ? !0 : e.has("__legacy") ? !1 : Ve("viewer.nextPreview")
    }),
    $N = Qi.default.Router.extend({
        routes: {
            "edit/:mag/preview/num/:page/": "goPreviewByPageNum",
            "edit/:mag/preview/*page/": "goPreview",
            "edit/:mag/preview/": "goPreview",
            "edit/:mag": "start",
            "edit/:mag/": "start",
            "edit/:mag/:page/": "start",
            "edit/:mag/:page": "start",
            "edit/:mag/:page/comment/:commentId": "start",
            "edit/:mag/:page/comment/:commentId/": "start"
        },
        mag: null,
        workspaces: {},
        previewMode: !1,
        switchingModes: !1,
        scrollTop: 0,
        keys: {
            p: 80,
            z: 90,
            g: 71,
            a: 65,
            r: 82,
            l: 76,
            c: 67,
            v: 86,
            f: 68,
            x: 88,
            q: 81,
            b: 66,
            d: 68,
            w: 87,
            m: 77,
            esc: 27,
            "[": 219,
            "]": 221,
            1: 49,
            2: 50,
            3: 51,
            4: 52,
            5: 53,
            6: 54,
            7: 55,
            8: 56,
            9: 57,
            0: 48
        },
        pressedKeySet: new Set,
        disabledKeysMap: {
            BaseWidgetCanAdd: [{
                key: pe.default.keycodes.w
            }, {
                key: pe.default.keycodes.t
            }],
            BaseWidgetCanLock: [{
                key: pe.default.keycodes.l,
                optionKeys: Modernizr.mac ? ["meta", "shift"] : ["ctrl", "shift"]
            }],
            BaseWidgetCanHide: [{
                key: pe.default.keycodes.h,
                optionKeys: Modernizr.mac ? ["meta", "shift"] : ["ctrl", "shift"]
            }],
            BaseWidgetCanRotate: [{
                key: pe.default.keycodes.r
            }],
            BaseWidgetCanDelete: [{
                key: pe.default.keycodes.del
            }],
            BaseWidgetCanChangeGroup: [{
                key: pe.default.keycodes.g
            }],
            BaseWidgetCanChangeCoordinates: [{
                key: pe.default.keycodes.left
            }, {
                key: pe.default.keycodes.right
            }, {
                key: pe.default.keycodes.up
            }, {
                key: pe.default.keycodes.down
            }],
            CanUseBlocksMode: [{
                key: pe.default.keycodes.b
            }],
            GridsAndGuidesCanUse: [{
                key: pe.default.keycodes.h
            }]
        },
        disabledKeysCommentMode: [{
            key: pe.default.keycodes.w
        }, {
            key: pe.default.keycodes.t
        }, {
            key: pe.default.keycodes.r
        }, {
            key: pe.default.keycodes.del
        }, {
            key: pe.default.keycodes.g
        }, {
            key: pe.default.keycodes.left
        }, {
            key: pe.default.keycodes.right
        }, {
            key: pe.default.keycodes.up
        }, {
            key: pe.default.keycodes.down
        }, {
            key: pe.default.keycodes.l
        }, {
            key: pe.default.keycodes.h
        }],
        workspaceTextInputSelectors: 'input, textarea:not(.copyhack), [data-text="true"], .rm-code-editor, [contenteditable="true"]',
        keyHandlers: {},
        PREVIEW_DELAY: 0,
        PING_INTERVAL: 5e3,
        screenshotDates: [],
        inactivityTimesMap: {
            short: 60 * 1e3,
            long: 5 * 60 * 1e3
        },
        minimalUiClassName: "minimal-constructor-ui",
        hideControlsClassName: "hide-controls",
        viewportCounter: 1,
        renewScreenshotsPromise: Promise.resolve(),
        initialize: function() {
            Ae.default.bindAll(this), vy("constructor"), (0, pe.default)(this.onLoadInit);
            let e = window.ServerData.me;
            if (this.me = new vd(e), (l => {
                    let p = l.get("gacid");
                    if (!p || p && !p.match(/[0-9]+\.[0-9]+/)) {
                        let d = Je.getGAcid();
                        d && l.save({
                            gacid: d
                        }, {
                            patch: !0
                        })
                    }
                })(this.me), P0({
                    apiKey: ae.ampId,
                    user: this.me.attributes,
                    config: {
                        autocapture: {
                            pageViews: !1
                        }
                    }
                }), kc.init({
                    userId: e && e._id,
                    GA_ID: ae.GA_ID,
                    GA4_ID: ae.GA4_ID,
                    GOOGLE_ADS_ID: ae.GOOGLE_ADS_ID
                }), !La.isDesktop() && !La.isTablet()) {
                window.location.href = "/" + this.me.get("uri");
                return
            }
            let t = this.me ? .get("behavior_metrics");
            this.helpTourIsFinished = t ? .constructor_tour_finished;
            let r = t ? .constructor_tour_shown,
                i = t ? .initial_onboarding_type,
                n = M0("_rm_start_with_help_tour");
            if (!r || n) {
                let l = { ...t,
                    constructor_tour_shown: !0
                };
                this.me.save({
                    behavior_metrics: l
                }, {
                    patch: !0
                })
            }
            if (yx(this), this.currentOnboardingType = "hidden", r || (this.currentOnboardingType = i || "tour"), n && (this.currentOnboardingType = "tour", B0("_rm_start_with_help_tour")), !window.location.href.match(/\/(\d+)\/?/)) return this.notFound();
            RM.common = Ae.default.extend(RM.common || {}, {
                mode: "constructor"
            }), this.settingsRendered = !1, this.previewToolbarRendered = !1, document.documentElement.classList.add("enhanced-mobile-frame"), Me.on("change:device", this.onChangeDevice, this), document.documentElement.classList.add("equal-columns"), document.documentElement.classList.add("precise-guides"), Ve("widget.anomalyMonitoring") && document.addEventListener("click", Uc.onClick)
        },
        execute(e, o, t) {
            if (Aa() && ["goPreview", "goPreviewByPageNum"].includes(t) && this.previewMode) return !1;
            e && e.apply(this, o)
        },
        onLoadInit: function() {
            pe.default.ajaxSetup({}), (0, pe.default)(document).ajaxError(this.onAjaxError), (0, pe.default)(document).ajaxSuccess(this.clearConnectionError)
        },
        onAjaxError: function(e, o, t) {
            let r = ["/api/authservice", "/api/proxy", "/screenshot", "/api/fonts", "/api/connect"];
            switch (o.status) {
                case 403:
                    var i = new RegExp("^\\s*(?:[a-z0-9]+:)?//", "i"),
                        n = Ae.default.any(r, function(s) {
                            return new RegExp("^" + s).test(t.url)
                        });
                    n = n || i.test(t.url), n || (Modernizr.sessionstorage && window.sessionStorage.setItem("rm.loginReturnUrl", window.location.pathname), window.location.href = `/auth/login?redirect=${window.location.pathname}`);
                    return;
                case 500:
                    console.error(o.responseText);
                    break;
                case 503:
                    console.error("server error");
                    break
            }
        },
        start: function(e, o, t) {
            let r = Qi.default.history.getFragment().includes("/comment/"),
                i = Qi.default.history.getFragment().includes("?support-token");
            if (this.previewMode && (this.togglePreview(), this.trigger("previewClose")), this.started) {
                this.showWorkspace(o);
                return
            }
            if (
                import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-R4BAKHY4.js").then(({
                    default: s
                }) => {
                    s("constructor")
                }), this.started = !0, o = parseInt(o, 10), o || (o = 1), this.mag = this.mag || new Qc({
                    num_id: e
                }), Gc.setContext({
                    sessionId: Je.generateUUID(),
                    projectNumId: typeof e == "string" ? Number(e) : e
                }), this.syncManager = new Of(this, this.mag), this.indexController = new Jc(this, this.mag), this.mag.has("num_id") && (this.eCommerceManager = new Zc({
                    numId: this.mag.get("num_id")
                })), Ve("constructor.versionHistoryTrigger")) {
                let {
                    versionHistory: s
                } = ae, l = this.mag.get("num_id");
                this.projectVersionObserver = new oh({
                    projectId: l,
                    onThreshold: async () => {
                        await this.renewScreenshotsPromise, await this.renewScreenshot(), y1(l)
                    },
                    config: s.observer
                })
            }
            $t.initialize(this.syncManager);
            let n = this;
            this.mag.loadFull({
                success: Ae.default.bind(function() {
                    Vy(this.mag.get("num_id")).then(u => {
                        Uy(u)
                    });
                    let s = this.mag.get("user");
                    this.isOwner = s ? .email === this.me.get("email"), kc.trackDailyVisit({
                        location: "editor",
                        role: Qe.getRoleForAnalytics(this.isOwner)
                    });
                    let l = this.mag.attributes ? .lastSnapshotRestore,
                        p = l ? .status === "processing";
                    if (Ve("constructor.versionHistoryUI") && (Z8(document.querySelector("#project-restore-overlay")), p)) {
                        fl({
                            show: !0,
                            jobId: l.jobId
                        });
                        return
                    }
                    Ve("constructor.versionHistoryTrigger") && s.permissions.can_use_version_history && this.projectVersionObserver ? .init(), this.whatsNewPopupsRoot = jf(document.querySelector("#whatsnew-popups"), {
                        lastUserSeen: this.me.get("whatsnew_last_seen"),
                        userRegistrationDate: this.me.get("createDate")
                    }), Zv(document.querySelector("#help-tour-notice"), ["TextWidgetSelect", "TextWidgetDrag", "PictureWidgetChoose", "PictureWidgetClickOutside", "AdjustSizes", "PictureWidgetPlace", "TurnOffGuides", "ButtonWidgetAnchorLinkPosition", "ButtonWidgetDrag", "DeleteBlocks", "EverythingInItsRightPlace", "SelectBlocksAndDelete", "ArrangeWidgetsInTheGrid", "DisableBlocksAndGrid", "DeleteNavBar", "FixMenuClickOutside", "ClickOnBurgerMenuIcon", "HoverBetweenBlocks", "DeselectAfterSetBlocksDistance"]), Jv(document.querySelector("#getting-started-video")), Ve("screenshoter.optimizedRenewing") && this.renewScreenshots(), by({
                        projectId: window.ServerData.projectId,
                        userId: this.mag.get("user")._id
                    }), this.me.mergePermissions(this.mag.user.get("permissions")), Wn.init(this.me.get("permissions")), this.mag.edit_params = new nf(this.mag.get("edit_params"), this.mag), this.mag.unset("edit_params"), this.mag.edit_params.on("sync", function() {
                        this.mag.set("changed", !0)
                    }, this), this.mag.edit_params.on("change", function(u, g, h) {
                        h && h.socketUpdate && this.mag.set("changed", !0)
                    }, this), this.zoom = new Fk(this, this.mag, (0, pe.default)("#zoom")), this.eCommerceManager ? this.mag.has("ecommerce_data") && this.eCommerceManager.updateEcommerceData(this.mag.get("ecommerce_data")) : this.eCommerceManager = new Zc({
                        numId: this.mag.get("num_id")
                    }), this.eCommerceManager.setCartWidgetExistState(ix(ae.environment.constructor, this.mag.globalWidgets)), this.textStyles = new Rk(this.mag.edit_params), this.textStyles.generateCSS("paragraph", "constructor", document), this.textStyles.generateCSS("link", "constructor", document), this.mag.filterUnusedFonts(), this.validateFonts(this.mag.edit_params), this.fonts = new Nh(this.mag.edit_params), this.fonts.appendFontsCssToDocument({
                        version: "edit"
                    }, () => {
                        window.RM.constructorRouter.trigger("font-added")
                    }), this.arrows = new Yk({
                        router: this,
                        mag: this.mag
                    }), this.gg = new jk({
                        router: this,
                        mag: this.mag
                    }), this.mag.on("change:pids", this.checkDeletedPage), this.mag.on("change:title", function() {
                        this.setTitle("Edit")
                    }, this), this.mag.on("change:page:screenshot", function(u, g, h) {
                        this.trigger("renewScreenshot", u, g, h), u === this.mag.pages.first().id && this.trigger("updateCover")
                    }, this), this.pageOrder = new Mk, this.pageOrder.load(this.mag), this.pageOrder.validateAndFixPageOrder(this.mag), this.me.get("_id") && this.mag.get("user")._id != this.me.get("_id"), this.setTitle("Edit");
                    let d = i ? Je.parseUriParameters(t)["support-token"] : void 0;
                    this.workspace && this.workspace.showUsedViewport();
                    try {
                        this.showWorkspace(o, {
                            isContents: Qi.default.history.getFragment().indexOf("/contents/") > -1,
                            supportAccessToken: d
                        })
                    } catch (u) {
                        console.error("router show workspace error:", u)
                    }
                    this.mag.get("socket_hash") && this.workspace && (this.sockets = new $1(this.mag.get("num_id"), this.mag.get("socket_hash"), this.me, this), this.sockets.initSocket(), this.sockets.on("lockChange", this.onLockMessage, this), this.sockets.on("client-disconnected", this.onClientDisconnected, this), this.sockets.on("takeOver", this.showUnlockPageAlert, this), this.on("redrawPage", this.mag.updateLastChanged, this.mag)), this.gg.create(), this.initScreenshotRenewer(), (0, pe.default)(window).on("dragover", function(u) {
                        RM.constructorRouter.workspace.trigger("main-dragover", u)
                    }), (0, pe.default)(".copyhack").on("keyup", function() {
                        (0, pe.default)(this).val("\u200C")
                    });
                    let c = Modernizr.mac ? "meta" : "ctrl",
                        m = Modernizr.mac ? ["meta", "shift"] : ["ctrl", "shift"];
                    if (this.bindGlobalKeyPress([{
                            key: "a",
                            handler: this.onSelectAllKey,
                            optionKeys: Modernizr.mac ? "meta" : "ctrl"
                        }, {
                            key: "d",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "1",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "2",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "3",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "4",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "5",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "6",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "7",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "8",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "9",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "0",
                            handler: this.onNumericKey.bind(this)
                        }, {
                            key: "z",
                            handler: this.undo,
                            optionKeys: c,
                            activeOnInput: !0
                        }, {
                            key: "z",
                            handler: this.redo,
                            optionKeys: m,
                            activeOnInput: !0
                        }]), RM.analytics = RM.analytics || new $d({
                            router: this
                        }), this.analytics = RM.analytics, t && r) {
                        let u = t;
                        rp(!0), Me.once("comments:init", () => {
                            let g = d1(u);
                            g && Fu({
                                comment: g,
                                fromList: !0
                            })
                        })
                    }
                }, this),
                error: function(s) {
                    s.status !== 403 && n.notFound()
                }
            }), (0, pe.default)("html").on("keydown", this.onKeyDown), (0, pe.default)("html").on("keyup", this.onKeyUp), (0, pe.default)(window).on("keyup", this.globalKeyPress), (0, pe.default)(window).on("keydown", this.globalKeyPress), (0, pe.default)(document).on("cut", this.onCut), (0, pe.default)(document).on("copy", this.onCopy), (0, pe.default)(document).on("paste", this.onPaste), this.bindGlobalKeyPress([{
                key: "c",
                handler: this.onCopyAnimation,
                optionKeys: Modernizr.mac ? ["meta", "shift"] : ["ctrl", "shift"]
            }, {
                key: "c",
                handler: this.onCopyTextStyles,
                optionKeys: Modernizr.mac ? ["meta", "alt"] : ["ctrl", "alt"]
            }, {
                key: "v",
                handler: this.onPasteTextStyles,
                optionKeys: Modernizr.mac ? ["meta", "alt"] : ["ctrl", "alt"]
            }, {
                key: "esc",
                handler: this.onEscapePressed
            }]), (0, pe.default)(window).bind("blur", this.onBrowserTabBlur), (0, pe.default)(window).bind("focus", this.onBrowserTabFocus), re(fe.OpenProject), Me.on("index:changed", (s, l) => {
                l || this.trigger("update_from_server", "Order", nt(Ae.default.pick(s, this.getCurrentPageId())))
            })
        },
        onEscapePressed: function() {
            let e = this.workspace && this.workspace.controls.controls.find(o => o.selected);
            this.isActiveMinimalUI() ? this.toggleMinimalUI() : e ? e.master.deselect() : this.workspace && this.workspace.getSelectedBlocks().length > 0 && Ve("constructor.deselectWidgetOnEsc") && this.workspace.trigger("deselect")
        },
        validateFonts: function(e) {
            if (!e) return;
            let o = e.get("fonts");
            o && o.length && (o.find(r => r.css_name === "Inter" && r.name === "Inter" && r.provider === "google") || (e.set({
                fonts: [...o, {
                    provider: "google",
                    css_name: "Inter",
                    name: "Inter",
                    variations: ["n1", "n2", "n3", "n4", "n5", "n6", "n7", "n8", "n9"]
                }]
            }), e.save()))
        },
        renderPreviewToolbar: function() {
            this.widgetbar || Xw(document.querySelector(".widgetbar"), {
                router: this,
                fromPreview: !0,
                project: this.previewMag
            })
        },
        showWorkspace: function(e, o) {
            if (this.togglePreviewMode(!1), Ae.default.isObject(e) || (e = {
                    num: parseInt(e, 10)
                }), e.num || (e.num = this.mag.getPageNum(e.id)), e.id || (e.id = this.mag.getPageId(e.num)), !e.id && e.num !== 1) return this.showWorkspace(1, o);
            if (this.workspace && this.workspace.page.id === e.id) {
                this.workspace.renderMissedWidgets(), this.workspace.onReturnFromPreview();
                return
            }
            this.switchCurrentPage(e.id), this.closeCodeEditor();
            let t = this.workspace && this.workspace.viewport || window.sessionStorage.getItem("constructorViewport") || "default";
            this.workspace && this.workspace.hide(), this.workspace = this.getWorkspace(e.id, o ? .viewportName || t), this.widgetbar = Xw(document.querySelector(".widgetbar"), {
                router: this,
                project: this.mag,
                supportAccessToken: o ? .supportAccessToken
            }), this.widgetbar.setWorkspace(this.workspace), this.workspace.page.needUpdate && !this.showed && this.mag.pages.fetchFullPage(e.id, {
                success: Ae.default.bind(function() {
                    this.showWorkspace(e, o)
                }, this)
            }), (0, pe.default)(".page-content-container").css({
                top: this.workspace.$el.position().top
            }), this.workspace.show({ ...o,
                switchToViewport: o ? .viewportName || t
            }), (!o || !o.isContents) && this.updateUrl(), this.preloadPages(), this.trigger("pageChange", this.workspace), this.widgetbar.rerender()
        },
        getWorkspace: function(e, o = "default") {
            let t = this.workspaces[e];
            return t || (t = new U2({
                $container: (0, pe.default)("#main"),
                template: t_["template-constructor-workspace"],
                page_id: e,
                mag: this.mag,
                syncManager: this.syncManager,
                eCommerceManager: this.eCommerceManager,
                viewport: o
            }), this.workspaces[e] = t), t
        },
        removeWorkspace: function(e) {
            this.workspaces[e] && (this.workspaces[e].destroy && this.workspaces[e].destroy(), delete this.workspaces[e])
        },
        triggerPageChange: function() {
            this.trigger("pageChange", this.workspace)
        },
        createTemplateFromCurrentPage: function(e = {}) {
            return new Promise((o, t) => {
                let r = this.workspace.getTemplateJSON(e);
                if (!r) return t(new Error("can't create template json for current page"));
                e.withGlobalWidgets && r.globalWids && r.globalWids.length && (r.wids = r.wids.concat(r.globalWids), delete r.globalWids), new(Qi.default.Model.extend({
                    url: "/api/template/"
                }))(r).save({}, {
                    success: (n, s) => {
                        this.mag.addCustomPageTemplate(s), o(s)
                    },
                    error: (n, s) => {
                        if (n.status === 400) try {
                            let l = JSON.parse(n.responseText);
                            if (l && l.err === "permission_denied") return t(new Error("permission denied"))
                        } catch {
                            return t(new Error(s))
                        }
                        t(new Error(s))
                    }
                })
            })
        },
        preloadPages: function() {
            if (!this.workspace) return;
            let e = 1,
                o = this.workspace.page.get("num");
            Ae.default.each(Ae.default.range(o - e, o + e), function(t) {
                if (t == o) return;
                let r = this.mag.getPageId(t, {
                    onlyActive: !0
                });
                r && this.getWorkspace(r).preloadBlocks()
            }, this)
        },
        hideWorkspaces: function() {
            this.workspace && this.workspace.hide(), delete this.workspace, this.trigger("pageChange", null)
        },
        updateUrl: function() {
            if (!this.mag || !this.workspace) return;
            let e = "/edit/" + this.mag.get("num_id") + "/" + this.workspace.page.get("num") + "/",
                o = Qi.default.history.getFragment() == "/edit/" + this.mag.get("num_id") + "/" + this.workspace.page.get("num");
            this.navigate(e, {
                replace: o
            })
        },
        checkDeletedPage: function() {
            this.trigger("changePids", this.workspace), this.workspace && (Ae.default.include(this.mag.get("pids"), this.workspace.page.id) || this.mag.get("pids")[0] || this.hideWorkspaces())
        },
        getCurrentPageNum() {
            return this.preview ? this.preview.mag.currentPage.num : this.workspace ? this.workspace.getPageNum() : 1
        },
        getCurrentPageId() {
            return this.preview ? this.preview.mag.currentPage._id : this.workspace ? this.workspace.getPageId() : void 0
        },
        goPreviewByPageNum: function(e, o) {
            this.goPreview(e, o, !0)
        },
        async goPreview(e, o, t) {
            if (this.trigger("previewOpen"), this.previewMode && this.preview) return this.preview.start(e, o);
            if (Modernizr.msie || Modernizr.msie11) {
                new Sc({
                    $parent: (0, pe.default)("body > .popups"),
                    router: this,
                    opts: {
                        type: "type-browsers-viewer"
                    }
                }).render();
                return
            }
            o || (o = 1), this.togglePreviewMode(!0);
            let r = this;
            if (this.previewMag && delete this.previewMag, this.previewMag = new Qc({
                    num_id: e
                }), this.mag || (this.mag = new Qc({
                    num_id: e
                })), r.preview && (r.preview.mag ? .off("pageChanged", r.onPreviewPageChanged), r.preview.destroy(), delete r.preview), Aa()) {
                let [i, n] = this.mag ? .get("_id") ? [this.mag, void 0] : await new Promise((c, m) => {
                    let u = new Qc({
                        num_id: e
                    });
                    u.loadFull({
                        success: g => {
                            u.edit_params = new nf(u.get("edit_params"), u), u.filterUnusedFonts(), c([u, eh(g)])
                        },
                        error: m
                    })
                }), s = o.toString(), p = i.pages.find(c => c.get("num").toString() === s || c.get("pagePath") === s) ? ? i.pages.models[0], d = p.get("pagePath") || p.get("num").toString();
                s !== "1" && s !== d && this.navigate(`edit/${e}/preview/${d}/`, {
                    replace: !0
                }), this.isOwner = this.isOwner ? ? Ae.default.isEmpty(i.get("shared")), this.fonts = this.fonts ? ? new Nh(i.edit_params), this.me.mergePermissions(i.user.get("permissions")), Wn.init(this.me.get("permissions")), this.unmountPreviewNext = G8(document.querySelector("#mags"), {
                    initialPagePath: d,
                    initialPageId: p.id,
                    initialScrollTop: this.workspace ? .getScrollTop(),
                    router: this,
                    constructorProject: i,
                    previewProject: n,
                    viewport: window.sessionStorage.getItem("constructorViewport") || "default",
                    projectNumId: e,
                    projectUri: `/edit/${e}/preview`,
                    featureFlags: window.ServerData.featureFlags,
                    serverSideConfig: window.ServerData.config
                })
            } else this.previewMag.loadFull({
                success: function(i) {
                    !r.previewMode || r.preview || Tu(Je.usedWidgets(i.pages)).finally(() => {
                        i.$constructor = (0, pe.default)("#constructor"), r.preview = new J2({ ...i
                        }), r.me.mergePermissions(r.previewMag.user.get("permissions")), Wn.init(r.me.get("permissions")), r.trigger("previewMag:load:success", r.preview), r.preview.setScroll((0, pe.default)("#main").scrollTop()), r.preview.go(o, {
                            isPageNum: t
                        }), r.setTitle("Preview"), r.isOwner = i.user ? .email === r.me.get("email"), r.preview.mag.$el.scrollTop(0), r.preview.mag.on("pageChanged", r.onPreviewPageChanged), i && r.renderPreviewToolbar(i.changed, i.is_published)
                    })
                },
                parse: !1
            });
            this.renewScreenshot()
        },
        onPreviewPageChanged(e, o) {
            this.trigger("previewPageChange", e, o)
        },
        setPressedKey(e, o) {
            o ? this.pressedKeySet.add(e) : this.pressedKeySet.delete(e)
        },
        isKeyPressed(e) {
            return this.pressedKeySet.has(e)
        },
        async togglePreview({
            pageNumber: e,
            scrollTop: o,
            reload: t
        } = {}) {
            if (this.switchingModes) return;
            this.switchingModes = !0, Od() || re(fe.Preview, {
                preview: this.previewMode ? "Out" : "In"
            }), Ve("constructor.versionHistoryTrigger") && (this.previewMode ? this.projectVersionObserver ? .startTracking() : this.projectVersionObserver ? .stopTracking());
            let r = this.mag.get("num_id");
            if (Aa()) {
                let i = !this.previewMode,
                    n = e || 1,
                    s = this.mag.pages.find(p => p.get("num") === n),
                    l = i ? `edit/${r}/preview/${n===1?"":s?(s.get("pagePath")||n)+"/":""}` : `edit/${r}/${n}/`;
                if (this.scrollTop = o, i && await new Promise(p => this.saveActiveBlock(p)), t) {
                    let p = new URL(window.location.href);
                    p.pathname = l, window.location.href = p.toString();
                    return
                } else this.navigate(l, {
                    trigger: !0
                });
                (0, pe.default)("html").toggleClass("preview-mode", i), setTimeout(() => this.switchingModes = !1, this.PREVIEW_DELAY), i || await kc.trackDailyVisit({
                    location: "editor",
                    role: Qe.getRoleForAnalytics(this.isOwner)
                })
            } else if (this.previewMode) {
                if (!this.preview) {
                    this.animation = !1;
                    return
                }
                let i = "edit/" + this.mag.get("num_id") + "/" + (this.preview.mag.currentPage ? this.preview.mag.currentPage.num : 1) + "/";
                if ((this.preview && this.preview.mag.hasCodeInjection || this.mag.hasCodeInjection || Ae.default.noop)()) {
                    window.location.href = "/" + i;
                    return
                } else this.navigate(i, {
                    trigger: !0
                });
                (0, pe.default)("html").removeClass("preview-mode"), setTimeout(() => this.switchingModes = !1, this.PREVIEW_DELAY), kc.trackDailyVisit({
                    location: "editor",
                    role: Qe.getRoleForAnalytics(this.isOwner)
                })
            } else {
                let i = this.workspace ? this.workspace.getPageNum() : 1;
                this.saveActiveBlock(() => {
                    let n = "edit/" + this.mag.get("num_id") + "/preview/num/" + i + "/";
                    if (this.mag.hasCodeInjection()) {
                        window.location.href = "/" + n;
                        return
                    } else this.navigate(n, {
                        trigger: !0
                    });
                    (0, pe.default)("html").addClass("preview-mode"), setTimeout(() => this.switchingModes = !1, this.PREVIEW_DELAY)
                })
            }
        },
        togglePreviewMode: function(e) {
            let o = !!e;
            if (o === this.previewMode) return;
            o && this.renewScreenshot(), this.previewMode = o;
            let t = Ae.default.bind(function() {
                this.previewAnimating = !1, o ? (0, pe.default)("#main-background").hide() : (this.setTitle("Edit"), Aa() ? (typeof this.unmountPreviewNext == "function" ? this.unmountPreviewNext() : console.error("Cannot destroy the preview"), delete this.unmountPreviewNext) : (this.preview && this.preview.mag ? .off("pageChanged", this.onPreviewPageChanged), this.preview && this.preview.destroy(), delete this.preview), this.workspace && this.workspace.showUsedViewport(), this.workspace && this.workspace.onResize())
            }, this);
            if ((0, pe.default)("body").toggleClass("preview", o), this.previewAnimating = !0, o)(0, pe.default)("#constructor").find(".navigation-arrow").fadeOut(this.PREVIEW_DELAY), (0, pe.default)("#main, #widgetbar, .controls, #float-panels, .page-size-control").addClass("goout"), Aa() ? t() : (0, pe.default)(".mag").fadeIn(this.PREVIEW_DELAY, t), (0, pe.default)(".page-content-container").attr("style", ""), this.workspace && this.workspace.onResize();
            else {
                let r = Aa() ? this.scrollTop : this.preview ? this.preview.getScroll() : 0;
                this.scrollTop = 0, this.arrows.onPageChange(this.workspace), (0, pe.default)("#main, #widgetbar, .controls, #float-panels, .page-size-control").removeClass("goout"), (0, pe.default)("#main-background").show(), this.workspace && this.workspace.onResize(), Aa() ? t() : (0, pe.default)(".mag").fadeOut(this.PREVIEW_DELAY, t), (0, pe.default)("#main").scrollTop(r)
            }
            this.trigger("togglePreview", o)
        },
        saveActiveBlock: function(e = pe.default.noop) {
            let o;
            if (!this.workspace) return e();
            let t = this.workspace.getSelectedBlocks(),
                r = t[0];
            t.length !== 1 && (r = {
                model: this.workspace.syncManager.groupSave
            });
            let i = n => {
                o = setTimeout(() => {
                    this.stopListening(r.model), e()
                }, n)
            };
            i(200), this.listenToOnce(r.model, "request", () => {
                i(3e3), this.listenToOnce(r.model, "sync", () => {
                    clearTimeout(o), e()
                })
            }), this.workspace.trigger("deselect")
        },
        setTitle: function(e) {
            window.document.title = this.mag ? "Readymag \u2022 " + (this.mag.get("title") || "Project") + " \u2022 " + (e || "") : "Readymag \u2022 Constructor"
        },
        isActiveMinimalUI: function() {
            return (0, pe.default)("html").hasClass(this.minimalUiClassName)
        },
        toggleMinimalUI: function(e = !this.isActiveMinimalUI()) {
            (0, pe.default)("html").flashClass(`${this.minimalUiClassName}-no-transition`, 100), setTimeout(() => {
                e ? ((0, pe.default)("html").addClass(this.minimalUiClassName), this.widgetbar ? .hide()) : ((0, pe.default)("html").removeClass(this.minimalUiClassName), this.widgetbar ? .show())
            }, 20)
        },
        toggleHideControls: function(e) {
            (0, pe.default)("html").toggleClass(this.hideControlsClassName, e)
        },
        isDisabledKeysList: function(e, o) {
            let t = e.keyCode,
                r = o.find(({
                    key: n
                }) => n === t);
            if (!r) return !1;
            let {
                optionKeys: i
            } = r;
            return i ? (Array.isArray(i) ? i : [i]).some(s => e[`${s}Key`]) : !0
        },
        isKeyDisabledByRole: function(e) {
            return Object.entries(this.disabledKeysMap).some(([o, t]) => this.isDisabledKeysList(e, t) && !Qe.isPermissionAllowed(o))
        },
        isDisabledKeysCommentMode: function(e) {
            if (this.workspace ? .getCommentModeState ? .()) return this.isDisabledKeysList(e, this.disabledKeysCommentMode)
        },
        onKeyDown: function(e) {
            if (this.isKeyDisabledByRole(e) || this.isDisabledKeysCommentMode(e) || e.target.tagName.toLowerCase() == "input" || e.target.dataset && e.target.dataset.text || e.target.tagName.toLowerCase() === "textarea" && !e.target.classList.contains("copyhack") || e.target.getAttribute("contenteditable") || this.previewMode || !Ae.default.isEmpty(RM.common.disableShortcuts)) return;
            this.altAlonePressed = !1;
            let o = this.workspace && this.workspace.getSelectedBlocks().length;
            e.keyCode === pe.default.keycodes.alt && (this.altAlonePressed = !0);
            let t = this.workspace && !this.isCurrentPageLocked(),
                r;
            switch (this.setPressedKey(e.keyCode, !0), e.keyCode) {
                case pe.default.keycodes.tab:
                    {
                        let i = document.activeElement;
                        if ((0, pe.default)("#controls-portal").get(0).contains(i)) return;this.toggleMinimalUI(),
                        e.preventDefault();
                        break
                    }
                case pe.default.keycodes.esc:
                    break;
                case pe.default.keycodes.left:
                    if (r = t && this.workspace.moveSelected(e, "left"), !r && !o || this.isCurrentPageLocked()) return this.go("prev"), !1;
                    break;
                case pe.default.keycodes.right:
                    if (r = t && this.workspace.moveSelected(e, "right"), !r && !o || this.isCurrentPageLocked()) return this.go("next"), !1;
                    break;
                case pe.default.keycodes.up:
                    if (r = t && this.workspace.moveSelected(e, "up"), !r && !o || this.isCurrentPageLocked()) return this.go("prev"), !1;
                    break;
                case pe.default.keycodes.down:
                    if (r = t && this.workspace.moveSelected(e, "down"), !r && !o || this.isCurrentPageLocked()) return this.go("next"), !1;
                    break;
                case pe.default.keycodes.backspace:
                    e.preventDefault(), e.stopPropagation();
                case pe.default.keycodes.del:
                    return this.isCurrentPageLocked() ? !0 : (this.workspace.viewport !== "default" && RM.constructorRouter.trigger("notice:triggerMetrics", "widgetDeletedOnMobile"), this.workspace && this.workspace.deleteSelectedBlocks(), !1);
                case pe.default.keycodes.w:
                    break;
                case pe.default.keycodes.t:
                    return e.ctrlKey || e.metaKey || this.isCurrentPageLocked() ? !0 : (this.workspace.addWidget({
                        type: "text",
                        version: 3
                    }, {
                        useDefaults: !0
                    }), e.preventDefault(), e.stopPropagation(), !1);
                case pe.default.keycodes.g:
                    if (e.ctrlKey || e.metaKey || this.isCurrentPageLocked()) return !0;
                    this.mag.edit_params.get("guides") && this.mag.edit_params.toggle("guides"), RM.constructorRouter.trigger("notice:triggerMetrics", "gridsShortcutPressed"), this.mag.edit_params.toggle("grid");
                    break;
                case pe.default.keycodes.h:
                    if ((e.ctrlKey || e.metaKey) && !e.shiftKey || this.isCurrentPageLocked()) return !0;
                    if ((e.ctrlKey || e.metaKey) && e.shiftKey) return e.preventDefault(), this.workspace.changeVisibilityForSelectedBlocks(), !0;
                    this.mag.edit_params.get("grid") && this.mag.edit_params.toggle("grid"), this.mag.edit_params.toggle("guides"), Oe("TurnOffGuides");
                    break;
                case pe.default.keycodes.l:
                    if (!(e.ctrlKey || e.metaKey) || !e.shiftKey) return !0;
                    e.preventDefault(), this.workspace.changeLockForSelectedBlocks();
                    break;
                case pe.default.keycodes.s:
                    if (this.isCurrentPageLocked()) return !0;
                    this.mag.edit_params.toggle("snap");
                    break;
                case pe.default.keycodes.x:
                    if (e.ctrlKey || e.metaKey) return !0;
                    this.mag.edit_params.toggle("sizes");
                    break;
                case pe.default.keycodes.p:
                    break;
                case pe.default.keycodes.v:
                    this.isAnyModeActive() ? this.disableCurrentMode() : this.workspace && this.workspace.trigger("specialKeydown", e);
                    break;
                case pe.default.keycodes.alt:
                case pe.default.keycodes.shift:
                case pe.default.keycodes.f:
                    this.workspace && this.workspace.trigger("specialKeydown", e);
                    break
            }
        },
        navigate: function(e, o) {
            Qi.default.Router.prototype.navigate.apply(this, arguments), this.afterNavigate(e, o)
        },
        afterNavigate: function() {
            RM.analytics && RM.analytics.trackPage()
        },
        onKeyUp: function(e) {
            if (!(e.target.tagName.toLowerCase() == "input" || e.target.dataset && e.target.dataset.text || e.target.tagName.toLowerCase() === "textarea" && !e.target.classList.contains("copyhack") || e.target.getAttribute("contenteditable")) && !this.previewMode && Ae.default.isEmpty(RM.common.disableShortcuts)) switch (e.keyCode == pe.default.keycodes.alt && this.altAlonePressed && e.preventDefault(), this.setPressedKey(e.keyCode, !1), e.keyCode) {
                case pe.default.keycodes.alt:
                case pe.default.keycodes.shift:
                case pe.default.keycodes.v:
                case pe.default.keycodes.f:
                    this.workspace && this.workspace.trigger("specialKeyup", e);
                    break
            }
        },
        onBrowserTabBlur: function() {
            this.workspace && this.workspace.trigger("specialKeyup", {
                type: "keyup",
                keyCode: pe.default.keycodes.alt,
                altKey: !1
            }), this.workspace && this.workspace.trigger("specialKeyup", {
                type: "keyup",
                keyCode: pe.default.keycodes.v
            }), this.workspace && this.workspace.trigger("specialKeyup", {
                type: "keyup",
                keyCode: pe.default.keycodes.f
            })
        },
        onBrowserTabFocus: function() {
            this.makeUserActive()
        },
        onSelectAllKey: function() {
            this.workspace && this.workspace.trigger("selectAll")
        },
        onNumericKey: function(e) {
            this.workspace && this.workspace.getSelectedBlocks().length ? this.workspace.changeBlocksOpacity(e.keyCode - 48) : e.keyCode >= 49 && e.keyCode <= 51 ? this.onViewportKey(e.key) : e.keyCode === 68 && this.onViewportKey(String(this.viewportCounter))
        },
        onViewportKey: function(e) {
            if (this.previewMode || !Ae.default.isEmpty(RM.common.disableShortcuts)) return;
            let o = this.workspace.getViewports().some(n => n.name === "tablet_portrait" && n.enabled),
                t = this.workspace.getViewports().some(n => n.name === "phone_portrait" && n.enabled),
                r = this.workspace.getViewports().filter(n => n.enabled === !0).length;
            this.viewportCounter = pt.incrementCircular(this.viewportCounter, r);
            let i;
            e === "1" ? i = "default" : e === "2" && o ? i = "tablet_portrait" : e === "3" && t || e === "2" && !o ? i = "phone_portrait" : i = void 0, i && this.workspace && this.workspace.trigger("viewportShortcutPressed", i)
        },
        onChangeDevice(e) {
            if (!this.workspace) return;
            let o = this.workspace.viewport,
                t = $c[e],
                r = t !== o,
                i = (this.workspace.page.get("viewport_" + t) || {}).enabled || t === "default";
            r && i ? this.workspace.setViewport(t) : r ? Me.trigger("togglePanel", "viewports") : t === "phone_portrait" && i && (this.workspace.onResize(), this.workspace.updateWorkspaceViewport())
        },
        go: function(e) {
            let o = this.workspace.findPage(e);
            o && this.showWorkspace({
                id: o
            })
        },
        globalKeyPress: function(e) {
            if (this.isKeyDisabledByRole(e) || this.isDisabledKeysCommentMode(e) || !Ae.default.isEmpty(RM.common.disableShortcuts)) return;
            let o = e.target.tagName.toLowerCase() == "input" || e.target.dataset && !!e.target.dataset.text || e.target.tagName.toLowerCase() === "textarea" && !e.target.classList.contains("copyhack") || e.target.getAttribute("contenteditable"),
                t = this;
            for (let r in this.keys) this.keys[r] === e.keyCode && Ae.default.each(this.keyHandlers[r], function(i) {
                (!o || i.activeOnInput) && !Ae.default.any(["ctrl", "alt", "shift", "meta"], function(s) {
                    return e[s + "Key"] != Ae.default.include(i.optionKeys, s)
                }) && e.type == "keydown" && (!t.isCurrentPageLocked() || i.activeOnLock) && (e.preventDefault(), i(e))
            })
        },
        bindGlobalKeyPress: function(e) {
            let o = Ae.default.bind(function(t) {
                let r = t.key.toLowerCase();
                this.keyHandlers[r] = this.keyHandlers[r] || [], Ae.default.isArray(t.optionKeys) || (t.optionKeys = [t.optionKeys]), t.handler.optionKeys = t.optionKeys, t.handler.activeOnLock = t.activeOnLock, t.handler.activeOnInput = t.activeOnInput, this.keyHandlers[r].push(t.handler)
            }, this);
            Ae.default.isArray(e) ? Ae.default.each(e, function(t) {
                o(t)
            }, this) : o(e)
        },
        unbindGlobalKeyPress: function(e, o) {
            if (!o) delete this.keyHandlers[e];
            else {
                let t = [];
                Ae.default.find(this.keyHandlers[e], function(r) {
                    r != o && t.push(r)
                }), this.keyHandlers[e] = t
            }
        },
        initScreenshotRenewer: function() {
            this.on("redrawPage", this.onPageRedraw), this.screenshotDates = Ae.default.range(1, this.mag.pages.length)
        },
        onPageRedraw: function(e) {
            this._pageChanged ? this._pageChanged != e && (this.renewScreenshot(), this._pageChanged = e) : this._pageChanged = e
        },
        async renewScreenshots() {
            let e = this.mag.pages.filter(o => !o.has("screenshot"));
            if (e ? .length) return this.renewScreenshotsPromise = this.renewScreenshotsPromise.then(async () => {
                for (let o of e) await o.updateScreenshots(this.mag.get("num_id"))
            }), this.renewScreenshotsPromise
        },
        async renewScreenshot() {
            if (!this._pageChanged) return;
            let e = this._pageChanged;
            this._pageChanged = !1;
            try {
                await this.mag.pages.findWhere({
                    _id: e
                }) ? .updateScreenshots(this.mag.get("num_id"))
            } catch {
                console.error("Screenshoter error")
            }
        },
        notFound: function() {
            (0, pe.default)(function() {
                (0, pe.default)("#constructor").hide(), (0, pe.default)("#mags").hide(), Ae.default.defer(function() {
                    new bk({
                        type: "404",
                        $container: (0, pe.default)("#service-pages")
                    }).render()
                })
            })
        },
        undo: function() {
            if (this.previewMode) return;
            let e = this.workspace && this.workspace.page;
            e && $t.undo(e.id), Ve("widget.anomalyMonitoring") && Uc.onAction("Undo"), RM.constructorRouter.trigger("notice:triggerMetrics", "countActionsCanceled")
        },
        redo: function() {
            if (this.previewMode) return;
            let e = this.workspace && this.workspace.page;
            e && $t.redo(e.id), Ve("widget.anomalyMonitoring") && Uc.onAction("Redo")
        },
        onCut: function(e) {
            if (this.isCurrentPageLocked() || (0, pe.default)(e.target).is(this.workspaceTextInputSelectors)) return !0;
            this.onCopy.apply(this, [...arguments]), this.workspace && this.workspace.deleteSelectedBlocks()
        },
        onCopy: function(e) {
            if (this.previewMode) return;
            if ((0, pe.default)(e.target).is(this.workspaceTextInputSelectors)) return !0;
            let o = oy.convertToClipboard({
                blocks: this.workspace.getSelectedBlocks(),
                pageId: this.workspace.page.id,
                magNumId: this.mag.get("num_id"),
                indexController: this.indexController,
                workspace: this.workspace
            });
            o && (e.originalEvent.clipboardData.setData("text/plain", JSON.stringify(o)), e.preventDefault())
        },
        onPaste: function(e) {
            let o = this.isKeyPressed(16);
            if (o && !Ae.default.isEmpty(this.animationPasteData)) return this.onPasteAnimation(e);
            if (this.isCurrentPageLocked() || !Qe.isPermissionAllowed("BaseWidgetCanAdd") || this.previewMode) return;
            if ((0, pe.default)(e.target).is(this.workspaceTextInputSelectors)) return !0;
            this.workspace && this.workspace.trigger("specialKeyup", {
                keyCode: pe.default.keycodes.v,
                type: "keyup"
            });
            let t = e.originalEvent.clipboardData;
            if (t && t.items && t.items.length && /image/i.test(t.items[0].type)) return !0;
            let r = Ae.default.reduce(t.types, function(i, n) {
                return i + " " + n
            }, "");
            if (/text/i.test(r) && !/files/i.test(r)) {
                let i = (e.originalEvent.clipboardData.getData("text/plain") || "").trim(),
                    n;
                try {
                    let s = JSON.parse(i);
                    for (let l of s.blocks)
                        if (l.code) {
                            let p = gd.sanitize(l.code, {
                                FORCE_BODY: !0,
                                ADD_TAGS: ["script", "style"],
                                ADD_ATTR: ["onclick", "onload", "style"],
                                ALLOWED_URI_REGEXP: /.*/
                            });
                            l.code = p
                        }
                    n = JSON.parse(JSON.stringify(s))
                } catch {}
                if (n && n.object === "rm_figma_pastedata" && !Ae.default.isEmpty(n.blocks)) return this.pasteDataFromFigma(n, {
                    isPastingAsPage: o
                }), !1;
                if (o) return !1;
                if (n && n.object == "rm_pastedata" && !Ae.default.isEmpty(n.blocks)) return this.workspace.pasteBlocks(n), !1;
                if (i && i !== "\u200C") {
                    let s = e.originalEvent.clipboardData.getData("text/html"),
                        l = $x({
                            text: i,
                            html: s
                        });
                    return this.workspace.addWidget({
                        type: "text",
                        version: 3,
                        ...l
                    }, {
                        useDefaults: !0
                    }), !1
                }
            }
            return !0
        },
        pasteDataFromFigma: async function(e, o = {}) {
            let {
                isPastingAsPage: t
            } = o, r = t ? "Pasting page from Figma" : "Pasting elements from Figma", i = () => o0("Pasting failed. Please try again", "Error"), n = E => o0(r, "Default", E);
            n(0);
            let s = null,
                l = [];
            for (let E of e.blocks)
                if (!(!E || !E.type)) {
                    if (E.type === "background") {
                        s = E;
                        continue
                    }
                    l.push(E)
                }
            let p = e.mag_edit_params ? .unprocessedLinkStyles || {},
                d = e.mag_edit_params ? .unprocessedFonts || {},
                c = this.mag.edit_params.get("fonts"),
                m = this.mag.getFontsShortList(),
                u = Ha(),
                g = [],
                h = [];
            try {
                let E = await a6({
                    blocks: l,
                    unprocessedLinkStyles: p,
                    unprocessedFonts: d,
                    linkProjectStyles: u.project,
                    projectFonts: c,
                    fontShortList: m
                });
                g = E.newLinkStyles, h = E.importedFonts
            } catch {
                i();
                return
            }
            delete e.mag_edit_params ? .unprocessedFonts, delete e.mag_edit_params ? .unprocessedLinkStyles, e.mag_edit_params.fonts = [...h], e.mag_edit_params.linkStyles = [...g];
            let b = { ...e.rootSize
                },
                x = { ...e.rootBoundingBox
                };
            delete e ? .rootSize, delete e ? .rootBoundingBox;
            let S = this.workspace.viewport,
                v = m6(l),
                P = window.RM.constructorRouter.zoom.getZoom(),
                C = this.workspace.getOriginBox(),
                k = this.workspace.getViewportPosition(),
                T = {
                    width: C.width,
                    height: C.height
                },
                R = {
                    left: k.left,
                    top: k.top,
                    width: k.viewportWidth,
                    height: k.height
                },
                I = t ? l6({
                    width: x.width,
                    height: x.height
                }, {
                    width: v.w,
                    height: v.h
                }, S) : {
                    width: k.width,
                    height: k.pageHeight
                },
                B = t ? c6({
                    boundingBox: v,
                    originSize: T,
                    pageSize: I,
                    rootSize: b
                }) : p6({
                    boundingBox: v,
                    originSize: T,
                    zoom: P,
                    pageSize: I,
                    viewportBox: R
                });
            d6(l, B);
            let L = async E => {
                let $ = 0,
                    de = await u6(E, Z => {
                        $ = Z / E.length * 100, n(Math.round($))
                    }),
                    Q = 100 - $,
                    U = 1 / l.length * Q;
                this.workspace.pasteBlocks({ ...e,
                    blocks: de
                }, {
                    invisible: !0,
                    onComplete: () => {
                        setTimeout(rh, 300), re(fe.EditorActions, {
                            action: "import from figma",
                            figmaImportMethod: t ? "page" : "elements"
                        })
                    },
                    onError: () => i(),
                    onBlockAdded: () => {
                        $ += U, n(Math.round($))
                    }
                })
            };
            if (!t) {
                if (l.length > 0) try {
                    await L(l)
                } catch {
                    i();
                    return
                } else setTimeout(rh, 300);
                return
            }
            let D = {
                default: "desktopWidth",
                phone_portrait: "phoneWidth",
                tablet_portrait: "tabletWidth"
            }[S];
            try {
                s && this.workspace.getBackground().model.save({
                    color: s.color
                }), this.workspace.page.setViewportParam(S, "height", I.height), this.workspace.page.saveHeight(), await this.mag.save({
                    [D]: I.width
                }, {
                    patch: !0
                }), l.length > 0 ? await L(l) : rh()
            } catch {
                i();
                return
            }
        },
        onCopyTextStyles: function(e) {
            let o = this.workspace.getSelectedBlocks();
            o.length === 1 && o[0].model.get("type") === "text" && (e.preventDefault(), o[0].storeCopiedStyles())
        },
        onPasteTextStyles: function(e) {
            e.preventDefault();
            let o = this.workspace.getSelectedBlocks();
            o.length === 1 && o[0].model.get("type") === "text" && o[0].applyCopiedStyles()
        },
        onCopyAnimation: function(e) {
            if (e.preventDefault(), delete this.animationPasteData, this.previewMode) return;
            if ((0, pe.default)(e.target).is(this.workspaceTextInputSelectors)) return !0;
            let o = this.workspace.getSelectedBlocks(),
                t = o.reduce((i, n) => {
                    let s = Za.getUuidHash(n.model.getAnimations()) || "none";
                    return { ...i,
                        [s]: !0
                    }
                }, {}),
                r = Ae.default.keys(t);
            !r.length || r.length > 1 || r[0] === "none" || o.length && (this.animationPasteData = nt(o[0].model.getAnimations()))
        },
        onPasteAnimation: function(e) {
            if (e.preventDefault(), Ae.default.isEmpty(this.animationPasteData) || this.previewMode) return;
            if ((0, pe.default)(e.target).is(this.workspaceTextInputSelectors)) return !0;
            let o = Ae.default.map(this.workspace.getSelectedBlocks(), Ae.default.bind(function(t) {
                let r = this.animationPasteData.find(s => s.type === "click"),
                    i = this.workspace.viewport !== "default",
                    n = nt(this.animationPasteData).map(s => ({ ...s,
                        type: i && s.type === "hover" ? r ? "none" : "click" : s.type,
                        UUID: Je.generateUUID()
                    }));
                return {
                    _id: t.model.get("_id"),
                    animation: n
                }
            }, this));
            Ae.default.isEmpty(o) || (this.workspace.save_group(o), this.workspace.trigger("paste-animation"))
        },
        forbidAccess: function() {
            window.location.href = "/"
        },
        raiseConnectionError: function() {
            let e = this;
            this.connectionError || this.socketConnectionError || (this.connectionError = !0, this.trigger("showConnectionAlert"), clearInterval(this.pingTimer), this.pingTimer = setInterval(function() {
                e.pingXHR && e.pingXHR.abort(), e.pingXHR = pe.default.get("/api/ping", function() {
                    clearInterval(e.pingTimer), e.clearConnectionError()
                })
            }, this.PING_INTERVAL))
        },
        clearConnectionError: function() {
            let e = [],
                o = 0;
            this.connectionError && (this.connectionError = !1, Ae.default.each(this.workspaces, function(t) {
                Ae.default.each(t.blocks, function(r) {
                    r.model.wasNotSaved && e.push(r.model)
                })
            }), this.syncManager ? .groupSave ? .wasNotSaved && e.push(this.syncManager.groupSave), e.length === 0 && this.trigger("hideConnectionAlert"), Ae.default.each(e, t => {
                t.once("re-saved", () => {
                    o++, o === e.length && this.trigger("hideConnectionAlert")
                }), t.save()
            }))
        },
        raiseSocketConnectionError: function() {
            RM.DEBUG && console.log("Socket connection error raised"), !this.socketConnectionError && (this.connectionError && (clearInterval(this.pingTimer), this.connectionError = !1, this.trigger("hideConnectionAlert")), this.socketConnectionError = !0, this.trigger("showSocketConnectionAlert"))
        },
        clearSocketConnectionError: function() {
            RM.DEBUG && console.log("Socket connection error cleared"), !(this.sockets.errorRaisedAt - Date.now() > 60 * 1e3) && this.mag.fetchLastChanged(Ae.default.bind(function(e) {
                e.wasChanged || (this.trigger("hideSocketConnectionAlert"), delete this.sockets.errorRaisedAt, delete this.socketConnectionError)
            }, this))
        },
        showBlockLayer: function(e, o) {
            let t = (0, pe.default)("<div>").insertAfter("#constructor").addClass("rm-block-layer");
            return typeof e == "function" && t.on("click", e), o && (o.darker ? t.addClass("darker") : o.transparent && t.addClass("transparent")), Ae.default.delay(function() {
                t.addClass("fade-in")
            }, 20), t
        },
        hideBlockLayer: function(e) {
            e && (e.removeClass("fade-in"), Ae.default.delay(function() {
                e.remove()
            }, 220))
        },
        exportMagAsTemplateset: function({
            dontRenewScreenshots: e,
            isSharedAsTemplate: o
        }) {
            let t = new(Qi.default.Model.extend({
                    url: "/api/templateset/"
                })),
                r = [],
                i = [],
                n = this.mag.hasGlobalWidgets() ? {
                    withGlobalWidgets: !0
                } : {};
            Ae.default.each(this.mag.pages.models, function(s) {
                let l = this.getWorkspace(s.get("_id"));
                if (!l) return;
                let p = l.getTemplateJSON(n);
                p && (i = Ae.default.uniq(i.concat(p.globalWids), "_id"), delete p.globalWids, r.push(p))
            }, this), i.length && r.forEach(s => {
                s.wids = s.wids.concat(i)
            }), r.length && t.save({
                templates: r,
                mag_num_id: this.mag.get("num_id"),
                mag_title: this.mag.get("title") || "Project " + this.mag.get("num_id"),
                dontRenewScreenshots: e,
                isSharedAsTemplate: o
            })
        },
        switchCurrentPage: function(e) {
            this.inactiveUser && this.makeUserActive(e), this.inactivityTimer && this.startInactivityTimer(), this.sockets && this.sockets.users_list && this.sockets.users_list.size() > 1 && this.renewScreenshot(), this.sockets && this.sockets.lockPage(e)
        },
        onLockMessage: function(e) {
            e.length || (e = [e]);
            let o = this.workspace.locked;
            this.lockCache = this.lockCache || {}, Ae.default.each(e, Ae.default.bind(function(t) {
                let r = t.userId,
                    i = t.pageId;
                t.tp === "lock" && (this.lockCache[i] = r, Me.trigger("page:locked", i, r)), t.tp === "unlock" && (delete this.lockCache[i], Me.trigger("page:unlocked", i))
            }, this)), this.workspace && this.workspace.updateLockState(), o && !this.workspace.locked && this.lockCache[this.workspace.page.id] == this.me.id && this.workspace.page.needUpdate && this.mag.pages.fetchFullPage(this.workspace.page.id)
        },
        onClientDisconnected: function(e) {
            this.lockCache = this.lockCache || {};
            for (let o in this.lockCache) this.lockCache[o] === e && delete this.lockCache[o]
        },
        syncLockedPages: function() {
            this.workspace && this.workspace.updateLockState()
        },
        isPageLocked: function(e) {
            return this.lockCache && this.lockCache[e] && this.lockCache[e] != this.me.id
        },
        isPageLockedByMe: function(e) {
            return this.lockCache && this.lockCache[e] && this.lockCache[e] == this.me.id
        },
        isCurrentPageLocked: function() {
            return this.workspace && this.isPageLocked(this.workspace.page.get("_id"))
        },
        getLockUserInfoByPage: function(e) {
            let o = this.lockCache && this.lockCache[e];
            return this.sockets && this.sockets.users_list && this.sockets.users_list.get(o)
        },
        unlockPage: function(e) {
            this.sockets && this.sockets.takeOver(e.get("_id")), this.closeCodeEditor()
        },
        showUnlockPageAlert: function(e) {
            let o = e.get("name"),
                r = (i => {
                    if (!i) return "";
                    let [n, s] = i.split(" ");
                    return s ? n[0] + s[0] : n[0]
                })(o);
            this.workspace && this.workspace.setViewport("default"), this.workspace && this.workspace.trigger("deselect"), this.alertSharedUnlockPage && this.alertSharedUnlockPage.hide(), this.alertSharedUnlockPage = this.alertSharedUnlockPage || new Sc({
                $parent: (0, pe.default)("body > .popups"),
                router: this.router,
                opts: {
                    type: "type-shared-unlock-page",
                    text: `
            <div class="avatar">${r}</div>
            <div>${o} is editing the project now </div>
            <span class="text-secondary">
              Multiple users cannot edit the <br/> project simultaneously.
              Please <br/> conact ${o} to regain access
            </span>
          `,
                    close_button: !0
                },
                alert_source: "shared unlock page"
            }), this.alertSharedUnlockPage.render(), this.alertSharedUnlockPage.once("hide", function() {
                delete this.alertSharedUnlockPage
            }, this)
        },
        updateFromSocket: function(e) {
            let o = Ae.default.bind(function(h) {
                    let b = this.mag.pages.get(h);
                    b && (RM.DEBUG && console.log(b, "needUpdate"), b.needUpdate = !0)
                }, this),
                t = (h, b) => {
                    if (!b) return;
                    let x = this.mag.getWidgetById(h);
                    if (x) x.parse(Ae.default.omit(b, ["_id", "is_global", "is_above"]), {
                        parse: !0,
                        socketUpdate: !0
                    });
                    else {
                        let S = this.mag.getPage(b.pid);
                        S && (x = S.addWidget(b, {
                            socketUpdate: !0,
                            nosave: !0
                        }))
                    }
                    x && this.syncManager && (this.syncManager.historyModelsList[h] = {
                        model: x,
                        attrs: x.cloneJSON()
                    })
                };
            RM.DEBUG && console.log("receive socket update", e.modelName, e.data);
            let r = (h, b, x) => h !== this.workspace.viewport ? Ae.default.omit(x, ["wids", ...De.widgetViewportFields(b)]) : Ae.default.omit(x, ["wids"]);
            switch (this.mag.updateLastChanged(), e.modelName) {
                case "Widget":
                    var g = e.data.pid;
                    o(g);
                    var i = this.mag.pages.get(g);
                    if (i === this.workspace.page || e.data.is_global) {
                        let h = i.widgets.get(e.data._id);
                        if (!h) return;
                        if (h.set(r(e.viewport, h.get("type"), e.data), {
                                parse: !0,
                                first: !0,
                                socketUpdate: !0
                            }), h.get("is_global") && e.viewport !== this.workspace.viewport) {
                            let b = Ae.default.pick(e.data, [...De.widgetViewportFields(h.get("type"))]);
                            Ae.default.isEmpty(b) || (h[`viewport_${e.viewport}`] = { ...h[`viewport_${e.viewport}`] || {},
                                ...b
                            })
                        }
                    } else if (i && i !== this.workspace.page) {
                        if (i.widgets.get(e.data._id)) return;
                        let b = new Su(e.data);
                        i.addWidget(b, {
                            socketUpdate: !0,
                            silent: !0,
                            nosave: !0,
                            updateIndex: !1
                        })
                    }
                    break;
                case "Page":
                    var g = e.data._id;
                    o(g);
                    var i = this.mag.pages.get(g);
                    if (!i) return;
                    if (i == this.workspace.page && !Ae.default.isEqual(i.get("wids"), e.data.wids)) {
                        this.mag.pages.fetchFullPage(i.id);
                        break
                    }
                    i.set(e.data, {
                        parse: !0,
                        socketUpdate: !0
                    });
                    break;
                case "Mag":
                    if (e.data.pids) {
                        let h = Ae.default.difference(e.data.pids, this.mag.get("pids"));
                        this.mag.set({
                            pids: Ae.default.difference(e.data.pids, h)
                        }, {
                            socketUpdate: !0
                        }), Ae.default.each(h, function(b) {
                            this.mag.pages.fetchFullPage(b, {
                                socketUpdate: !0,
                                success: Ae.default.bind(function() {
                                    this.syncLockedPages()
                                }, this)
                            })
                        }, this)
                    }
                    this.mag.set(Ae.default.omit(e.data, "pids"), {
                        parse: !0,
                        socketUpdate: !0
                    });
                    break;
                case "PageOrder":
                    var n = RM.constructorRouter.mag.getPageUri(RM.constructorRouter.workspace.page.id) + "/",
                        s = Qi.default.history.getFragment().split("?")[0],
                        l = s.indexOf(n) == s.length - n.length;
                    this.pageOrder.set(e.data, {
                        parse: !0,
                        socketUpdate: !0
                    }), this.pageOrder.orderPages(e.data.order, {
                        socketUpdate: !0
                    }), l && (this.updateUrl(), this.workspace && this.trigger("pageChange", this.workspace)), this.syncLockedPages();
                    break;
                case "MagEditParams":
                    {
                        let h = nt(this.mag.edit_params.toJSON());this.mag.edit_params.set(e.data, {
                            parse: !0,
                            socketUpdate: !0
                        }),
                        this.mag.triggerEditParamsRewrite(h, e.data);
                        break
                    }
                case "TextStyles":
                    Mc({ ...Bc(),
                        ...e.data
                    });
                    break;
                case "LinkStyles":
                    Rc({ ...Ha(),
                        ...e.data
                    });
                    break;
                case "ListStyles":
                    zc({ ...Ec(),
                        ...e.data
                    });
                    break;
                case "Swatches":
                    hy({ ...fy(),
                        ...e.data
                    });
                    break;
                case "Guides":
                    if (Ve("constructor.guidesPerUser")) break;
                    var p = e.data._id,
                        d = this.gg.guides && this.gg.guides.models;
                    if (!d || !d.get) return;
                    var c = d.get(p);
                    c && c.set(e.data, {
                        parse: !0,
                        socketUpdate: !0
                    });
                    break;
                case "GroupSave":
                    var m = {
                            parse: !0,
                            first: !0,
                            socketUpdate: !0
                        },
                        u = this.workspace ? .viewport;
                    if (u && Array.isArray(e.data.changes)) {
                        let h = [];
                        e.data.changes.forEach(b => {
                            if (b.modelType !== "widget") {
                                h.push(b);
                                return
                            }
                            let x = b;
                            b.is_global && e.data.widgetsAttrs && e.data.widgetsAttrs[b._id] && t(b._id, e.data.widgetsAttrs[b._id]), e.viewport === u ? u !== "default" && (x = { ...Ae.default.omit(b, `viewport_${e.viewport}`),
                                ...b[`viewport_${e.viewport}`]
                            }) : e.viewport === "default" && typeof b.is_global > "u" && typeof b.is_above > "u" && typeof b.is_locked > "u" && (x = { ...Ae.default.pick(b, ["_id", "modelType"]),
                                viewport_default: Ae.default.omit(b, ["_id", "modelType"])
                            }), h.push(x)
                        }), h.length && (e.data.changes = h)
                    }
                    this.workspace.set_group(e.data.changes, m), Ae.default.each(e.data.pids, function(h) {
                        o(h)
                    });
                    break;
                case "TrashPages":
                    {
                        let h = e.data,
                            b = x => this.mag.pages.get(x) || this.mag.trashPages.get(x) || this.workspace.syncManager.historyModelsList[x] ? .model;
                        if (h.added) {
                            let x = b(h.added);
                            x && this.mag.trashPages.add(x, {
                                socketUpdate: !0
                            })
                        } else if (h.removed) {
                            let x = b(h.removed);
                            x && this.mag.trashPages.remove(x, {
                                socketUpdate: !0
                            })
                        } else h.emptyTrash && this.mag.trashPages.reset();this.mag.set("has_deleted_pages", this.mag.trashPages.length > 0, {
                            socketUpdate: !0
                        });
                        break
                    }
                case "UpdateInMobileViewport":
                    var g = e.data;
                    g && o(g);
                    break;
                case "Order":
                    this.indexController.updateFromSocket(e.data);
                    break
            }
        },
        startInactivityTimer: function(o) {
            var o = o || {
                time: "short"
            };
            this.inactiveUser || !this.sockets || (this.stopInactivityTimer(), this.inactivityTimer = setTimeout(Ae.default.bind(function() {
                this.sockets.leavePage(this.workspace.page.id), this.navigate("edit/" + this.mag.get("num_id") + "/contents/", {
                    replace: !0
                }), this.inactiveUser = !0
            }, this), this.inactivityTimesMap[o.time]))
        },
        stopInactivityTimer: function() {
            this.sockets && (clearTimeout(this.inactivityTimer), this.inactivityTimer = null)
        },
        makeUserActive: function(e) {
            this.sockets && (this.stopInactivityTimer(), this.inactiveUser && (delete this.inactiveUser, this.mag.fetchLastChanged(Ae.default.bind(function(o) {
                o.wasChanged && (this.workspace && this.workspace.trigger("deselect"), Ae.default.defer(function() {
                    window.location.reload()
                }))
            }, this)), this.switchCurrentPage(e || this.workspace.page.id)))
        },
        openCodeEditor: function(e) {
            window.RM.common.disableShortcuts["code-editor"] = !0, this.workspaceCodeEditor = new K2({
                router: this,
                mag: this.mag,
                model: e && e.model
            }), this.workspaceCodeEditor.show(), this.widgetbar && this.widgetbar.hide(), this.workspace && this.listenTo(this.workspace, "panelShowed", this.closeCodeEditor), this.workspace && this.listenTo(this.workspace, "select", this.closeCodeEditor), this.isCodeEditorVisible = !0
        },
        closeCodeEditor: function(e) {
            !this.workspaceCodeEditor || !this.isCodeEditorVisible || (this.isCodeEditorVisible = !1, e || this.workspaceCodeEditor.saveCodes(), this.workspaceCodeEditor.hide(), this.widgetbar && this.widgetbar.show(), this.workspace && this.stopListening(this.workspace, "panelShowed", this.closeCodeEditor), this.workspace && this.stopListening(this.workspace, "select", this.closeCodeEditor), delete window.RM.common.disableShortcuts["code-editor"])
        },
        reloadWorkspaces: function() {
            this.mag.loadFull({
                success: () => {
                    this.syncManager = new Of(this, this.mag), $t.initialize(this.syncManager), this.workspace && this.workspace.trigger("deselect"), this.widgetbar && this.widgetbar.rerender(), Me.trigger("closeSettings");
                    for (let o in this.workspaces) this.removeWorkspace(o);
                    let e = this.workspace.page.id;
                    delete this.workspace, this.showWorkspace({
                        id: e
                    })
                },
                error: e => {
                    e.status !== 403 && this.notFound()
                }
            })
        },
        isAnyModeActive: function() {
            let e = this.workspace ? .getCommentModeState ? .(),
                o = this.mag.edit_params.get("blocks"),
                t = Qe.getCurrentProjectRole(this.mag.get("num_id")) === "editor";
            return e || o || t
        },
        disableCurrentMode: function() {
            this.workspace ? .getCommentModeState ? .() && rp(!1), this.mag.edit_params.get("blocks") && this.changeBlocksMode(!1, !1), this.changeEditorMode("member")
        },
        changeBlocksMode: async function(e, o = !1) {
            this.mag.edit_params.save("blocks", e), o && (await this.changeEditorMode("member"), rp(!1))
        },
        toggleBlocksMode: async function() {
            let e = this.mag.edit_params.get("blocks");
            this.changeBlocksMode(!e, !0)
        },
        canChangeLockedLayoutMode: function() {
            return this.isOwner || this.mag.teamRole === "member"
        },
        changeEditorMode: async function(e, o = !1) {
            if (o && (this.mag.edit_params.save("blocks", !1), rp(!1)), !!this.canChangeLockedLayoutMode()) try {
                let t = this.mag.get("num_id"),
                    r = Qe.getCurrentProjectRole(t);
                if (e === r) return;
                this.mag.roleName = e, Qe.saveProjectRole(t, e), this.reloadWorkspaces(), Me.trigger("refreshTeamworkData"), e === "editor" && re(fe.ContentEditMode, {
                    eventLabel: "on"
                })
            } catch {
                window.RM.constructorRouter.trigger("notice:show", "Oops", {
                    canBeClosed: !0
                })
            }
        },
        toggleSelfEditorMode: async function() {
            let e = this.mag.get("num_id"),
                t = Qe.getCurrentProjectRole(e) === "member" ? "editor" : "member";
            await this.changeEditorMode(t, !0)
        },
        destroy() {
            Me.off("change:device", this.onChangeDevice, this), Ve("widget.anomalyMonitoring") && document.removeEventListener("click", Uc.onClick)
        }
    }),
    g6 = $N;
var w6 = M(Vb());
vI();
Ua();
ut();
var Vt = M(Ht()),
    Bn = M(lt());
var Ss = M(Ht()),
    f6 = M(Mo()),
    Ps = M(lt());
Lr();
en();
var h6 = {
    "template-constructor-search-panel": Ot `
	<div class="search-panel">
		<div class="search-panel-wrapper">

			<div class="search">
				<div class="search-wrapper">
					<input class="search-input"  spellcheck="false" maxlength="100" type="text" value="" data-testid="image-search-input"/>
					<div class="search-icon"></div>
					<div class="search-clear"></div>
				</div>
			</div>

			<div class="panel-title invisible"></div>
			<div class="back-button invisible"></div>

			<div class="scroll-wrapper">
				<div class="results-wrapper">
					<div class="results" data-testid="image-search-results">

						<div class="preloader-wrapper">
							<div class="rmpreloader">
								<div class="shadow"></div>
								<div class="arc"></div>
							</div>
						</div>

						<div class="message">
							<div class="top-text"></div>
							<div class="bottom-text"></div>
						</div>

					</div>
				</div>
				<div class="scroll"></div>
			</div>


			<a class="logo" href="" target="_blank"></a>


			<div class="logged-user">
				<a class="userpic" target="_blank"></a>
				<div class="logout">Logout</div>
			</div>

		</div>
	</div>
`
};
lh();
var HN = f6.default.View.extend({
        initialize: function(e) {
            this.initPanel(e)
        },
        initPanel: function() {
            Ps.default.bindAll(this)
        },
        render: function() {
            this.template = h6["template-constructor-search-panel"], this.setElement((0, Ss.default)(this.template({})).insertAfter("#constructor")), this.$el.on("click", function(e) {
                e.stopPropagation()
            }), this.$el.on("click", ".search-icon", this.onSearchIconClick), this.$el.on("click", ".search-clear", this.onSearchClearClick), this.$el.on("click", ".back-button", this.onBackButtonClick), this.$el.find(".search-input").on("input propertychange", this.onInputChanged).on("keypress keyup keydown", this.onInputKey), this.scroll = (0, Ss.default)(this.$(".scroll-wrapper")).RMScroll({
                $container: this.$(".scroll-wrapper .results-wrapper"),
                $content: this.$(".scroll-wrapper .results-wrapper .results"),
                $handle: this.$(".scroll-wrapper .scroll"),
                onScroll: this.onScroll
            }).data("scroll"), this.rendered = !0
        },
        onScroll: function() {},
        showPreloader: function(e) {
            this.$(".results .preloader-wrapper").toggleClass("fill-content", e), this.$(".results .preloader-wrapper").removeClass("invisible"), this.$(".results .rmpreloader").css("display", "block")
        },
        hidePreloader: function(e) {
            this.$(".results .preloader-wrapper").toggleClass("invisible", e), this.$(".results .preloader-wrapper").removeClass("fill-content"), this.$(".results .rmpreloader").css("display", "none")
        },
        showMessage: function(e, o) {
            this.$(".results .message .top-text").text(e), this.$(".results .message .bottom-text").text(o), this.$(".results .message").css("display", "block")
        },
        hideMessage: function() {
            this.$(".results .message").css("display", "none")
        },
        showPanelTitle: function(e) {
            let o = (0, Ss.default)('<span class="space">' + (e || "").split("ct").join('c</span><span class="space">t') + "</span>");
            this.$(".panel-title").empty().append(o), this.$(".panel-title").toggleClass("invisible", !1)
        },
        hidePanelTitle: function() {
            this.$(".panel-title").toggleClass("invisible", !0)
        },
        showSearch: function() {
            this.$(".search").toggleClass("invisible", !1)
        },
        hideSearch: function() {
            this.$(".search").toggleClass("invisible", !0)
        },
        showBackButton: function() {
            this.$(".back-button").toggleClass("invisible", !1)
        },
        hideBackButton: function() {
            this.$(".back-button").toggleClass("invisible", !0)
        },
        onBackButtonClick: function() {},
        onInputChanged: function() {
            Je.setInputSize(this.$(".search-input"), 550), this.$(".search-clear").toggle(this.$(".search-input").val() !== "")
        },
        onSearchClearClick: function() {
            this.$(".search-input").blur(), this.emptySearchInput(), this.$(".search-input").focus()
        },
        onInputKey: function(e) {
            if (e.stopPropagation(), e.keyCode === 27 && e.preventDefault(), e.type === "keyup") {
                if (e.keyCode === 27) {
                    this.$(".search-input").val() !== "" ? (this.$(".search-input").blur(), this.emptySearchInput(), this.$(".search-input").focus()) : this.hide();
                    return
                }
                e.keyCode === 13 && (e.preventDefault(), this.newSearch())
            }
        },
        newSearch: function() {
            this.$el.hasClass("search-on-center") && this.$(".search-input").val() && (this.$el.removeClass("search-on-center"), this.onInputChanged())
        },
        onBodyKey: function(e) {
            this.$(".search-input").is(":focus") || (e.keyCode === 27 && (e.preventDefault(), e.stopPropagation()), e.type === "keyup" && e.keyCode === 27 && this.bodyEscKey())
        },
        bodyEscKey: function() {
            this.hide()
        },
        emptySearchInput: function() {
            this.$(".search-input").val("").width("3px"), this.$(".search-clear").hide()
        },
        onSearchIconClick: function(e) {
            e.stopPropagation(), this.$(".search-input").focus(), this.newSearch()
        },
        onMouseWheel: function(e) {
            e && e.stopPropagation(), e && e.preventDefault()
        },
        disableMouseWheel: function() {
            (0, Ss.default)(document).bind("mousewheel", this.onMouseWheel)
        },
        enableMouseWheel: function() {
            (0, Ss.default)(document).unbind("mousewheel", this.onMouseWheel)
        },
        show: function(e, o) {
            if (
                import ("https://st-p.rmcdn1.net/ae5fa58f/dist/c/c-R4BAKHY4.js").then(({
                    default: t
                }) => {
                    t("searchpanel")
                }), this.$el.hasClass("search-on-center") && e && this.$el.removeClass("search-on-center"), this.settings = o, !this.rendered) {
                this.render(), setTimeout(Ps.default.bind(function() {
                    this.show(e, o)
                }, this), 0);
                return
            }
            this.disableMouseWheel(), this.$block_layer = RM.constructorRouter.showBlockLayer(this.hide), this.$el.removeClass("show-out").addClass("show-in").css("display", "block"), setTimeout(Ps.default.bind(function() {
                this.$el.removeClass("show-in")
            }, this), 20), setTimeout(Ps.default.bind(function() {
                this.$el.css("width", "+=1")
            }, this), 300), setTimeout(Ps.default.bind(function() {
                this.$el.css("width", "-=1"), this.setFocusOnShow(), e && this.newSearch()
            }, this), 300), e && (this.emptySearchInput(), this.$(".search-input").val(e)), this.onInputChanged(), (0, Ss.default)("body").on("keypress keyup keydown", this.onBodyKey)
        },
        setFocusOnShow: function() {
            this.$(".search-input").focus()
        },
        hide: function(e) {
            e && e.stopPropagation(), this.enableMouseWheel(), RM.constructorRouter.hideBlockLayer(this.$block_layer), (0, Ss.default)("body").off("keypress keyup keydown", this.onBodyKey), this.$el.addClass("show-out"), setTimeout(Ps.default.bind(function() {
                this.$el.css("display", "none")
            }, this), 200), setTimeout(Ps.default.bind(function() {
                Ts()
            }, this), 200)
        }
    }),
    Da = HN;
ut();
en();
var ih = {
    "template-constructor-search-panel-unsplash": Ot `

    <div class="bottom-menu">
        <ul>
            <li data-item="search" class="searching active">Search</li>
            <li data-item="my-photos" class="my-photos">My&thinsp;&thinsp;Photos</li>
            <li data-item="my-collections" class="my-collections">My&thinsp;&thinsp;Collections</li>
        </ul>
        <span></span>
    </div>


    <div class="popup-image">
        <div class="image"></div>
        <div class="source-wrapper">
            <span class="copyright">© </span>
            <a class="source" target="_blank" href="">source</a>
        </div>
    </div>

`,
    "template-constructor-search-panel-unsplash-connect": Ot `
    <div class="connect-wrapper">
        <div class="connect-logo"></div>
        <div class="connect-button">Connect</div>
    </div>
`,
    "template-constructor-search-panel-unsplash-collection": Ot `
    <div class="collection" style="background-image: url('<%=collection.cover_photo.urls.thumb%>')" data-collection="<%=collection.id%>">
        <div class="greybg"></div>
        <div class="overlay">
            <div class="title"><%-collection.title%></div>
            <div class="count"><%-collection.total_photos%>&thinsp;&thinsp;photo<%-(collection.total_photos==1) ? '': 's'%></div>
        </div>
    </div>
`
};
var FN = Da.extend({
    name: "searchUnsplash",
    params: {
        serviceUrl: "https://unsplash.com/",
        apiCredit: "?utm_source=readymag&utm_medium=referral&utm_campaign=api-credit",
        panelClass: "search-unsplash",
        PreloadDesignImagesType: "searchpanel-unsplash",
        per_page: 30,
        imageHeight: 98,
        imagePadding: 7,
        imageMaxWidth: 2,
        imageMinWidth: .5,
        maxImageSize: 2880
    },
    noResultsText: {
        search: ["Sorry, no photos found.", "Try different keywords."],
        "my-photos": ["You haven't uploaded any photos yet.", ""],
        "my-collections": ["You haven't created any collections yet.", ""]
    },
    requestInAction: !1,
    searchParams: {
        query: ""
    },
    curMenuItem: "search",
    initialize: function(e) {
        this.initPanel(e)
    },
    render: function() {
        Da.prototype.render.apply(this, arguments);
        let e = ih["template-constructor-search-panel-unsplash"];
        this.connect_template = ih["template-constructor-search-panel-unsplash-connect"];
        let o = e({});
        (0, Vt.default)(o).appendTo(this.$el.find(".search-panel-wrapper")), this.$("a.logo").attr("href", this.params.serviceUrl + this.params.apiCredit), this.$el.addClass(this.params.panelClass).addClass("search-on-center"), this.$imagePopup = this.$(".popup-image"), this.$imagePopup.on("mouseleave", this.hideImagePopup), this.$imagePopup.bind("mousewheel", this.onImagePopupScroll), this.$imagePopup.find(".image").on("mouseup", this.imagePopupClick), this.$(".bottom-menu li").on("click", this.onMenuItemClick), setTimeout(Bn.default.bind(function() {
            this.checkAuth(!0)
        }, this), 1), this.$(".logged-user .logout").on("click", this.logout), this.$el.on("mouseup", ".results", this.onResultsClick)
    },
    newSearch: function(e) {
        Da.prototype.newSearch.apply(this, arguments), this.showSearch(), this.hidePanelTitle(), this.hideBackButton();
        let o = this.$(".search .search-input").val().trim();
        this.searchParams.query === o && !e || this.doSearch(o)
    },
    doSearch: function(e) {
        this.searchParams = {
            query: e,
            page: 1
        }, this.clearResults(), this.makeSearchRequest()
    },
    recalcImagesSizes: function(e) {
        let o = [],
            t = -this.params.imagePadding,
            r = this.$(".results").width(),
            i = this,
            n = !0;
        this.$(".results .image").each(Bn.default.bind(function(l, p) {
            let d = (0, Vt.default)(p).data("width"),
                c = (0, Vt.default)(p).data("height"),
                m = this.params.imageHeight / c,
                u = Math.ceil(d * m);
            u < this.params.imageHeight * this.params.imageMinWidth && (u = Math.floor(this.params.imageHeight * this.params.imageMinWidth)), u > this.params.imageHeight * this.params.imageMaxWidth && (u = Math.floor(this.params.imageHeight * this.params.imageMaxWidth)), t + u + this.params.imagePadding > r && (n = !1, s(o, t, !1), t = -this.params.imagePadding, o = []), o.push({
                img: (0, Vt.default)(p),
                new_w: u
            }), t += u + this.params.imagePadding
        }, this)), s(o, t, !0, e);

        function s(l, p, d, c) {
            if (l.length == 0) return;
            let m = Math.floor((r - p) / l.length),
                u = (r - p) % l.length,
                g = 0;
            d && (m = 0, u = 0), Bn.default.each(l, function(h) {
                g++, h.new_w += m, g <= u && (h.new_w += 1), h.img.css({
                    height: i.params.imageHeight,
                    width: h.new_w,
                    "margin-bottom": d ? 0 : i.params.imagePadding,
                    "margin-right": g == l.length ? 0 : i.params.imagePadding,
                    display: d && !n && !c ? "none" : "block"
                })
            })
        }
    },
    clearResults: function() {
        this.$(".results .connect-wrapper").remove(), this.$(".results .image").remove(), this.$(".results .collection").remove(), this.hidePreloader(), this.hideMessage(), this.scroll && this.scroll.recalc()
    },
    renderImage: function(e) {
        let o = e.urls.raw + "?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&h=200&fit=max&s=1897f83cf25fe8a8fd14ea067685731b",
            t = e.urls.raw;
        Math.max(e.width, e.height) > this.params.maxImageSize && (e.width > e.height ? t += "?ixlib=rb-0.3.5&q=90&fm=jpg&crop=entropy&cs=tinysrgb&w=" + this.params.maxImageSize + "&fit=max&s=1897f83cf25fe8a8fd14ea067685731b" : t += "?ixlib=rb-0.3.5&q=90&fm=jpg&crop=entropy&cs=tinysrgb&h=" + this.params.maxImageSize + "&fit=max&s=1897f83cf25fe8a8fd14ea067685731b"), (0, Vt.default)("<div></div>").addClass("image").data("width", e.width).data("height", e.height).data("id", e.id).data("ownername", e.user.name).data("src", t).data("download-url", e.links.download_location).data("src-thumb", o).css({
            "background-image": 'url("' + o + '")'
        }).on("mouseenter", this.onImageMouseEnter).on("mouseleave", this.onImageMouseLeave).insertBefore(this.$(".results .preloader-wrapper"))
    },
    renderCollection: function(e) {
        let o = ih["template-constructor-search-panel-unsplash-collection"];
        (0, Vt.default)(o({
            collection: e
        })).on("click", this.onCollectionClick).data("collection-name", e.title).insertBefore(this.$(".results .preloader-wrapper"))
    },
    makeSearchRequest: function() {
        this.showPreloader(), this.requestInAction = !0;
        let e = this.searchParams.type || "search",
            o = {
                page: this.searchParams.page || 1,
                per_page: this.params.per_page
            },
            t = {
                params: o,
                method: e
            };
        e === "search" && (o.query = this.searchParams.query), e === "my-collection-photos" && (t.collectionId = this.searchParams.collectionId), Vt.default.ajax({
            method: "POST",
            url: "/api/authservice/unsplash/call",
            context: this,
            data: t,
            success: function(r) {
                let i = r.results || r;
                if (e == "my-collections" && this.searchParams.type == "my-collections" && (i = i.filter(function(s) {
                        return !!s.total_photos
                    }), this.showPanelTitle(i.length + " Collection" + (i.length !== 1 ? "s" : ""))), !i || !i.length && this.searchParams.page == 1) {
                    this.clearResults(), this.showMessage.apply(this, this.noResultsText[e]), this.searchParams.text = "", this.requestInAction = !1;
                    return
                }
                this.requestInAction = !1, r.total_pages ? this.searchParams.allPages = r.total_pages <= this.searchParams.page : this.searchParams.allPages = i.length < this.params.per_page, this.searchParams.page++;
                let n = this.searchParams.type !== "my-collections" ? this.renderImage : this.renderCollection;
                Bn.default.each(i, n.bind(this)), this.recalcImagesSizes(this.searchParams.allPages), this.hidePreloader(), this.scroll && this.scroll.recalc()
            },
            error: function() {
                this.clearResults(), this.showMessage("Oops, an error occured.", "Please, try again."), this.searchParams.text = "", this.requestInAction = !1
            }
        })
    },
    setFocusOnShow: function() {
        this.curMenuItem === "search" && Da.prototype.setFocusOnShow.apply(this, arguments)
    },
    showUserImages: function(e) {
        if (this.clearResults(), e !== "search" ? this.hideSearch() : this.showSearch(), e === "my-photos" ? this.showPanelTitle("My Photos") : e !== "my-collection-photos" && this.hidePanelTitle(), e !== "my-collection-photos" ? this.hideBackButton() : (this.$(".my-collections").addClass("my-collections-inside"), this.showBackButton()), this.authorized) this.searchParams.type = e, this.searchParams.page = 1, this.makeSearchRequest();
        else {
            let o = this.connect_template({});
            (0, Vt.default)(o).appendTo(this.$(".results")), this.$(".connect-button").on("click", Bn.default.bind(function() {
                this.checkAuth(!1)
            }, this))
        }
    },
    onCollectionClick: function(e) {
        let o = (0, Vt.default)(e.currentTarget);
        this.searchParams.collectionId = o.data("collection"), this.showPanelTitle(o.data("collection-name")), this.showUserImages("my-collection-photos")
    },
    onMenuItemClick: function(e) {
        let o = (0, Vt.default)(e.currentTarget),
            t = o.data("item");
        if (!(o.hasClass("active") && (t !== "my-collections" || this.searchParams.type != "my-collection-photos"))) {
            if (this.curMenuItem = t, this.$(".bottom-menu li").removeClass("active"), this.$(".my-collections").removeClass("my-collections-inside"), o.addClass("active"), this.$(".search").toggleClass("inactive", this.curMenuItem === "my-photos" || this.curMenuItem === "my-collections"), this.clearResults(), this.curMenuItem === "search") {
                this.newSearch(!0), setTimeout(this.setFocusOnShow.bind(this), 0);
                return
            }
            this.$el.hasClass("search-on-center") && (this.$el.removeClass("search-on-center"), this.onInputChanged()), this.showUserImages(this.curMenuItem)
        }
    },
    onBackButtonClick: function() {
        this.showUserImages("my-collections")
    },
    onImageMouseEnter: function(e) {
        clearTimeout(this.imagePopupTimeout), clearTimeout(this.imagePreviewTimeout), this.imagePopupTimeout = setTimeout(Bn.default.bind(function() {
            this.showImagePopup(e)
        }, this), 500), this.settings.preview && (this.imagePreviewTimeout = setTimeout(Bn.default.bind(function() {
            this.settings.preview((0, Vt.default)(e.currentTarget).data("src-thumb"), {
                success: function() {
                    this.settings.preview((0, Vt.default)(e.currentTarget).data("src"))
                }.bind(this)
            })
        }, this), 200))
    },
    onImageMouseLeave: function() {
        clearTimeout(this.imagePopupTimeout), clearTimeout(this.imagePreviewTimeout)
    },
    hideImagePopup: function() {
        this.$curImagePopup = null, this.$imagePopup.fadeOut(100)
    },
    onImagePopupScroll: function(e, o, t, r) {
        this.$(".scroll-wrapper .results-wrapper").trigger(e, o, t, r), this.hideImagePopup()
    },
    showImagePopup: function(e) {
        let o = (0, Vt.default)((0, Vt.default)(e.target).closest(".image")),
            t = parseInt(o.width(), 10);
        this.$curImagePopup = o, this.$imagePopup.find(".image *").remove(), o.find(".rmpreloader").clone().appendTo(this.$imagePopup.find(".image")), o.find(".error").clone().appendTo(this.$imagePopup.find(".image")), this.$imagePopup.find(".image").css({
            width: t,
            "margin-left": 0,
            height: o.css("height"),
            "background-image": o.css("background-image")
        });
        let r = "https://unsplash.com/photos/" + o.data("id") + this.params.apiCredit;
        this.$imagePopup.find(".source").attr("href", r).text(o.data("ownername")), this.$imagePopup.fadeIn(100);
        let i = parseInt(this.$imagePopup.width(), 10),
            n = Math.floor(i - t) / 2,
            s = o.offset().left - this.$el.offset().left - n - 8,
            l = o.offset().top - this.$el.offset().top - 8;
        this.$imagePopup.css({
            left: s,
            top: l
        }), this.$imagePopup.find(".image").css({
            "margin-left": n
        })
    },
    onScroll: function(e) {
        Da.prototype.onScroll.apply(this, arguments), this.$(".results .image").length && (e.scroll_event && this.hideImagePopup(), e.content_size - e.container_size - e.scroll_pos < 32 && (this.requestInAction || this.searchParams.allPages || this.makeSearchRequest()))
    },
    checkAuth: function(e) {
        if (e) Vt.default.ajax({
            url: "/api/authservice/unsplash/check",
            method: "GET",
            success: this.showSearchTools,
            context: this,
            global: !1
        });
        else if (!this.authorized) {
            this.unsplashAuthWindow && this.unsplashAuthWindow.close(), (0, Vt.default)(window).on("message", this.processWindowMessage);
            let o = screen.width,
                t = screen.height,
                r = Math.min(1e3, o),
                i = Math.min(700, t - 40),
                n = Math.ceil((o - r) / 2),
                s = Math.ceil((t - i) / 2);
            this.unsplashAuthWindow = window.open("/api/authservice/unsplash/authorize", "_blank", ["toolbar=no", "location=" + (window.opera ? "no" : "yes"), "directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,copyhistory=no", "width=" + r, "height=" + i, "top=" + s, "left=" + n].join())
        }
    },
    logout: function() {
        this.logoutInProgress || (this.logoutInProgress = !0, Vt.default.get("/api/authservice/unsplash/logout", Bn.default.bind(function() {
            this.$(".logged-user").css("display", "none"), this.authorized = !1, (this.curMenuItem == "my-photos" || this.curMenuItem == "my-collections") && this.showUserImages(this.curMenuItem), this.logoutInProgress = !1
        }, this)))
    },
    handleAuthResult: function(e) {
        e && !e.error && e.profile && this.showSearchTools()
    },
    showSearchTools: function() {
        this.authorized = !0, Vt.default.ajax({
            url: "/api/authservice/unsplash/call",
            method: "POST",
            data: {
                method: "my"
            },
            context: this,
            global: !1,
            success: function(e) {
                if (!e) return;
                this.$(".logged-user").css("display", "block"), this.$(".logged-user .userpic").css("background-image", 'url("' + e.profile_image.small + '")');
                let o = e.name && (e.name.first_name || "" + e.name.last_name) || "" || e.username;
                o && this.$(".logged-user .userpic").attr("title", o).attr("href", "https://unsplash.com/@" + e.username + "/likes"), this.authorized = !0, (this.curMenuItem == "my-photos" || this.curMenuItem == "my-collections") && this.showUserImages(this.curMenuItem)
            }
        })
    },
    processWindowMessage: function(e) {
        let o;
        if (e = e.originalEvent || {}, e.origin == ae.readymag_auth_host) {
            try {
                o = JSON.parse(decodeURIComponent(e.data))
            } catch {}
            o && o.event == "social-auth" && ((0, Vt.default)(window).off("message", this.processWindowMessage), this.unsplashAuthWindow && this.unsplashAuthWindow.close(), this.unsplashAuthWindow = null, this.handleAuthResult(o.message))
        }
    },
    imagePopupClick: function() {
        this.selectImage(this.$curImagePopup)
    },
    selectImage: function(e) {
        e && (this.selectedImage = e.data("src"), this.selectedImageDownloadUrl = e.data("download-url"), this.$lastSelectedImage = e, this.hide())
    },
    onResultsClick: function(e) {
        let o = (0, Vt.default)(e.target);
        o.hasClass("image") && this.selectImage(o)
    },
    requestUnsplashDownloadUrl: function() {
        Vt.default.ajax({
            url: "/api/authservice/unsplash/call",
            method: "POST",
            data: {
                method: "download",
                url: this.selectedImageDownloadUrl
            }
        })
    },
    hide: function() {
        let e = function() {
            Da.prototype.hide.apply(this, arguments), clearTimeout(this.imagePopupTimeout), clearTimeout(this.imagePreviewTimeout), this.hideImagePopup(), typeof this.settings.upload == "function" && this.selectedImage && (this.requestUnsplashDownloadUrl(), this.settings.upload(this.selectedImage)), (0, Vt.default)(window).off("message", this.processWindowMessage)
        }.bind(this);
        this.settings.preview && !this.$lastSelectedImage ? this.settings.preview("", {
            success: e,
            error: e
        }) : e()
    }
});
(0, Vt.default)(function() {
    RM.views.searchUnsplash = new FN
});
Modernizr.webkit || Modernizr.firefox || (window.location.href = "/sorry");
Py.setSupportedFormats();
co.directive("sortable", {
    inserted: function(e, o) {
        e._sortable = new w6.default(e, o.value || {})
    },
    componentUpdated: function(e, o) {}
});
(0, r0.default)(function() {
    _k(), window.Backbone = kk(b6.default), It.preloadShortList(), It.generateCSS("paragraph", "constructor", document, window.ServerData.editParams.paragraph_styles), It.generateCSS("link", "constructor", document, window.ServerData.editParams.link_styles), window.RM.constructorRouter = new g6, window.Backbone.history.universalStart({
        pushState: !0
    }), r0.default.ajaxPrefilter(e => {
        e.url ? .startsWith("/api") && (e.headers = { ...e.headers,
            [ae.RMVersionHeader]: ae.RELEASE
        })
    })
});